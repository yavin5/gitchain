{"version":3,"file":"bundle.js","sources":["../src/admin-address.ts","../node_modules/@libp2p/interface/dist/src/connection.js","../node_modules/@libp2p/interface/dist/src/content-routing.js","../node_modules/@libp2p/interface/dist/src/errors.js","../node_modules/@libp2p/interface/dist/src/events.js","../node_modules/@libp2p/interface/dist/src/peer-discovery.js","../node_modules/@libp2p/interface/dist/src/peer-id.js","../node_modules/@libp2p/interface/dist/src/peer-routing.js","../node_modules/@libp2p/interface/dist/src/peer-store.js","../node_modules/@libp2p/interface/dist/src/startable.js","../node_modules/@libp2p/interface/dist/src/transport.js","../node_modules/main-event/dist/src/events.browser.js","../node_modules/main-event/dist/src/index.js","../node_modules/@libp2p/interface/dist/src/index.js","../node_modules/multiformats/dist/src/bytes.js","../node_modules/multiformats/dist/src/vendor/base-x.js","../node_modules/multiformats/dist/src/bases/base.js","../node_modules/multiformats/dist/src/bases/base58.js","../node_modules/multiformats/dist/src/bases/base32.js","../node_modules/multiformats/dist/src/bases/base36.js","../node_modules/multiformats/dist/src/vendor/varint.js","../node_modules/multiformats/dist/src/varint.js","../node_modules/multiformats/dist/src/hashes/digest.js","../node_modules/multiformats/dist/src/cid.js","../node_modules/multiformats/dist/src/hashes/identity.js","../node_modules/uint8arrays/dist/src/equals.js","../node_modules/uint8arrays/dist/src/alloc.js","../node_modules/uint8arrays/dist/src/util/as-uint8array.js","../node_modules/uint8arrays/dist/src/concat.js","../node_modules/uint8arraylist/dist/src/index.js","../node_modules/multiformats/dist/src/bases/base10.js","../node_modules/multiformats/dist/src/bases/base16.js","../node_modules/multiformats/dist/src/bases/base2.js","../node_modules/multiformats/dist/src/bases/base256emoji.js","../node_modules/multiformats/dist/src/bases/base64.js","../node_modules/multiformats/dist/src/bases/base8.js","../node_modules/multiformats/dist/src/bases/identity.js","../node_modules/multiformats/dist/src/codecs/json.js","../node_modules/multiformats/dist/src/hashes/hasher.js","../node_modules/multiformats/dist/src/hashes/sha2-browser.js","../node_modules/multiformats/dist/src/basics.js","../node_modules/uint8arrays/dist/src/util/bases.js","../node_modules/uint8arrays/dist/src/from-string.js","../node_modules/uint8arrays/dist/src/to-string.js","../node_modules/@libp2p/crypto/dist/src/keys/rsa/der.js","../node_modules/@libp2p/crypto/dist/src/keys/ecdsa/index.js","../node_modules/@libp2p/crypto/dist/src/keys/ecdsa/utils.js","../node_modules/@libp2p/crypto/dist/src/keys/ecdsa/ecdsa.js","../node_modules/@noble/hashes/utils.js","../node_modules/@noble/hashes/_md.js","../node_modules/@noble/hashes/_u64.js","../node_modules/@noble/hashes/sha2.js","../node_modules/@noble/curves/utils.js","../node_modules/@noble/curves/abstract/modular.js","../node_modules/@noble/curves/abstract/curve.js","../node_modules/@noble/curves/abstract/edwards.js","../node_modules/@noble/curves/abstract/montgomery.js","../node_modules/@noble/curves/ed25519.js","../node_modules/@libp2p/crypto/dist/src/errors.js","../node_modules/@libp2p/crypto/dist/src/webcrypto/webcrypto.browser.js","../node_modules/@libp2p/crypto/dist/src/keys/ed25519/index.browser.js","../node_modules/@libp2p/crypto/dist/src/util.js","../node_modules/@libp2p/crypto/dist/src/keys/ed25519/ed25519.js","../node_modules/@libp2p/crypto/dist/src/keys/ed25519/utils.js","../node_modules/uint8-varint/dist/src/index.js","../node_modules/protons-runtime/dist/src/utils/float.js","../node_modules/protons-runtime/dist/src/utils/longbits.js","../node_modules/protons-runtime/dist/src/utils/utf8.js","../node_modules/protons-runtime/dist/src/utils/reader.js","../node_modules/protons-runtime/dist/src/decode.js","../node_modules/protons-runtime/dist/src/utils/pool.js","../node_modules/protons-runtime/dist/src/utils/writer.js","../node_modules/protons-runtime/dist/src/encode.js","../node_modules/protons-runtime/dist/src/codec.js","../node_modules/protons-runtime/dist/src/codecs/enum.js","../node_modules/protons-runtime/dist/src/codecs/message.js","../node_modules/protons-runtime/dist/src/index.js","../node_modules/@libp2p/crypto/dist/src/keys/keys.js","../node_modules/@libp2p/crypto/dist/src/random-bytes.js","../node_modules/@libp2p/crypto/dist/src/keys/rsa/rsa.js","../node_modules/@libp2p/crypto/dist/src/keys/rsa/utils.js","../node_modules/@libp2p/crypto/dist/src/keys/rsa/index.browser.js","../node_modules/@noble/hashes/hmac.js","../node_modules/@noble/curves/abstract/weierstrass.js","../node_modules/@noble/curves/secp256k1.js","../node_modules/@libp2p/crypto/dist/src/keys/secp256k1/index.browser.js","../node_modules/@libp2p/crypto/dist/src/keys/secp256k1/secp256k1.js","../node_modules/@libp2p/crypto/dist/src/keys/secp256k1/utils.js","../node_modules/@libp2p/crypto/dist/src/keys/index.js","../node_modules/@libp2p/peer-id/dist/src/peer-id.js","../node_modules/@libp2p/peer-id/dist/src/index.js","../node_modules/libp2p/dist/src/config.js","../node_modules/weald/node_modules/ms/dist/index.js","../node_modules/weald/dist/src/common.js","../node_modules/weald/dist/src/browser.js","../node_modules/@libp2p/logger/dist/src/index.js","../node_modules/@libp2p/peer-collections/dist/src/util.js","../node_modules/@libp2p/peer-collections/dist/src/map.js","../node_modules/@libp2p/peer-collections/dist/src/set.js","../node_modules/@sindresorhus/fnv1a/index.js","../node_modules/@libp2p/utils/dist/src/filters/hashes.js","../node_modules/@libp2p/utils/dist/src/filters/fingerprint.js","../node_modules/@libp2p/utils/dist/src/filters/utils.js","../node_modules/@libp2p/utils/dist/src/filters/bucket.js","../node_modules/@libp2p/utils/dist/src/filters/cuckoo-filter.js","../node_modules/@libp2p/utils/dist/src/filters/scalable-cuckoo-filter.js","../node_modules/@libp2p/utils/dist/src/multiaddr/get-net-config.js","../node_modules/@chainsafe/is-ip/lib/parser.js","../node_modules/@chainsafe/is-ip/lib/parse.js","../node_modules/@chainsafe/netmask/dist/src/util.js","../node_modules/@chainsafe/netmask/dist/src/ip.js","../node_modules/@chainsafe/netmask/dist/src/cidr.js","../node_modules/@chainsafe/netmask/dist/src/ipnet.js","../node_modules/@chainsafe/netmask/dist/src/index.js","../node_modules/@libp2p/utils/dist/src/multiaddr/is-global-unicast.js","../node_modules/@libp2p/utils/dist/src/multiaddr/is-link-local.js","../node_modules/is-loopback-addr/dist/src/index.js","../node_modules/@libp2p/utils/dist/src/multiaddr/is-loopback.js","../node_modules/@libp2p/utils/dist/src/multiaddr/is-network-address.js","../node_modules/@chainsafe/is-ip/lib/is-ip.js","../node_modules/netmask/lib/netmask.js","../node_modules/@libp2p/utils/dist/src/private-ip.js","../node_modules/@libp2p/utils/dist/src/multiaddr/is-private.js","../node_modules/p-defer/index.js","../node_modules/it-pushable/dist/src/fifo.js","../node_modules/it-pushable/dist/src/index.js","../node_modules/p-event/node_modules/p-timeout/index.js","../node_modules/p-event/index.js","../node_modules/@libp2p/utils/dist/src/debounce.js","../node_modules/@libp2p/utils/dist/src/errors.js","../node_modules/race-signal/dist/src/index.js","../node_modules/@libp2p/utils/dist/src/queue/recipient.js","../node_modules/@libp2p/utils/dist/src/queue/job.js","../node_modules/@libp2p/utils/dist/src/queue/index.js","../node_modules/@libp2p/utils/dist/src/abstract-message-stream.js","../node_modules/@libp2p/utils/dist/src/abstract-multiaddr-connection.js","../node_modules/@libp2p/utils/dist/src/is-promise.js","../node_modules/@libp2p/utils/dist/src/abstract-stream-muxer.js","../node_modules/@libp2p/utils/dist/src/abstract-stream.js","../node_modules/any-signal/dist/src/index.js","../node_modules/@libp2p/utils/dist/src/moving-average.js","../node_modules/@libp2p/utils/dist/src/adaptive-timeout.js","../node_modules/@multiformats/multiaddr/dist/src/errors.js","../node_modules/@multiformats/multiaddr/dist/src/constants.js","../node_modules/@multiformats/multiaddr/dist/src/utils.js","../node_modules/@multiformats/multiaddr/dist/src/validation.js","../node_modules/@multiformats/multiaddr/dist/src/registry.js","../node_modules/@multiformats/multiaddr/dist/src/components.js","../node_modules/@multiformats/multiaddr/dist/src/multiaddr.js","../node_modules/@multiformats/multiaddr/dist/src/index.js","../node_modules/it-queueless-pushable/node_modules/race-signal/dist/src/index.js","../node_modules/it-queueless-pushable/dist/src/index.js","../node_modules/it-merge/dist/src/index.js","../node_modules/it-pipe/dist/src/index.js","../node_modules/@libp2p/utils/dist/src/stream-utils.js","../node_modules/@libp2p/utils/dist/src/length-prefixed-decoder.js","../node_modules/it-length-prefixed/dist/src/constants.js","../node_modules/it-length-prefixed/dist/src/errors.js","../node_modules/it-length-prefixed/dist/src/utils.js","../node_modules/it-length-prefixed/dist/src/encode.js","../node_modules/it-length-prefixed/dist/src/decode.js","../node_modules/@libp2p/utils/dist/src/peer-queue.js","../node_modules/@libp2p/utils/dist/src/priority-queue.js","../node_modules/@libp2p/utils/dist/src/rate-limiter.js","../node_modules/@libp2p/utils/dist/src/repeating-task.js","../node_modules/@libp2p/utils/dist/src/tracked-map.js","../node_modules/@libp2p/peer-collections/dist/src/filter.js","../node_modules/@libp2p/peer-collections/dist/src/tracked-map.js","../node_modules/@libp2p/peer-record/dist/src/envelope/envelope.js","../node_modules/@libp2p/peer-record/dist/src/envelope/errors.js","../node_modules/@libp2p/peer-record/dist/src/envelope/index.js","../node_modules/@libp2p/peer-record/dist/src/peer-record/consts.js","../node_modules/@libp2p/peer-record/dist/src/peer-record/peer-record.js","../node_modules/@libp2p/peer-record/dist/src/peer-record/utils.js","../node_modules/@libp2p/peer-record/dist/src/peer-record/index.js","../node_modules/it-all/dist/src/index.js","../node_modules/abort-error/dist/src/index.js","../node_modules/race-event/dist/src/index.js","../node_modules/it-queue/dist/src/errors.js","../node_modules/it-queue/node_modules/race-signal/dist/src/index.js","../node_modules/it-queue/dist/src/recipient.js","../node_modules/it-queue/dist/src/job.js","../node_modules/it-queue/dist/src/utils.js","../node_modules/it-queue/dist/src/index.js","../node_modules/mortice/dist/src/constants.js","../node_modules/mortice/dist/src/main/channel.js","../node_modules/mortice/dist/src/utils.js","../node_modules/mortice/dist/src/workers/channel.js","../node_modules/mortice/dist/src/browser.js","../node_modules/mortice/dist/src/mortice.js","../node_modules/mortice/dist/src/index.js","../node_modules/@libp2p/peer-store/dist/src/constants.js","../node_modules/@libp2p/peer-store/dist/src/pb/peer.js","../node_modules/@libp2p/peer-store/dist/src/utils/bytes-to-peer.js","../node_modules/@libp2p/peer-store/dist/src/utils/peer-equals.js","../node_modules/interface-datastore/dist/src/key.js","../node_modules/@libp2p/peer-store/dist/src/utils/peer-id-to-datastore-key.js","../node_modules/@libp2p/peer-store/dist/src/utils/dedupe-addresses.js","../node_modules/@libp2p/peer-store/dist/src/utils/to-peer-pb.js","../node_modules/@libp2p/peer-store/dist/src/store.js","../node_modules/@libp2p/peer-store/dist/src/index.js","../node_modules/interface-store/dist/src/errors.js","../node_modules/it-drain/dist/src/index.js","../node_modules/it-peekable/dist/src/index.js","../node_modules/it-filter/dist/src/index.js","../node_modules/it-sort/dist/src/index.js","../node_modules/it-take/dist/src/index.js","../node_modules/datastore-core/dist/src/base.js","../node_modules/datastore-core/dist/src/memory.js","../node_modules/@multiformats/multiaddr-matcher/dist/src/utils.js","../node_modules/@multiformats/multiaddr-matcher/dist/src/index.js","../node_modules/libp2p/dist/src/address-manager/dns-mappings.js","../node_modules/libp2p/dist/src/address-manager/ip-mappings.js","../node_modules/libp2p/dist/src/address-manager/observed-addresses.js","../node_modules/libp2p/dist/src/address-manager/transport-addresses.js","../node_modules/libp2p/dist/src/address-manager/index.js","../node_modules/libp2p/dist/src/errors.js","../node_modules/libp2p/dist/src/components.js","../node_modules/libp2p/dist/src/config/connection-gater.browser.js","../node_modules/progress-events/dist/src/index.js","../node_modules/libp2p/dist/src/get-peer.js","../node_modules/libp2p/dist/src/connection-manager/utils.js","../node_modules/libp2p/dist/src/connection-manager/connection-pruner.js","../node_modules/libp2p/dist/src/connection-manager/constants.defaults.js","../node_modules/libp2p/dist/src/connection-manager/constants.browser.js","../node_modules/libp2p/dist/src/connection-manager/address-sorter.js","../node_modules/eventemitter3/index.js","../node_modules/p-timeout/index.js","../node_modules/@multiformats/dns/node_modules/p-queue/dist/lower-bound.js","../node_modules/@multiformats/dns/node_modules/p-queue/dist/priority-queue.js","../node_modules/@multiformats/dns/node_modules/p-queue/dist/index.js","../node_modules/@multiformats/dns/dist/src/utils/get-types.js","../node_modules/@multiformats/dns/dist/src/utils/to-dns-response.js","../node_modules/@multiformats/dns/dist/src/resolvers/dns-json-over-https.js","../node_modules/@multiformats/dns/dist/src/resolvers/default.browser.js","../node_modules/hashlru/index.js","../node_modules/@multiformats/dns/dist/src/utils/cache.js","../node_modules/@multiformats/dns/dist/src/dns.js","../node_modules/@multiformats/dns/dist/src/index.js","../node_modules/libp2p/dist/src/connection-manager/resolvers/dnsaddr.js","../node_modules/libp2p/dist/src/connection-manager/resolvers/index.js","../node_modules/libp2p/dist/src/connection-manager/dial-queue.js","../node_modules/is-network-error/index.js","../node_modules/p-retry/index.js","../node_modules/libp2p/dist/src/connection-manager/reconnect-queue.js","../node_modules/libp2p/dist/src/connection-manager/index.js","../node_modules/libp2p/dist/src/connection-monitor.js","../node_modules/libp2p/dist/src/content-routing.js","../node_modules/it-parallel/dist/src/index.js","../node_modules/libp2p/dist/src/peer-routing.js","../node_modules/libp2p/dist/src/random-walk.js","../node_modules/libp2p/dist/src/registrar.js","../node_modules/libp2p/dist/src/transport-manager.js","../node_modules/@libp2p/multistream-select/dist/src/constants.js","../node_modules/@libp2p/multistream-select/dist/src/multistream.js","../node_modules/@libp2p/multistream-select/dist/src/select.js","../node_modules/@libp2p/multistream-select/dist/src/handle.js","../node_modules/libp2p/dist/src/connection.js","../node_modules/libp2p/dist/src/upgrader.js","../node_modules/libp2p/dist/src/version.js","../node_modules/libp2p/dist/src/user-agent.browser.js","../node_modules/libp2p/dist/src/libp2p.js","../node_modules/libp2p/dist/src/index.js","../node_modules/@libp2p/webrtc/dist/src/private-to-public/pb/message.js","../node_modules/@libp2p/webrtc/dist/src/constants.js","../node_modules/detect-browser/es/index.js","../node_modules/@libp2p/webrtc/dist/src/util.js","../node_modules/@libp2p/webrtc/dist/src/stream.js","../node_modules/@libp2p/webrtc/dist/src/muxer.js","../node_modules/@libp2p/webrtc/dist/src/rtcpeerconnection-to-conn.js","../node_modules/@libp2p/webrtc/dist/src/webrtc/index.browser.js","../node_modules/@libp2p/webrtc/dist/src/error.js","../node_modules/@libp2p/webrtc/dist/src/private-to-private/pb/message.js","../node_modules/@libp2p/webrtc/dist/src/private-to-private/util.js","../node_modules/@libp2p/webrtc/dist/src/private-to-private/initiate-connection.js","../node_modules/@libp2p/webrtc/dist/src/private-to-private/listener.js","../node_modules/@libp2p/webrtc/dist/src/private-to-private/signaling-stream-handler.js","../node_modules/@libp2p/webrtc/dist/src/private-to-private/transport.js","../node_modules/@chainsafe/libp2p-noise/dist/src/constants.js","../node_modules/@noble/ciphers/utils.js","../node_modules/@noble/ciphers/_arx.js","../node_modules/@noble/ciphers/_poly1305.js","../node_modules/@noble/ciphers/chacha.js","../node_modules/@noble/hashes/hkdf.js","../node_modules/@chainsafe/libp2p-noise/dist/src/crypto/js.js","../node_modules/@chainsafe/libp2p-noise/dist/src/crypto/index.browser.js","../node_modules/@chainsafe/libp2p-noise/dist/src/crypto.js","../node_modules/@chainsafe/libp2p-noise/dist/src/encoder.js","../node_modules/@chainsafe/libp2p-noise/dist/src/metrics.js","../node_modules/@chainsafe/libp2p-noise/dist/src/logger.js","../node_modules/@chainsafe/libp2p-noise/dist/src/errors.js","../node_modules/@chainsafe/libp2p-noise/dist/src/nonce.js","../node_modules/@chainsafe/libp2p-noise/dist/src/protocol.js","../node_modules/@chainsafe/libp2p-noise/dist/src/proto/payload.js","../node_modules/@chainsafe/libp2p-noise/dist/src/utils.js","../node_modules/@chainsafe/libp2p-noise/dist/src/performHandshake.js","../node_modules/@chainsafe/libp2p-noise/dist/src/noise.js","../node_modules/@chainsafe/libp2p-noise/dist/src/index.js","../node_modules/@libp2p/webrtc/dist/src/index.js","../node_modules/@multiformats/multiaddr-to-uri/dist/src/index.js","../node_modules/@libp2p/websockets/dist/src/listener.browser.js","../node_modules/@libp2p/websockets/dist/src/websocket-to-conn.js","../node_modules/@libp2p/websockets/dist/src/index.js","../node_modules/@chainsafe/libp2p-yamux/dist/src/frame.js","../node_modules/@chainsafe/libp2p-yamux/dist/src/errors.js","../node_modules/@chainsafe/libp2p-yamux/dist/src/constants.js","../node_modules/@chainsafe/libp2p-yamux/dist/src/config.js","../node_modules/@chainsafe/libp2p-yamux/dist/src/decode.js","../node_modules/@chainsafe/libp2p-yamux/dist/src/encode.js","../node_modules/@chainsafe/libp2p-yamux/dist/src/stream.js","../node_modules/@chainsafe/libp2p-yamux/dist/src/muxer.js","../node_modules/@chainsafe/libp2p-yamux/dist/src/index.js","../node_modules/@libp2p/identify/dist/src/consts.js","../node_modules/@libp2p/identify/dist/src/pb/message.js","../node_modules/@libp2p/identify/dist/src/utils.js","../node_modules/@libp2p/identify/dist/src/identify.js","../node_modules/@libp2p/identify/dist/src/index.js","../node_modules/@libp2p/circuit-relay-v2/dist/src/constants.js","../node_modules/@libp2p/circuit-relay-v2/dist/src/pb/index.js","../node_modules/@libp2p/circuit-relay-v2/dist/src/errors.js","../node_modules/@libp2p/circuit-relay-v2/dist/src/utils.js","../node_modules/@libp2p/circuit-relay-v2/dist/src/transport/discovery.js","../node_modules/@libp2p/circuit-relay-v2/dist/src/transport/listener.js","../node_modules/nanoid/url-alphabet/index.js","../node_modules/nanoid/index.browser.js","../node_modules/@libp2p/circuit-relay-v2/dist/src/transport/reservation-store.js","../node_modules/@libp2p/circuit-relay-v2/dist/src/transport/stream-to-conn.js","../node_modules/@libp2p/circuit-relay-v2/dist/src/transport/index.js","../node_modules/@libp2p/circuit-relay-v2/dist/src/index.js","../node_modules/@libp2p/bootstrap/dist/src/index.js","../node_modules/@libp2p/gossipsub/dist/src/constants.js","../node_modules/@libp2p/gossipsub/dist/src/message/decodeRpc.js","../node_modules/@libp2p/gossipsub/dist/src/message/rpc.js","../node_modules/@libp2p/gossipsub/dist/src/message-cache.js","../node_modules/@libp2p/gossipsub/dist/src/types.js","../node_modules/@libp2p/gossipsub/dist/src/metrics.js","../node_modules/@libp2p/gossipsub/dist/src/errors.js","../node_modules/@libp2p/gossipsub/dist/src/score/peer-score-params.js","../node_modules/@libp2p/gossipsub/dist/src/score/peer-score-thresholds.js","../node_modules/@libp2p/gossipsub/dist/src/utils/set.js","../node_modules/@libp2p/gossipsub/dist/src/score/compute-score.js","../node_modules/denque/index.js","../node_modules/@libp2p/gossipsub/dist/src/score/message-deliveries.js","../node_modules/@libp2p/gossipsub/dist/src/score/peer-score.js","../node_modules/@libp2p/gossipsub/dist/src/score/scoreMetrics.js","../node_modules/@libp2p/gossipsub/dist/src/stream.js","../node_modules/@libp2p/gossipsub/dist/src/tracer.js","../node_modules/@libp2p/gossipsub/dist/src/utils/buildRawMessage.js","../node_modules/@libp2p/gossipsub/dist/src/utils/create-gossip-rpc.js","../node_modules/@libp2p/gossipsub/dist/src/utils/shuffle.js","../node_modules/@libp2p/gossipsub/dist/src/utils/messageIdToString.js","../node_modules/@libp2p/gossipsub/dist/src/utils/publishConfig.js","../node_modules/@libp2p/pubsub/dist/src/utils.js","../node_modules/@libp2p/gossipsub/dist/src/utils/msgIdFn.js","../node_modules/@libp2p/gossipsub/dist/src/utils/multiaddr.js","../node_modules/@libp2p/gossipsub/dist/src/utils/time-cache.js","../node_modules/@libp2p/gossipsub/dist/src/gossipsub.js","../node_modules/@libp2p/gossipsub/dist/src/index.js","../node_modules/@libp2p/pubsub-peer-discovery/dist/src/peer.js","../node_modules/@libp2p/pubsub-peer-discovery/dist/src/index.js","../__vite-browser-external","../node_modules/crypto-js/core.js","../node_modules/crypto-js/x64-core.js","../node_modules/crypto-js/lib-typedarrays.js","../node_modules/crypto-js/enc-utf16.js","../node_modules/crypto-js/enc-base64.js","../node_modules/crypto-js/enc-base64url.js","../node_modules/crypto-js/md5.js","../node_modules/crypto-js/sha1.js","../node_modules/crypto-js/sha256.js","../node_modules/crypto-js/sha224.js","../node_modules/crypto-js/sha512.js","../node_modules/crypto-js/sha384.js","../node_modules/crypto-js/sha3.js","../node_modules/crypto-js/ripemd160.js","../node_modules/crypto-js/hmac.js","../node_modules/crypto-js/pbkdf2.js","../node_modules/crypto-js/evpkdf.js","../node_modules/crypto-js/cipher-core.js","../node_modules/crypto-js/mode-cfb.js","../node_modules/crypto-js/mode-ctr.js","../node_modules/crypto-js/mode-ctr-gladman.js","../node_modules/crypto-js/mode-ofb.js","../node_modules/crypto-js/mode-ecb.js","../node_modules/crypto-js/pad-ansix923.js","../node_modules/crypto-js/pad-iso10126.js","../node_modules/crypto-js/pad-iso97971.js","../node_modules/crypto-js/pad-zeropadding.js","../node_modules/crypto-js/pad-nopadding.js","../node_modules/crypto-js/format-hex.js","../node_modules/crypto-js/aes.js","../node_modules/crypto-js/tripledes.js","../node_modules/crypto-js/rc4.js","../node_modules/crypto-js/rabbit.js","../node_modules/crypto-js/rabbit-legacy.js","../node_modules/crypto-js/blowfish.js","../node_modules/crypto-js/index.js","../node_modules/bn.js/lib/bn.js","../node_modules/minimalistic-assert/index.js","../node_modules/minimalistic-crypto-utils/lib/utils.js","../node_modules/elliptic/lib/elliptic/utils.js","../node_modules/brorand/index.js","../node_modules/elliptic/lib/elliptic/curve/base.js","../node_modules/inherits/inherits_browser.js","../node_modules/elliptic/lib/elliptic/curve/short.js","../node_modules/elliptic/lib/elliptic/curve/mont.js","../node_modules/elliptic/lib/elliptic/curve/edwards.js","../node_modules/elliptic/lib/elliptic/curve/index.js","../node_modules/hash.js/lib/hash/utils.js","../node_modules/hash.js/lib/hash/common.js","../node_modules/hash.js/lib/hash/sha/common.js","../node_modules/hash.js/lib/hash/sha/1.js","../node_modules/hash.js/lib/hash/sha/256.js","../node_modules/hash.js/lib/hash/sha/224.js","../node_modules/hash.js/lib/hash/sha/512.js","../node_modules/hash.js/lib/hash/sha/384.js","../node_modules/hash.js/lib/hash/sha.js","../node_modules/hash.js/lib/hash/ripemd.js","../node_modules/hash.js/lib/hash/hmac.js","../node_modules/hash.js/lib/hash.js","../node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js","../node_modules/elliptic/lib/elliptic/curves.js","../node_modules/hmac-drbg/lib/hmac-drbg.js","../node_modules/elliptic/lib/elliptic/ec/key.js","../node_modules/elliptic/lib/elliptic/ec/signature.js","../node_modules/elliptic/lib/elliptic/ec/index.js","../node_modules/elliptic/lib/elliptic/eddsa/key.js","../node_modules/elliptic/lib/elliptic/eddsa/signature.js","../node_modules/elliptic/lib/elliptic/eddsa/index.js","../node_modules/elliptic/lib/elliptic.js","../node_modules/js-sha3/src/sha3.js","../node_modules/@kasplex/kiwi-web/dist/index.js","../src/chain.ts"],"sourcesContent":["export const ADMIN_ADDRESS = '0x097efb2a92bc5205e1615db52338a118f1619f3f';","export const connectionSymbol = Symbol.for('@libp2p/connection');\nexport function isConnection(other) {\n    return other != null && Boolean(other[connectionSymbol]);\n}\n//# sourceMappingURL=connection.js.map","/**\n * Any object that implements this Symbol as a property should return a\n * Partial<ContentRouting> instance as the property value, similar to how\n * `Symbol.Iterable` can be used to return an `Iterable` from an `Iterator`.\n *\n * @example\n *\n * ```TypeScript\n * import { contentRoutingSymbol, ContentRouting } from '@libp2p/content-routing'\n *\n * class MyContentRouter implements ContentRouting {\n *   get [contentRoutingSymbol] () {\n *     return this\n *   }\n *\n *   // ...other methods\n * }\n * ```\n */\nexport const contentRoutingSymbol = Symbol.for('@libp2p/content-routing');\n//# sourceMappingURL=content-routing.js.map","/**\n * When this error is thrown it means an operation was aborted,\n * usually in response to the `abort` event being emitted by an\n * AbortSignal.\n */\nexport class AbortError extends Error {\n    static name = 'AbortError';\n    constructor(message = 'The operation was aborted') {\n        super(message);\n        this.name = 'AbortError';\n    }\n}\n/**\n * Thrown when a remote Peer ID does not match the expected one\n */\nexport class UnexpectedPeerError extends Error {\n    static name = 'UnexpectedPeerError';\n    constructor(message = 'Unexpected Peer') {\n        super(message);\n        this.name = 'UnexpectedPeerError';\n    }\n}\n/**\n * Thrown when a crypto exchange fails\n */\nexport class InvalidCryptoExchangeError extends Error {\n    static name = 'InvalidCryptoExchangeError';\n    constructor(message = 'Invalid crypto exchange') {\n        super(message);\n        this.name = 'InvalidCryptoExchangeError';\n    }\n}\n/**\n * Thrown when invalid parameters are passed to a function or method call\n */\nexport class InvalidParametersError extends Error {\n    static name = 'InvalidParametersError';\n    constructor(message = 'Invalid parameters') {\n        super(message);\n        this.name = 'InvalidParametersError';\n    }\n}\n/**\n * Thrown when a public key is invalid\n */\nexport class InvalidPublicKeyError extends Error {\n    static name = 'InvalidPublicKeyError';\n    constructor(message = 'Invalid public key') {\n        super(message);\n        this.name = 'InvalidPublicKeyError';\n    }\n}\n/**\n * Thrown when a private key is invalid\n */\nexport class InvalidPrivateKeyError extends Error {\n    static name = 'InvalidPrivateKeyError';\n    constructor(message = 'Invalid private key') {\n        super(message);\n        this.name = 'InvalidPrivateKeyError';\n    }\n}\n/**\n * Thrown when a operation is unsupported\n */\nexport class UnsupportedOperationError extends Error {\n    static name = 'UnsupportedOperationError';\n    constructor(message = 'Unsupported operation') {\n        super(message);\n        this.name = 'UnsupportedOperationError';\n    }\n}\n/**\n * Thrown when a connection is closing\n */\nexport class ConnectionClosingError extends Error {\n    static name = 'ConnectionClosingError';\n    constructor(message = 'The connection is closing') {\n        super(message);\n        this.name = 'ConnectionClosingError';\n    }\n}\n/**\n * Thrown when a connection is closed\n */\nexport class ConnectionClosedError extends Error {\n    static name = 'ConnectionClosedError';\n    constructor(message = 'The connection is closed') {\n        super(message);\n        this.name = 'ConnectionClosedError';\n    }\n}\n/**\n * Thrown when a connection fails\n */\nexport class ConnectionFailedError extends Error {\n    static name = 'ConnectionFailedError';\n    constructor(message = 'Connection failed') {\n        super(message);\n        this.name = 'ConnectionFailedError';\n    }\n}\n/**\n * Thrown when the muxer is closed and an attempt to open a stream occurs\n */\nexport class MuxerClosedError extends Error {\n    static name = 'MuxerClosedError';\n    constructor(message = 'The muxer is closed') {\n        super(message);\n        this.name = 'MuxerClosedError';\n    }\n}\n/**\n * Thrown when a protocol stream is reset by the remote muxer\n */\nexport class StreamResetError extends Error {\n    static name = 'StreamResetError';\n    constructor(message = 'The stream has been reset') {\n        super(message);\n        this.name = 'StreamResetError';\n    }\n}\n/**\n * Thrown when a protocol stream is aborted locally\n */\nexport class StreamAbortedError extends Error {\n    static name = 'StreamAbortedError';\n    constructor(message = 'The stream has been aborted') {\n        super(message);\n        this.name = 'StreamAbortedError';\n    }\n}\n/**\n * Thrown when a stream is in an invalid state\n */\nexport class StreamStateError extends Error {\n    static name = 'StreamStateError';\n    constructor(message = 'The stream is in an invalid state') {\n        super(message);\n        this.name = 'StreamStateError';\n    }\n}\n/**\n * Thrown when a stream buffer is full\n */\nexport class StreamBufferError extends Error {\n    static name = 'StreamBufferError';\n    constructor(message = 'The stream buffer was full') {\n        super(message);\n        this.name = 'StreamBufferError';\n    }\n}\n/**\n * Thrown when a value could not be found\n */\nexport class NotFoundError extends Error {\n    static name = 'NotFoundError';\n    constructor(message = 'Not found') {\n        super(message);\n        this.name = 'NotFoundError';\n    }\n}\n/**\n * Thrown when an invalid peer ID is encountered\n */\nexport class InvalidPeerIdError extends Error {\n    static name = 'InvalidPeerIdError';\n    constructor(message = 'Invalid PeerID') {\n        super(message);\n        this.name = 'InvalidPeerIdError';\n    }\n}\n/**\n * Thrown when an invalid multiaddr is encountered\n */\nexport class InvalidMultiaddrError extends Error {\n    static name = 'InvalidMultiaddrError';\n    constructor(message = 'Invalid multiaddr') {\n        super(message);\n        this.name = 'InvalidMultiaddrError';\n    }\n}\n/**\n * Thrown when an invalid CID is encountered\n */\nexport class InvalidCIDError extends Error {\n    static name = 'InvalidCIDError';\n    constructor(message = 'Invalid CID') {\n        super(message);\n        this.name = 'InvalidCIDError';\n    }\n}\n/**\n * Thrown when an invalid multihash is encountered\n */\nexport class InvalidMultihashError extends Error {\n    static name = 'InvalidMultihashError';\n    constructor(message = 'Invalid Multihash') {\n        super(message);\n        this.name = 'InvalidMultihashError';\n    }\n}\n/**\n * Thrown when a protocol is not supported\n */\nexport class UnsupportedProtocolError extends Error {\n    static name = 'UnsupportedProtocolError';\n    constructor(message = 'Unsupported protocol error') {\n        super(message);\n        this.name = 'UnsupportedProtocolError';\n    }\n}\n/**\n * An invalid or malformed message was encountered during a protocol exchange\n */\nexport class InvalidMessageError extends Error {\n    static name = 'InvalidMessageError';\n    constructor(message = 'Invalid message') {\n        super(message);\n        this.name = 'InvalidMessageError';\n    }\n}\n/**\n * Thrown when a remote peer sends a structurally valid message that does not\n * comply with the protocol\n */\nexport class ProtocolError extends Error {\n    static name = 'ProtocolError';\n    constructor(message = 'Protocol error') {\n        super(message);\n        this.name = 'ProtocolError';\n    }\n}\n/**\n * Throw when an operation times out\n */\nexport class TimeoutError extends Error {\n    static name = 'TimeoutError';\n    constructor(message = 'Timed out') {\n        super(message);\n        this.name = 'TimeoutError';\n    }\n}\n/**\n * Thrown when a startable component is interacted with but it has not been\n * started yet\n */\nexport class NotStartedError extends Error {\n    static name = 'NotStartedError';\n    constructor(message = 'Not started') {\n        super(message);\n        this.name = 'NotStartedError';\n    }\n}\n/**\n * Thrown when a component is started that has already been started\n */\nexport class AlreadyStartedError extends Error {\n    static name = 'AlreadyStartedError';\n    constructor(message = 'Already started') {\n        super(message);\n        this.name = 'AlreadyStartedError';\n    }\n}\n/**\n * Thrown when dialing an address failed\n */\nexport class DialError extends Error {\n    static name = 'DialError';\n    constructor(message = 'Dial error') {\n        super(message);\n        this.name = 'DialError';\n    }\n}\n/**\n * Thrown when listening on an address failed\n */\nexport class ListenError extends Error {\n    static name = 'ListenError';\n    constructor(message = 'Listen error') {\n        super(message);\n        this.name = 'ListenError';\n    }\n}\n/**\n * This error is thrown when a limited connection is encountered, i.e. if the\n * user tried to open a stream on a connection for a protocol that is not\n * configured to run over limited connections.\n */\nexport class LimitedConnectionError extends Error {\n    static name = 'LimitedConnectionError';\n    constructor(message = 'Limited connection') {\n        super(message);\n        this.name = 'LimitedConnectionError';\n    }\n}\n/**\n * This error is thrown where there are too many inbound protocols streams open\n */\nexport class TooManyInboundProtocolStreamsError extends Error {\n    static name = 'TooManyInboundProtocolStreamsError';\n    constructor(message = 'Too many inbound protocol streams') {\n        super(message);\n        this.name = 'TooManyInboundProtocolStreamsError';\n    }\n}\n/**\n * This error is thrown where there are too many outbound protocols streams open\n */\nexport class TooManyOutboundProtocolStreamsError extends Error {\n    static name = 'TooManyOutboundProtocolStreamsError';\n    constructor(message = 'Too many outbound protocol streams') {\n        super(message);\n        this.name = 'TooManyOutboundProtocolStreamsError';\n    }\n}\n/**\n * Thrown when an attempt to operate on an unsupported key was made\n */\nexport class UnsupportedKeyTypeError extends Error {\n    static name = 'UnsupportedKeyTypeError';\n    constructor(message = 'Unsupported key type') {\n        super(message);\n        this.name = 'UnsupportedKeyTypeError';\n    }\n}\n/**\n * Thrown when an operation has not been implemented\n */\nexport class NotImplementedError extends Error {\n    static name = 'NotImplementedError';\n    constructor(message = 'Not implemented') {\n        super(message);\n        this.name = 'NotImplementedError';\n    }\n}\n//# sourceMappingURL=errors.js.map","/**\n * A custom implementation of MessageEvent as the Undici version does too much\n * validation in it's constructor so is very slow.\n */\nexport class StreamMessageEvent extends Event {\n    data;\n    constructor(data, eventInitDict) {\n        super('message', eventInitDict);\n        this.data = data;\n    }\n}\n/**\n * An event dispatched when the stream is closed. The `error` property can be\n * inspected to discover if the closing was graceful or not, and the `remote`\n * property shows which end of the stream initiated the closure\n */\nexport class StreamCloseEvent extends Event {\n    error;\n    local;\n    constructor(local, error, eventInitDict) {\n        super('close', eventInitDict);\n        this.error = error;\n        this.local = local;\n    }\n}\nexport class StreamAbortEvent extends StreamCloseEvent {\n    constructor(error, eventInitDict) {\n        super(true, error, eventInitDict);\n    }\n}\nexport class StreamResetEvent extends StreamCloseEvent {\n    constructor(error, eventInitDict) {\n        super(false, error, eventInitDict);\n    }\n}\n//# sourceMappingURL=events.js.map","/**\n * Any object that implements this Symbol as a property should return a\n * PeerDiscovery instance as the property value, similar to how\n * `Symbol.Iterable` can be used to return an `Iterable` from an `Iterator`.\n *\n * @example\n *\n * ```TypeScript\n * import { peerDiscovery, PeerDiscovery } from '@libp2p/peer-discovery'\n *\n * class MyPeerDiscoverer implements PeerDiscovery {\n *   get [peerDiscovery] () {\n *     return this\n *   }\n *\n *   // ...other methods\n * }\n * ```\n */\nexport const peerDiscoverySymbol = Symbol.for('@libp2p/peer-discovery');\n//# sourceMappingURL=peer-discovery.js.map","/**\n * All PeerId implementations must use this symbol as the name of a property\n * with a boolean `true` value\n */\nexport const peerIdSymbol = Symbol.for('@libp2p/peer-id');\n/**\n * Returns true if the passed argument is a PeerId implementation\n */\nexport function isPeerId(other) {\n    return Boolean(other?.[peerIdSymbol]);\n}\n//# sourceMappingURL=peer-id.js.map","/**\n * Any object that implements this Symbol as a property should return a\n * PeerRouting instance as the property value, similar to how `Symbol.Iterable`\n * can be used to return an `Iterable` from an `Iterator`.\n *\n * @example\n *\n * ```TypeScript\n * import { peerRouting, PeerRouting } from '@libp2p/peer-routing'\n *\n * class MyPeerRouter implements PeerRouting {\n *   get [peerRouting] () {\n *     return this\n *   }\n *\n *   // ...other methods\n * }\n * ```\n */\nexport const peerRoutingSymbol = Symbol.for('@libp2p/peer-routing');\n//# sourceMappingURL=peer-routing.js.map","/**\n * When a peer that is tagged with this prefix disconnects, we will attempt to\n * redial it, up to a limit.\n *\n * To allow multiple components to add/remove their own keep-alive tags without\n * accidentally overwriting those of other components, attach a unique suffix to\n * the tag, e.g. `keep-alive-circuit-relay` or `keep-alive-kad-dht`, etc.\n */\nexport const KEEP_ALIVE = 'keep-alive';\n//# sourceMappingURL=peer-store.js.map","/**\n * Returns `true` if the object has type overlap with `Startable`\n */\nexport function isStartable(obj) {\n    return obj != null && typeof obj.start === 'function' && typeof obj.stop === 'function';\n}\n/**\n * A function that can be used to start and objects passed to it. This checks\n * that an object is startable before invoking its lifecycle methods so it is\n * safe to pass non-`Startable`s in.\n *\n * @example\n *\n * ```TypeScript\n * import { start } from '@libp2p/interface'\n * import type { Startable } from '@libp2p/interface'\n *\n * const startable: Startable = {\n *   start: () => {},\n *   stop: () => {}\n * }\n *\n * const notStartable = 5\n *\n * await start(\n *   startable,\n *   notStartable\n * )\n * ```\n */\nexport async function start(...objs) {\n    const startables = [];\n    for (const obj of objs) {\n        if (isStartable(obj)) {\n            startables.push(obj);\n        }\n    }\n    await Promise.all(startables.map(async (s) => {\n        if (s.beforeStart != null) {\n            await s.beforeStart();\n        }\n    }));\n    await Promise.all(startables.map(async (s) => {\n        await s.start();\n    }));\n    await Promise.all(startables.map(async (s) => {\n        if (s.afterStart != null) {\n            await s.afterStart();\n        }\n    }));\n}\n/**\n * A function that can be used to stop and objects passed to it. This checks\n * that an object is startable before invoking its lifecycle methods so it is\n * safe to pass non-`Startable`s in.\n *\n * @example\n *\n * ```TypeScript\n * import { stop } from '@libp2p/interface'\n * import type { Startable } from '@libp2p/interface'\n *\n * const startable: Startable = {\n *   start: () => {},\n *   stop: () => {}\n * }\n *\n * const notStartable = 5\n *\n * await stop(\n *   startable,\n *   notStartable\n * )\n * ```\n */\nexport async function stop(...objs) {\n    const startables = [];\n    for (const obj of objs) {\n        if (isStartable(obj)) {\n            startables.push(obj);\n        }\n    }\n    await Promise.all(startables.map(async (s) => {\n        if (s.beforeStop != null) {\n            await s.beforeStop();\n        }\n    }));\n    await Promise.all(startables.map(async (s) => {\n        await s.stop();\n    }));\n    await Promise.all(startables.map(async (s) => {\n        if (s.afterStop != null) {\n            await s.afterStop();\n        }\n    }));\n}\n//# sourceMappingURL=startable.js.map","export const transportSymbol = Symbol.for('@libp2p/transport');\n/**\n * Used to disambiguate transport implementations\n */\nexport function isTransport(other) {\n    return other != null && Boolean(other[transportSymbol]);\n}\n/**\n * Enum Transport Manager Fault Tolerance values\n */\nexport var FaultTolerance;\n(function (FaultTolerance) {\n    /**\n     * should be used for failing in any listen circumstance\n     */\n    FaultTolerance[FaultTolerance[\"FATAL_ALL\"] = 0] = \"FATAL_ALL\";\n    /**\n     * should be used for not failing when not listening\n     */\n    FaultTolerance[FaultTolerance[\"NO_FATAL\"] = 1] = \"NO_FATAL\";\n})(FaultTolerance || (FaultTolerance = {}));\n//# sourceMappingURL=transport.js.map","/**\n * Noop for browser compatibility\n */\nexport function setMaxListeners() { }\n//# sourceMappingURL=events.browser.js.map","/**\n * @packageDocumentation\n *\n * Adds types to the EventTarget class.\n *\n * Hopefully this won't be necessary\n * forever:\n *\n * - https://github.com/microsoft/TypeScript/issues/28357\n * - https://github.com/microsoft/TypeScript/issues/43477\n * - https://github.com/microsoft/TypeScript/issues/299\n * - https://www.npmjs.com/package/typed-events\n * - https://www.npmjs.com/package/typed-event-emitter\n * - https://www.npmjs.com/package/typed-event-target\n * - etc\n *\n * In addition to types, a `safeDispatchEvent` method is available which\n * prevents dispatching events that aren't in the event map, and a\n * `listenerCount` method which reports the number of listeners that are\n * currently registered for a given event.\n *\n * @example\n *\n * ```ts\n * import { TypedEventEmitter } from 'main-event'\n * import type { TypedEventTarget } from 'main-event'\n *\n * interface EventTypes {\n *   'test': CustomEvent<string>\n * }\n *\n * const target = new TypedEventEmitter<EventTypes>()\n *\n * // it's a regular EventTarget\n * console.info(target instanceof EventTarget) // true\n *\n * // register listeners normally\n * target.addEventListener('test', (evt) => {\n *   // evt is CustomEvent<string>\n * })\n *\n * // @ts-expect-error 'derp' is not in the event map\n * target.addEventListener('derp', () => {})\n *\n * // use normal dispatchEvent method\n * target.dispatchEvent(new CustomEvent('test', {\n *   detail: 'hello'\n * }))\n *\n * // use type safe dispatch method\n * target.safeDispatchEvent('test', {\n *   detail: 'world'\n * })\n *\n * // report listener count\n * console.info(target.listenerCount('test')) // 0\n *\n * // event emitters can be used purely as interfaces too\n * function acceptTarget (target: TypedEventTarget<EventTypes>) {\n *   // ...\n * }\n * ```\n */\nimport { setMaxListeners } from './events.js';\n/**\n * An implementation of a typed event target\n */\nexport class TypedEventEmitter extends EventTarget {\n    #listeners = new Map();\n    constructor() {\n        super();\n        // silence MaxListenersExceededWarning warning on Node.js, this is a red\n        // herring almost all of the time\n        setMaxListeners(Infinity, this);\n    }\n    listenerCount(type) {\n        const listeners = this.#listeners.get(type);\n        if (listeners == null) {\n            return 0;\n        }\n        return listeners.length;\n    }\n    addEventListener(type, listener, options) {\n        super.addEventListener(type, listener, options);\n        let list = this.#listeners.get(type);\n        if (list == null) {\n            list = [];\n            this.#listeners.set(type, list);\n        }\n        list.push({\n            callback: listener,\n            once: (options !== true && options !== false && options?.once) ?? false\n        });\n    }\n    removeEventListener(type, listener, options) {\n        super.removeEventListener(type.toString(), listener ?? null, options);\n        let list = this.#listeners.get(type);\n        if (list == null) {\n            return;\n        }\n        list = list.filter(({ callback }) => callback !== listener);\n        this.#listeners.set(type, list);\n    }\n    dispatchEvent(event) {\n        const result = super.dispatchEvent(event);\n        let list = this.#listeners.get(event.type);\n        if (list == null) {\n            return result;\n        }\n        list = list.filter(({ once }) => !once);\n        this.#listeners.set(event.type, list);\n        return result;\n    }\n    safeDispatchEvent(type, detail = {}) {\n        return this.dispatchEvent(new CustomEvent(type, detail));\n    }\n}\nexport { setMaxListeners };\n//# sourceMappingURL=index.js.map","/**\n * @packageDocumentation\n *\n * Exports a `Libp2p` type for modules to use as a type argument.\n *\n * @example\n *\n * ```typescript\n * import type { Libp2p } from '@libp2p/interface'\n *\n * function doSomethingWithLibp2p (node: Libp2p) {\n *   // ...\n * }\n * ```\n */\n/**\n * This symbol is used by libp2p services to define the capabilities they can\n * provide to other libp2p services.\n *\n * The service should define a property with this symbol as the key and the\n * value should be a string array of provided capabilities.\n */\nexport const serviceCapabilities = Symbol.for('@libp2p/service-capabilities');\n/**\n * This symbol is used by libp2p services to define the capabilities they\n * require from other libp2p services.\n *\n * The service should define a property with this symbol as the key and the\n * value should be a string array of required capabilities.\n */\nexport const serviceDependencies = Symbol.for('@libp2p/service-dependencies');\nexport * from './connection.js';\nexport * from './connection-encrypter.js';\nexport * from './connection-gater.js';\nexport * from './connection-protector.js';\nexport * from './content-routing.js';\nexport * from './errors.js';\nexport * from './events.js';\nexport * from './keys.js';\nexport * from './message-stream.js';\nexport * from './metrics.js';\nexport * from './multiaddr-connection.js';\nexport * from './peer-discovery.js';\nexport * from './peer-id.js';\nexport * from './peer-info.js';\nexport * from './peer-routing.js';\nexport * from './peer-store.js';\nexport * from './record.js';\nexport * from './startable.js';\nexport * from './stream-handler.js';\nexport * from './stream-muxer.js';\nexport * from './stream.js';\nexport * from './topology.js';\nexport * from './transport.js';\nexport * from 'main-event';\n//# sourceMappingURL=index.js.map","export const empty = new Uint8Array(0);\nexport function toHex(d) {\n    return d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\n}\nexport function fromHex(hex) {\n    const hexes = hex.match(/../g);\n    return hexes != null ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n}\nexport function equals(aa, bb) {\n    if (aa === bb) {\n        return true;\n    }\n    if (aa.byteLength !== bb.byteLength) {\n        return false;\n    }\n    for (let ii = 0; ii < aa.byteLength; ii++) {\n        if (aa[ii] !== bb[ii]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function coerce(o) {\n    if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') {\n        return o;\n    }\n    if (o instanceof ArrayBuffer) {\n        return new Uint8Array(o);\n    }\n    if (ArrayBuffer.isView(o)) {\n        return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n    }\n    throw new Error('Unknown type, must be binary type');\n}\nexport function isBinary(o) {\n    return o instanceof ArrayBuffer || ArrayBuffer.isView(o);\n}\nexport function fromString(str) {\n    return new TextEncoder().encode(str);\n}\nexport function toString(b) {\n    return new TextDecoder().decode(b);\n}\n//# sourceMappingURL=bytes.js.map","/* eslint-disable */\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n/**\n * @param {string} ALPHABET\n * @param {any} name\n */\nfunction base(ALPHABET, name) {\n    if (ALPHABET.length >= 255) {\n        throw new TypeError('Alphabet too long');\n    }\n    var BASE_MAP = new Uint8Array(256);\n    for (var j = 0; j < BASE_MAP.length; j++) {\n        BASE_MAP[j] = 255;\n    }\n    for (var i = 0; i < ALPHABET.length; i++) {\n        var x = ALPHABET.charAt(i);\n        var xc = x.charCodeAt(0);\n        if (BASE_MAP[xc] !== 255) {\n            throw new TypeError(x + ' is ambiguous');\n        }\n        BASE_MAP[xc] = i;\n    }\n    var BASE = ALPHABET.length;\n    var LEADER = ALPHABET.charAt(0);\n    var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n    var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n    /**\n     * @param {any[] | Iterable<number>} source\n     */\n    function encode(source) {\n        // @ts-ignore\n        if (source instanceof Uint8Array)\n            ;\n        else if (ArrayBuffer.isView(source)) {\n            source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n        }\n        else if (Array.isArray(source)) {\n            source = Uint8Array.from(source);\n        }\n        if (!(source instanceof Uint8Array)) {\n            throw new TypeError('Expected Uint8Array');\n        }\n        if (source.length === 0) {\n            return '';\n        }\n        // Skip & count leading zeroes.\n        var zeroes = 0;\n        var length = 0;\n        var pbegin = 0;\n        var pend = source.length;\n        while (pbegin !== pend && source[pbegin] === 0) {\n            pbegin++;\n            zeroes++;\n        }\n        // Allocate enough space in big-endian base58 representation.\n        var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n        var b58 = new Uint8Array(size);\n        // Process the bytes.\n        while (pbegin !== pend) {\n            var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n            var i = 0;\n            for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n                carry += (256 * b58[it1]) >>> 0;\n                b58[it1] = (carry % BASE) >>> 0;\n                carry = (carry / BASE) >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error('Non-zero carry');\n            }\n            length = i;\n            pbegin++;\n        }\n        // Skip leading zeroes in base58 result.\n        var it2 = size - length;\n        while (it2 !== size && b58[it2] === 0) {\n            it2++;\n        }\n        // Translate the result into a string.\n        var str = LEADER.repeat(zeroes);\n        for (; it2 < size; ++it2) {\n            str += ALPHABET.charAt(b58[it2]);\n        }\n        return str;\n    }\n    /**\n     * @param {string | string[]} source\n     */\n    function decodeUnsafe(source) {\n        if (typeof source !== 'string') {\n            throw new TypeError('Expected String');\n        }\n        if (source.length === 0) {\n            return new Uint8Array();\n        }\n        var psz = 0;\n        // Skip leading spaces.\n        if (source[psz] === ' ') {\n            return;\n        }\n        // Skip and count leading '1's.\n        var zeroes = 0;\n        var length = 0;\n        while (source[psz] === LEADER) {\n            zeroes++;\n            psz++;\n        }\n        // Allocate enough space in big-endian base256 representation.\n        var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n        var b256 = new Uint8Array(size);\n        // Process the characters.\n        while (source[psz]) {\n            // Decode character\n            var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n            if (carry === 255) {\n                return;\n            }\n            var i = 0;\n            for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n                carry += (BASE * b256[it3]) >>> 0;\n                b256[it3] = (carry % 256) >>> 0;\n                carry = (carry / 256) >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error('Non-zero carry');\n            }\n            length = i;\n            psz++;\n        }\n        // Skip trailing spaces.\n        if (source[psz] === ' ') {\n            return;\n        }\n        // Skip leading zeroes in b256.\n        var it4 = size - length;\n        while (it4 !== size && b256[it4] === 0) {\n            it4++;\n        }\n        var vch = new Uint8Array(zeroes + (size - it4));\n        var j = zeroes;\n        while (it4 !== size) {\n            vch[j++] = b256[it4++];\n        }\n        return vch;\n    }\n    /**\n     * @param {string | string[]} string\n     */\n    function decode(string) {\n        var buffer = decodeUnsafe(string);\n        if (buffer) {\n            return buffer;\n        }\n        throw new Error(`Non-${name} character`);\n    }\n    return {\n        encode: encode,\n        decodeUnsafe: decodeUnsafe,\n        decode: decode\n    };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;\n//# sourceMappingURL=base-x.js.map","import { coerce } from '../bytes.js';\nimport basex from '../vendor/base-x.js';\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n */\nclass Encoder {\n    name;\n    prefix;\n    baseEncode;\n    constructor(name, prefix, baseEncode) {\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n    }\n    encode(bytes) {\n        if (bytes instanceof Uint8Array) {\n            return `${this.prefix}${this.baseEncode(bytes)}`;\n        }\n        else {\n            throw Error('Unknown type, must be binary type');\n        }\n    }\n}\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n */\nclass Decoder {\n    name;\n    prefix;\n    baseDecode;\n    prefixCodePoint;\n    constructor(name, prefix, baseDecode) {\n        this.name = name;\n        this.prefix = prefix;\n        const prefixCodePoint = prefix.codePointAt(0);\n        /* c8 ignore next 3 */\n        if (prefixCodePoint === undefined) {\n            throw new Error('Invalid prefix character');\n        }\n        this.prefixCodePoint = prefixCodePoint;\n        this.baseDecode = baseDecode;\n    }\n    decode(text) {\n        if (typeof text === 'string') {\n            if (text.codePointAt(0) !== this.prefixCodePoint) {\n                throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);\n            }\n            return this.baseDecode(text.slice(this.prefix.length));\n        }\n        else {\n            throw Error('Can only multibase decode strings');\n        }\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n}\nclass ComposedDecoder {\n    decoders;\n    constructor(decoders) {\n        this.decoders = decoders;\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n    decode(input) {\n        const prefix = input[0];\n        const decoder = this.decoders[prefix];\n        if (decoder != null) {\n            return decoder.decode(input);\n        }\n        else {\n            throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);\n        }\n    }\n}\nexport function or(left, right) {\n    return new ComposedDecoder({\n        ...(left.decoders ?? { [left.prefix]: left }),\n        ...(right.decoders ?? { [right.prefix]: right })\n    });\n}\nexport class Codec {\n    name;\n    prefix;\n    baseEncode;\n    baseDecode;\n    encoder;\n    decoder;\n    constructor(name, prefix, baseEncode, baseDecode) {\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n        this.baseDecode = baseDecode;\n        this.encoder = new Encoder(name, prefix, baseEncode);\n        this.decoder = new Decoder(name, prefix, baseDecode);\n    }\n    encode(input) {\n        return this.encoder.encode(input);\n    }\n    decode(input) {\n        return this.decoder.decode(input);\n    }\n}\nexport function from({ name, prefix, encode, decode }) {\n    return new Codec(name, prefix, encode, decode);\n}\nexport function baseX({ name, prefix, alphabet }) {\n    const { encode, decode } = basex(alphabet, name);\n    return from({\n        prefix,\n        name,\n        encode,\n        decode: (text) => coerce(decode(text))\n    });\n}\nfunction decode(string, alphabetIdx, bitsPerChar, name) {\n    // Count the padding bytes:\n    let end = string.length;\n    while (string[end - 1] === '=') {\n        --end;\n    }\n    // Allocate the output:\n    const out = new Uint8Array((end * bitsPerChar / 8) | 0);\n    // Parse the data:\n    let bits = 0; // Number of bits currently in the buffer\n    let buffer = 0; // Bits waiting to be written out, MSB first\n    let written = 0; // Next byte to write\n    for (let i = 0; i < end; ++i) {\n        // Read one character from the string:\n        const value = alphabetIdx[string[i]];\n        if (value === undefined) {\n            throw new SyntaxError(`Non-${name} character`);\n        }\n        // Append the bits to the buffer:\n        buffer = (buffer << bitsPerChar) | value;\n        bits += bitsPerChar;\n        // Write out some bits if the buffer has a byte's worth:\n        if (bits >= 8) {\n            bits -= 8;\n            out[written++] = 0xff & (buffer >> bits);\n        }\n    }\n    // Verify that we have received just enough bits:\n    if (bits >= bitsPerChar || (0xff & (buffer << (8 - bits))) !== 0) {\n        throw new SyntaxError('Unexpected end of data');\n    }\n    return out;\n}\nfunction encode(data, alphabet, bitsPerChar) {\n    const pad = alphabet[alphabet.length - 1] === '=';\n    const mask = (1 << bitsPerChar) - 1;\n    let out = '';\n    let bits = 0; // Number of bits currently in the buffer\n    let buffer = 0; // Bits waiting to be written out, MSB first\n    for (let i = 0; i < data.length; ++i) {\n        // Slurp data into the buffer:\n        buffer = (buffer << 8) | data[i];\n        bits += 8;\n        // Write out as much as we can:\n        while (bits > bitsPerChar) {\n            bits -= bitsPerChar;\n            out += alphabet[mask & (buffer >> bits)];\n        }\n    }\n    // Partial character:\n    if (bits !== 0) {\n        out += alphabet[mask & (buffer << (bitsPerChar - bits))];\n    }\n    // Add padding characters until we hit a byte boundary:\n    if (pad) {\n        while (((out.length * bitsPerChar) & 7) !== 0) {\n            out += '=';\n        }\n    }\n    return out;\n}\nfunction createAlphabetIdx(alphabet) {\n    // Build the character lookup table:\n    const alphabetIdx = {};\n    for (let i = 0; i < alphabet.length; ++i) {\n        alphabetIdx[alphabet[i]] = i;\n    }\n    return alphabetIdx;\n}\n/**\n * RFC4648 Factory\n */\nexport function rfc4648({ name, prefix, bitsPerChar, alphabet }) {\n    const alphabetIdx = createAlphabetIdx(alphabet);\n    return from({\n        prefix,\n        name,\n        encode(input) {\n            return encode(input, alphabet, bitsPerChar);\n        },\n        decode(input) {\n            return decode(input, alphabetIdx, bitsPerChar, name);\n        }\n    });\n}\n//# sourceMappingURL=base.js.map","import { baseX } from './base.js';\nexport const base58btc = baseX({\n    name: 'base58btc',\n    prefix: 'z',\n    alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n    name: 'base58flickr',\n    prefix: 'Z',\n    alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});\n//# sourceMappingURL=base58.js.map","import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n    prefix: 'b',\n    name: 'base32',\n    alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n    bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n    prefix: 'B',\n    name: 'base32upper',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n    bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n    prefix: 'c',\n    name: 'base32pad',\n    alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n    bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n    prefix: 'C',\n    name: 'base32padupper',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n    bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n    prefix: 'v',\n    name: 'base32hex',\n    alphabet: '0123456789abcdefghijklmnopqrstuv',\n    bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n    prefix: 'V',\n    name: 'base32hexupper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n    bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n    prefix: 't',\n    name: 'base32hexpad',\n    alphabet: '0123456789abcdefghijklmnopqrstuv=',\n    bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n    prefix: 'T',\n    name: 'base32hexpadupper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n    bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n    prefix: 'h',\n    name: 'base32z',\n    alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n    bitsPerChar: 5\n});\n//# sourceMappingURL=base32.js.map","import { baseX } from './base.js';\nexport const base36 = baseX({\n    prefix: 'k',\n    name: 'base36',\n    alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nexport const base36upper = baseX({\n    prefix: 'K',\n    name: 'base36upper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});\n//# sourceMappingURL=base36.js.map","/* eslint-disable */\nvar encode_1 = encode;\nvar MSB = 0x80, REST = 0x7F, MSBALL = ~REST, INT = Math.pow(2, 31);\n/**\n * @param {number} num\n * @param {number[]} out\n * @param {number} offset\n */\nfunction encode(num, out, offset) {\n    out = out || [];\n    offset = offset || 0;\n    var oldOffset = offset;\n    while (num >= INT) {\n        out[offset++] = (num & 0xFF) | MSB;\n        num /= 128;\n    }\n    while (num & MSBALL) {\n        out[offset++] = (num & 0xFF) | MSB;\n        num >>>= 7;\n    }\n    out[offset] = num | 0;\n    // @ts-ignore\n    encode.bytes = offset - oldOffset + 1;\n    return out;\n}\nvar decode = read;\nvar MSB$1 = 0x80, REST$1 = 0x7F;\n/**\n * @param {string | any[]} buf\n * @param {number} offset\n */\nfunction read(buf, offset) {\n    var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n    do {\n        if (counter >= l) {\n            // @ts-ignore\n            read.bytes = 0;\n            throw new RangeError('Could not decode varint');\n        }\n        b = buf[counter++];\n        res += shift < 28\n            ? (b & REST$1) << shift\n            : (b & REST$1) * Math.pow(2, shift);\n        shift += 7;\n    } while (b >= MSB$1);\n    // @ts-ignore\n    read.bytes = counter - offset;\n    return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (/** @type {number} */ value) {\n    return (value < N1 ? 1\n        : value < N2 ? 2\n            : value < N3 ? 3\n                : value < N4 ? 4\n                    : value < N5 ? 5\n                        : value < N6 ? 6\n                            : value < N7 ? 7\n                                : value < N8 ? 8\n                                    : value < N9 ? 9\n                                        : 10);\n};\nvar varint = {\n    encode: encode_1,\n    decode: decode,\n    encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;\n//# sourceMappingURL=varint.js.map","import varint from './vendor/varint.js';\nexport function decode(data, offset = 0) {\n    const code = varint.decode(data, offset);\n    return [code, varint.decode.bytes];\n}\nexport function encodeTo(int, target, offset = 0) {\n    varint.encode(int, target, offset);\n    return target;\n}\nexport function encodingLength(int) {\n    return varint.encodingLength(int);\n}\n//# sourceMappingURL=varint.js.map","import { coerce, equals as equalBytes } from '../bytes.js';\nimport * as varint from '../varint.js';\n/**\n * Creates a multihash digest.\n */\nexport function create(code, digest) {\n    const size = digest.byteLength;\n    const sizeOffset = varint.encodingLength(code);\n    const digestOffset = sizeOffset + varint.encodingLength(size);\n    const bytes = new Uint8Array(digestOffset + size);\n    varint.encodeTo(code, bytes, 0);\n    varint.encodeTo(size, bytes, sizeOffset);\n    bytes.set(digest, digestOffset);\n    return new Digest(code, size, digest, bytes);\n}\n/**\n * Turns bytes representation of multihash digest into an instance.\n */\nexport function decode(multihash) {\n    const bytes = coerce(multihash);\n    const [code, sizeOffset] = varint.decode(bytes);\n    const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n    const digest = bytes.subarray(sizeOffset + digestOffset);\n    if (digest.byteLength !== size) {\n        throw new Error('Incorrect length');\n    }\n    return new Digest(code, size, digest, bytes);\n}\nexport function equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    else {\n        const data = b;\n        return (a.code === data.code &&\n            a.size === data.size &&\n            data.bytes instanceof Uint8Array &&\n            equalBytes(a.bytes, data.bytes));\n    }\n}\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n */\nexport class Digest {\n    code;\n    size;\n    digest;\n    bytes;\n    /**\n     * Creates a multihash digest.\n     */\n    constructor(code, size, digest, bytes) {\n        this.code = code;\n        this.size = size;\n        this.digest = digest;\n        this.bytes = bytes;\n    }\n}\n/**\n * Used to check that the passed multihash has the passed code\n */\nexport function hasCode(digest, code) {\n    return digest.code === code;\n}\n//# sourceMappingURL=digest.js.map","import { base32 } from './bases/base32.js';\nimport { base36 } from './bases/base36.js';\nimport { base58btc } from './bases/base58.js';\nimport { coerce } from './bytes.js';\nimport * as Digest from './hashes/digest.js';\nimport * as varint from './varint.js';\n// This way TS will also expose all the types from module\nexport * from './link/interface.js';\nexport function format(link, base) {\n    const { bytes, version } = link;\n    switch (version) {\n        case 0:\n            return toStringV0(bytes, baseCache(link), base ?? base58btc.encoder);\n        default:\n            return toStringV1(bytes, baseCache(link), (base ?? base32.encoder));\n    }\n}\nexport function toJSON(link) {\n    return {\n        '/': format(link)\n    };\n}\nexport function fromJSON(json) {\n    return CID.parse(json['/']);\n}\nconst cache = new WeakMap();\nfunction baseCache(cid) {\n    const baseCache = cache.get(cid);\n    if (baseCache == null) {\n        const baseCache = new Map();\n        cache.set(cid, baseCache);\n        return baseCache;\n    }\n    return baseCache;\n}\nexport class CID {\n    code;\n    version;\n    multihash;\n    bytes;\n    '/';\n    /**\n     * @param version - Version of the CID\n     * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n     * @param multihash - (Multi)hash of the of the content.\n     */\n    constructor(version, code, multihash, bytes) {\n        this.code = code;\n        this.version = version;\n        this.multihash = multihash;\n        this.bytes = bytes;\n        // flag to serializers that this is a CID and\n        // should be treated specially\n        this['/'] = bytes;\n    }\n    /**\n     * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n     * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n     *\n     * @deprecated\n     */\n    get asCID() {\n        return this;\n    }\n    // ArrayBufferView\n    get byteOffset() {\n        return this.bytes.byteOffset;\n    }\n    // ArrayBufferView\n    get byteLength() {\n        return this.bytes.byteLength;\n    }\n    toV0() {\n        switch (this.version) {\n            case 0: {\n                return this;\n            }\n            case 1: {\n                const { code, multihash } = this;\n                if (code !== DAG_PB_CODE) {\n                    throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n                }\n                // sha2-256\n                if (multihash.code !== SHA_256_CODE) {\n                    throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n                }\n                return (CID.createV0(multihash));\n            }\n            default: {\n                throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`);\n            }\n        }\n    }\n    toV1() {\n        switch (this.version) {\n            case 0: {\n                const { code, digest } = this.multihash;\n                const multihash = Digest.create(code, digest);\n                return (CID.createV1(this.code, multihash));\n            }\n            case 1: {\n                return this;\n            }\n            default: {\n                throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`);\n            }\n        }\n    }\n    equals(other) {\n        return CID.equals(this, other);\n    }\n    static equals(self, other) {\n        const unknown = other;\n        return (unknown != null &&\n            self.code === unknown.code &&\n            self.version === unknown.version &&\n            Digest.equals(self.multihash, unknown.multihash));\n    }\n    toString(base) {\n        return format(this, base);\n    }\n    toJSON() {\n        return { '/': format(this) };\n    }\n    link() {\n        return this;\n    }\n    [Symbol.toStringTag] = 'CID';\n    // Legacy\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return `CID(${this.toString()})`;\n    }\n    /**\n     * Takes any input `value` and returns a `CID` instance if it was\n     * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n     * it will return value back. If `value` is not instance of this CID\n     * class, but is compatible CID it will return new instance of this\n     * `CID` class. Otherwise returns null.\n     *\n     * This allows two different incompatible versions of CID library to\n     * co-exist and interop as long as binary interface is compatible.\n     */\n    static asCID(input) {\n        if (input == null) {\n            return null;\n        }\n        const value = input;\n        if (value instanceof CID) {\n            // If value is instance of CID then we're all set.\n            return value;\n        }\n        else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n            // If value isn't instance of this CID class but `this.asCID === this` or\n            // `value['/'] === value.bytes` is true it is CID instance coming from a\n            // different implementation (diff version or duplicate). In that case we\n            // rebase it to this `CID` implementation so caller is guaranteed to get\n            // instance with expected API.\n            const { version, code, multihash, bytes } = value;\n            return new CID(version, code, multihash, bytes ?? encodeCID(version, code, multihash.bytes));\n        }\n        else if (value[cidSymbol] === true) {\n            // If value is a CID from older implementation that used to be tagged via\n            // symbol we still rebase it to the this `CID` implementation by\n            // delegating that to a constructor.\n            const { version, multihash, code } = value;\n            const digest = Digest.decode(multihash);\n            return CID.create(version, code, digest);\n        }\n        else {\n            // Otherwise value is not a CID (or an incompatible version of it) in\n            // which case we return `null`.\n            return null;\n        }\n    }\n    /**\n     * @param version - Version of the CID\n     * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n     * @param digest - (Multi)hash of the of the content.\n     */\n    static create(version, code, digest) {\n        if (typeof code !== 'number') {\n            throw new Error('String codecs are no longer supported');\n        }\n        if (!(digest.bytes instanceof Uint8Array)) {\n            throw new Error('Invalid digest');\n        }\n        switch (version) {\n            case 0: {\n                if (code !== DAG_PB_CODE) {\n                    throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`);\n                }\n                else {\n                    return new CID(version, code, digest, digest.bytes);\n                }\n            }\n            case 1: {\n                const bytes = encodeCID(version, code, digest.bytes);\n                return new CID(version, code, digest, bytes);\n            }\n            default: {\n                throw new Error('Invalid version');\n            }\n        }\n    }\n    /**\n     * Simplified version of `create` for CIDv0.\n     */\n    static createV0(digest) {\n        return CID.create(0, DAG_PB_CODE, digest);\n    }\n    /**\n     * Simplified version of `create` for CIDv1.\n     *\n     * @param code - Content encoding format code.\n     * @param digest - Multihash of the content.\n     */\n    static createV1(code, digest) {\n        return CID.create(1, code, digest);\n    }\n    /**\n     * Decoded a CID from its binary representation. The byte array must contain\n     * only the CID with no additional bytes.\n     *\n     * An error will be thrown if the bytes provided do not contain a valid\n     * binary representation of a CID.\n     */\n    static decode(bytes) {\n        const [cid, remainder] = CID.decodeFirst(bytes);\n        if (remainder.length !== 0) {\n            throw new Error('Incorrect length');\n        }\n        return cid;\n    }\n    /**\n     * Decoded a CID from its binary representation at the beginning of a byte\n     * array.\n     *\n     * Returns an array with the first element containing the CID and the second\n     * element containing the remainder of the original byte array. The remainder\n     * will be a zero-length byte array if the provided bytes only contained a\n     * binary CID representation.\n     */\n    static decodeFirst(bytes) {\n        const specs = CID.inspectBytes(bytes);\n        const prefixSize = specs.size - specs.multihashSize;\n        const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n        if (multihashBytes.byteLength !== specs.multihashSize) {\n            throw new Error('Incorrect length');\n        }\n        const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n        const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n        const cid = specs.version === 0\n            ? CID.createV0(digest)\n            : CID.createV1(specs.codec, digest);\n        return [cid, bytes.subarray(specs.size)];\n    }\n    /**\n     * Inspect the initial bytes of a CID to determine its properties.\n     *\n     * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n     * bytes but for larger multicodec code values and larger multihash digest\n     * lengths these varints can be quite large. It is recommended that at least\n     * 10 bytes be made available in the `initialBytes` argument for a complete\n     * inspection.\n     */\n    static inspectBytes(initialBytes) {\n        let offset = 0;\n        const next = () => {\n            const [i, length] = varint.decode(initialBytes.subarray(offset));\n            offset += length;\n            return i;\n        };\n        let version = next();\n        let codec = DAG_PB_CODE;\n        if (version === 18) {\n            // CIDv0\n            version = 0;\n            offset = 0;\n        }\n        else {\n            codec = next();\n        }\n        if (version !== 0 && version !== 1) {\n            throw new RangeError(`Invalid CID version ${version}`);\n        }\n        const prefixSize = offset;\n        const multihashCode = next(); // multihash code\n        const digestSize = next(); // multihash length\n        const size = offset + digestSize;\n        const multihashSize = size - prefixSize;\n        return { version, codec, multihashCode, digestSize, multihashSize, size };\n    }\n    /**\n     * Takes cid in a string representation and creates an instance. If `base`\n     * decoder is not provided will use a default from the configuration. It will\n     * throw an error if encoding of the CID is not compatible with supplied (or\n     * a default decoder).\n     */\n    static parse(source, base) {\n        const [prefix, bytes] = parseCIDtoBytes(source, base);\n        const cid = CID.decode(bytes);\n        if (cid.version === 0 && source[0] !== 'Q') {\n            throw Error('Version 0 CID string must not include multibase prefix');\n        }\n        // Cache string representation to avoid computing it on `this.toString()`\n        baseCache(cid).set(prefix, source);\n        return cid;\n    }\n}\nfunction parseCIDtoBytes(source, base) {\n    switch (source[0]) {\n        // CIDv0 is parsed differently\n        case 'Q': {\n            const decoder = base ?? base58btc;\n            return [\n                base58btc.prefix,\n                decoder.decode(`${base58btc.prefix}${source}`)\n            ];\n        }\n        case base58btc.prefix: {\n            const decoder = base ?? base58btc;\n            return [base58btc.prefix, decoder.decode(source)];\n        }\n        case base32.prefix: {\n            const decoder = base ?? base32;\n            return [base32.prefix, decoder.decode(source)];\n        }\n        case base36.prefix: {\n            const decoder = base ?? base36;\n            return [base36.prefix, decoder.decode(source)];\n        }\n        default: {\n            if (base == null) {\n                throw Error('To parse non base32, base36 or base58btc encoded CID multibase decoder must be provided');\n            }\n            return [source[0], base.decode(source)];\n        }\n    }\n}\nfunction toStringV0(bytes, cache, base) {\n    const { prefix } = base;\n    if (prefix !== base58btc.prefix) {\n        throw Error(`Cannot string encode V0 in ${base.name} encoding`);\n    }\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes).slice(1);\n        cache.set(prefix, cid);\n        return cid;\n    }\n    else {\n        return cid;\n    }\n}\nfunction toStringV1(bytes, cache, base) {\n    const { prefix } = base;\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes);\n        cache.set(prefix, cid);\n        return cid;\n    }\n    else {\n        return cid;\n    }\n}\nconst DAG_PB_CODE = 0x70;\nconst SHA_256_CODE = 0x12;\nfunction encodeCID(version, code, multihash) {\n    const codeOffset = varint.encodingLength(version);\n    const hashOffset = codeOffset + varint.encodingLength(code);\n    const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n    varint.encodeTo(version, bytes, 0);\n    varint.encodeTo(code, bytes, codeOffset);\n    bytes.set(multihash, hashOffset);\n    return bytes;\n}\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\n//# sourceMappingURL=cid.js.map","import { coerce } from '../bytes.js';\nimport * as Digest from './digest.js';\nconst code = 0x0;\nconst name = 'identity';\nconst encode = coerce;\nfunction digest(input, options) {\n    if (options?.truncate != null && options.truncate !== input.byteLength) {\n        if (options.truncate < 0 || options.truncate > input.byteLength) {\n            throw new Error(`Invalid truncate option, must be less than or equal to ${input.byteLength}`);\n        }\n        input = input.subarray(0, options.truncate);\n    }\n    return Digest.create(code, encode(input));\n}\nexport const identity = { code, name, encode, digest };\n//# sourceMappingURL=identity.js.map","/**\n * Returns true if the two passed Uint8Arrays have the same content\n */\nexport function equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a.byteLength !== b.byteLength) {\n        return false;\n    }\n    for (let i = 0; i < a.byteLength; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=equals.js.map","/**\n * Returns a `Uint8Array` of the requested size. Referenced memory will\n * be initialized to 0.\n */\nexport function alloc(size = 0) {\n    return new Uint8Array(size);\n}\n/**\n * Where possible returns a Uint8Array of the requested size that references\n * uninitialized memory. Only use if you are certain you will immediately\n * overwrite every value in the returned `Uint8Array`.\n */\nexport function allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\n//# sourceMappingURL=alloc.js.map","/**\n * To guarantee Uint8Array semantics, convert nodejs Buffers\n * into vanilla Uint8Arrays\n */\nexport function asUint8Array(buf) {\n    return buf;\n}\n//# sourceMappingURL=as-uint8array.js.map","import { allocUnsafe } from '#alloc';\nimport { asUint8Array } from '#util/as-uint8array';\n/**\n * Returns a new Uint8Array created by concatenating the passed Uint8Arrays\n */\nexport function concat(arrays, length) {\n    if (length == null) {\n        length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n    }\n    const output = allocUnsafe(length);\n    let offset = 0;\n    for (const arr of arrays) {\n        output.set(arr, offset);\n        offset += arr.length;\n    }\n    return asUint8Array(output);\n}\n//# sourceMappingURL=concat.js.map","/**\n * @packageDocumentation\n *\n * A class that lets you do operations over a list of Uint8Arrays without\n * copying them.\n *\n * ```js\n * import { Uint8ArrayList } from 'uint8arraylist'\n *\n * const list = new Uint8ArrayList()\n * list.append(Uint8Array.from([0, 1, 2]))\n * list.append(Uint8Array.from([3, 4, 5]))\n *\n * list.subarray()\n * // -> Uint8Array([0, 1, 2, 3, 4, 5])\n *\n * list.consume(3)\n * list.subarray()\n * // -> Uint8Array([3, 4, 5])\n *\n * // you can also iterate over the list\n * for (const buf of list) {\n *   // ..do something with `buf`\n * }\n *\n * list.subarray(0, 1)\n * // -> Uint8Array([0])\n * ```\n *\n * ## Converting Uint8ArrayLists to Uint8Arrays\n *\n * There are two ways to turn a `Uint8ArrayList` into a `Uint8Array` - `.slice` and `.subarray` and one way to turn a `Uint8ArrayList` into a `Uint8ArrayList` with different contents - `.sublist`.\n *\n * ### slice\n *\n * Slice follows the same semantics as [Uint8Array.slice](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/slice) in that it creates a new `Uint8Array` and copies bytes into it using an optional offset & length.\n *\n * ```js\n * const list = new Uint8ArrayList()\n * list.append(Uint8Array.from([0, 1, 2]))\n * list.append(Uint8Array.from([3, 4, 5]))\n *\n * list.slice(0, 1)\n * // -> Uint8Array([0])\n * ```\n *\n * ### subarray\n *\n * Subarray attempts to follow the same semantics as [Uint8Array.subarray](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/subarray) with one important different - this is a no-copy operation, unless the requested bytes span two internal buffers in which case it is a copy operation.\n *\n * ```js\n * const list = new Uint8ArrayList()\n * list.append(Uint8Array.from([0, 1, 2]))\n * list.append(Uint8Array.from([3, 4, 5]))\n *\n * list.subarray(0, 1)\n * // -> Uint8Array([0]) - no-copy\n *\n * list.subarray(2, 5)\n * // -> Uint8Array([2, 3, 4]) - copy\n * ```\n *\n * ### sublist\n *\n * Sublist creates and returns a new `Uint8ArrayList` that shares the underlying buffers with the original so is always a no-copy operation.\n *\n * ```js\n * const list = new Uint8ArrayList()\n * list.append(Uint8Array.from([0, 1, 2]))\n * list.append(Uint8Array.from([3, 4, 5]))\n *\n * list.sublist(0, 1)\n * // -> Uint8ArrayList([0]) - no-copy\n *\n * list.sublist(2, 5)\n * // -> Uint8ArrayList([2], [3, 4]) - no-copy\n * ```\n *\n * ## Inspiration\n *\n * Borrows liberally from [bl](https://www.npmjs.com/package/bl) but only uses native JS types.\n */\nimport { allocUnsafe, alloc } from 'uint8arrays/alloc';\nimport { concat } from 'uint8arrays/concat';\nimport { equals } from 'uint8arrays/equals';\nconst symbol = Symbol.for('@achingbrain/uint8arraylist');\nfunction findBufAndOffset(bufs, index) {\n    if (index == null || index < 0) {\n        throw new RangeError('index is out of bounds');\n    }\n    let offset = 0;\n    for (const buf of bufs) {\n        const bufEnd = offset + buf.byteLength;\n        if (index < bufEnd) {\n            return {\n                buf,\n                index: index - offset\n            };\n        }\n        offset = bufEnd;\n    }\n    throw new RangeError('index is out of bounds');\n}\n/**\n * Check if object is a CID instance\n *\n * @example\n *\n * ```js\n * import { isUint8ArrayList, Uint8ArrayList } from 'uint8arraylist'\n *\n * isUint8ArrayList(true) // false\n * isUint8ArrayList([]) // false\n * isUint8ArrayList(new Uint8ArrayList()) // true\n * ```\n */\nexport function isUint8ArrayList(value) {\n    return Boolean(value?.[symbol]);\n}\nexport class Uint8ArrayList {\n    bufs;\n    length;\n    [symbol] = true;\n    constructor(...data) {\n        this.bufs = [];\n        this.length = 0;\n        if (data.length > 0) {\n            this.appendAll(data);\n        }\n    }\n    *[Symbol.iterator]() {\n        yield* this.bufs;\n    }\n    get byteLength() {\n        return this.length;\n    }\n    /**\n     * Add one or more `bufs` to the end of this Uint8ArrayList\n     */\n    append(...bufs) {\n        this.appendAll(bufs);\n    }\n    /**\n     * Add all `bufs` to the end of this Uint8ArrayList\n     */\n    appendAll(bufs) {\n        let length = 0;\n        for (const buf of bufs) {\n            if (buf instanceof Uint8Array) {\n                length += buf.byteLength;\n                this.bufs.push(buf);\n            }\n            else if (isUint8ArrayList(buf)) {\n                length += buf.byteLength;\n                this.bufs.push(...buf.bufs);\n            }\n            else {\n                throw new Error('Could not append value, must be an Uint8Array or a Uint8ArrayList');\n            }\n        }\n        this.length += length;\n    }\n    /**\n     * Add one or more `bufs` to the start of this Uint8ArrayList\n     */\n    prepend(...bufs) {\n        this.prependAll(bufs);\n    }\n    /**\n     * Add all `bufs` to the start of this Uint8ArrayList\n     */\n    prependAll(bufs) {\n        let length = 0;\n        for (const buf of bufs.reverse()) {\n            if (buf instanceof Uint8Array) {\n                length += buf.byteLength;\n                this.bufs.unshift(buf);\n            }\n            else if (isUint8ArrayList(buf)) {\n                length += buf.byteLength;\n                this.bufs.unshift(...buf.bufs);\n            }\n            else {\n                throw new Error('Could not prepend value, must be an Uint8Array or a Uint8ArrayList');\n            }\n        }\n        this.length += length;\n    }\n    /**\n     * Read the value at `index`\n     */\n    get(index) {\n        const res = findBufAndOffset(this.bufs, index);\n        return res.buf[res.index];\n    }\n    /**\n     * Set the value at `index` to `value`\n     */\n    set(index, value) {\n        const res = findBufAndOffset(this.bufs, index);\n        res.buf[res.index] = value;\n    }\n    /**\n     * Copy bytes from `buf` to the index specified by `offset`\n     */\n    write(buf, offset = 0) {\n        if (buf instanceof Uint8Array) {\n            for (let i = 0; i < buf.length; i++) {\n                this.set(offset + i, buf[i]);\n            }\n        }\n        else if (isUint8ArrayList(buf)) {\n            for (let i = 0; i < buf.length; i++) {\n                this.set(offset + i, buf.get(i));\n            }\n        }\n        else {\n            throw new Error('Could not write value, must be an Uint8Array or a Uint8ArrayList');\n        }\n    }\n    /**\n     * Remove bytes from the front of the pool\n     */\n    consume(bytes) {\n        // first, normalize the argument, in accordance with how Buffer does it\n        bytes = Math.trunc(bytes);\n        // do nothing if not a positive number\n        if (Number.isNaN(bytes) || bytes <= 0) {\n            return;\n        }\n        // if consuming all bytes, skip iterating\n        if (bytes === this.byteLength) {\n            this.bufs = [];\n            this.length = 0;\n            return;\n        }\n        while (this.bufs.length > 0) {\n            if (bytes >= this.bufs[0].byteLength) {\n                bytes -= this.bufs[0].byteLength;\n                this.length -= this.bufs[0].byteLength;\n                this.bufs.shift();\n            }\n            else {\n                this.bufs[0] = this.bufs[0].subarray(bytes);\n                this.length -= bytes;\n                break;\n            }\n        }\n    }\n    /**\n     * Extracts a section of an array and returns a new array.\n     *\n     * This is a copy operation as it is with Uint8Arrays and Arrays\n     * - note this is different to the behaviour of Node Buffers.\n     */\n    slice(beginInclusive, endExclusive) {\n        const { bufs, length } = this._subList(beginInclusive, endExclusive);\n        return concat(bufs, length);\n    }\n    /**\n     * Returns a alloc from the given start and end element index.\n     *\n     * In the best case where the data extracted comes from a single Uint8Array\n     * internally this is a no-copy operation otherwise it is a copy operation.\n     */\n    subarray(beginInclusive, endExclusive) {\n        const { bufs, length } = this._subList(beginInclusive, endExclusive);\n        if (bufs.length === 1) {\n            return bufs[0];\n        }\n        return concat(bufs, length);\n    }\n    /**\n     * Returns a allocList from the given start and end element index.\n     *\n     * This is a no-copy operation.\n     */\n    sublist(beginInclusive, endExclusive) {\n        const { bufs, length } = this._subList(beginInclusive, endExclusive);\n        const list = new Uint8ArrayList();\n        list.length = length;\n        // don't loop, just set the bufs\n        list.bufs = [...bufs];\n        return list;\n    }\n    _subList(beginInclusive, endExclusive) {\n        beginInclusive = beginInclusive ?? 0;\n        endExclusive = endExclusive ?? this.length;\n        if (beginInclusive < 0) {\n            beginInclusive = this.length + beginInclusive;\n        }\n        if (endExclusive < 0) {\n            endExclusive = this.length + endExclusive;\n        }\n        if (beginInclusive < 0 || endExclusive > this.length) {\n            throw new RangeError('index is out of bounds');\n        }\n        if (beginInclusive === endExclusive) {\n            return { bufs: [], length: 0 };\n        }\n        if (beginInclusive === 0 && endExclusive === this.length) {\n            return { bufs: this.bufs, length: this.length };\n        }\n        const bufs = [];\n        let offset = 0;\n        for (let i = 0; i < this.bufs.length; i++) {\n            const buf = this.bufs[i];\n            const bufStart = offset;\n            const bufEnd = bufStart + buf.byteLength;\n            // for next loop\n            offset = bufEnd;\n            if (beginInclusive >= bufEnd) {\n                // start after this buf\n                continue;\n            }\n            const sliceStartInBuf = beginInclusive >= bufStart && beginInclusive < bufEnd;\n            const sliceEndsInBuf = endExclusive > bufStart && endExclusive <= bufEnd;\n            if (sliceStartInBuf && sliceEndsInBuf) {\n                // slice is wholly contained within this buffer\n                if (beginInclusive === bufStart && endExclusive === bufEnd) {\n                    // requested whole buffer\n                    bufs.push(buf);\n                    break;\n                }\n                // requested part of buffer\n                const start = beginInclusive - bufStart;\n                bufs.push(buf.subarray(start, start + (endExclusive - beginInclusive)));\n                break;\n            }\n            if (sliceStartInBuf) {\n                // slice starts in this buffer\n                if (beginInclusive === 0) {\n                    // requested whole buffer\n                    bufs.push(buf);\n                    continue;\n                }\n                // requested part of buffer\n                bufs.push(buf.subarray(beginInclusive - bufStart));\n                continue;\n            }\n            if (sliceEndsInBuf) {\n                if (endExclusive === bufEnd) {\n                    // requested whole buffer\n                    bufs.push(buf);\n                    break;\n                }\n                // requested part of buffer\n                bufs.push(buf.subarray(0, endExclusive - bufStart));\n                break;\n            }\n            // slice started before this buffer and ends after it\n            bufs.push(buf);\n        }\n        return { bufs, length: endExclusive - beginInclusive };\n    }\n    indexOf(search, offset = 0) {\n        if (!isUint8ArrayList(search) && !(search instanceof Uint8Array)) {\n            throw new TypeError('The \"value\" argument must be a Uint8ArrayList or Uint8Array');\n        }\n        const needle = search instanceof Uint8Array ? search : search.subarray();\n        offset = Number(offset ?? 0);\n        if (isNaN(offset)) {\n            offset = 0;\n        }\n        if (offset < 0) {\n            offset = this.length + offset;\n        }\n        if (offset < 0) {\n            offset = 0;\n        }\n        if (search.length === 0) {\n            return offset > this.length ? this.length : offset;\n        }\n        // https://en.wikipedia.org/wiki/Boyer%E2%80%93Moore_string-search_algorithm\n        const M = needle.byteLength;\n        if (M === 0) {\n            throw new TypeError('search must be at least 1 byte long');\n        }\n        // radix\n        const radix = 256;\n        const rightmostPositions = new Int32Array(radix);\n        // position of the rightmost occurrence of the byte c in the pattern\n        for (let c = 0; c < radix; c++) {\n            // -1 for bytes not in pattern\n            rightmostPositions[c] = -1;\n        }\n        for (let j = 0; j < M; j++) {\n            // rightmost position for bytes in pattern\n            rightmostPositions[needle[j]] = j;\n        }\n        // Return offset of first match, -1 if no match\n        const right = rightmostPositions;\n        const lastIndex = this.byteLength - needle.byteLength;\n        const lastPatIndex = needle.byteLength - 1;\n        let skip;\n        for (let i = offset; i <= lastIndex; i += skip) {\n            skip = 0;\n            for (let j = lastPatIndex; j >= 0; j--) {\n                const char = this.get(i + j);\n                if (needle[j] !== char) {\n                    skip = Math.max(1, j - right[char]);\n                    break;\n                }\n            }\n            if (skip === 0) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    getInt8(byteOffset) {\n        const buf = this.subarray(byteOffset, byteOffset + 1);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        return view.getInt8(0);\n    }\n    setInt8(byteOffset, value) {\n        const buf = allocUnsafe(1);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        view.setInt8(0, value);\n        this.write(buf, byteOffset);\n    }\n    getInt16(byteOffset, littleEndian) {\n        const buf = this.subarray(byteOffset, byteOffset + 2);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        return view.getInt16(0, littleEndian);\n    }\n    setInt16(byteOffset, value, littleEndian) {\n        const buf = alloc(2);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        view.setInt16(0, value, littleEndian);\n        this.write(buf, byteOffset);\n    }\n    getInt32(byteOffset, littleEndian) {\n        const buf = this.subarray(byteOffset, byteOffset + 4);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        return view.getInt32(0, littleEndian);\n    }\n    setInt32(byteOffset, value, littleEndian) {\n        const buf = alloc(4);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        view.setInt32(0, value, littleEndian);\n        this.write(buf, byteOffset);\n    }\n    getBigInt64(byteOffset, littleEndian) {\n        const buf = this.subarray(byteOffset, byteOffset + 8);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        return view.getBigInt64(0, littleEndian);\n    }\n    setBigInt64(byteOffset, value, littleEndian) {\n        const buf = alloc(8);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        view.setBigInt64(0, value, littleEndian);\n        this.write(buf, byteOffset);\n    }\n    getUint8(byteOffset) {\n        const buf = this.subarray(byteOffset, byteOffset + 1);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        return view.getUint8(0);\n    }\n    setUint8(byteOffset, value) {\n        const buf = allocUnsafe(1);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        view.setUint8(0, value);\n        this.write(buf, byteOffset);\n    }\n    getUint16(byteOffset, littleEndian) {\n        const buf = this.subarray(byteOffset, byteOffset + 2);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        return view.getUint16(0, littleEndian);\n    }\n    setUint16(byteOffset, value, littleEndian) {\n        const buf = alloc(2);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        view.setUint16(0, value, littleEndian);\n        this.write(buf, byteOffset);\n    }\n    getUint32(byteOffset, littleEndian) {\n        const buf = this.subarray(byteOffset, byteOffset + 4);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        return view.getUint32(0, littleEndian);\n    }\n    setUint32(byteOffset, value, littleEndian) {\n        const buf = alloc(4);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        view.setUint32(0, value, littleEndian);\n        this.write(buf, byteOffset);\n    }\n    getBigUint64(byteOffset, littleEndian) {\n        const buf = this.subarray(byteOffset, byteOffset + 8);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        return view.getBigUint64(0, littleEndian);\n    }\n    setBigUint64(byteOffset, value, littleEndian) {\n        const buf = alloc(8);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        view.setBigUint64(0, value, littleEndian);\n        this.write(buf, byteOffset);\n    }\n    getFloat32(byteOffset, littleEndian) {\n        const buf = this.subarray(byteOffset, byteOffset + 4);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        return view.getFloat32(0, littleEndian);\n    }\n    setFloat32(byteOffset, value, littleEndian) {\n        const buf = alloc(4);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        view.setFloat32(0, value, littleEndian);\n        this.write(buf, byteOffset);\n    }\n    getFloat64(byteOffset, littleEndian) {\n        const buf = this.subarray(byteOffset, byteOffset + 8);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        return view.getFloat64(0, littleEndian);\n    }\n    setFloat64(byteOffset, value, littleEndian) {\n        const buf = alloc(8);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        view.setFloat64(0, value, littleEndian);\n        this.write(buf, byteOffset);\n    }\n    equals(other) {\n        if (other == null) {\n            return false;\n        }\n        if (!(other instanceof Uint8ArrayList)) {\n            return false;\n        }\n        if (other.bufs.length !== this.bufs.length) {\n            return false;\n        }\n        for (let i = 0; i < this.bufs.length; i++) {\n            if (!equals(this.bufs[i], other.bufs[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Create a Uint8ArrayList from a pre-existing list of Uint8Arrays.  Use this\n     * method if you know the total size of all the Uint8Arrays ahead of time.\n     */\n    static fromUint8Arrays(bufs, length) {\n        const list = new Uint8ArrayList();\n        list.bufs = bufs;\n        if (length == null) {\n            length = bufs.reduce((acc, curr) => acc + curr.byteLength, 0);\n        }\n        list.length = length;\n        return list;\n    }\n}\n/*\nfunction indexOf (needle: Uint8Array, haystack: Uint8Array, offset = 0) {\n  for (let i = offset; i < haystack.byteLength; i++) {\n    for (let j = 0; j < needle.length; j++) {\n      if (haystack[i + j] !== needle[j]) {\n        break\n      }\n\n      if (j === needle.byteLength -1) {\n        return i\n      }\n    }\n\n    if (haystack.byteLength - i < needle.byteLength) {\n      break\n    }\n  }\n\n  return -1\n}\n*/\n//# sourceMappingURL=index.js.map","import { baseX } from './base.js';\nexport const base10 = baseX({\n    prefix: '9',\n    name: 'base10',\n    alphabet: '0123456789'\n});\n//# sourceMappingURL=base10.js.map","import { rfc4648 } from './base.js';\nexport const base16 = rfc4648({\n    prefix: 'f',\n    name: 'base16',\n    alphabet: '0123456789abcdef',\n    bitsPerChar: 4\n});\nexport const base16upper = rfc4648({\n    prefix: 'F',\n    name: 'base16upper',\n    alphabet: '0123456789ABCDEF',\n    bitsPerChar: 4\n});\n//# sourceMappingURL=base16.js.map","import { rfc4648 } from './base.js';\nexport const base2 = rfc4648({\n    prefix: '0',\n    name: 'base2',\n    alphabet: '01',\n    bitsPerChar: 1\n});\n//# sourceMappingURL=base2.js.map","import { from } from './base.js';\nconst alphabet = Array.from('🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂');\nconst alphabetBytesToChars = (alphabet.reduce((p, c, i) => { p[i] = c; return p; }, ([])));\nconst alphabetCharsToBytes = (alphabet.reduce((p, c, i) => {\n    const codePoint = c.codePointAt(0);\n    if (codePoint == null) {\n        throw new Error(`Invalid character: ${c}`);\n    }\n    p[codePoint] = i;\n    return p;\n}, ([])));\nfunction encode(data) {\n    return data.reduce((p, c) => {\n        p += alphabetBytesToChars[c];\n        return p;\n    }, '');\n}\nfunction decode(str) {\n    const byts = [];\n    for (const char of str) {\n        const codePoint = char.codePointAt(0);\n        if (codePoint == null) {\n            throw new Error(`Invalid character: ${char}`);\n        }\n        const byt = alphabetCharsToBytes[codePoint];\n        if (byt == null) {\n            throw new Error(`Non-base256emoji character: ${char}`);\n        }\n        byts.push(byt);\n    }\n    return new Uint8Array(byts);\n}\nexport const base256emoji = from({\n    prefix: '🚀',\n    name: 'base256emoji',\n    encode,\n    decode\n});\n//# sourceMappingURL=base256emoji.js.map","import { rfc4648 } from './base.js';\nexport const base64 = rfc4648({\n    prefix: 'm',\n    name: 'base64',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n    bitsPerChar: 6\n});\nexport const base64pad = rfc4648({\n    prefix: 'M',\n    name: 'base64pad',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n    bitsPerChar: 6\n});\nexport const base64url = rfc4648({\n    prefix: 'u',\n    name: 'base64url',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n    bitsPerChar: 6\n});\nexport const base64urlpad = rfc4648({\n    prefix: 'U',\n    name: 'base64urlpad',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n    bitsPerChar: 6\n});\n//# sourceMappingURL=base64.js.map","import { rfc4648 } from './base.js';\nexport const base8 = rfc4648({\n    prefix: '7',\n    name: 'base8',\n    alphabet: '01234567',\n    bitsPerChar: 3\n});\n//# sourceMappingURL=base8.js.map","import { fromString, toString } from '../bytes.js';\nimport { from } from './base.js';\nexport const identity = from({\n    prefix: '\\x00',\n    name: 'identity',\n    encode: (buf) => toString(buf),\n    decode: (str) => fromString(str)\n});\n//# sourceMappingURL=identity.js.map","const textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nexport const name = 'json';\nexport const code = 0x0200;\nexport function encode(node) {\n    return textEncoder.encode(JSON.stringify(node));\n}\nexport function decode(data) {\n    return JSON.parse(textDecoder.decode(data));\n}\n//# sourceMappingURL=json.js.map","import * as Digest from './digest.js';\nconst DEFAULT_MIN_DIGEST_LENGTH = 20;\nexport function from({ name, code, encode, minDigestLength, maxDigestLength }) {\n    return new Hasher(name, code, encode, minDigestLength, maxDigestLength);\n}\n/**\n * Hasher represents a hashing algorithm implementation that produces as\n * `MultihashDigest`.\n */\nexport class Hasher {\n    name;\n    code;\n    encode;\n    minDigestLength;\n    maxDigestLength;\n    constructor(name, code, encode, minDigestLength, maxDigestLength) {\n        this.name = name;\n        this.code = code;\n        this.encode = encode;\n        this.minDigestLength = minDigestLength ?? DEFAULT_MIN_DIGEST_LENGTH;\n        this.maxDigestLength = maxDigestLength;\n    }\n    digest(input, options) {\n        if (options?.truncate != null) {\n            if (options.truncate < this.minDigestLength) {\n                throw new Error(`Invalid truncate option, must be greater than or equal to ${this.minDigestLength}`);\n            }\n            if (this.maxDigestLength != null && options.truncate > this.maxDigestLength) {\n                throw new Error(`Invalid truncate option, must be less than or equal to ${this.maxDigestLength}`);\n            }\n        }\n        if (input instanceof Uint8Array) {\n            const result = this.encode(input);\n            if (result instanceof Uint8Array) {\n                return createDigest(result, this.code, options?.truncate);\n            }\n            return result.then(digest => createDigest(digest, this.code, options?.truncate));\n        }\n        else {\n            throw Error('Unknown type, must be binary type');\n            /* c8 ignore next 1 */\n        }\n    }\n}\n/**\n * Create a Digest from the passed uint8array and code, optionally truncating it\n * first.\n */\nfunction createDigest(digest, code, truncate) {\n    if (truncate != null && truncate !== digest.byteLength) {\n        if (truncate > digest.byteLength) {\n            throw new Error(`Invalid truncate option, must be less than or equal to ${digest.byteLength}`);\n        }\n        digest = digest.subarray(0, truncate);\n    }\n    return Digest.create(code, digest);\n}\n//# sourceMappingURL=hasher.js.map","/* global crypto */\nimport { from } from './hasher.js';\nfunction sha(name) {\n    return async (data) => new Uint8Array(await crypto.subtle.digest(name, data));\n}\nexport const sha256 = from({\n    name: 'sha2-256',\n    code: 0x12,\n    encode: sha('SHA-256')\n});\nexport const sha512 = from({\n    name: 'sha2-512',\n    code: 0x13,\n    encode: sha('SHA-512')\n});\n//# sourceMappingURL=sha2-browser.js.map","import * as base10 from './bases/base10.js';\nimport * as base16 from './bases/base16.js';\nimport * as base2 from './bases/base2.js';\nimport * as base256emoji from './bases/base256emoji.js';\nimport * as base32 from './bases/base32.js';\nimport * as base36 from './bases/base36.js';\nimport * as base58 from './bases/base58.js';\nimport * as base64 from './bases/base64.js';\nimport * as base8 from './bases/base8.js';\nimport * as identityBase from './bases/identity.js';\nimport * as json from './codecs/json.js';\nimport * as raw from './codecs/raw.js';\nimport * as identity from './hashes/identity.js';\nimport * as sha2 from './hashes/sha2.js';\nimport { CID, hasher, digest, varint, bytes } from './index.js';\nexport const bases = { ...identityBase, ...base2, ...base8, ...base10, ...base16, ...base32, ...base36, ...base58, ...base64, ...base256emoji };\nexport const hashes = { ...sha2, ...identity };\nexport const codecs = { raw, json };\nexport { CID, hasher, digest, varint, bytes };\n//# sourceMappingURL=basics.js.map","import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '#alloc';\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: {\n            decode\n        }\n    };\n}\nconst string = createCodec('utf8', 'u', (buf) => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, (str) => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', (buf) => {\n    let string = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        string += String.fromCharCode(buf[i]);\n    }\n    return string;\n}, (str) => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = {\n    utf8: string,\n    'utf-8': string,\n    hex: bases.base16,\n    latin1: ascii,\n    ascii,\n    binary: ascii,\n    ...bases\n};\nexport default BASES;\n//# sourceMappingURL=bases.js.map","import bases, {} from './util/bases.js';\n/**\n * Create a `Uint8Array` from the passed string\n *\n * Supports `utf8`, `utf-8`, `hex`, and any encoding supported by the multiformats module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nexport function fromString(string, encoding = 'utf8') {\n    const base = bases[encoding];\n    if (base == null) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    // add multibase prefix\n    return base.decoder.decode(`${base.prefix}${string}`); // eslint-disable-line @typescript-eslint/restrict-template-expressions\n}\n//# sourceMappingURL=from-string.js.map","import bases, {} from './util/bases.js';\n/**\n * Turns a `Uint8Array` into a string.\n *\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nexport function toString(array, encoding = 'utf8') {\n    const base = bases[encoding];\n    if (base == null) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    // strip multibase prefix\n    return base.encoder.encode(array).substring(1);\n}\n//# sourceMappingURL=to-string.js.map","import { Uint8ArrayList } from 'uint8arraylist';\nconst TAG_MASK = parseInt('11111', 2);\nconst LONG_LENGTH_MASK = parseInt('10000000', 2);\nconst LONG_LENGTH_BYTES_MASK = parseInt('01111111', 2);\nconst decoders = {\n    0x0: readSequence,\n    0x1: readSequence,\n    0x2: readInteger,\n    0x3: readBitString,\n    0x4: readOctetString,\n    0x5: readNull,\n    0x6: readObjectIdentifier,\n    0x10: readSequence,\n    0x16: readSequence,\n    0x30: readSequence\n};\nexport function decodeDer(buf, context = { offset: 0 }) {\n    const tag = buf[context.offset] & TAG_MASK;\n    context.offset++;\n    if (decoders[tag] != null) {\n        return decoders[tag](buf, context);\n    }\n    throw new Error('No decoder for tag ' + tag);\n}\nfunction readLength(buf, context) {\n    let length = 0;\n    if ((buf[context.offset] & LONG_LENGTH_MASK) === LONG_LENGTH_MASK) {\n        // long length\n        const count = buf[context.offset] & LONG_LENGTH_BYTES_MASK;\n        let str = '0x';\n        context.offset++;\n        for (let i = 0; i < count; i++, context.offset++) {\n            str += buf[context.offset].toString(16).padStart(2, '0');\n        }\n        length = parseInt(str, 16);\n    }\n    else {\n        length = buf[context.offset];\n        context.offset++;\n    }\n    return length;\n}\nfunction readSequence(buf, context) {\n    readLength(buf, context);\n    const entries = [];\n    while (true) {\n        if (context.offset >= buf.byteLength) {\n            break;\n        }\n        const result = decodeDer(buf, context);\n        if (result === null) {\n            break;\n        }\n        entries.push(result);\n    }\n    return entries;\n}\nfunction readInteger(buf, context) {\n    const length = readLength(buf, context);\n    const start = context.offset;\n    const end = context.offset + length;\n    const vals = [];\n    for (let i = start; i < end; i++) {\n        if (i === start && buf[i] === 0) {\n            continue;\n        }\n        vals.push(buf[i]);\n    }\n    context.offset += length;\n    return Uint8Array.from(vals);\n}\nfunction readObjectIdentifier(buf, context) {\n    const count = readLength(buf, context);\n    const finalOffset = context.offset + count;\n    const byte = buf[context.offset];\n    context.offset++;\n    let val1 = 0;\n    let val2 = 0;\n    if (byte < 40) {\n        val1 = 0;\n        val2 = byte;\n    }\n    else if (byte < 80) {\n        val1 = 1;\n        val2 = byte - 40;\n    }\n    else {\n        val1 = 2;\n        val2 = byte - 80;\n    }\n    let oid = `${val1}.${val2}`;\n    let num = [];\n    while (context.offset < finalOffset) {\n        const byte = buf[context.offset];\n        context.offset++;\n        // remove msb\n        num.push(byte & 0b01111111);\n        if (byte < 128) {\n            num.reverse();\n            // reached the end of the encoding\n            let val = 0;\n            for (let i = 0; i < num.length; i++) {\n                val += num[i] << (i * 7);\n            }\n            oid += `.${val}`;\n            num = [];\n        }\n    }\n    return oid;\n}\nfunction readNull(buf, context) {\n    context.offset++;\n    return null;\n}\nfunction readBitString(buf, context) {\n    const length = readLength(buf, context);\n    const unusedBits = buf[context.offset];\n    context.offset++;\n    const bytes = buf.subarray(context.offset, context.offset + length - 1);\n    context.offset += length;\n    if (unusedBits !== 0) {\n        // need to shift all bytes along by this many bits\n        throw new Error('Unused bits in bit string is unimplemented');\n    }\n    return bytes;\n}\nfunction readOctetString(buf, context) {\n    const length = readLength(buf, context);\n    const bytes = buf.subarray(context.offset, context.offset + length);\n    context.offset += length;\n    return bytes;\n}\nfunction encodeNumber(value) {\n    let number = value.toString(16);\n    if (number.length % 2 === 1) {\n        number = '0' + number;\n    }\n    const array = new Uint8ArrayList();\n    for (let i = 0; i < number.length; i += 2) {\n        array.append(Uint8Array.from([parseInt(`${number[i]}${number[i + 1]}`, 16)]));\n    }\n    return array;\n}\nfunction encodeLength(bytes) {\n    if (bytes.byteLength < 128) {\n        return Uint8Array.from([bytes.byteLength]);\n    }\n    // long length\n    const length = encodeNumber(bytes.byteLength);\n    return new Uint8ArrayList(Uint8Array.from([\n        length.byteLength | LONG_LENGTH_MASK\n    ]), length);\n}\nexport function encodeInteger(value) {\n    const contents = new Uint8ArrayList();\n    const mask = 0b10000000;\n    const positive = (value.subarray()[0] & mask) === mask;\n    if (positive) {\n        contents.append(Uint8Array.from([0]));\n    }\n    contents.append(value);\n    return new Uint8ArrayList(Uint8Array.from([0x02]), encodeLength(contents), contents);\n}\nexport function encodeBitString(value) {\n    // unused bits is always 0 with full-byte-only values\n    const unusedBits = Uint8Array.from([0]);\n    const contents = new Uint8ArrayList(unusedBits, value);\n    return new Uint8ArrayList(Uint8Array.from([0x03]), encodeLength(contents), contents);\n}\nexport function encodeOctetString(value) {\n    return new Uint8ArrayList(Uint8Array.from([0x04]), encodeLength(value), value);\n}\nexport function encodeSequence(values, tag = 0x30) {\n    const output = new Uint8ArrayList();\n    for (const buf of values) {\n        output.append(buf);\n    }\n    return new Uint8ArrayList(Uint8Array.from([tag]), encodeLength(output), output);\n}\n//# sourceMappingURL=der.js.map","export const ECDSA_P_256_OID = '1.2.840.10045.3.1.7';\nexport const ECDSA_P_384_OID = '1.3.132.0.34';\nexport const ECDSA_P_521_OID = '1.3.132.0.35';\nexport async function generateECDSAKey(curve = 'P-256') {\n    const keyPair = await crypto.subtle.generateKey({\n        name: 'ECDSA',\n        namedCurve: curve\n    }, true, ['sign', 'verify']);\n    return {\n        publicKey: await crypto.subtle.exportKey('jwk', keyPair.publicKey),\n        privateKey: await crypto.subtle.exportKey('jwk', keyPair.privateKey)\n    };\n}\nexport async function hashAndSign(key, msg, options) {\n    const privateKey = await crypto.subtle.importKey('jwk', key, {\n        name: 'ECDSA',\n        namedCurve: key.crv ?? 'P-256'\n    }, false, ['sign']);\n    options?.signal?.throwIfAborted();\n    const signature = await crypto.subtle.sign({\n        name: 'ECDSA',\n        hash: {\n            name: 'SHA-256'\n        }\n    }, privateKey, msg.subarray());\n    options?.signal?.throwIfAborted();\n    return new Uint8Array(signature, 0, signature.byteLength);\n}\nexport async function hashAndVerify(key, sig, msg, options) {\n    const publicKey = await crypto.subtle.importKey('jwk', key, {\n        name: 'ECDSA',\n        namedCurve: key.crv ?? 'P-256'\n    }, false, ['verify']);\n    options?.signal?.throwIfAborted();\n    const result = await crypto.subtle.verify({\n        name: 'ECDSA',\n        hash: {\n            name: 'SHA-256'\n        }\n    }, publicKey, sig, msg.subarray());\n    options?.signal?.throwIfAborted();\n    return result;\n}\n//# sourceMappingURL=index.js.map","import { InvalidParametersError } from '@libp2p/interface';\nimport { Uint8ArrayList } from 'uint8arraylist';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { decodeDer, encodeBitString, encodeInteger, encodeOctetString, encodeSequence } from '../rsa/der.js';\nimport { ECDSAPrivateKey as ECDSAPrivateKeyClass, ECDSAPublicKey as ECDSAPublicKeyClass } from './ecdsa.js';\nimport { generateECDSAKey } from './index.js';\n// 1.2.840.10045.3.1.7 prime256v1 (ANSI X9.62 named elliptic curve)\nconst OID_256 = Uint8Array.from([0x06, 0x08, 0x2A, 0x86, 0x48, 0xCE, 0x3D, 0x03, 0x01, 0x07]);\n// 1.3.132.0.34 secp384r1 (SECG (Certicom) named elliptic curve)\nconst OID_384 = Uint8Array.from([0x06, 0x05, 0x2B, 0x81, 0x04, 0x00, 0x22]);\n// 1.3.132.0.35 secp521r1 (SECG (Certicom) named elliptic curve)\nconst OID_521 = Uint8Array.from([0x06, 0x05, 0x2B, 0x81, 0x04, 0x00, 0x23]);\nconst P_256_KEY_JWK = {\n    ext: true,\n    kty: 'EC',\n    crv: 'P-256'\n};\nconst P_384_KEY_JWK = {\n    ext: true,\n    kty: 'EC',\n    crv: 'P-384'\n};\nconst P_521_KEY_JWK = {\n    ext: true,\n    kty: 'EC',\n    crv: 'P-521'\n};\nconst P_256_KEY_LENGTH = 32;\nconst P_384_KEY_LENGTH = 48;\nconst P_521_KEY_LENGTH = 66;\nexport function unmarshalECDSAPrivateKey(bytes) {\n    const message = decodeDer(bytes);\n    return pkiMessageToECDSAPrivateKey(message);\n}\nexport function pkiMessageToECDSAPrivateKey(message) {\n    const privateKey = message[1];\n    const d = uint8ArrayToString(privateKey, 'base64url');\n    const coordinates = message[2][1][0];\n    const offset = 1;\n    let x;\n    let y;\n    if (privateKey.byteLength === P_256_KEY_LENGTH) {\n        x = uint8ArrayToString(coordinates.subarray(offset, offset + P_256_KEY_LENGTH), 'base64url');\n        y = uint8ArrayToString(coordinates.subarray(offset + P_256_KEY_LENGTH), 'base64url');\n        return new ECDSAPrivateKeyClass({\n            ...P_256_KEY_JWK,\n            key_ops: ['sign'],\n            d,\n            x,\n            y\n        });\n    }\n    if (privateKey.byteLength === P_384_KEY_LENGTH) {\n        x = uint8ArrayToString(coordinates.subarray(offset, offset + P_384_KEY_LENGTH), 'base64url');\n        y = uint8ArrayToString(coordinates.subarray(offset + P_384_KEY_LENGTH), 'base64url');\n        return new ECDSAPrivateKeyClass({\n            ...P_384_KEY_JWK,\n            key_ops: ['sign'],\n            d,\n            x,\n            y\n        });\n    }\n    if (privateKey.byteLength === P_521_KEY_LENGTH) {\n        x = uint8ArrayToString(coordinates.subarray(offset, offset + P_521_KEY_LENGTH), 'base64url');\n        y = uint8ArrayToString(coordinates.subarray(offset + P_521_KEY_LENGTH), 'base64url');\n        return new ECDSAPrivateKeyClass({\n            ...P_521_KEY_JWK,\n            key_ops: ['sign'],\n            d,\n            x,\n            y\n        });\n    }\n    throw new InvalidParametersError(`Private key length was wrong length, got ${privateKey.byteLength}, expected 32, 48 or 66`);\n}\nexport function unmarshalECDSAPublicKey(bytes) {\n    const message = decodeDer(bytes);\n    return pkiMessageToECDSAPublicKey(message);\n}\nexport function pkiMessageToECDSAPublicKey(message) {\n    const coordinates = message[1][1][0];\n    const offset = 1;\n    let x;\n    let y;\n    if (coordinates.byteLength === ((P_256_KEY_LENGTH * 2) + 1)) {\n        x = uint8ArrayToString(coordinates.subarray(offset, offset + P_256_KEY_LENGTH), 'base64url');\n        y = uint8ArrayToString(coordinates.subarray(offset + P_256_KEY_LENGTH), 'base64url');\n        return new ECDSAPublicKeyClass({\n            ...P_256_KEY_JWK,\n            key_ops: ['verify'],\n            x,\n            y\n        });\n    }\n    if (coordinates.byteLength === ((P_384_KEY_LENGTH * 2) + 1)) {\n        x = uint8ArrayToString(coordinates.subarray(offset, offset + P_384_KEY_LENGTH), 'base64url');\n        y = uint8ArrayToString(coordinates.subarray(offset + P_384_KEY_LENGTH), 'base64url');\n        return new ECDSAPublicKeyClass({\n            ...P_384_KEY_JWK,\n            key_ops: ['verify'],\n            x,\n            y\n        });\n    }\n    if (coordinates.byteLength === ((P_521_KEY_LENGTH * 2) + 1)) {\n        x = uint8ArrayToString(coordinates.subarray(offset, offset + P_521_KEY_LENGTH), 'base64url');\n        y = uint8ArrayToString(coordinates.subarray(offset + P_521_KEY_LENGTH), 'base64url');\n        return new ECDSAPublicKeyClass({\n            ...P_521_KEY_JWK,\n            key_ops: ['verify'],\n            x,\n            y\n        });\n    }\n    throw new InvalidParametersError(`coordinates were wrong length, got ${coordinates.byteLength}, expected 65, 97 or 133`);\n}\nexport function privateKeyToPKIMessage(privateKey) {\n    return encodeSequence([\n        encodeInteger(Uint8Array.from([1])), // header\n        encodeOctetString(uint8ArrayFromString(privateKey.d ?? '', 'base64url')), // body\n        encodeSequence([\n            getOID(privateKey.crv)\n        ], 0xA0),\n        encodeSequence([\n            encodeBitString(new Uint8ArrayList(Uint8Array.from([0x04]), uint8ArrayFromString(privateKey.x ?? '', 'base64url'), uint8ArrayFromString(privateKey.y ?? '', 'base64url')))\n        ], 0xA1)\n    ]).subarray();\n}\nexport function publicKeyToPKIMessage(publicKey) {\n    return encodeSequence([\n        encodeInteger(Uint8Array.from([1])), // header\n        encodeSequence([\n            getOID(publicKey.crv)\n        ], 0xA0),\n        encodeSequence([\n            encodeBitString(new Uint8ArrayList(Uint8Array.from([0x04]), uint8ArrayFromString(publicKey.x ?? '', 'base64url'), uint8ArrayFromString(publicKey.y ?? '', 'base64url')))\n        ], 0xA1)\n    ]).subarray();\n}\nfunction getOID(curve) {\n    if (curve === 'P-256') {\n        return OID_256;\n    }\n    if (curve === 'P-384') {\n        return OID_384;\n    }\n    if (curve === 'P-521') {\n        return OID_521;\n    }\n    throw new InvalidParametersError(`Invalid curve ${curve}`);\n}\nexport async function generateECDSAKeyPair(curve = 'P-256') {\n    const key = await generateECDSAKey(curve);\n    return new ECDSAPrivateKeyClass(key.privateKey);\n}\nexport function ensureECDSAKey(key, length) {\n    key = Uint8Array.from(key ?? []);\n    if (key.length !== length) {\n        throw new InvalidParametersError(`Key must be a Uint8Array of length ${length}, got ${key.length}`);\n    }\n    return key;\n}\n//# sourceMappingURL=utils.js.map","import { base58btc } from 'multiformats/bases/base58';\nimport { CID } from 'multiformats/cid';\nimport { identity } from 'multiformats/hashes/identity';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport { publicKeyToProtobuf } from '../index.js';\nimport { privateKeyToPKIMessage, publicKeyToPKIMessage } from './utils.js';\nimport { hashAndVerify, hashAndSign } from './index.js';\nexport class ECDSAPublicKey {\n    type = 'ECDSA';\n    jwk;\n    _raw;\n    constructor(jwk) {\n        this.jwk = jwk;\n    }\n    get raw() {\n        if (this._raw == null) {\n            this._raw = publicKeyToPKIMessage(this.jwk);\n        }\n        return this._raw;\n    }\n    toMultihash() {\n        return identity.digest(publicKeyToProtobuf(this));\n    }\n    toCID() {\n        return CID.createV1(114, this.toMultihash());\n    }\n    toString() {\n        return base58btc.encode(this.toMultihash().bytes).substring(1);\n    }\n    equals(key) {\n        if (key == null || !(key.raw instanceof Uint8Array)) {\n            return false;\n        }\n        return uint8ArrayEquals(this.raw, key.raw);\n    }\n    async verify(data, sig, options) {\n        return hashAndVerify(this.jwk, sig, data, options);\n    }\n}\nexport class ECDSAPrivateKey {\n    type = 'ECDSA';\n    jwk;\n    publicKey;\n    _raw;\n    constructor(jwk) {\n        this.jwk = jwk;\n        this.publicKey = new ECDSAPublicKey({\n            crv: jwk.crv,\n            ext: jwk.ext,\n            key_ops: ['verify'],\n            kty: 'EC',\n            x: jwk.x,\n            y: jwk.y\n        });\n    }\n    get raw() {\n        if (this._raw == null) {\n            this._raw = privateKeyToPKIMessage(this.jwk);\n        }\n        return this._raw;\n    }\n    equals(key) {\n        if (key == null || !(key.raw instanceof Uint8Array)) {\n            return false;\n        }\n        return uint8ArrayEquals(this.raw, key.raw);\n    }\n    async sign(message, options) {\n        return hashAndSign(this.jwk, message, options);\n    }\n}\n//# sourceMappingURL=ecdsa.js.map","/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */\nexport function isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n/** Asserts something is positive integer. */\nexport function anumber(n, title = '') {\n    if (!Number.isSafeInteger(n) || n < 0) {\n        const prefix = title && `\"${title}\" `;\n        throw new Error(`${prefix}expected integer >= 0, got ${n}`);\n    }\n}\n/** Asserts something is Uint8Array. */\nexport function abytes(value, length, title = '') {\n    const bytes = isBytes(value);\n    const len = value?.length;\n    const needsLen = length !== undefined;\n    if (!bytes || (needsLen && len !== length)) {\n        const prefix = title && `\"${title}\" `;\n        const ofLen = needsLen ? ` of length ${length}` : '';\n        const got = bytes ? `length=${len}` : `type=${typeof value}`;\n        throw new Error(prefix + 'expected Uint8Array' + ofLen + ', got ' + got);\n    }\n    return value;\n}\n/** Asserts something is hash */\nexport function ahash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash must wrapped by utils.createHasher');\n    anumber(h.outputLen);\n    anumber(h.blockLen);\n}\n/** Asserts a hash instance has not been destroyed / finished */\nexport function aexists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\n/** Asserts output is properly-sized byte array */\nexport function aoutput(out, instance) {\n    abytes(out, undefined, 'digestInto() output');\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error('\"digestInto() output\" expected to be of length >=' + min);\n    }\n}\n/** Cast u8 / u16 / u32 to u8. */\nexport function u8(arr) {\n    return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** Cast u8 / u16 / u32 to u32. */\nexport function u32(arr) {\n    return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n/** Zeroize a byte array. Warning: JS provides no guarantees. */\nexport function clean(...arrays) {\n    for (let i = 0; i < arrays.length; i++) {\n        arrays[i].fill(0);\n    }\n}\n/** Create DataView of an array for easy byte-level manipulation. */\nexport function createView(arr) {\n    return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** The rotate right (circular right shift) operation for uint32 */\nexport function rotr(word, shift) {\n    return (word << (32 - shift)) | (word >>> shift);\n}\n/** The rotate left (circular left shift) operation for uint32 */\nexport function rotl(word, shift) {\n    return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE = /* @__PURE__ */ (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n/** The byte swap operation for uint32 */\nexport function byteSwap(word) {\n    return (((word << 24) & 0xff000000) |\n        ((word << 8) & 0xff0000) |\n        ((word >>> 8) & 0xff00) |\n        ((word >>> 24) & 0xff));\n}\n/** Conditionally byte swap if on a big-endian platform */\nexport const swap8IfBE = isLE\n    ? (n) => n\n    : (n) => byteSwap(n);\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n    return arr;\n}\nexport const swap32IfBE = isLE\n    ? (u) => u\n    : byteSwap32;\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin = /* @__PURE__ */ (() => \n// @ts-ignore\ntypeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function')();\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // @ts-ignore\n    if (hasHexBuiltin)\n        return bytes.toHex();\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // @ts-ignore\n    if (hasHexBuiltin)\n        return Uint8Array.fromHex(hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nexport const nextTick = async () => { };\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * Converts string to bytes using UTF8 encoding.\n * Built-in doesn't validate input to be string: we do the check.\n * @example utf8ToBytes('abc') // Uint8Array.from([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('string expected');\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Helper for KDFs: consumes uint8array or string.\n * When string is passed, does utf8 decoding, using TextDecoder.\n */\nexport function kdfInputToBytes(data, errorTitle = '') {\n    if (typeof data === 'string')\n        return utf8ToBytes(data);\n    return abytes(data, undefined, errorTitle);\n}\n/** Copies several Uint8Arrays into one. */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n/** Merges default options and passed options. */\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n        throw new Error('options must be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\n/** Creates function with outputLen, blockLen, create properties from a class constructor. */\nexport function createHasher(hashCons, info = {}) {\n    const hashC = (msg, opts) => hashCons(opts).update(msg).digest();\n    const tmp = hashCons(undefined);\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    Object.assign(hashC, info);\n    return Object.freeze(hashC);\n}\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32) {\n    const cr = typeof globalThis === 'object' ? globalThis.crypto : null;\n    if (typeof cr?.getRandomValues !== 'function')\n        throw new Error('crypto.getRandomValues must be defined');\n    return cr.getRandomValues(new Uint8Array(bytesLength));\n}\n/** Creates OID opts for NIST hashes, with prefix 06 09 60 86 48 01 65 03 04 02. */\nexport const oidNist = (suffix) => ({\n    oid: Uint8Array.from([0x06, 0x09, 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, suffix]),\n});\n//# sourceMappingURL=utils.js.map","/**\n * Internal Merkle-Damgard hash utils.\n * @module\n */\nimport { abytes, aexists, aoutput, clean, createView } from \"./utils.js\";\n/** Choice: a ? b : c */\nexport function Chi(a, b, c) {\n    return (a & b) ^ (~a & c);\n}\n/** Majority function, true if any two inputs is true. */\nexport function Maj(a, b, c) {\n    return (a & b) ^ (a & c) ^ (b & c);\n}\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD {\n    blockLen;\n    outputLen;\n    padOffset;\n    isLE;\n    // For partial updates less than block size\n    buffer;\n    view;\n    finished = false;\n    length = 0;\n    pos = 0;\n    destroyed = false;\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        aexists(this);\n        abytes(data);\n        const { view, buffer, blockLen } = this;\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        aoutput(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        clean(this.buffer.subarray(pos));\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        view.setBigUint64(blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which must be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen must be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to ||= new this.constructor();\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.destroyed = destroyed;\n        to.finished = finished;\n        to.length = length;\n        to.pos = pos;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n    clone() {\n        return this._cloneInto();\n    }\n}\n/**\n * Initial SHA-2 state: fractional parts of square roots of first 16 primes 2..53.\n * Check out `test/misc/sha2-gen-iv.js` for recomputation guide.\n */\n/** Initial SHA256 state. Bits 0..32 of frac part of sqrt of primes 2..19 */\nexport const SHA256_IV = /* @__PURE__ */ Uint32Array.from([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19,\n]);\n/** Initial SHA224 state. Bits 32..64 of frac part of sqrt of primes 23..53 */\nexport const SHA224_IV = /* @__PURE__ */ Uint32Array.from([\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4,\n]);\n/** Initial SHA384 state. Bits 0..64 of frac part of sqrt of primes 23..53 */\nexport const SHA384_IV = /* @__PURE__ */ Uint32Array.from([\n    0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4,\n]);\n/** Initial SHA512 state. Bits 0..64 of frac part of sqrt of primes 2..19 */\nexport const SHA512_IV = /* @__PURE__ */ Uint32Array.from([\n    0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179,\n]);\n//# sourceMappingURL=_md.js.map","/**\n * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.\n * @todo re-check https://issues.chromium.org/issues/42212588\n * @module\n */\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    const len = lst.length;\n    let Ah = new Uint32Array(len);\n    let Al = new Uint32Array(len);\n    for (let i = 0; i < len; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { add, add3H, add3L, add4H, add4L, add5H, add5L, fromBig, rotlBH, rotlBL, rotlSH, rotlSL, rotr32H, rotr32L, rotrBH, rotrBL, rotrSH, rotrSL, shrSH, shrSL, split, toBig };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","/**\n * SHA2 hash function. A.k.a. sha256, sha384, sha512, sha512_224, sha512_256.\n * SHA256 is the fastest hash implementable in JS, even faster than Blake3.\n * Check out [RFC 4634](https://www.rfc-editor.org/rfc/rfc4634) and\n * [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n */\nimport { Chi, HashMD, Maj, SHA224_IV, SHA256_IV, SHA384_IV, SHA512_IV } from \"./_md.js\";\nimport * as u64 from \"./_u64.js\";\nimport { clean, createHasher, oidNist, rotr } from \"./utils.js\";\n/**\n * Round constants:\n * First 32 bits of fractional parts of the cube roots of the first 64 primes 2..311)\n */\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ Uint32Array.from([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n/** Reusable temporary buffer. \"W\" comes straight from spec. */\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\n/** Internal 32-byte base SHA2 hash class. */\nclass SHA2_32B extends HashMD {\n    constructor(outputLen) {\n        super(64, outputLen, 8, false);\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        clean(SHA256_W);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        clean(this.buffer);\n    }\n}\n/** Internal SHA2-256 hash class. */\nexport class _SHA256 extends SHA2_32B {\n    // We cannot use array here since array allows indexing by variable\n    // which means optimizer/compiler cannot use registers.\n    A = SHA256_IV[0] | 0;\n    B = SHA256_IV[1] | 0;\n    C = SHA256_IV[2] | 0;\n    D = SHA256_IV[3] | 0;\n    E = SHA256_IV[4] | 0;\n    F = SHA256_IV[5] | 0;\n    G = SHA256_IV[6] | 0;\n    H = SHA256_IV[7] | 0;\n    constructor() {\n        super(32);\n    }\n}\n/** Internal SHA2-224 hash class. */\nexport class _SHA224 extends SHA2_32B {\n    A = SHA224_IV[0] | 0;\n    B = SHA224_IV[1] | 0;\n    C = SHA224_IV[2] | 0;\n    D = SHA224_IV[3] | 0;\n    E = SHA224_IV[4] | 0;\n    F = SHA224_IV[5] | 0;\n    G = SHA224_IV[6] | 0;\n    H = SHA224_IV[7] | 0;\n    constructor() {\n        super(28);\n    }\n}\n// SHA2-512 is slower than sha256 in js because u64 operations are slow.\n// Round contants\n// First 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409\n// prettier-ignore\nconst K512 = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\nconst SHA512_Kh = /* @__PURE__ */ (() => K512[0])();\nconst SHA512_Kl = /* @__PURE__ */ (() => K512[1])();\n// Reusable temporary buffers\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\n/** Internal 64-byte base SHA2 hash class. */\nclass SHA2_64B extends HashMD {\n    constructor(outputLen) {\n        super(128, outputLen, 16, false);\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        clean(SHA512_W_H, SHA512_W_L);\n    }\n    destroy() {\n        clean(this.buffer);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\n/** Internal SHA2-512 hash class. */\nexport class _SHA512 extends SHA2_64B {\n    Ah = SHA512_IV[0] | 0;\n    Al = SHA512_IV[1] | 0;\n    Bh = SHA512_IV[2] | 0;\n    Bl = SHA512_IV[3] | 0;\n    Ch = SHA512_IV[4] | 0;\n    Cl = SHA512_IV[5] | 0;\n    Dh = SHA512_IV[6] | 0;\n    Dl = SHA512_IV[7] | 0;\n    Eh = SHA512_IV[8] | 0;\n    El = SHA512_IV[9] | 0;\n    Fh = SHA512_IV[10] | 0;\n    Fl = SHA512_IV[11] | 0;\n    Gh = SHA512_IV[12] | 0;\n    Gl = SHA512_IV[13] | 0;\n    Hh = SHA512_IV[14] | 0;\n    Hl = SHA512_IV[15] | 0;\n    constructor() {\n        super(64);\n    }\n}\n/** Internal SHA2-384 hash class. */\nexport class _SHA384 extends SHA2_64B {\n    Ah = SHA384_IV[0] | 0;\n    Al = SHA384_IV[1] | 0;\n    Bh = SHA384_IV[2] | 0;\n    Bl = SHA384_IV[3] | 0;\n    Ch = SHA384_IV[4] | 0;\n    Cl = SHA384_IV[5] | 0;\n    Dh = SHA384_IV[6] | 0;\n    Dl = SHA384_IV[7] | 0;\n    Eh = SHA384_IV[8] | 0;\n    El = SHA384_IV[9] | 0;\n    Fh = SHA384_IV[10] | 0;\n    Fl = SHA384_IV[11] | 0;\n    Gh = SHA384_IV[12] | 0;\n    Gl = SHA384_IV[13] | 0;\n    Hh = SHA384_IV[14] | 0;\n    Hl = SHA384_IV[15] | 0;\n    constructor() {\n        super(48);\n    }\n}\n/**\n * Truncated SHA512/256 and SHA512/224.\n * SHA512_IV is XORed with 0xa5a5a5a5a5a5a5a5, then used as \"intermediary\" IV of SHA512/t.\n * Then t hashes string to produce result IV.\n * See `test/misc/sha2-gen-iv.js`.\n */\n/** SHA512/224 IV */\nconst T224_IV = /* @__PURE__ */ Uint32Array.from([\n    0x8c3d37c8, 0x19544da2, 0x73e19966, 0x89dcd4d6, 0x1dfab7ae, 0x32ff9c82, 0x679dd514, 0x582f9fcf,\n    0x0f6d2b69, 0x7bd44da8, 0x77e36f73, 0x04c48942, 0x3f9d85a8, 0x6a1d36c8, 0x1112e6ad, 0x91d692a1,\n]);\n/** SHA512/256 IV */\nconst T256_IV = /* @__PURE__ */ Uint32Array.from([\n    0x22312194, 0xfc2bf72c, 0x9f555fa3, 0xc84c64c2, 0x2393b86b, 0x6f53b151, 0x96387719, 0x5940eabd,\n    0x96283ee2, 0xa88effe3, 0xbe5e1e25, 0x53863992, 0x2b0199fc, 0x2c85b8aa, 0x0eb72ddc, 0x81c52ca2,\n]);\n/** Internal SHA2-512/224 hash class. */\nexport class _SHA512_224 extends SHA2_64B {\n    Ah = T224_IV[0] | 0;\n    Al = T224_IV[1] | 0;\n    Bh = T224_IV[2] | 0;\n    Bl = T224_IV[3] | 0;\n    Ch = T224_IV[4] | 0;\n    Cl = T224_IV[5] | 0;\n    Dh = T224_IV[6] | 0;\n    Dl = T224_IV[7] | 0;\n    Eh = T224_IV[8] | 0;\n    El = T224_IV[9] | 0;\n    Fh = T224_IV[10] | 0;\n    Fl = T224_IV[11] | 0;\n    Gh = T224_IV[12] | 0;\n    Gl = T224_IV[13] | 0;\n    Hh = T224_IV[14] | 0;\n    Hl = T224_IV[15] | 0;\n    constructor() {\n        super(28);\n    }\n}\n/** Internal SHA2-512/256 hash class. */\nexport class _SHA512_256 extends SHA2_64B {\n    Ah = T256_IV[0] | 0;\n    Al = T256_IV[1] | 0;\n    Bh = T256_IV[2] | 0;\n    Bl = T256_IV[3] | 0;\n    Ch = T256_IV[4] | 0;\n    Cl = T256_IV[5] | 0;\n    Dh = T256_IV[6] | 0;\n    Dl = T256_IV[7] | 0;\n    Eh = T256_IV[8] | 0;\n    El = T256_IV[9] | 0;\n    Fh = T256_IV[10] | 0;\n    Fl = T256_IV[11] | 0;\n    Gh = T256_IV[12] | 0;\n    Gl = T256_IV[13] | 0;\n    Hh = T256_IV[14] | 0;\n    Hl = T256_IV[15] | 0;\n    constructor() {\n        super(32);\n    }\n}\n/**\n * SHA2-256 hash function from RFC 4634. In JS it's the fastest: even faster than Blake3. Some info:\n *\n * - Trying 2^128 hashes would get 50% chance of collision, using birthday attack.\n * - BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n * - Each sha256 hash is executing 2^18 bit operations.\n * - Good 2024 ASICs can do 200Th/sec with 3500 watts of power, corresponding to 2^36 hashes/joule.\n */\nexport const sha256 = /* @__PURE__ */ createHasher(() => new _SHA256(), \n/* @__PURE__ */ oidNist(0x01));\n/** SHA2-224 hash function from RFC 4634 */\nexport const sha224 = /* @__PURE__ */ createHasher(() => new _SHA224(), \n/* @__PURE__ */ oidNist(0x04));\n/** SHA2-512 hash function from RFC 4634. */\nexport const sha512 = /* @__PURE__ */ createHasher(() => new _SHA512(), \n/* @__PURE__ */ oidNist(0x03));\n/** SHA2-384 hash function from RFC 4634. */\nexport const sha384 = /* @__PURE__ */ createHasher(() => new _SHA384(), \n/* @__PURE__ */ oidNist(0x02));\n/**\n * SHA2-512/256 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_256 = /* @__PURE__ */ createHasher(() => new _SHA512_256(), \n/* @__PURE__ */ oidNist(0x06));\n/**\n * SHA2-512/224 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_224 = /* @__PURE__ */ createHasher(() => new _SHA512_224(), \n/* @__PURE__ */ oidNist(0x05));\n//# sourceMappingURL=sha2.js.map","/**\n * Hex, bytes and number utilities.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { abytes as abytes_, anumber, bytesToHex as bytesToHex_, concatBytes as concatBytes_, hexToBytes as hexToBytes_, } from '@noble/hashes/utils.js';\nexport { abytes, anumber, bytesToHex, concatBytes, hexToBytes, isBytes, randomBytes, } from '@noble/hashes/utils.js';\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nexport function abool(value, title = '') {\n    if (typeof value !== 'boolean') {\n        const prefix = title && `\"${title}\" `;\n        throw new Error(prefix + 'expected boolean, got type=' + typeof value);\n    }\n    return value;\n}\n// Used in weierstrass, der\nfunction abignumber(n) {\n    if (typeof n === 'bigint') {\n        if (!isPosBig(n))\n            throw new Error('positive bigint expected, got ' + n);\n    }\n    else\n        anumber(n);\n    return n;\n}\nexport function asafenumber(value, title = '') {\n    if (!Number.isSafeInteger(value)) {\n        const prefix = title && `\"${title}\" `;\n        throw new Error(prefix + 'expected safe integer, got type=' + typeof value);\n    }\n}\nexport function numberToHexUnpadded(num) {\n    const hex = abignumber(num).toString(16);\n    return hex.length & 1 ? '0' + hex : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    return hex === '' ? _0n : BigInt('0x' + hex); // Big Endian\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex_(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    return hexToNumber(bytesToHex_(copyBytes(abytes_(bytes)).reverse()));\n}\nexport function numberToBytesBE(n, len) {\n    anumber(len);\n    n = abignumber(n);\n    const res = hexToBytes_(n.toString(16).padStart(len * 2, '0'));\n    if (res.length !== len)\n        throw new Error('number too large');\n    return res;\n}\nexport function numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n) {\n    return hexToBytes_(numberToHexUnpadded(abignumber(n)));\n}\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n/**\n * Copies Uint8Array. We can't use u8a.slice(), because u8a can be Buffer,\n * and Buffer#slice creates mutable copy. Never use Buffers!\n */\nexport function copyBytes(bytes) {\n    return Uint8Array.from(bytes);\n}\n/**\n * Decodes 7-bit ASCII string to Uint8Array, throws on non-ascii symbols\n * Should be safe to use for things expected to be ASCII.\n * Returns exact same result as `TextEncoder` for ASCII or throws.\n */\nexport function asciiToBytes(ascii) {\n    return Uint8Array.from(ascii, (c, i) => {\n        const charCode = c.charCodeAt(0);\n        if (c.length !== 1 || charCode > 127) {\n            throw new Error(`string contains non-ASCII character \"${ascii[i]}\" with code ${charCode} at position ${i}`);\n        }\n        return charCode;\n    });\n}\n// Is positive bigint\nconst isPosBig = (n) => typeof n === 'bigint' && _0n <= n;\nexport function inRange(n, min, max) {\n    return isPosBig(n) && isPosBig(min) && isPosBig(max) && min <= n && n < max;\n}\n/**\n * Asserts min <= n < max. NOTE: It's < max and not <= max.\n * @example\n * aInRange('x', x, 1n, 256n); // would assume x is in (1n..255n)\n */\nexport function aInRange(title, n, min, max) {\n    // Why min <= n < max and not a (min < n < max) OR b (min <= n <= max)?\n    // consider P=256n, min=0n, max=P\n    // - a for min=0 would require -1:          `inRange('x', x, -1n, P)`\n    // - b would commonly require subtraction:  `inRange('x', x, 0n, P - 1n)`\n    // - our way is the cleanest:               `inRange('x', x, 0n, P)\n    if (!inRange(n, min, max))\n        throw new Error('expected valid ' + title + ': ' + min + ' <= n < ' + max + ', got ' + n);\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n * TODO: merge with nLength in modular\n */\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nexport function bitSet(n, pos, value) {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n) => (_1n << BigInt(n)) - _1n;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    anumber(hashLen, 'hashLen');\n    anumber(qByteLen, 'qByteLen');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    const u8n = (len) => new Uint8Array(len); // creates Uint8Array\n    const NULL = Uint8Array.of();\n    const byte0 = Uint8Array.of(0x00);\n    const byte1 = Uint8Array.of(0x01);\n    const _maxDrbgIters = 1000;\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...msgs) => hmacFn(k, concatBytes_(v, ...msgs)); // hmac(k)(v, ...values)\n    const reseed = (seed = NULL) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(byte0, seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(byte1, seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= _maxDrbgIters)\n            throw new Error('drbg: tried max amount of iterations');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes_(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\nexport function validateObject(object, fields = {}, optFields = {}) {\n    if (!object || typeof object !== 'object')\n        throw new Error('expected valid options object');\n    function checkField(fieldName, expectedType, isOpt) {\n        const val = object[fieldName];\n        if (isOpt && val === undefined)\n            return;\n        const current = typeof val;\n        if (current !== expectedType || val === null)\n            throw new Error(`param \"${fieldName}\" is invalid: expected ${expectedType}, got ${current}`);\n    }\n    const iter = (f, isOpt) => Object.entries(f).forEach(([k, v]) => checkField(k, v, isOpt));\n    iter(fields, false);\n    iter(optFields, true);\n}\n/**\n * throws not implemented error\n */\nexport const notImplemented = () => {\n    throw new Error('not implemented');\n};\n/**\n * Memoizes (caches) computation result.\n * Uses WeakMap: the value is going auto-cleaned by GC after last reference is removed.\n */\nexport function memoized(fn) {\n    const map = new WeakMap();\n    return (arg, ...args) => {\n        const val = map.get(arg);\n        if (val !== undefined)\n            return val;\n        const computed = fn(arg, ...args);\n        map.set(arg, computed);\n        return computed;\n    };\n}\n//# sourceMappingURL=utils.js.map","/**\n * Utils for modular division and fields.\n * Field over 11 is a finite (Galois) field is integer number operations `mod 11`.\n * There is no division: it is replaced by modular multiplicative inverse.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { abytes, anumber, bytesToNumberBE, bytesToNumberLE, numberToBytesBE, numberToBytesLE, validateObject, } from \"../utils.js\";\n// Numbers aren't used in x25519 / x448 builds\n// prettier-ignore\nconst _0n = /* @__PURE__ */ BigInt(0), _1n = /* @__PURE__ */ BigInt(1), _2n = /* @__PURE__ */ BigInt(2);\n// prettier-ignore\nconst _3n = /* @__PURE__ */ BigInt(3), _4n = /* @__PURE__ */ BigInt(4), _5n = /* @__PURE__ */ BigInt(5);\n// prettier-ignore\nconst _7n = /* @__PURE__ */ BigInt(7), _8n = /* @__PURE__ */ BigInt(8), _9n = /* @__PURE__ */ BigInt(9);\nconst _16n = /* @__PURE__ */ BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\nexport function pow(num, power, modulo) {\n    return FpPow(Field(modulo), num, power);\n}\n/** Does `x^(2^power)` mod p. `pow2(30, 4)` == `30^(2^4)` */\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n/**\n * Inverses number over modulo.\n * Implemented using [Euclidean GCD](https://brilliant.org/wiki/extended-euclidean-algorithm/).\n */\nexport function invert(number, modulo) {\n    if (number === _0n)\n        throw new Error('invert: expected non-zero number');\n    if (modulo <= _0n)\n        throw new Error('invert: expected positive modulus, got ' + modulo);\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction assertIsSquare(Fp, root, n) {\n    if (!Fp.eql(Fp.sqr(root), n))\n        throw new Error('Cannot find square root');\n}\n// Not all roots are possible! Example which will throw:\n// const NUM =\n// n = 72057594037927816n;\n// Fp = Field(BigInt('0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab'));\nfunction sqrt3mod4(Fp, n) {\n    const p1div4 = (Fp.ORDER + _1n) / _4n;\n    const root = Fp.pow(n, p1div4);\n    assertIsSquare(Fp, root, n);\n    return root;\n}\nfunction sqrt5mod8(Fp, n) {\n    const p5div8 = (Fp.ORDER - _5n) / _8n;\n    const n2 = Fp.mul(n, _2n);\n    const v = Fp.pow(n2, p5div8);\n    const nv = Fp.mul(n, v);\n    const i = Fp.mul(Fp.mul(nv, _2n), v);\n    const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n    assertIsSquare(Fp, root, n);\n    return root;\n}\n// Based on RFC9380, Kong algorithm\n// prettier-ignore\nfunction sqrt9mod16(P) {\n    const Fp_ = Field(P);\n    const tn = tonelliShanks(P);\n    const c1 = tn(Fp_, Fp_.neg(Fp_.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n    const c2 = tn(Fp_, c1); //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n    const c3 = tn(Fp_, Fp_.neg(c1)); //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n    const c4 = (P + _7n) / _16n; //  4. c4 = (q + 7) / 16        # Integer arithmetic\n    return (Fp, n) => {\n        let tv1 = Fp.pow(n, c4); //  1. tv1 = x^c4\n        let tv2 = Fp.mul(tv1, c1); //  2. tv2 = c1 * tv1\n        const tv3 = Fp.mul(tv1, c2); //  3. tv3 = c2 * tv1\n        const tv4 = Fp.mul(tv1, c3); //  4. tv4 = c3 * tv1\n        const e1 = Fp.eql(Fp.sqr(tv2), n); //  5.  e1 = (tv2^2) == x\n        const e2 = Fp.eql(Fp.sqr(tv3), n); //  6.  e2 = (tv3^2) == x\n        tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        const e3 = Fp.eql(Fp.sqr(tv2), n); //  9.  e3 = (tv2^2) == x\n        const root = Fp.cmov(tv1, tv2, e3); // 10.  z = CMOV(tv1, tv2, e3)   # Select sqrt from tv1 & tv2\n        assertIsSquare(Fp, root, n);\n        return root;\n    };\n}\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P) {\n    // Initialization (precomputation).\n    // Caching initialization could boost perf by 7%.\n    if (P < _3n)\n        throw new Error('sqrt is not defined for small field');\n    // Factor P - 1 = Q * 2^S, where Q is odd\n    let Q = P - _1n;\n    let S = 0;\n    while (Q % _2n === _0n) {\n        Q /= _2n;\n        S++;\n    }\n    // Find the first quadratic non-residue Z >= 2\n    let Z = _2n;\n    const _Fp = Field(P);\n    while (FpLegendre(_Fp, Z) === 1) {\n        // Basic primality test for P. After x iterations, chance of\n        // not finding quadratic non-residue is 2^x, so 2^1000.\n        if (Z++ > 1000)\n            throw new Error('Cannot find square root: probably non-prime P');\n    }\n    // Fast-path; usually done before Z, but we do \"primality test\".\n    if (S === 1)\n        return sqrt3mod4;\n    // Slow-path\n    // TODO: test on Fp2 and others\n    let cc = _Fp.pow(Z, Q); // c = z^Q\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        if (Fp.is0(n))\n            return n;\n        // Check if n is a quadratic residue using Legendre symbol\n        if (FpLegendre(Fp, n) !== 1)\n            throw new Error('Cannot find square root');\n        // Initialize variables for the main loop\n        let M = S;\n        let c = Fp.mul(Fp.ONE, cc); // c = z^Q, move cc from field _Fp into field Fp\n        let t = Fp.pow(n, Q); // t = n^Q, first guess at the fudge factor\n        let R = Fp.pow(n, Q1div2); // R = n^((Q+1)/2), first guess at the square root\n        // Main loop\n        // while t != 1\n        while (!Fp.eql(t, Fp.ONE)) {\n            if (Fp.is0(t))\n                return Fp.ZERO; // if t=0 return R=0\n            let i = 1;\n            // Find the smallest i >= 1 such that t^(2^i) ≡ 1 (mod P)\n            let t_tmp = Fp.sqr(t); // t^(2^1)\n            while (!Fp.eql(t_tmp, Fp.ONE)) {\n                i++;\n                t_tmp = Fp.sqr(t_tmp); // t^(2^2)...\n                if (i === M)\n                    throw new Error('Cannot find square root');\n            }\n            // Calculate the exponent for b: 2^(M - i - 1)\n            const exponent = _1n << BigInt(M - i - 1); // bigint is important\n            const b = Fp.pow(c, exponent); // b = 2^(M - i - 1)\n            // Update variables\n            M = i;\n            c = Fp.sqr(b); // c = b^2\n            t = Fp.mul(t, c); // t = (t * b^2)\n            R = Fp.mul(R, b); // R = R*b\n        }\n        return R;\n    };\n}\n/**\n * Square root for a finite field. Will try optimized versions first:\n *\n * 1. P ≡ 3 (mod 4)\n * 2. P ≡ 5 (mod 8)\n * 3. P ≡ 9 (mod 16)\n * 4. Tonelli-Shanks algorithm\n *\n * Different algorithms can give different roots, it is up to user to decide which one they want.\n * For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n */\nexport function FpSqrt(P) {\n    // P ≡ 3 (mod 4) => √n = n^((P+1)/4)\n    if (P % _4n === _3n)\n        return sqrt3mod4;\n    // P ≡ 5 (mod 8) => Atkin algorithm, page 10 of https://eprint.iacr.org/2012/685.pdf\n    if (P % _8n === _5n)\n        return sqrt5mod8;\n    // P ≡ 9 (mod 16) => Kong algorithm, page 11 of https://eprint.iacr.org/2012/685.pdf (algorithm 4)\n    if (P % _16n === _9n)\n        return sqrt9mod16(P);\n    // Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        BYTES: 'number',\n        BITS: 'number',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    validateObject(field, opts);\n    // const max = 16384;\n    // if (field.BYTES < 1 || field.BYTES > max) throw new Error('invalid field');\n    // if (field.BITS < 1 || field.BITS > 8 * max) throw new Error('invalid field');\n    return field;\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow(Fp, num, power) {\n    if (power < _0n)\n        throw new Error('invalid exponent, negatives unsupported');\n    if (power === _0n)\n        return Fp.ONE;\n    if (power === _1n)\n        return num;\n    let p = Fp.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = Fp.mul(p, d);\n        d = Fp.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * Exception-free. Will return `undefined` for 0 elements.\n * @param passZero map 0 to 0 (instead of undefined)\n */\nexport function FpInvertBatch(Fp, nums, passZero = false) {\n    const inverted = new Array(nums.length).fill(passZero ? Fp.ZERO : undefined);\n    // Walk from first to last, multiply them by each other MOD p\n    const multipliedAcc = nums.reduce((acc, num, i) => {\n        if (Fp.is0(num))\n            return acc;\n        inverted[i] = acc;\n        return Fp.mul(acc, num);\n    }, Fp.ONE);\n    // Invert last element\n    const invertedAcc = Fp.inv(multipliedAcc);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (Fp.is0(num))\n            return acc;\n        inverted[i] = Fp.mul(acc, inverted[i]);\n        return Fp.mul(acc, num);\n    }, invertedAcc);\n    return inverted;\n}\n// TODO: remove\nexport function FpDiv(Fp, lhs, rhs) {\n    return Fp.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, Fp.ORDER) : Fp.inv(rhs));\n}\n/**\n * Legendre symbol.\n * Legendre constant is used to calculate Legendre symbol (a | p)\n * which denotes the value of a^((p-1)/2) (mod p).\n *\n * * (a | p) ≡ 1    if a is a square (mod p), quadratic residue\n * * (a | p) ≡ -1   if a is not a square (mod p), quadratic non residue\n * * (a | p) ≡ 0    if a ≡ 0 (mod p)\n */\nexport function FpLegendre(Fp, n) {\n    // We can use 3rd argument as optional cache of this value\n    // but seems unneeded for now. The operation is very fast.\n    const p1mod2 = (Fp.ORDER - _1n) / _2n;\n    const powered = Fp.pow(n, p1mod2);\n    const yes = Fp.eql(powered, Fp.ONE);\n    const zero = Fp.eql(powered, Fp.ZERO);\n    const no = Fp.eql(powered, Fp.neg(Fp.ONE));\n    if (!yes && !zero && !no)\n        throw new Error('invalid Legendre symbol result');\n    return yes ? 1 : zero ? 0 : -1;\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(Fp, n) {\n    const l = FpLegendre(Fp, n);\n    return l === 1;\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    if (nBitLength !== undefined)\n        anumber(nBitLength);\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\nclass _Field {\n    ORDER;\n    BITS;\n    BYTES;\n    isLE;\n    ZERO = _0n;\n    ONE = _1n;\n    _lengths;\n    _sqrt; // cached sqrt\n    _mod;\n    constructor(ORDER, opts = {}) {\n        if (ORDER <= _0n)\n            throw new Error('invalid field: expected ORDER > 0, got ' + ORDER);\n        let _nbitLength = undefined;\n        this.isLE = false;\n        if (opts != null && typeof opts === 'object') {\n            if (typeof opts.BITS === 'number')\n                _nbitLength = opts.BITS;\n            if (typeof opts.sqrt === 'function')\n                this.sqrt = opts.sqrt;\n            if (typeof opts.isLE === 'boolean')\n                this.isLE = opts.isLE;\n            if (opts.allowedLengths)\n                this._lengths = opts.allowedLengths?.slice();\n            if (typeof opts.modFromBytes === 'boolean')\n                this._mod = opts.modFromBytes;\n        }\n        const { nBitLength, nByteLength } = nLength(ORDER, _nbitLength);\n        if (nByteLength > 2048)\n            throw new Error('invalid field: expected ORDER of <= 2048 bytes');\n        this.ORDER = ORDER;\n        this.BITS = nBitLength;\n        this.BYTES = nByteLength;\n        this._sqrt = undefined;\n        Object.preventExtensions(this);\n    }\n    create(num) {\n        return mod(num, this.ORDER);\n    }\n    isValid(num) {\n        if (typeof num !== 'bigint')\n            throw new Error('invalid field element: expected bigint, got ' + typeof num);\n        return _0n <= num && num < this.ORDER; // 0 is valid element, but it's not invertible\n    }\n    is0(num) {\n        return num === _0n;\n    }\n    // is valid and invertible\n    isValidNot0(num) {\n        return !this.is0(num) && this.isValid(num);\n    }\n    isOdd(num) {\n        return (num & _1n) === _1n;\n    }\n    neg(num) {\n        return mod(-num, this.ORDER);\n    }\n    eql(lhs, rhs) {\n        return lhs === rhs;\n    }\n    sqr(num) {\n        return mod(num * num, this.ORDER);\n    }\n    add(lhs, rhs) {\n        return mod(lhs + rhs, this.ORDER);\n    }\n    sub(lhs, rhs) {\n        return mod(lhs - rhs, this.ORDER);\n    }\n    mul(lhs, rhs) {\n        return mod(lhs * rhs, this.ORDER);\n    }\n    pow(num, power) {\n        return FpPow(this, num, power);\n    }\n    div(lhs, rhs) {\n        return mod(lhs * invert(rhs, this.ORDER), this.ORDER);\n    }\n    // Same as above, but doesn't normalize\n    sqrN(num) {\n        return num * num;\n    }\n    addN(lhs, rhs) {\n        return lhs + rhs;\n    }\n    subN(lhs, rhs) {\n        return lhs - rhs;\n    }\n    mulN(lhs, rhs) {\n        return lhs * rhs;\n    }\n    inv(num) {\n        return invert(num, this.ORDER);\n    }\n    sqrt(num) {\n        // Caching _sqrt speeds up sqrt9mod16 by 5x and tonneli-shanks by 10%\n        if (!this._sqrt)\n            this._sqrt = FpSqrt(this.ORDER);\n        return this._sqrt(this, num);\n    }\n    toBytes(num) {\n        return this.isLE ? numberToBytesLE(num, this.BYTES) : numberToBytesBE(num, this.BYTES);\n    }\n    fromBytes(bytes, skipValidation = false) {\n        abytes(bytes);\n        const { _lengths: allowedLengths, BYTES, isLE, ORDER, _mod: modFromBytes } = this;\n        if (allowedLengths) {\n            if (!allowedLengths.includes(bytes.length) || bytes.length > BYTES) {\n                throw new Error('Field.fromBytes: expected ' + allowedLengths + ' bytes, got ' + bytes.length);\n            }\n            const padded = new Uint8Array(BYTES);\n            // isLE add 0 to right, !isLE to the left.\n            padded.set(bytes, isLE ? 0 : padded.length - bytes.length);\n            bytes = padded;\n        }\n        if (bytes.length !== BYTES)\n            throw new Error('Field.fromBytes: expected ' + BYTES + ' bytes, got ' + bytes.length);\n        let scalar = isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        if (modFromBytes)\n            scalar = mod(scalar, ORDER);\n        if (!skipValidation)\n            if (!this.isValid(scalar))\n                throw new Error('invalid field element: outside of range 0..ORDER');\n        // NOTE: we don't validate scalar here, please use isValid. This done such way because some\n        // protocol may allow non-reduced scalar that reduced later or changed some other way.\n        return scalar;\n    }\n    // TODO: we don't need it here, move out to separate fn\n    invertBatch(lst) {\n        return FpInvertBatch(this, lst);\n    }\n    // We can't move this out because Fp6, Fp12 implement it\n    // and it's unclear what to return in there.\n    cmov(a, b, condition) {\n        return condition ? b : a;\n    }\n}\n/**\n * Creates a finite field. Major performance optimizations:\n * * 1. Denormalized operations like mulN instead of mul.\n * * 2. Identical object shape: never add or remove keys.\n * * 3. `Object.freeze`.\n * Fragile: always run a benchmark on a change.\n * Security note: operations don't check 'isValid' for all elements for performance reasons,\n * it is caller responsibility to check this.\n * This is low-level code, please make sure you know what you're doing.\n *\n * Note about field properties:\n * * CHARACTERISTIC p = prime number, number of elements in main subgroup.\n * * ORDER q = similar to cofactor in curves, may be composite `q = p^m`.\n *\n * @param ORDER field order, probably prime, or could be composite\n * @param bitLen how many bits the field consumes\n * @param isLE (default: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, opts = {}) {\n    return new _Field(ORDER, opts);\n}\n// Generic random scalar, we can do same for other fields if via Fp2.mul(Fp2.ONE, Fp2.random)?\n// This allows unsafe methods like ignore bias or zero. These unsafe, but often used in different protocols (if deterministic RNG).\n// which mean we cannot force this via opts.\n// Not sure what to do with randomBytes, we can accept it inside opts if wanted.\n// Probably need to export getMinHashLength somewhere?\n// random(bytes?: Uint8Array, unsafeAllowZero = false, unsafeAllowBias = false) {\n//   const LEN = !unsafeAllowBias ? getMinHashLength(ORDER) : BYTES;\n//   if (bytes === undefined) bytes = randomBytes(LEN); // _opts.randomBytes?\n//   const num = isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n//   // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n//   const reduced = unsafeAllowZero ? mod(num, ORDER) : mod(num, ORDER - _1n) + _1n;\n//   return reduced;\n// },\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(\"Field doesn't have isOdd\");\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(\"Field doesn't have isOdd\");\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.Point.Fn.ORDER)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key, fieldOrder, isLE = false) {\n    abytes(key);\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error('expected ' + minLen + '-1024 bytes of input, got ' + len);\n    const num = isLE ? bytesToNumberLE(key) : bytesToNumberBE(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map","/**\n * Methods for elliptic curve multiplication by scalars.\n * Contains wNAF, pippenger.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { bitLen, bitMask } from \"../utils.js\";\nimport { Field, FpInvertBatch, validateField } from \"./modular.js\";\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nexport function negateCt(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\n/**\n * Takes a bunch of Projective Points but executes only one\n * inversion on all of them. Inversion is very slow operation,\n * so this improves performance massively.\n * Optimization: converts a list of projective points to a list of identical points with Z=1.\n */\nexport function normalizeZ(c, points) {\n    const invertedZs = FpInvertBatch(c.Fp, points.map((p) => p.Z));\n    return points.map((p, i) => c.fromAffine(p.toAffine(invertedZs[i])));\n}\nfunction validateW(W, bits) {\n    if (!Number.isSafeInteger(W) || W <= 0 || W > bits)\n        throw new Error('invalid window size, expected [1..' + bits + '], got W=' + W);\n}\nfunction calcWOpts(W, scalarBits) {\n    validateW(W, scalarBits);\n    const windows = Math.ceil(scalarBits / W) + 1; // W=8 33. Not 32, because we skip zero\n    const windowSize = 2 ** (W - 1); // W=8 128. Not 256, because we skip zero\n    const maxNumber = 2 ** W; // W=8 256\n    const mask = bitMask(W); // W=8 255 == mask 0b11111111\n    const shiftBy = BigInt(W); // W=8 8\n    return { windows, windowSize, mask, maxNumber, shiftBy };\n}\nfunction calcOffsets(n, window, wOpts) {\n    const { windowSize, mask, maxNumber, shiftBy } = wOpts;\n    let wbits = Number(n & mask); // extract W bits.\n    let nextN = n >> shiftBy; // shift number by W bits.\n    // What actually happens here:\n    // const highestBit = Number(mask ^ (mask >> 1n));\n    // let wbits2 = wbits - 1; // skip zero\n    // if (wbits2 & highestBit) { wbits2 ^= Number(mask); // (~);\n    // split if bits > max: +224 => 256-32\n    if (wbits > windowSize) {\n        // we skip zero, which means instead of `>= size-1`, we do `> size`\n        wbits -= maxNumber; // -32, can be maxNumber - wbits, but then we need to set isNeg here.\n        nextN += _1n; // +256 (carry)\n    }\n    const offsetStart = window * windowSize;\n    const offset = offsetStart + Math.abs(wbits) - 1; // -1 because we skip zero\n    const isZero = wbits === 0; // is current window slice a 0?\n    const isNeg = wbits < 0; // is current window slice negative?\n    const isNegF = window % 2 !== 0; // fake random statement for noise\n    const offsetF = offsetStart; // fake offset for noise\n    return { nextN, offset, isZero, isNeg, isNegF, offsetF };\n}\nfunction validateMSMPoints(points, c) {\n    if (!Array.isArray(points))\n        throw new Error('array expected');\n    points.forEach((p, i) => {\n        if (!(p instanceof c))\n            throw new Error('invalid point at index ' + i);\n    });\n}\nfunction validateMSMScalars(scalars, field) {\n    if (!Array.isArray(scalars))\n        throw new Error('array of scalars expected');\n    scalars.forEach((s, i) => {\n        if (!field.isValid(s))\n            throw new Error('invalid scalar at index ' + i);\n    });\n}\n// Since points in different groups cannot be equal (different object constructor),\n// we can have single place to store precomputes.\n// Allows to make points frozen / immutable.\nconst pointPrecomputes = new WeakMap();\nconst pointWindowSizes = new WeakMap();\nfunction getW(P) {\n    // To disable precomputes:\n    // return 1;\n    return pointWindowSizes.get(P) || 1;\n}\nfunction assert0(n) {\n    if (n !== _0n)\n        throw new Error('invalid wNAF');\n}\n/**\n * Elliptic curve multiplication of Point by scalar. Fragile.\n * Table generation takes **30MB of ram and 10ms on high-end CPU**,\n * but may take much longer on slow devices. Actual generation will happen on\n * first call of `multiply()`. By default, `BASE` point is precomputed.\n *\n * Scalars should always be less than curve order: this should be checked inside of a curve itself.\n * Creates precomputation tables for fast multiplication:\n * - private scalar is split by fixed size windows of W bits\n * - every window point is collected from window's table & added to accumulator\n * - since windows are different, same point inside tables won't be accessed more than once per calc\n * - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n * - +1 window is neccessary for wNAF\n * - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n *\n * @todo Research returning 2d JS array of windows, instead of a single window.\n * This would allow windows to be in different memory locations\n */\nexport class wNAF {\n    BASE;\n    ZERO;\n    Fn;\n    bits;\n    // Parametrized with a given Point class (not individual point)\n    constructor(Point, bits) {\n        this.BASE = Point.BASE;\n        this.ZERO = Point.ZERO;\n        this.Fn = Point.Fn;\n        this.bits = bits;\n    }\n    // non-const time multiplication ladder\n    _unsafeLadder(elm, n, p = this.ZERO) {\n        let d = elm;\n        while (n > _0n) {\n            if (n & _1n)\n                p = p.add(d);\n            d = d.double();\n            n >>= _1n;\n        }\n        return p;\n    }\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n     * - 𝑊 is the window size\n     * - 𝑛 is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @param point Point instance\n     * @param W window size\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(point, W) {\n        const { windows, windowSize } = calcWOpts(W, this.bits);\n        const points = [];\n        let p = point;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            // i=1, bc we skip 0\n            for (let i = 1; i < windowSize; i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * More compact implementation:\n     * https://github.com/paulmillr/noble-secp256k1/blob/47cb1669b6e506ad66b35fe7d76132ae97465da2/index.ts#L502-L541\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(W, precomputes, n) {\n        // Scalar should be smaller than field order\n        if (!this.Fn.isValid(n))\n            throw new Error('invalid scalar');\n        // Accumulators\n        let p = this.ZERO;\n        let f = this.BASE;\n        // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n        // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n        // there is negate now: it is possible that negated element from low value\n        // would be the same as high element, which will create carry into next window.\n        // It's not obvious how this can fail, but still worth investigating later.\n        const wo = calcWOpts(W, this.bits);\n        for (let window = 0; window < wo.windows; window++) {\n            // (n === _0n) is handled and not early-exited. isEven and offsetF are used for noise\n            const { nextN, offset, isZero, isNeg, isNegF, offsetF } = calcOffsets(n, window, wo);\n            n = nextN;\n            if (isZero) {\n                // bits are 0: add garbage to fake point\n                // Important part for const-time getPublicKey: add random \"noise\" point to f.\n                f = f.add(negateCt(isNegF, precomputes[offsetF]));\n            }\n            else {\n                // bits are 1: add to result point\n                p = p.add(negateCt(isNeg, precomputes[offset]));\n            }\n        }\n        assert0(n);\n        // Return both real and fake points: JIT won't eliminate f.\n        // At this point there is a way to F be infinity-point even if p is not,\n        // which makes it less const-time: around 1 bigint multiply.\n        return { p, f };\n    }\n    /**\n     * Implements ec unsafe (non const-time) multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param acc accumulator point to add result of multiplication\n     * @returns point\n     */\n    wNAFUnsafe(W, precomputes, n, acc = this.ZERO) {\n        const wo = calcWOpts(W, this.bits);\n        for (let window = 0; window < wo.windows; window++) {\n            if (n === _0n)\n                break; // Early-exit, skip 0 value\n            const { nextN, offset, isZero, isNeg } = calcOffsets(n, window, wo);\n            n = nextN;\n            if (isZero) {\n                // Window bits are 0: skip processing.\n                // Move to next window.\n                continue;\n            }\n            else {\n                const item = precomputes[offset];\n                acc = acc.add(isNeg ? item.negate() : item); // Re-using acc allows to save adds in MSM\n            }\n        }\n        assert0(n);\n        return acc;\n    }\n    getPrecomputes(W, point, transform) {\n        // Calculate precomputes on a first run, reuse them after\n        let comp = pointPrecomputes.get(point);\n        if (!comp) {\n            comp = this.precomputeWindow(point, W);\n            if (W !== 1) {\n                // Doing transform outside of if brings 15% perf hit\n                if (typeof transform === 'function')\n                    comp = transform(comp);\n                pointPrecomputes.set(point, comp);\n            }\n        }\n        return comp;\n    }\n    cached(point, scalar, transform) {\n        const W = getW(point);\n        return this.wNAF(W, this.getPrecomputes(W, point, transform), scalar);\n    }\n    unsafe(point, scalar, transform, prev) {\n        const W = getW(point);\n        if (W === 1)\n            return this._unsafeLadder(point, scalar, prev); // For W=1 ladder is ~x2 faster\n        return this.wNAFUnsafe(W, this.getPrecomputes(W, point, transform), scalar, prev);\n    }\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n    createCache(P, W) {\n        validateW(W, this.bits);\n        pointWindowSizes.set(P, W);\n        pointPrecomputes.delete(P);\n    }\n    hasCache(elm) {\n        return getW(elm) !== 1;\n    }\n}\n/**\n * Endomorphism-specific multiplication for Koblitz curves.\n * Cost: 128 dbl, 0-256 adds.\n */\nexport function mulEndoUnsafe(Point, point, k1, k2) {\n    let acc = point;\n    let p1 = Point.ZERO;\n    let p2 = Point.ZERO;\n    while (k1 > _0n || k2 > _0n) {\n        if (k1 & _1n)\n            p1 = p1.add(acc);\n        if (k2 & _1n)\n            p2 = p2.add(acc);\n        acc = acc.double();\n        k1 >>= _1n;\n        k2 >>= _1n;\n    }\n    return { p1, p2 };\n}\n/**\n * Pippenger algorithm for multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * 30x faster vs naive addition on L=4096, 10x faster than precomputes.\n * For N=254bit, L=1, it does: 1024 ADD + 254 DBL. For L=5: 1536 ADD + 254 DBL.\n * Algorithmically constant-time (for same L), even when 1 point + scalar, or when scalar = 0.\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @param scalars array of L scalars (aka secret keys / bigints)\n */\nexport function pippenger(c, points, scalars) {\n    // If we split scalars by some window (let's say 8 bits), every chunk will only\n    // take 256 buckets even if there are 4096 scalars, also re-uses double.\n    // TODO:\n    // - https://eprint.iacr.org/2024/750.pdf\n    // - https://tches.iacr.org/index.php/TCHES/article/view/10287\n    // 0 is accepted in scalars\n    const fieldN = c.Fn;\n    validateMSMPoints(points, c);\n    validateMSMScalars(scalars, fieldN);\n    const plength = points.length;\n    const slength = scalars.length;\n    if (plength !== slength)\n        throw new Error('arrays of points and scalars must have equal length');\n    // if (plength === 0) throw new Error('array must be of length >= 2');\n    const zero = c.ZERO;\n    const wbits = bitLen(BigInt(plength));\n    let windowSize = 1; // bits\n    if (wbits > 12)\n        windowSize = wbits - 3;\n    else if (wbits > 4)\n        windowSize = wbits - 2;\n    else if (wbits > 0)\n        windowSize = 2;\n    const MASK = bitMask(windowSize);\n    const buckets = new Array(Number(MASK) + 1).fill(zero); // +1 for zero array\n    const lastBits = Math.floor((fieldN.BITS - 1) / windowSize) * windowSize;\n    let sum = zero;\n    for (let i = lastBits; i >= 0; i -= windowSize) {\n        buckets.fill(zero);\n        for (let j = 0; j < slength; j++) {\n            const scalar = scalars[j];\n            const wbits = Number((scalar >> BigInt(i)) & MASK);\n            buckets[wbits] = buckets[wbits].add(points[j]);\n        }\n        let resI = zero; // not using this will do small speed-up, but will lose ct\n        // Skip first bucket, because it is zero\n        for (let j = buckets.length - 1, sumI = zero; j > 0; j--) {\n            sumI = sumI.add(buckets[j]);\n            resI = resI.add(sumI);\n        }\n        sum = sum.add(resI);\n        if (i !== 0)\n            for (let j = 0; j < windowSize; j++)\n                sum = sum.double();\n    }\n    return sum;\n}\n/**\n * Precomputed multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @returns function which multiplies points with scaars\n */\nexport function precomputeMSMUnsafe(c, points, windowSize) {\n    /**\n     * Performance Analysis of Window-based Precomputation\n     *\n     * Base Case (256-bit scalar, 8-bit window):\n     * - Standard precomputation requires:\n     *   - 31 additions per scalar × 256 scalars = 7,936 ops\n     *   - Plus 255 summary additions = 8,191 total ops\n     *   Note: Summary additions can be optimized via accumulator\n     *\n     * Chunked Precomputation Analysis:\n     * - Using 32 chunks requires:\n     *   - 255 additions per chunk\n     *   - 256 doublings\n     *   - Total: (255 × 32) + 256 = 8,416 ops\n     *\n     * Memory Usage Comparison:\n     * Window Size | Standard Points | Chunked Points\n     * ------------|-----------------|---------------\n     *     4-bit   |     520         |      15\n     *     8-bit   |    4,224        |     255\n     *    10-bit   |   13,824        |   1,023\n     *    16-bit   |  557,056        |  65,535\n     *\n     * Key Advantages:\n     * 1. Enables larger window sizes due to reduced memory overhead\n     * 2. More efficient for smaller scalar counts:\n     *    - 16 chunks: (16 × 255) + 256 = 4,336 ops\n     *    - ~2x faster than standard 8,191 ops\n     *\n     * Limitations:\n     * - Not suitable for plain precomputes (requires 256 constant doublings)\n     * - Performance degrades with larger scalar counts:\n     *   - Optimal for ~256 scalars\n     *   - Less efficient for 4096+ scalars (Pippenger preferred)\n     */\n    const fieldN = c.Fn;\n    validateW(windowSize, fieldN.BITS);\n    validateMSMPoints(points, c);\n    const zero = c.ZERO;\n    const tableSize = 2 ** windowSize - 1; // table size (without zero)\n    const chunks = Math.ceil(fieldN.BITS / windowSize); // chunks of item\n    const MASK = bitMask(windowSize);\n    const tables = points.map((p) => {\n        const res = [];\n        for (let i = 0, acc = p; i < tableSize; i++) {\n            res.push(acc);\n            acc = acc.add(p);\n        }\n        return res;\n    });\n    return (scalars) => {\n        validateMSMScalars(scalars, fieldN);\n        if (scalars.length > points.length)\n            throw new Error('array of scalars must be smaller than array of points');\n        let res = zero;\n        for (let i = 0; i < chunks; i++) {\n            // No need to double if accumulator is still zero.\n            if (res !== zero)\n                for (let j = 0; j < windowSize; j++)\n                    res = res.double();\n            const shiftBy = BigInt(chunks * windowSize - (i + 1) * windowSize);\n            for (let j = 0; j < scalars.length; j++) {\n                const n = scalars[j];\n                const curr = Number((n >> shiftBy) & MASK);\n                if (!curr)\n                    continue; // skip zero scalars chunks\n                res = res.add(tables[j][curr - 1]);\n            }\n        }\n        return res;\n    };\n}\nfunction createField(order, field, isLE) {\n    if (field) {\n        if (field.ORDER !== order)\n            throw new Error('Field.ORDER must match order: Fp == p, Fn == n');\n        validateField(field);\n        return field;\n    }\n    else {\n        return Field(order, { isLE });\n    }\n}\n/** Validates CURVE opts and creates fields */\nexport function createCurveFields(type, CURVE, curveOpts = {}, FpFnLE) {\n    if (FpFnLE === undefined)\n        FpFnLE = type === 'edwards';\n    if (!CURVE || typeof CURVE !== 'object')\n        throw new Error(`expected valid ${type} CURVE object`);\n    for (const p of ['p', 'n', 'h']) {\n        const val = CURVE[p];\n        if (!(typeof val === 'bigint' && val > _0n))\n            throw new Error(`CURVE.${p} must be positive bigint`);\n    }\n    const Fp = createField(CURVE.p, curveOpts.Fp, FpFnLE);\n    const Fn = createField(CURVE.n, curveOpts.Fn, FpFnLE);\n    const _b = type === 'weierstrass' ? 'b' : 'd';\n    const params = ['Gx', 'Gy', 'a', _b];\n    for (const p of params) {\n        // @ts-ignore\n        if (!Fp.isValid(CURVE[p]))\n            throw new Error(`CURVE.${p} must be valid field element of CURVE.Fp`);\n    }\n    CURVE = Object.freeze(Object.assign({}, CURVE));\n    return { CURVE, Fp, Fn };\n}\nexport function createKeygen(randomSecretKey, getPublicKey) {\n    return function keygen(seed) {\n        const secretKey = randomSecretKey(seed);\n        return { secretKey, publicKey: getPublicKey(secretKey) };\n    };\n}\n//# sourceMappingURL=curve.js.map","/**\n * Twisted Edwards curve. The formula is: ax² + y² = 1 + dx²y².\n * For design rationale of types / exports, see weierstrass module documentation.\n * Untwisted Edwards curves exist, but they aren't used in real-world protocols.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { abool, abytes, aInRange, bytesToHex, bytesToNumberLE, concatBytes, copyBytes, hexToBytes, isBytes, memoized, notImplemented, validateObject, randomBytes as wcRandomBytes, } from \"../utils.js\";\nimport { createCurveFields, createKeygen, normalizeZ, wNAF, } from \"./curve.js\";\nimport {} from \"./modular.js\";\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);\nfunction isEdValidXY(Fp, CURVE, x, y) {\n    const x2 = Fp.sqr(x);\n    const y2 = Fp.sqr(y);\n    const left = Fp.add(Fp.mul(CURVE.a, x2), y2);\n    const right = Fp.add(Fp.ONE, Fp.mul(CURVE.d, Fp.mul(x2, y2)));\n    return Fp.eql(left, right);\n}\nexport function edwards(params, extraOpts = {}) {\n    const validated = createCurveFields('edwards', params, extraOpts, extraOpts.FpFnLE);\n    const { Fp, Fn } = validated;\n    let CURVE = validated.CURVE;\n    const { h: cofactor } = CURVE;\n    validateObject(extraOpts, {}, { uvRatio: 'function' });\n    // Important:\n    // There are some places where Fp.BYTES is used instead of nByteLength.\n    // So far, everything has been tested with curves of Fp.BYTES == nByteLength.\n    // TODO: test and find curves which behave otherwise.\n    const MASK = _2n << (BigInt(Fn.BYTES * 8) - _1n);\n    const modP = (n) => Fp.create(n); // Function overrides\n    // sqrt(u/v)\n    const uvRatio = extraOpts.uvRatio ||\n        ((u, v) => {\n            try {\n                return { isValid: true, value: Fp.sqrt(Fp.div(u, v)) };\n            }\n            catch (e) {\n                return { isValid: false, value: _0n };\n            }\n        });\n    // Validate whether the passed curve params are valid.\n    // equation ax² + y² = 1 + dx²y² should work for generator point.\n    if (!isEdValidXY(Fp, CURVE, CURVE.Gx, CURVE.Gy))\n        throw new Error('bad curve params: generator point');\n    /**\n     * Asserts coordinate is valid: 0 <= n < MASK.\n     * Coordinates >= Fp.ORDER are allowed for zip215.\n     */\n    function acoord(title, n, banZero = false) {\n        const min = banZero ? _1n : _0n;\n        aInRange('coordinate ' + title, n, min, MASK);\n        return n;\n    }\n    function aedpoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('EdwardsPoint expected');\n    }\n    // Converts Extended point to default (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    const toAffineMemo = memoized((p, iz) => {\n        const { X, Y, Z } = p;\n        const is0 = p.is0();\n        if (iz == null)\n            iz = is0 ? _8n : Fp.inv(Z); // 8 was chosen arbitrarily\n        const x = modP(X * iz);\n        const y = modP(Y * iz);\n        const zz = Fp.mul(Z, iz);\n        if (is0)\n            return { x: _0n, y: _1n };\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return { x, y };\n    });\n    const assertValidMemo = memoized((p) => {\n        const { a, d } = CURVE;\n        if (p.is0())\n            throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n        // Equation in affine coordinates: ax² + y² = 1 + dx²y²\n        // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²\n        const { X, Y, Z, T } = p;\n        const X2 = modP(X * X); // X²\n        const Y2 = modP(Y * Y); // Y²\n        const Z2 = modP(Z * Z); // Z²\n        const Z4 = modP(Z2 * Z2); // Z⁴\n        const aX2 = modP(X2 * a); // aX²\n        const left = modP(Z2 * modP(aX2 + Y2)); // (aX² + Y²)Z²\n        const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z⁴ + dX²Y²\n        if (left !== right)\n            throw new Error('bad point: equation left != right (1)');\n        // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n        const XY = modP(X * Y);\n        const ZT = modP(Z * T);\n        if (XY !== ZT)\n            throw new Error('bad point: equation left != right (2)');\n        return true;\n    });\n    // Extended Point works in extended coordinates: (X, Y, Z, T) ∋ (x=X/Z, y=Y/Z, T=xy).\n    // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n    class Point {\n        // base / generator point\n        static BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n        // zero / infinity / identity point\n        static ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n        // math field\n        static Fp = Fp;\n        // scalar field\n        static Fn = Fn;\n        X;\n        Y;\n        Z;\n        T;\n        constructor(X, Y, Z, T) {\n            this.X = acoord('x', X);\n            this.Y = acoord('y', Y);\n            this.Z = acoord('z', Z, true);\n            this.T = acoord('t', T);\n            Object.freeze(this);\n        }\n        static CURVE() {\n            return CURVE;\n        }\n        static fromAffine(p) {\n            if (p instanceof Point)\n                throw new Error('extended point not allowed');\n            const { x, y } = p || {};\n            acoord('x', x);\n            acoord('y', y);\n            return new Point(x, y, _1n, modP(x * y));\n        }\n        // Uses algo from RFC8032 5.1.3.\n        static fromBytes(bytes, zip215 = false) {\n            const len = Fp.BYTES;\n            const { a, d } = CURVE;\n            bytes = copyBytes(abytes(bytes, len, 'point'));\n            abool(zip215, 'zip215');\n            const normed = copyBytes(bytes); // copy again, we'll manipulate it\n            const lastByte = bytes[len - 1]; // select last byte\n            normed[len - 1] = lastByte & ~0x80; // clear last bit\n            const y = bytesToNumberLE(normed);\n            // zip215=true is good for consensus-critical apps. =false follows RFC8032 / NIST186-5.\n            // RFC8032 prohibits >= p, but ZIP215 doesn't\n            // zip215=true:  0 <= y < MASK (2^256 for ed25519)\n            // zip215=false: 0 <= y < P (2^255-19 for ed25519)\n            const max = zip215 ? MASK : Fp.ORDER;\n            aInRange('point.y', y, _0n, max);\n            // Ed25519: x² = (y²-1)/(dy²+1) mod p. Ed448: x² = (y²-1)/(dy²-1) mod p. Generic case:\n            // ax²+y²=1+dx²y² => y²-1=dx²y²-ax² => y²-1=x²(dy²-a) => x²=(y²-1)/(dy²-a)\n            const y2 = modP(y * y); // denominator is always non-0 mod p.\n            const u = modP(y2 - _1n); // u = y² - 1\n            const v = modP(d * y2 - a); // v = d y² + 1.\n            let { isValid, value: x } = uvRatio(u, v); // √(u/v)\n            if (!isValid)\n                throw new Error('bad point: invalid y coordinate');\n            const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n            const isLastByteOdd = (lastByte & 0x80) !== 0; // x_0, last bit\n            if (!zip215 && x === _0n && isLastByteOdd)\n                // if x=0 and x_0 = 1, fail\n                throw new Error('bad point: x=0 and x_0=1');\n            if (isLastByteOdd !== isXOdd)\n                x = modP(-x); // if x_0 != x mod 2, set x = p-x\n            return Point.fromAffine({ x, y });\n        }\n        static fromHex(hex, zip215 = false) {\n            return Point.fromBytes(hexToBytes(hex), zip215);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        precompute(windowSize = 8, isLazy = true) {\n            wnaf.createCache(this, windowSize);\n            if (!isLazy)\n                this.multiply(_2n); // random number\n            return this;\n        }\n        // Useful in fromAffine() - not for fromBytes(), which always created valid points.\n        assertValidity() {\n            assertValidMemo(this);\n        }\n        // Compare one point to another.\n        equals(other) {\n            aedpoint(other);\n            const { X: X1, Y: Y1, Z: Z1 } = this;\n            const { X: X2, Y: Y2, Z: Z2 } = other;\n            const X1Z2 = modP(X1 * Z2);\n            const X2Z1 = modP(X2 * Z1);\n            const Y1Z2 = modP(Y1 * Z2);\n            const Y2Z1 = modP(Y2 * Z1);\n            return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        negate() {\n            // Flips point sign to a negative one (-x, y in affine coords)\n            return new Point(modP(-this.X), this.Y, this.Z, modP(-this.T));\n        }\n        // Fast algo for doubling Extended Point.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n        // Cost: 4M + 4S + 1*a + 6add + 1*2.\n        double() {\n            const { a } = CURVE;\n            const { X: X1, Y: Y1, Z: Z1 } = this;\n            const A = modP(X1 * X1); // A = X12\n            const B = modP(Y1 * Y1); // B = Y12\n            const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n            const D = modP(a * A); // D = a*A\n            const x1y1 = X1 + Y1;\n            const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n            const G = D + B; // G = D+B\n            const F = G - C; // F = G-C\n            const H = D - B; // H = D-B\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        // Fast algo for adding 2 Extended Points.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n        // Cost: 9M + 1*a + 1*d + 7add.\n        add(other) {\n            aedpoint(other);\n            const { a, d } = CURVE;\n            const { X: X1, Y: Y1, Z: Z1, T: T1 } = this;\n            const { X: X2, Y: Y2, Z: Z2, T: T2 } = other;\n            const A = modP(X1 * X2); // A = X1*X2\n            const B = modP(Y1 * Y2); // B = Y1*Y2\n            const C = modP(T1 * d * T2); // C = T1*d*T2\n            const D = modP(Z1 * Z2); // D = Z1*Z2\n            const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n            const F = D - C; // F = D-C\n            const G = D + C; // G = D+C\n            const H = modP(B - a * A); // H = B-a*A\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        // Constant-time multiplication.\n        multiply(scalar) {\n            // 1 <= scalar < L\n            if (!Fn.isValidNot0(scalar))\n                throw new Error('invalid scalar: expected 1 <= sc < curve.n');\n            const { p, f } = wnaf.cached(this, scalar, (p) => normalizeZ(Point, p));\n            return normalizeZ(Point, [p, f])[0];\n        }\n        // Non-constant-time multiplication. Uses double-and-add algorithm.\n        // It's faster, but should only be used when you don't care about\n        // an exposed private key e.g. sig verification.\n        // Does NOT allow scalars higher than CURVE.n.\n        // Accepts optional accumulator to merge with multiply (important for sparse scalars)\n        multiplyUnsafe(scalar, acc = Point.ZERO) {\n            // 0 <= scalar < L\n            if (!Fn.isValid(scalar))\n                throw new Error('invalid scalar: expected 0 <= sc < curve.n');\n            if (scalar === _0n)\n                return Point.ZERO;\n            if (this.is0() || scalar === _1n)\n                return this;\n            return wnaf.unsafe(this, scalar, (p) => normalizeZ(Point, p), acc);\n        }\n        // Checks if point is of small order.\n        // If you add something to small order point, you will have \"dirty\"\n        // point with torsion component.\n        // Multiplies point by cofactor and checks if the result is 0.\n        isSmallOrder() {\n            return this.multiplyUnsafe(cofactor).is0();\n        }\n        // Multiplies point by curve order and checks if the result is 0.\n        // Returns `false` is the point is dirty.\n        isTorsionFree() {\n            return wnaf.unsafe(this, CURVE.n).is0();\n        }\n        // Converts Extended point to default (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        toAffine(invertedZ) {\n            return toAffineMemo(this, invertedZ);\n        }\n        clearCofactor() {\n            if (cofactor === _1n)\n                return this;\n            return this.multiplyUnsafe(cofactor);\n        }\n        toBytes() {\n            const { x, y } = this.toAffine();\n            // Fp.toBytes() allows non-canonical encoding of y (>= p).\n            const bytes = Fp.toBytes(y);\n            // Each y has 2 valid points: (x, y), (x,-y).\n            // When compressing, it's enough to store y and use the last byte to encode sign of x\n            bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0;\n            return bytes;\n        }\n        toHex() {\n            return bytesToHex(this.toBytes());\n        }\n        toString() {\n            return `<Point ${this.is0() ? 'ZERO' : this.toHex()}>`;\n        }\n    }\n    const wnaf = new wNAF(Point, Fn.BITS);\n    Point.BASE.precompute(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n    return Point;\n}\n/**\n * Base class for prime-order points like Ristretto255 and Decaf448.\n * These points eliminate cofactor issues by representing equivalence classes\n * of Edwards curve points.\n */\nexport class PrimeEdwardsPoint {\n    static BASE;\n    static ZERO;\n    static Fp;\n    static Fn;\n    ep;\n    constructor(ep) {\n        this.ep = ep;\n    }\n    // Static methods that must be implemented by subclasses\n    static fromBytes(_bytes) {\n        notImplemented();\n    }\n    static fromHex(_hex) {\n        notImplemented();\n    }\n    get x() {\n        return this.toAffine().x;\n    }\n    get y() {\n        return this.toAffine().y;\n    }\n    // Common implementations\n    clearCofactor() {\n        // no-op for prime-order groups\n        return this;\n    }\n    assertValidity() {\n        this.ep.assertValidity();\n    }\n    toAffine(invertedZ) {\n        return this.ep.toAffine(invertedZ);\n    }\n    toHex() {\n        return bytesToHex(this.toBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    isTorsionFree() {\n        return true;\n    }\n    isSmallOrder() {\n        return false;\n    }\n    add(other) {\n        this.assertSame(other);\n        return this.init(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        this.assertSame(other);\n        return this.init(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return this.init(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return this.init(this.ep.multiplyUnsafe(scalar));\n    }\n    double() {\n        return this.init(this.ep.double());\n    }\n    negate() {\n        return this.init(this.ep.negate());\n    }\n    precompute(windowSize, isLazy) {\n        return this.init(this.ep.precompute(windowSize, isLazy));\n    }\n}\n/**\n * Initializes EdDSA signatures over given Edwards curve.\n */\nexport function eddsa(Point, cHash, eddsaOpts = {}) {\n    if (typeof cHash !== 'function')\n        throw new Error('\"hash\" function param is required');\n    validateObject(eddsaOpts, {}, {\n        adjustScalarBytes: 'function',\n        randomBytes: 'function',\n        domain: 'function',\n        prehash: 'function',\n        mapToCurve: 'function',\n    });\n    const { prehash } = eddsaOpts;\n    const { BASE, Fp, Fn } = Point;\n    const randomBytes = eddsaOpts.randomBytes || wcRandomBytes;\n    const adjustScalarBytes = eddsaOpts.adjustScalarBytes || ((bytes) => bytes);\n    const domain = eddsaOpts.domain ||\n        ((data, ctx, phflag) => {\n            abool(phflag, 'phflag');\n            if (ctx.length || phflag)\n                throw new Error('Contexts/pre-hash are not supported');\n            return data;\n        }); // NOOP\n    // Little-endian SHA512 with modulo n\n    function modN_LE(hash) {\n        return Fn.create(bytesToNumberLE(hash)); // Not Fn.fromBytes: it has length limit\n    }\n    // Get the hashed private scalar per RFC8032 5.1.5\n    function getPrivateScalar(key) {\n        const len = lengths.secretKey;\n        abytes(key, lengths.secretKey, 'secretKey');\n        // Hash private key with curve's hash function to produce uniformingly random input\n        // Check byte lengths: ensure(64, h(ensure(32, key)))\n        const hashed = abytes(cHash(key), 2 * len, 'hashedSecretKey');\n        const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n        const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n        const scalar = modN_LE(head); // The actual private scalar\n        return { head, prefix, scalar };\n    }\n    /** Convenience method that creates public key from scalar. RFC8032 5.1.5 */\n    function getExtendedPublicKey(secretKey) {\n        const { head, prefix, scalar } = getPrivateScalar(secretKey);\n        const point = BASE.multiply(scalar); // Point on Edwards curve aka public key\n        const pointBytes = point.toBytes();\n        return { head, prefix, scalar, point, pointBytes };\n    }\n    /** Calculates EdDSA pub key. RFC8032 5.1.5. */\n    function getPublicKey(secretKey) {\n        return getExtendedPublicKey(secretKey).pointBytes;\n    }\n    // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n    function hashDomainToScalar(context = Uint8Array.of(), ...msgs) {\n        const msg = concatBytes(...msgs);\n        return modN_LE(cHash(domain(msg, abytes(context, undefined, 'context'), !!prehash)));\n    }\n    /** Signs message with secret key. RFC8032 5.1.6 */\n    function sign(msg, secretKey, options = {}) {\n        msg = abytes(msg, undefined, 'message');\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph etc.\n        const { prefix, scalar, pointBytes } = getExtendedPublicKey(secretKey);\n        const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n        const R = BASE.multiply(r).toBytes(); // R = rG\n        const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n        const s = Fn.create(r + k * scalar); // S = (r + k * s) mod L\n        if (!Fn.isValid(s))\n            throw new Error('sign failed: invalid s'); // 0 <= s < L\n        const rs = concatBytes(R, Fn.toBytes(s));\n        return abytes(rs, lengths.signature, 'result');\n    }\n    // verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\n    const verifyOpts = { zip215: true };\n    /**\n     * Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n     * An extended group equation is checked.\n     */\n    function verify(sig, msg, publicKey, options = verifyOpts) {\n        const { context, zip215 } = options;\n        const len = lengths.signature;\n        sig = abytes(sig, len, 'signature');\n        msg = abytes(msg, undefined, 'message');\n        publicKey = abytes(publicKey, lengths.publicKey, 'publicKey');\n        if (zip215 !== undefined)\n            abool(zip215, 'zip215');\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph, etc\n        const mid = len / 2;\n        const r = sig.subarray(0, mid);\n        const s = bytesToNumberLE(sig.subarray(mid, len));\n        let A, R, SB;\n        try {\n            // zip215=true is good for consensus-critical apps. =false follows RFC8032 / NIST186-5.\n            // zip215=true:  0 <= y < MASK (2^256 for ed25519)\n            // zip215=false: 0 <= y < P (2^255-19 for ed25519)\n            A = Point.fromBytes(publicKey, zip215);\n            R = Point.fromBytes(r, zip215);\n            SB = BASE.multiplyUnsafe(s); // 0 <= s < l is done inside\n        }\n        catch (error) {\n            return false;\n        }\n        if (!zip215 && A.isSmallOrder())\n            return false; // zip215 allows public keys of small order\n        const k = hashDomainToScalar(context, R.toBytes(), A.toBytes(), msg);\n        const RkA = R.add(A.multiplyUnsafe(k));\n        // Extended group equation\n        // [8][S]B = [8]R + [8][k]A'\n        return RkA.subtract(SB).clearCofactor().is0();\n    }\n    const _size = Fp.BYTES; // 32 for ed25519, 57 for ed448\n    const lengths = {\n        secretKey: _size,\n        publicKey: _size,\n        signature: 2 * _size,\n        seed: _size,\n    };\n    function randomSecretKey(seed = randomBytes(lengths.seed)) {\n        return abytes(seed, lengths.seed, 'seed');\n    }\n    function isValidSecretKey(key) {\n        return isBytes(key) && key.length === Fn.BYTES;\n    }\n    function isValidPublicKey(key, zip215) {\n        try {\n            return !!Point.fromBytes(key, zip215);\n        }\n        catch (error) {\n            return false;\n        }\n    }\n    const utils = {\n        getExtendedPublicKey,\n        randomSecretKey,\n        isValidSecretKey,\n        isValidPublicKey,\n        /**\n         * Converts ed public key to x public key. Uses formula:\n         * - ed25519:\n         *   - `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n         *   - `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n         * - ed448:\n         *   - `(u, v) = ((y-1)/(y+1), sqrt(156324)*u/x)`\n         *   - `(x, y) = (sqrt(156324)*u/v, (1+u)/(1-u))`\n         */\n        toMontgomery(publicKey) {\n            const { y } = Point.fromBytes(publicKey);\n            const size = lengths.publicKey;\n            const is25519 = size === 32;\n            if (!is25519 && size !== 57)\n                throw new Error('only defined for 25519 and 448');\n            const u = is25519 ? Fp.div(_1n + y, _1n - y) : Fp.div(y - _1n, y + _1n);\n            return Fp.toBytes(u);\n        },\n        toMontgomerySecret(secretKey) {\n            const size = lengths.secretKey;\n            abytes(secretKey, size);\n            const hashed = cHash(secretKey.subarray(0, size));\n            return adjustScalarBytes(hashed).subarray(0, size);\n        },\n    };\n    return Object.freeze({\n        keygen: createKeygen(randomSecretKey, getPublicKey),\n        getPublicKey,\n        sign,\n        verify,\n        utils,\n        Point,\n        lengths,\n    });\n}\n//# sourceMappingURL=edwards.js.map","/**\n * Montgomery curve methods. It's not really whole montgomery curve,\n * just bunch of very specific methods for X25519 / X448 from\n * [RFC 7748](https://www.rfc-editor.org/rfc/rfc7748)\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { abytes, aInRange, bytesToNumberLE, copyBytes, numberToBytesLE, randomBytes, validateObject, } from \"../utils.js\";\nimport { createKeygen } from \"./curve.js\";\nimport { mod } from \"./modular.js\";\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nfunction validateOpts(curve) {\n    validateObject(curve, {\n        adjustScalarBytes: 'function',\n        powPminus2: 'function',\n    });\n    return Object.freeze({ ...curve });\n}\nexport function montgomery(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { P, type, adjustScalarBytes, powPminus2, randomBytes: rand } = CURVE;\n    const is25519 = type === 'x25519';\n    if (!is25519 && type !== 'x448')\n        throw new Error('invalid type');\n    const randomBytes_ = rand || randomBytes;\n    const montgomeryBits = is25519 ? 255 : 448;\n    const fieldLen = is25519 ? 32 : 56;\n    const Gu = is25519 ? BigInt(9) : BigInt(5);\n    // RFC 7748 #5:\n    // The constant a24 is (486662 - 2) / 4 = 121665 for curve25519/X25519 and\n    // (156326 - 2) / 4 = 39081 for curve448/X448\n    // const a = is25519 ? 156326n : 486662n;\n    const a24 = is25519 ? BigInt(121665) : BigInt(39081);\n    // RFC: x25519 \"the resulting integer is of the form 2^254 plus\n    // eight times a value between 0 and 2^251 - 1 (inclusive)\"\n    // x448: \"2^447 plus four times a value between 0 and 2^445 - 1 (inclusive)\"\n    const minScalar = is25519 ? _2n ** BigInt(254) : _2n ** BigInt(447);\n    const maxAdded = is25519\n        ? BigInt(8) * _2n ** BigInt(251) - _1n\n        : BigInt(4) * _2n ** BigInt(445) - _1n;\n    const maxScalar = minScalar + maxAdded + _1n; // (inclusive)\n    const modP = (n) => mod(n, P);\n    const GuBytes = encodeU(Gu);\n    function encodeU(u) {\n        return numberToBytesLE(modP(u), fieldLen);\n    }\n    function decodeU(u) {\n        const _u = copyBytes(abytes(u, fieldLen, 'uCoordinate'));\n        // RFC: When receiving such an array, implementations of X25519\n        // (but not X448) MUST mask the most significant bit in the final byte.\n        if (is25519)\n            _u[31] &= 127; // 0b0111_1111\n        // RFC: Implementations MUST accept non-canonical values and process them as\n        // if they had been reduced modulo the field prime.  The non-canonical\n        // values are 2^255 - 19 through 2^255 - 1 for X25519 and 2^448 - 2^224\n        // - 1 through 2^448 - 1 for X448.\n        return modP(bytesToNumberLE(_u));\n    }\n    function decodeScalar(scalar) {\n        return bytesToNumberLE(adjustScalarBytes(copyBytes(abytes(scalar, fieldLen, 'scalar'))));\n    }\n    function scalarMult(scalar, u) {\n        const pu = montgomeryLadder(decodeU(u), decodeScalar(scalar));\n        // Some public keys are useless, of low-order. Curve author doesn't think\n        // it needs to be validated, but we do it nonetheless.\n        // https://cr.yp.to/ecdh.html#validate\n        if (pu === _0n)\n            throw new Error('invalid private or public key received');\n        return encodeU(pu);\n    }\n    // Computes public key from private. By doing scalar multiplication of base point.\n    function scalarMultBase(scalar) {\n        return scalarMult(scalar, GuBytes);\n    }\n    const getPublicKey = scalarMultBase;\n    const getSharedSecret = scalarMult;\n    // cswap from RFC7748 \"example code\"\n    function cswap(swap, x_2, x_3) {\n        // dummy = mask(swap) AND (x_2 XOR x_3)\n        // Where mask(swap) is the all-1 or all-0 word of the same length as x_2\n        // and x_3, computed, e.g., as mask(swap) = 0 - swap.\n        const dummy = modP(swap * (x_2 - x_3));\n        x_2 = modP(x_2 - dummy); // x_2 = x_2 XOR dummy\n        x_3 = modP(x_3 + dummy); // x_3 = x_3 XOR dummy\n        return { x_2, x_3 };\n    }\n    /**\n     * Montgomery x-only multiplication ladder.\n     * @param pointU u coordinate (x) on Montgomery Curve 25519\n     * @param scalar by which the point would be multiplied\n     * @returns new Point on Montgomery curve\n     */\n    function montgomeryLadder(u, scalar) {\n        aInRange('u', u, _0n, P);\n        aInRange('scalar', scalar, minScalar, maxScalar);\n        const k = scalar;\n        const x_1 = u;\n        let x_2 = _1n;\n        let z_2 = _0n;\n        let x_3 = u;\n        let z_3 = _1n;\n        let swap = _0n;\n        for (let t = BigInt(montgomeryBits - 1); t >= _0n; t--) {\n            const k_t = (k >> t) & _1n;\n            swap ^= k_t;\n            ({ x_2, x_3 } = cswap(swap, x_2, x_3));\n            ({ x_2: z_2, x_3: z_3 } = cswap(swap, z_2, z_3));\n            swap = k_t;\n            const A = x_2 + z_2;\n            const AA = modP(A * A);\n            const B = x_2 - z_2;\n            const BB = modP(B * B);\n            const E = AA - BB;\n            const C = x_3 + z_3;\n            const D = x_3 - z_3;\n            const DA = modP(D * A);\n            const CB = modP(C * B);\n            const dacb = DA + CB;\n            const da_cb = DA - CB;\n            x_3 = modP(dacb * dacb);\n            z_3 = modP(x_1 * modP(da_cb * da_cb));\n            x_2 = modP(AA * BB);\n            z_2 = modP(E * (AA + modP(a24 * E)));\n        }\n        ({ x_2, x_3 } = cswap(swap, x_2, x_3));\n        ({ x_2: z_2, x_3: z_3 } = cswap(swap, z_2, z_3));\n        const z2 = powPminus2(z_2); // `Fp.pow(x, P - _2n)` is much slower equivalent\n        return modP(x_2 * z2); // Return x_2 * (z_2^(p - 2))\n    }\n    const lengths = {\n        secretKey: fieldLen,\n        publicKey: fieldLen,\n        seed: fieldLen,\n    };\n    const randomSecretKey = (seed = randomBytes_(fieldLen)) => {\n        abytes(seed, lengths.seed, 'seed');\n        return seed;\n    };\n    const utils = { randomSecretKey };\n    return Object.freeze({\n        keygen: createKeygen(randomSecretKey, getPublicKey),\n        getSharedSecret,\n        getPublicKey,\n        scalarMult,\n        scalarMultBase,\n        utils,\n        GuBytes: GuBytes.slice(),\n        lengths,\n    });\n}\n//# sourceMappingURL=montgomery.js.map","/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha512 } from '@noble/hashes/sha2.js';\nimport { abytes, concatBytes, hexToBytes } from '@noble/hashes/utils.js';\nimport {} from \"./abstract/curve.js\";\nimport { eddsa, edwards, PrimeEdwardsPoint, } from \"./abstract/edwards.js\";\nimport { _DST_scalar, createHasher, expand_message_xmd, } from \"./abstract/hash-to-curve.js\";\nimport { FpInvertBatch, FpSqrtEven, isNegativeLE, mod, pow2, } from \"./abstract/modular.js\";\nimport { montgomery } from \"./abstract/montgomery.js\";\nimport { createORPF } from \"./abstract/oprf.js\";\nimport { asciiToBytes, bytesToNumberLE, equalBytes } from \"./utils.js\";\n// prettier-ignore\nconst _0n = /* @__PURE__ */ BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = /* @__PURE__ */ BigInt(3);\n// prettier-ignore\nconst _5n = BigInt(5), _8n = BigInt(8);\n// P = 2n**255n - 19n\nconst ed25519_CURVE_p = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffed');\n// N = 2n**252n + 27742317777372353535851937790883648493n\n// a = Fp.create(BigInt(-1))\n// d = -121665/121666 a.k.a. Fp.neg(121665 * Fp.inv(121666))\nconst ed25519_CURVE = /* @__PURE__ */ (() => ({\n    p: ed25519_CURVE_p,\n    n: BigInt('0x1000000000000000000000000000000014def9dea2f79cd65812631a5cf5d3ed'),\n    h: _8n,\n    a: BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec'),\n    d: BigInt('0x52036cee2b6ffe738cc740797779e89800700a4d4141d8ab75eb4dca135978a3'),\n    Gx: BigInt('0x216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a'),\n    Gy: BigInt('0x6666666666666666666666666666666666666666666666666666666666666658'),\n}))();\nfunction ed25519_pow_2_252_3(x) {\n    // prettier-ignore\n    const _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);\n    const P = ed25519_CURVE_p;\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P; // x^3, 11\n    const b4 = (pow2(b2, _2n, P) * b2) % P; // x^15, 1111\n    const b5 = (pow2(b4, _1n, P) * x) % P; // x^31\n    const b10 = (pow2(b5, _5n, P) * b5) % P;\n    const b20 = (pow2(b10, _10n, P) * b10) % P;\n    const b40 = (pow2(b20, _20n, P) * b20) % P;\n    const b80 = (pow2(b40, _40n, P) * b40) % P;\n    const b160 = (pow2(b80, _80n, P) * b80) % P;\n    const b240 = (pow2(b160, _80n, P) * b80) % P;\n    const b250 = (pow2(b240, _10n, P) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n, P) * x) % P;\n    // ^ To pow to (p+3)/8, multiply it by x.\n    return { pow_p_5_8, b2 };\n}\nfunction adjustScalarBytes(bytes) {\n    // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n    // set the three least significant bits of the first byte\n    bytes[0] &= 248; // 0b1111_1000\n    // and the most significant bit of the last to zero,\n    bytes[31] &= 127; // 0b0111_1111\n    // set the second most significant bit of the last byte to 1\n    bytes[31] |= 64; // 0b0100_0000\n    return bytes;\n}\n// √(-1) aka √(a) aka 2^((p-1)/4)\n// Fp.sqrt(Fp.neg(1))\nconst ED25519_SQRT_M1 = /* @__PURE__ */ BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\n// sqrt(u/v)\nfunction uvRatio(u, v) {\n    const P = ed25519_CURVE_p;\n    const v3 = mod(v * v * v, P); // v³\n    const v7 = mod(v3 * v3 * v, P); // v⁷\n    // (p+3)/8 and (p-5)/8\n    const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow, P); // (uv³)(uv⁷)^(p-5)/8\n    const vx2 = mod(v * x * x, P); // vx²\n    const root1 = x; // First root candidate\n    const root2 = mod(x * ED25519_SQRT_M1, P); // Second root candidate\n    const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n    const useRoot2 = vx2 === mod(-u, P); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n    const noRoot = vx2 === mod(-u * ED25519_SQRT_M1, P); // There is no valid root, vx² = -u√(-1)\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2; // We return root2 anyway, for const-time\n    if (isNegativeLE(x, P))\n        x = mod(-x, P);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\nconst ed25519_Point = /* @__PURE__ */ edwards(ed25519_CURVE, { uvRatio });\nconst Fp = /* @__PURE__ */ (() => ed25519_Point.Fp)();\nconst Fn = /* @__PURE__ */ (() => ed25519_Point.Fn)();\nfunction ed25519_domain(data, ctx, phflag) {\n    if (ctx.length > 255)\n        throw new Error('Context is too big');\n    return concatBytes(asciiToBytes('SigEd25519 no Ed25519 collisions'), new Uint8Array([phflag ? 1 : 0, ctx.length]), ctx, data);\n}\nfunction ed(opts) {\n    return eddsa(ed25519_Point, sha512, Object.assign({ adjustScalarBytes }, opts));\n}\n/**\n * ed25519 curve with EdDSA signatures.\n * @example\n * ```js\n * import { ed25519 } from '@noble/curves/ed25519.js';\n * const { secretKey, publicKey } = ed25519.keygen();\n * // const publicKey = ed25519.getPublicKey(secretKey);\n * const msg = new TextEncoder().encode('hello noble');\n * const sig = ed25519.sign(msg, secretKey);\n * const isValid = ed25519.verify(sig, msg, pub); // ZIP215\n * // RFC8032 / FIPS 186-5\n * const isValid2 = ed25519.verify(sig, msg, pub, { zip215: false });\n * ```\n */\nexport const ed25519 = /* @__PURE__ */ ed({});\n/** Context version of ed25519 (ctx for domain separation). See {@link ed25519} */\nexport const ed25519ctx = /* @__PURE__ */ ed({ domain: ed25519_domain });\n/** Prehashed version of ed25519. See {@link ed25519} */\nexport const ed25519ph = /* @__PURE__ */ ed({ domain: ed25519_domain, prehash: sha512 });\n/**\n * ECDH using curve25519 aka x25519.\n * @example\n * ```js\n * import { x25519 } from '@noble/curves/ed25519.js';\n * const alice = x25519.keygen();\n * const bob = x25519.keygen();\n * const shared = x25519.getSharedSecret(alice.secretKey, bob.publicKey);\n * ```\n */\nexport const x25519 = /* @__PURE__ */ (() => {\n    const P = ed25519_CURVE_p;\n    return montgomery({\n        P,\n        type: 'x25519',\n        powPminus2: (x) => {\n            // x^(p-2) aka x^(2^255-21)\n            const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);\n            return mod(pow2(pow_p_5_8, _3n, P) * b2, P);\n        },\n        adjustScalarBytes,\n    });\n})();\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\nconst ELL2_C1 = /* @__PURE__ */ (() => (ed25519_CURVE_p + _3n) / _8n)(); // 1. c1 = (q + 3) / 8       # Integer arithmetic\nconst ELL2_C2 = /* @__PURE__ */ (() => Fp.pow(_2n, ELL2_C1))(); // 2. c2 = 2^c1\nconst ELL2_C3 = /* @__PURE__ */ (() => Fp.sqrt(Fp.neg(Fp.ONE)))(); // 3. c3 = sqrt(-1)\n/**\n * RFC 9380 method `map_to_curve_elligator2_curve25519`. Experimental name: may be renamed later.\n * @private\n */\n// prettier-ignore\nexport function _map_to_curve_elligator2_curve25519(u) {\n    const ELL2_C4 = (ed25519_CURVE_p - _5n) / _8n; // 4. c4 = (q - 5) / 8       # Integer arithmetic\n    const ELL2_J = BigInt(486662);\n    let tv1 = Fp.sqr(u); //  1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, _2n); //  2.  tv1 = 2 * tv1\n    let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n    let x1n = Fp.neg(ELL2_J); //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n    let tv2 = Fp.sqr(xd); //  5.  tv2 = xd^2\n    let gxd = Fp.mul(tv2, xd); //  6.  gxd = tv2 * xd        # gxd = xd^3\n    let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd\n    gx1 = Fp.mul(gx1, x1n); //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n    gx1 = Fp.add(gx1, tv2); //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n    gx1 = Fp.mul(gx1, x1n); //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n    let tv3 = Fp.sqr(gxd); //  11. tv3 = gxd^2\n    tv2 = Fp.sqr(tv3); //  12. tv2 = tv3^2           # gxd^4\n    tv3 = Fp.mul(tv3, gxd); //  13. tv3 = tv3 * gxd       # gxd^3\n    tv3 = Fp.mul(tv3, gx1); //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n    tv2 = Fp.mul(tv2, tv3); //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n    let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n    y11 = Fp.mul(y11, tv3); //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n    let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n    tv2 = Fp.sqr(y11); //  19. tv2 = y11^2\n    tv2 = Fp.mul(tv2, gxd); //  20. tv2 = tv2 * gxd\n    let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1\n    let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n    let x2n = Fp.mul(x1n, tv1); //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n    let y21 = Fp.mul(y11, u); //  24. y21 = y11 * u\n    y21 = Fp.mul(y21, ELL2_C2); //  25. y21 = y21 * c2\n    let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n    let gx2 = Fp.mul(gx1, tv1); //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n    tv2 = Fp.sqr(y21); //  28. tv2 = y21^2\n    tv2 = Fp.mul(tv2, gxd); //  29. tv2 = tv2 * gxd\n    let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2\n    let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n    tv2 = Fp.sqr(y1); //  32. tv2 = y1^2\n    tv2 = Fp.mul(tv2, gxd); //  33. tv2 = tv2 * gxd\n    let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1\n    let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n    let y = Fp.cmov(y2, y1, e3); //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n    let e4 = Fp.isOdd(y); //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n    y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n    return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)\n}\nconst ELL2_C1_EDWARDS = /* @__PURE__ */ (() => FpSqrtEven(Fp, Fp.neg(BigInt(486664))))(); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u) {\n    const { xMn, xMd, yMn, yMd } = _map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) =\n    // map_to_curve_elligator2_curve25519(u)\n    let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n    xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n    let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n    let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n    let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n    let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n    let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n    xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n    xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n    yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n    yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n    const [xd_inv, yd_inv] = FpInvertBatch(Fp, [xd, yd], true); // batch division\n    return { x: Fp.mul(xn, xd_inv), y: Fp.mul(yn, yd_inv) }; //  13. return (xn, xd, yn, yd)\n}\n/** Hashing to ed25519 points / field. RFC 9380 methods. */\nexport const ed25519_hasher = /* @__PURE__ */ (() => createHasher(ed25519_Point, (scalars) => map_to_curve_elligator2_edwards25519(scalars[0]), {\n    DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n    encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n    p: ed25519_CURVE_p,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha512,\n}))();\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst SQRT_M1 = ED25519_SQRT_M1;\n// √(ad - 1)\nconst SQRT_AD_MINUS_ONE = /* @__PURE__ */ BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\n// 1 / √(a-d)\nconst INVSQRT_A_MINUS_D = /* @__PURE__ */ BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\n// 1-d²\nconst ONE_MINUS_D_SQ = /* @__PURE__ */ BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\n// (d-1)²\nconst D_MINUS_ONE_SQ = /* @__PURE__ */ BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\n// Calculates 1/√(number)\nconst invertSqrt = (number) => uvRatio(_1n, number);\nconst MAX_255B = /* @__PURE__ */ BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nconst bytes255ToNumberLE = (bytes) => Fp.create(bytesToNumberLE(bytes) & MAX_255B);\n/**\n * Computes Elligator map for Ristretto255.\n * Described in [RFC9380](https://www.rfc-editor.org/rfc/rfc9380#appendix-B) and on\n * the [website](https://ristretto.group/formulas/elligator.html).\n */\nfunction calcElligatorRistrettoMap(r0) {\n    const { d } = ed25519_CURVE;\n    const P = ed25519_CURVE_p;\n    const mod = (n) => Fp.create(n);\n    const r = mod(SQRT_M1 * r0 * r0); // 1\n    const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n    let c = BigInt(-1); // 3\n    const D = mod((c - d * r) * mod(r + d)); // 4\n    let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5\n    let s_ = mod(s * r0); // 6\n    if (!isNegativeLE(s_, P))\n        s_ = mod(-s_);\n    if (!Ns_D_is_sq)\n        s = s_; // 7\n    if (!Ns_D_is_sq)\n        c = r; // 8\n    const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n    const s2 = s * s;\n    const W0 = mod((s + s) * D); // 10\n    const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n    const W2 = mod(_1n - s2); // 12\n    const W3 = mod(_1n + s2); // 13\n    return new ed25519_Point(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\n/**\n * Wrapper over Edwards Point for ristretto255.\n *\n * Each ed25519/EdwardsPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like EdwardsPoint,\n * but it should work in its own namespace: do not combine those two.\n * See [RFC9496](https://www.rfc-editor.org/rfc/rfc9496).\n */\nclass _RistrettoPoint extends PrimeEdwardsPoint {\n    // Do NOT change syntax: the following gymnastics is done,\n    // because typescript strips comments, which makes bundlers disable tree-shaking.\n    // prettier-ignore\n    static BASE = \n    /* @__PURE__ */ (() => new _RistrettoPoint(ed25519_Point.BASE))();\n    // prettier-ignore\n    static ZERO = \n    /* @__PURE__ */ (() => new _RistrettoPoint(ed25519_Point.ZERO))();\n    // prettier-ignore\n    static Fp = \n    /* @__PURE__ */ (() => Fp)();\n    // prettier-ignore\n    static Fn = \n    /* @__PURE__ */ (() => Fn)();\n    constructor(ep) {\n        super(ep);\n    }\n    static fromAffine(ap) {\n        return new _RistrettoPoint(ed25519_Point.fromAffine(ap));\n    }\n    assertSame(other) {\n        if (!(other instanceof _RistrettoPoint))\n            throw new Error('RistrettoPoint expected');\n    }\n    init(ep) {\n        return new _RistrettoPoint(ep);\n    }\n    static fromBytes(bytes) {\n        abytes(bytes, 32);\n        const { a, d } = ed25519_CURVE;\n        const P = ed25519_CURVE_p;\n        const mod = (n) => Fp.create(n);\n        const s = bytes255ToNumberLE(bytes);\n        // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n        // 3. Check that s is non-negative, or else abort\n        if (!equalBytes(Fp.toBytes(s), bytes) || isNegativeLE(s, P))\n            throw new Error('invalid ristretto255 encoding 1');\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2); // 4 (a is -1)\n        const u2 = mod(_1n - a * s2); // 5\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2); // 6\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7\n        const Dx = mod(I * u2); // 8\n        const Dy = mod(I * Dx * v); // 9\n        let x = mod((s + s) * Dx); // 10\n        if (isNegativeLE(x, P))\n            x = mod(-x); // 10\n        const y = mod(u1 * Dy); // 11\n        const t = mod(x * y); // 12\n        if (!isValid || isNegativeLE(t, P) || y === _0n)\n            throw new Error('invalid ristretto255 encoding 2');\n        return new _RistrettoPoint(new ed25519_Point(x, y, _1n, t));\n    }\n    /**\n     * Converts ristretto-encoded string to ristretto point.\n     * Described in [RFC9496](https://www.rfc-editor.org/rfc/rfc9496#name-decode).\n     * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n     */\n    static fromHex(hex) {\n        return _RistrettoPoint.fromBytes(hexToBytes(hex));\n    }\n    /**\n     * Encodes ristretto point to Uint8Array.\n     * Described in [RFC9496](https://www.rfc-editor.org/rfc/rfc9496#name-encode).\n     */\n    toBytes() {\n        let { X, Y, Z, T } = this.ep;\n        const P = ed25519_CURVE_p;\n        const mod = (n) => Fp.create(n);\n        const u1 = mod(mod(Z + Y) * mod(Z - Y)); // 1\n        const u2 = mod(X * Y); // 2\n        // Square root always exists\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3\n        const D1 = mod(invsqrt * u1); // 4\n        const D2 = mod(invsqrt * u2); // 5\n        const zInv = mod(D1 * D2 * T); // 6\n        let D; // 7\n        if (isNegativeLE(T * zInv, P)) {\n            let _x = mod(Y * SQRT_M1);\n            let _y = mod(X * SQRT_M1);\n            X = _x;\n            Y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2; // 8\n        }\n        if (isNegativeLE(X * zInv, P))\n            Y = mod(-Y); // 9\n        let s = mod((Z - Y) * D); // 10 (check footer's note, no sqrt(-a))\n        if (isNegativeLE(s, P))\n            s = mod(-s);\n        return Fp.toBytes(s); // 11\n    }\n    /**\n     * Compares two Ristretto points.\n     * Described in [RFC9496](https://www.rfc-editor.org/rfc/rfc9496#name-equals).\n     */\n    equals(other) {\n        this.assertSame(other);\n        const { X: X1, Y: Y1 } = this.ep;\n        const { X: X2, Y: Y2 } = other.ep;\n        const mod = (n) => Fp.create(n);\n        // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n        const one = mod(X1 * Y2) === mod(Y1 * X2);\n        const two = mod(Y1 * Y2) === mod(X1 * X2);\n        return one || two;\n    }\n    is0() {\n        return this.equals(_RistrettoPoint.ZERO);\n    }\n}\nexport const ristretto255 = { Point: _RistrettoPoint };\n/** Hashing to ristretto255 points / field. RFC 9380 methods. */\nexport const ristretto255_hasher = {\n    Point: _RistrettoPoint,\n    /**\n    * Spec: https://www.rfc-editor.org/rfc/rfc9380.html#name-hashing-to-ristretto255. Caveats:\n    * * There are no test vectors\n    * * encodeToCurve / mapToCurve is undefined\n    * * mapToCurve would be `calcElligatorRistrettoMap(scalars[0])`, not ristretto255_map!\n    * * hashToScalar is undefined too, so we just use OPRF implementation\n    * * We cannot re-use 'createHasher', because ristretto255_map is different algorithm/RFC\n      (os2ip -> bytes255ToNumberLE)\n    * * mapToCurve == calcElligatorRistrettoMap, hashToCurve == ristretto255_map\n    * * hashToScalar is undefined in RFC9380 for ristretto, we are using version from OPRF here, using bytes255ToNumblerLE will create different result if we use bytes255ToNumberLE as os2ip\n    * * current version is closest to spec.\n    */\n    hashToCurve(msg, options) {\n        // == 'hash_to_ristretto255'\n        const DST = options?.DST || 'ristretto255_XMD:SHA-512_R255MAP_RO_';\n        const xmd = expand_message_xmd(msg, DST, 64, sha512);\n        // NOTE: RFC 9380 incorrectly calls this function 'ristretto255_map', in RFC 9496 map was function inside (per point)\n        // That also lead to confustion that ristretto255_map is mapToCurve (it is not! it is old hashToCurve)\n        return ristretto255_hasher.deriveToCurve(xmd);\n    },\n    hashToScalar(msg, options = { DST: _DST_scalar }) {\n        const xmd = expand_message_xmd(msg, options.DST, 64, sha512);\n        return Fn.create(bytesToNumberLE(xmd));\n    },\n    /**\n     * HashToCurve-like construction based on RFC 9496 (Element Derivation).\n     * Converts 64 uniform random bytes into a curve point.\n     *\n     * WARNING: This represents an older hash-to-curve construction, preceding the finalization of RFC 9380.\n     * It was later reused as a component in the newer `hash_to_ristretto255` function defined in RFC 9380.\n     */\n    deriveToCurve(bytes) {\n        // https://www.rfc-editor.org/rfc/rfc9496.html#name-element-derivation\n        abytes(bytes, 64);\n        const r1 = bytes255ToNumberLE(bytes.subarray(0, 32));\n        const R1 = calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(bytes.subarray(32, 64));\n        const R2 = calcElligatorRistrettoMap(r2);\n        return new _RistrettoPoint(R1.add(R2));\n    },\n};\n/** ristretto255 OPRF, defined in RFC 9497. */\nexport const ristretto255_oprf = /* @__PURE__ */ (() => createORPF({\n    name: 'ristretto255-SHA512',\n    Point: _RistrettoPoint,\n    hash: sha512,\n    hashToGroup: ristretto255_hasher.hashToCurve,\n    hashToScalar: ristretto255_hasher.hashToScalar,\n}))();\n/**\n * Weird / bogus points, useful for debugging.\n * All 8 ed25519 points of 8-torsion subgroup can be generated from the point\n * T = `26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05`.\n * ⟨T⟩ = { O, T, 2T, 3T, 4T, 5T, 6T, 7T }\n */\nexport const ED25519_TORSION_SUBGROUP = [\n    '0100000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n    '0000000000000000000000000000000000000000000000000000000000000080',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n    'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n    '0000000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n];\n//# sourceMappingURL=ed25519.js.map","/**\n * Signing a message failed\n */\nexport class SigningError extends Error {\n    constructor(message = 'An error occurred while signing a message') {\n        super(message);\n        this.name = 'SigningError';\n    }\n}\n/**\n * Verifying a message signature failed\n */\nexport class VerificationError extends Error {\n    constructor(message = 'An error occurred while verifying a message') {\n        super(message);\n        this.name = 'VerificationError';\n    }\n}\n/**\n * WebCrypto was not available in the current context\n */\nexport class WebCryptoMissingError extends Error {\n    constructor(message = 'Missing Web Crypto API') {\n        super(message);\n        this.name = 'WebCryptoMissingError';\n    }\n}\n//# sourceMappingURL=errors.js.map","/* eslint-env browser */\nimport { WebCryptoMissingError } from '../errors.js';\n// Check native crypto exists and is enabled (In insecure context `self.crypto`\n// exists but `self.crypto.subtle` does not).\nexport default {\n    get(win = globalThis) {\n        const nativeCrypto = win.crypto;\n        if (nativeCrypto?.subtle == null) {\n            throw new WebCryptoMissingError('Missing Web Crypto API. ' +\n                'The most likely cause of this error is that this page is being accessed ' +\n                'from an insecure context (i.e. not HTTPS). For more information and ' +\n                'possible resolutions see ' +\n                'https://github.com/libp2p/js-libp2p/blob/main/packages/crypto/README.md#web-crypto-api');\n        }\n        return nativeCrypto;\n    }\n};\n//# sourceMappingURL=webcrypto.browser.js.map","import { ed25519 as ed } from '@noble/curves/ed25519.js';\nimport { toString as uint8arrayToString } from 'uint8arrays/to-string';\nimport crypto from '../../webcrypto/index.js';\nconst PUBLIC_KEY_BYTE_LENGTH = 32;\nconst PRIVATE_KEY_BYTE_LENGTH = 64; // private key is actually 32 bytes but for historical reasons we concat private and public keys\nconst KEYS_BYTE_LENGTH = 32;\nexport { PUBLIC_KEY_BYTE_LENGTH as publicKeyLength };\nexport { PRIVATE_KEY_BYTE_LENGTH as privateKeyLength };\n// memoize support result to skip additional awaits every time we use an ed key\nlet ed25519Supported;\nconst webCryptoEd25519SupportedPromise = (async () => {\n    try {\n        await crypto.get().subtle.generateKey({ name: 'Ed25519' }, true, ['sign', 'verify']);\n        return true;\n    }\n    catch {\n        return false;\n    }\n})();\nexport function generateKey() {\n    // the actual private key (32 bytes)\n    const privateKeyRaw = ed.utils.randomSecretKey();\n    const publicKey = ed.getPublicKey(privateKeyRaw);\n    // concatenated the public key to the private key\n    const privateKey = concatKeys(privateKeyRaw, publicKey);\n    return {\n        privateKey,\n        publicKey\n    };\n}\nexport function generateKeyFromSeed(seed) {\n    if (seed.length !== KEYS_BYTE_LENGTH) {\n        throw new TypeError('\"seed\" must be 32 bytes in length.');\n    }\n    else if (!(seed instanceof Uint8Array)) {\n        throw new TypeError('\"seed\" must be a node.js Buffer, or Uint8Array.');\n    }\n    // based on node forges algorithm, the seed is used directly as private key\n    const privateKeyRaw = seed;\n    const publicKey = ed.getPublicKey(privateKeyRaw);\n    const privateKey = concatKeys(privateKeyRaw, publicKey);\n    return {\n        privateKey,\n        publicKey\n    };\n}\nasync function hashAndSignWebCrypto(privateKey, msg) {\n    let privateKeyRaw;\n    if (privateKey.length === PRIVATE_KEY_BYTE_LENGTH) {\n        privateKeyRaw = privateKey.subarray(0, 32);\n    }\n    else {\n        privateKeyRaw = privateKey;\n    }\n    const jwk = {\n        crv: 'Ed25519',\n        kty: 'OKP',\n        x: uint8arrayToString(privateKey.subarray(32), 'base64url'),\n        d: uint8arrayToString(privateKeyRaw, 'base64url'),\n        ext: true,\n        key_ops: ['sign']\n    };\n    const key = await crypto.get().subtle.importKey('jwk', jwk, { name: 'Ed25519' }, true, ['sign']);\n    const sig = await crypto.get().subtle.sign({ name: 'Ed25519' }, key, msg instanceof Uint8Array ? msg : msg.subarray());\n    return new Uint8Array(sig, 0, sig.byteLength);\n}\nexport function hashAndSignNoble(privateKey, msg) {\n    const privateKeyRaw = privateKey.subarray(0, KEYS_BYTE_LENGTH);\n    return ed.sign(msg instanceof Uint8Array ? msg : msg.subarray(), privateKeyRaw);\n}\nexport async function hashAndSign(privateKey, msg) {\n    if (ed25519Supported == null) {\n        ed25519Supported = await webCryptoEd25519SupportedPromise;\n    }\n    if (ed25519Supported) {\n        return hashAndSignWebCrypto(privateKey, msg);\n    }\n    return hashAndSignNoble(privateKey, msg);\n}\nasync function hashAndVerifyWebCrypto(publicKey, sig, msg) {\n    if (publicKey.buffer instanceof ArrayBuffer) {\n        const key = await crypto.get().subtle.importKey('raw', publicKey.buffer, { name: 'Ed25519' }, false, ['verify']);\n        const isValid = await crypto.get().subtle.verify({ name: 'Ed25519' }, key, sig, msg instanceof Uint8Array ? msg : msg.subarray());\n        return isValid;\n    }\n    throw new TypeError('WebCrypto does not support SharedArrayBuffer for Ed25519 keys');\n}\nexport function hashAndVerifyNoble(publicKey, sig, msg) {\n    return ed.verify(sig, msg instanceof Uint8Array ? msg : msg.subarray(), publicKey);\n}\nexport async function hashAndVerify(publicKey, sig, msg) {\n    if (ed25519Supported == null) {\n        ed25519Supported = await webCryptoEd25519SupportedPromise;\n    }\n    if (ed25519Supported) {\n        return hashAndVerifyWebCrypto(publicKey, sig, msg);\n    }\n    return hashAndVerifyNoble(publicKey, sig, msg);\n}\nfunction concatKeys(privateKeyRaw, publicKey) {\n    const privateKey = new Uint8Array(PRIVATE_KEY_BYTE_LENGTH);\n    for (let i = 0; i < KEYS_BYTE_LENGTH; i++) {\n        privateKey[i] = privateKeyRaw[i];\n        privateKey[KEYS_BYTE_LENGTH + i] = publicKey[i];\n    }\n    return privateKey;\n}\n//# sourceMappingURL=index.browser.js.map","import { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nexport function base64urlToBuffer(str, len) {\n    let buf = uint8ArrayFromString(str, 'base64urlpad');\n    if (len != null) {\n        if (buf.length > len) {\n            throw new Error('byte array longer than desired length');\n        }\n        buf = uint8ArrayConcat([new Uint8Array(len - buf.length), buf]);\n    }\n    return buf;\n}\nexport function isPromise(thing) {\n    if (thing == null) {\n        return false;\n    }\n    return typeof thing.then === 'function' &&\n        typeof thing.catch === 'function' &&\n        typeof thing.finally === 'function';\n}\n//# sourceMappingURL=util.js.map","import { base58btc } from 'multiformats/bases/base58';\nimport { CID } from 'multiformats/cid';\nimport { identity } from 'multiformats/hashes/identity';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport { isPromise } from \"../../util.js\";\nimport { publicKeyToProtobuf } from '../index.js';\nimport { ensureEd25519Key } from './utils.js';\nimport * as crypto from './index.js';\nexport class Ed25519PublicKey {\n    type = 'Ed25519';\n    raw;\n    constructor(key) {\n        this.raw = ensureEd25519Key(key, crypto.publicKeyLength);\n    }\n    toMultihash() {\n        return identity.digest(publicKeyToProtobuf(this));\n    }\n    toCID() {\n        return CID.createV1(114, this.toMultihash());\n    }\n    toString() {\n        return base58btc.encode(this.toMultihash().bytes).substring(1);\n    }\n    equals(key) {\n        if (key == null || !(key.raw instanceof Uint8Array)) {\n            return false;\n        }\n        return uint8ArrayEquals(this.raw, key.raw);\n    }\n    verify(data, sig, options) {\n        options?.signal?.throwIfAborted();\n        const result = crypto.hashAndVerify(this.raw, sig, data);\n        if (isPromise(result)) {\n            return result.then(res => {\n                options?.signal?.throwIfAborted();\n                return res;\n            });\n        }\n        return result;\n    }\n}\nexport class Ed25519PrivateKey {\n    type = 'Ed25519';\n    raw;\n    publicKey;\n    // key       - 64 byte Uint8Array containing private key\n    // publicKey - 32 byte Uint8Array containing public key\n    constructor(key, publicKey) {\n        this.raw = ensureEd25519Key(key, crypto.privateKeyLength);\n        this.publicKey = new Ed25519PublicKey(publicKey);\n    }\n    equals(key) {\n        if (key == null || !(key.raw instanceof Uint8Array)) {\n            return false;\n        }\n        return uint8ArrayEquals(this.raw, key.raw);\n    }\n    sign(message, options) {\n        options?.signal?.throwIfAborted();\n        const sig = crypto.hashAndSign(this.raw, message);\n        if (isPromise(sig)) {\n            return sig.then(res => {\n                options?.signal?.throwIfAborted();\n                return res;\n            });\n        }\n        options?.signal?.throwIfAborted();\n        return sig;\n    }\n}\n//# sourceMappingURL=ed25519.js.map","import { InvalidParametersError } from '@libp2p/interface';\nimport { Ed25519PublicKey as Ed25519PublicKeyClass, Ed25519PrivateKey as Ed25519PrivateKeyClass } from './ed25519.js';\nimport * as crypto from './index.js';\nexport function unmarshalEd25519PrivateKey(bytes) {\n    // Try the old, redundant public key version\n    if (bytes.length > crypto.privateKeyLength) {\n        bytes = ensureEd25519Key(bytes, crypto.privateKeyLength + crypto.publicKeyLength);\n        const privateKeyBytes = bytes.subarray(0, crypto.privateKeyLength);\n        const publicKeyBytes = bytes.subarray(crypto.privateKeyLength, bytes.length);\n        return new Ed25519PrivateKeyClass(privateKeyBytes, publicKeyBytes);\n    }\n    bytes = ensureEd25519Key(bytes, crypto.privateKeyLength);\n    const privateKeyBytes = bytes.subarray(0, crypto.privateKeyLength);\n    const publicKeyBytes = bytes.subarray(crypto.publicKeyLength);\n    return new Ed25519PrivateKeyClass(privateKeyBytes, publicKeyBytes);\n}\nexport function unmarshalEd25519PublicKey(bytes) {\n    bytes = ensureEd25519Key(bytes, crypto.publicKeyLength);\n    return new Ed25519PublicKeyClass(bytes);\n}\nexport async function generateEd25519KeyPair() {\n    const { privateKey, publicKey } = crypto.generateKey();\n    return new Ed25519PrivateKeyClass(privateKey, publicKey);\n}\nexport async function generateEd25519KeyPairFromSeed(seed) {\n    const { privateKey, publicKey } = crypto.generateKeyFromSeed(seed);\n    return new Ed25519PrivateKeyClass(privateKey, publicKey);\n}\nexport function ensureEd25519Key(key, length) {\n    key = Uint8Array.from(key ?? []);\n    if (key.length !== length) {\n        throw new InvalidParametersError(`Key must be a Uint8Array of length ${length}, got ${key.length}`);\n    }\n    return key;\n}\n//# sourceMappingURL=utils.js.map","/* eslint-disable no-fallthrough */\nimport { allocUnsafe } from 'uint8arrays/alloc';\nconst N1 = Math.pow(2, 7);\nconst N2 = Math.pow(2, 14);\nconst N3 = Math.pow(2, 21);\nconst N4 = Math.pow(2, 28);\nconst N5 = Math.pow(2, 35);\nconst N6 = Math.pow(2, 42);\nconst N7 = Math.pow(2, 49);\n/** Most significant bit of a byte */\nconst MSB = 0x80;\n/** Rest of the bits in a byte */\nconst REST = 0x7f;\nexport function encodingLength(value) {\n    if (value < N1) {\n        return 1;\n    }\n    if (value < N2) {\n        return 2;\n    }\n    if (value < N3) {\n        return 3;\n    }\n    if (value < N4) {\n        return 4;\n    }\n    if (value < N5) {\n        return 5;\n    }\n    if (value < N6) {\n        return 6;\n    }\n    if (value < N7) {\n        return 7;\n    }\n    if (Number.MAX_SAFE_INTEGER != null && value > Number.MAX_SAFE_INTEGER) {\n        throw new RangeError('Could not encode varint');\n    }\n    return 8;\n}\nexport function encodeUint8Array(value, buf, offset = 0) {\n    switch (encodingLength(value)) {\n        case 8: {\n            buf[offset++] = (value & 0xFF) | MSB;\n            value /= 128;\n        }\n        case 7: {\n            buf[offset++] = (value & 0xFF) | MSB;\n            value /= 128;\n        }\n        case 6: {\n            buf[offset++] = (value & 0xFF) | MSB;\n            value /= 128;\n        }\n        case 5: {\n            buf[offset++] = (value & 0xFF) | MSB;\n            value /= 128;\n        }\n        case 4: {\n            buf[offset++] = (value & 0xFF) | MSB;\n            value >>>= 7;\n        }\n        case 3: {\n            buf[offset++] = (value & 0xFF) | MSB;\n            value >>>= 7;\n        }\n        case 2: {\n            buf[offset++] = (value & 0xFF) | MSB;\n            value >>>= 7;\n        }\n        case 1: {\n            buf[offset++] = (value & 0xFF);\n            value >>>= 7;\n            break;\n        }\n        default: throw new Error('unreachable');\n    }\n    return buf;\n}\nexport function encodeUint8ArrayList(value, buf, offset = 0) {\n    switch (encodingLength(value)) {\n        case 8: {\n            buf.set(offset++, (value & 0xFF) | MSB);\n            value /= 128;\n        }\n        case 7: {\n            buf.set(offset++, (value & 0xFF) | MSB);\n            value /= 128;\n        }\n        case 6: {\n            buf.set(offset++, (value & 0xFF) | MSB);\n            value /= 128;\n        }\n        case 5: {\n            buf.set(offset++, (value & 0xFF) | MSB);\n            value /= 128;\n        }\n        case 4: {\n            buf.set(offset++, (value & 0xFF) | MSB);\n            value >>>= 7;\n        }\n        case 3: {\n            buf.set(offset++, (value & 0xFF) | MSB);\n            value >>>= 7;\n        }\n        case 2: {\n            buf.set(offset++, (value & 0xFF) | MSB);\n            value >>>= 7;\n        }\n        case 1: {\n            buf.set(offset++, (value & 0xFF));\n            value >>>= 7;\n            break;\n        }\n        default: throw new Error('unreachable');\n    }\n    return buf;\n}\nexport function decodeUint8Array(buf, offset) {\n    let b = buf[offset];\n    let res = 0;\n    res += b & REST;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf[offset + 1];\n    res += (b & REST) << 7;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf[offset + 2];\n    res += (b & REST) << 14;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf[offset + 3];\n    res += (b & REST) << 21;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf[offset + 4];\n    res += (b & REST) * N4;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf[offset + 5];\n    res += (b & REST) * N5;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf[offset + 6];\n    res += (b & REST) * N6;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf[offset + 7];\n    res += (b & REST) * N7;\n    if (b < MSB) {\n        return res;\n    }\n    throw new RangeError('Could not decode varint');\n}\nexport function decodeUint8ArrayList(buf, offset) {\n    let b = buf.get(offset);\n    let res = 0;\n    res += b & REST;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf.get(offset + 1);\n    res += (b & REST) << 7;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf.get(offset + 2);\n    res += (b & REST) << 14;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf.get(offset + 3);\n    res += (b & REST) << 21;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf.get(offset + 4);\n    res += (b & REST) * N4;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf.get(offset + 5);\n    res += (b & REST) * N5;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf.get(offset + 6);\n    res += (b & REST) * N6;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf.get(offset + 7);\n    res += (b & REST) * N7;\n    if (b < MSB) {\n        return res;\n    }\n    throw new RangeError('Could not decode varint');\n}\nexport function encode(value, buf, offset = 0) {\n    if (buf == null) {\n        buf = allocUnsafe(encodingLength(value));\n    }\n    if (buf instanceof Uint8Array) {\n        return encodeUint8Array(value, buf, offset);\n    }\n    else {\n        return encodeUint8ArrayList(value, buf, offset);\n    }\n}\nexport function decode(buf, offset = 0) {\n    if (buf instanceof Uint8Array) {\n        return decodeUint8Array(buf, offset);\n    }\n    else {\n        return decodeUint8ArrayList(buf, offset);\n    }\n}\n//# sourceMappingURL=index.js.map","const f32 = new Float32Array([-0]);\nconst f8b = new Uint8Array(f32.buffer);\n/**\n * Writes a 32 bit float to a buffer using little endian byte order\n */\nexport function writeFloatLE(val, buf, pos) {\n    f32[0] = val;\n    buf[pos] = f8b[0];\n    buf[pos + 1] = f8b[1];\n    buf[pos + 2] = f8b[2];\n    buf[pos + 3] = f8b[3];\n}\n/**\n * Writes a 32 bit float to a buffer using big endian byte order\n */\nexport function writeFloatBE(val, buf, pos) {\n    f32[0] = val;\n    buf[pos] = f8b[3];\n    buf[pos + 1] = f8b[2];\n    buf[pos + 2] = f8b[1];\n    buf[pos + 3] = f8b[0];\n}\n/**\n * Reads a 32 bit float from a buffer using little endian byte order\n */\nexport function readFloatLE(buf, pos) {\n    f8b[0] = buf[pos];\n    f8b[1] = buf[pos + 1];\n    f8b[2] = buf[pos + 2];\n    f8b[3] = buf[pos + 3];\n    return f32[0];\n}\n/**\n * Reads a 32 bit float from a buffer using big endian byte order\n */\nexport function readFloatBE(buf, pos) {\n    f8b[3] = buf[pos];\n    f8b[2] = buf[pos + 1];\n    f8b[1] = buf[pos + 2];\n    f8b[0] = buf[pos + 3];\n    return f32[0];\n}\nconst f64 = new Float64Array([-0]);\nconst d8b = new Uint8Array(f64.buffer);\n/**\n * Writes a 64 bit double to a buffer using little endian byte order\n */\nexport function writeDoubleLE(val, buf, pos) {\n    f64[0] = val;\n    buf[pos] = d8b[0];\n    buf[pos + 1] = d8b[1];\n    buf[pos + 2] = d8b[2];\n    buf[pos + 3] = d8b[3];\n    buf[pos + 4] = d8b[4];\n    buf[pos + 5] = d8b[5];\n    buf[pos + 6] = d8b[6];\n    buf[pos + 7] = d8b[7];\n}\n/**\n * Writes a 64 bit double to a buffer using big endian byte order\n */\nexport function writeDoubleBE(val, buf, pos) {\n    f64[0] = val;\n    buf[pos] = d8b[7];\n    buf[pos + 1] = d8b[6];\n    buf[pos + 2] = d8b[5];\n    buf[pos + 3] = d8b[4];\n    buf[pos + 4] = d8b[3];\n    buf[pos + 5] = d8b[2];\n    buf[pos + 6] = d8b[1];\n    buf[pos + 7] = d8b[0];\n}\n/**\n * Reads a 64 bit double from a buffer using little endian byte order\n */\nexport function readDoubleLE(buf, pos) {\n    d8b[0] = buf[pos];\n    d8b[1] = buf[pos + 1];\n    d8b[2] = buf[pos + 2];\n    d8b[3] = buf[pos + 3];\n    d8b[4] = buf[pos + 4];\n    d8b[5] = buf[pos + 5];\n    d8b[6] = buf[pos + 6];\n    d8b[7] = buf[pos + 7];\n    return f64[0];\n}\n/**\n * Reads a 64 bit double from a buffer using big endian byte order\n */\nexport function readDoubleBE(buf, pos) {\n    d8b[7] = buf[pos];\n    d8b[6] = buf[pos + 1];\n    d8b[5] = buf[pos + 2];\n    d8b[4] = buf[pos + 3];\n    d8b[3] = buf[pos + 4];\n    d8b[2] = buf[pos + 5];\n    d8b[1] = buf[pos + 6];\n    d8b[0] = buf[pos + 7];\n    return f64[0];\n}\n//# sourceMappingURL=float.js.map","// the largest BigInt we can safely downcast to a Number\nconst MAX_SAFE_NUMBER_INTEGER = BigInt(Number.MAX_SAFE_INTEGER);\nconst MIN_SAFE_NUMBER_INTEGER = BigInt(Number.MIN_SAFE_INTEGER);\n/**\n * Constructs new long bits.\n *\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @function Object() { [native code] }\n * @param {number} lo - Low 32 bits, unsigned\n * @param {number} hi - High 32 bits, unsigned\n */\nexport class LongBits {\n    lo;\n    hi;\n    constructor(lo, hi) {\n        // note that the casts below are theoretically unnecessary as of today, but older statically\n        // generated converter code might still call the ctor with signed 32bits. kept for compat.\n        /**\n         * Low bits\n         */\n        this.lo = lo | 0;\n        /**\n         * High bits\n         */\n        this.hi = hi | 0;\n    }\n    /**\n     * Converts this long bits to a possibly unsafe JavaScript number\n     */\n    toNumber(unsigned = false) {\n        if (!unsigned && (this.hi >>> 31) > 0) {\n            const lo = ~this.lo + 1 >>> 0;\n            let hi = ~this.hi >>> 0;\n            if (lo === 0) {\n                hi = hi + 1 >>> 0;\n            }\n            return -(lo + hi * 4294967296);\n        }\n        return this.lo + this.hi * 4294967296;\n    }\n    /**\n     * Converts this long bits to a bigint\n     */\n    toBigInt(unsigned = false) {\n        if (unsigned) {\n            return BigInt(this.lo >>> 0) + (BigInt(this.hi >>> 0) << 32n);\n        }\n        if ((this.hi >>> 31) !== 0) {\n            const lo = ~this.lo + 1 >>> 0;\n            let hi = ~this.hi >>> 0;\n            if (lo === 0) {\n                hi = hi + 1 >>> 0;\n            }\n            return -(BigInt(lo) + (BigInt(hi) << 32n));\n        }\n        return BigInt(this.lo >>> 0) + (BigInt(this.hi >>> 0) << 32n);\n    }\n    /**\n     * Converts this long bits to a string\n     */\n    toString(unsigned = false) {\n        return this.toBigInt(unsigned).toString();\n    }\n    /**\n     * Zig-zag encodes this long bits\n     */\n    zzEncode() {\n        const mask = this.hi >> 31;\n        this.hi = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n        this.lo = (this.lo << 1 ^ mask) >>> 0;\n        return this;\n    }\n    /**\n     * Zig-zag decodes this long bits\n     */\n    zzDecode() {\n        const mask = -(this.lo & 1);\n        this.lo = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n        this.hi = (this.hi >>> 1 ^ mask) >>> 0;\n        return this;\n    }\n    /**\n     * Calculates the length of this longbits when encoded as a varint.\n     */\n    length() {\n        const part0 = this.lo;\n        const part1 = (this.lo >>> 28 | this.hi << 4) >>> 0;\n        const part2 = this.hi >>> 24;\n        return part2 === 0\n            ? part1 === 0\n                ? part0 < 16384\n                    ? part0 < 128 ? 1 : 2\n                    : part0 < 2097152 ? 3 : 4\n                : part1 < 16384\n                    ? part1 < 128 ? 5 : 6\n                    : part1 < 2097152 ? 7 : 8\n            : part2 < 128 ? 9 : 10;\n    }\n    /**\n     * Constructs new long bits from the specified number\n     */\n    static fromBigInt(value) {\n        if (value === 0n) {\n            return zero;\n        }\n        if (value < MAX_SAFE_NUMBER_INTEGER && value > MIN_SAFE_NUMBER_INTEGER) {\n            return this.fromNumber(Number(value));\n        }\n        const negative = value < 0n;\n        if (negative) {\n            value = -value;\n        }\n        let hi = value >> 32n;\n        let lo = value - (hi << 32n);\n        if (negative) {\n            hi = ~hi | 0n;\n            lo = ~lo | 0n;\n            if (++lo > TWO_32) {\n                lo = 0n;\n                if (++hi > TWO_32) {\n                    hi = 0n;\n                }\n            }\n        }\n        return new LongBits(Number(lo), Number(hi));\n    }\n    /**\n     * Constructs new long bits from the specified number\n     */\n    static fromNumber(value) {\n        if (value === 0) {\n            return zero;\n        }\n        const sign = value < 0;\n        if (sign) {\n            value = -value;\n        }\n        let lo = value >>> 0;\n        let hi = (value - lo) / 4294967296 >>> 0;\n        if (sign) {\n            hi = ~hi >>> 0;\n            lo = ~lo >>> 0;\n            if (++lo > 4294967295) {\n                lo = 0;\n                if (++hi > 4294967295) {\n                    hi = 0;\n                }\n            }\n        }\n        return new LongBits(lo, hi);\n    }\n    /**\n     * Constructs new long bits from a number, long or string\n     */\n    static from(value) {\n        if (typeof value === 'number') {\n            return LongBits.fromNumber(value);\n        }\n        if (typeof value === 'bigint') {\n            return LongBits.fromBigInt(value);\n        }\n        if (typeof value === 'string') {\n            return LongBits.fromBigInt(BigInt(value));\n        }\n        return value.low != null || value.high != null ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n    }\n}\nconst zero = new LongBits(0, 0);\nzero.toBigInt = function () { return 0n; };\nzero.zzEncode = zero.zzDecode = function () { return this; };\nzero.length = function () { return 1; };\nconst TWO_32 = 4294967296n;\n//# sourceMappingURL=longbits.js.map","/**\n * Calculates the UTF8 byte length of a string\n */\nexport function length(string) {\n    let len = 0;\n    let c = 0;\n    for (let i = 0; i < string.length; ++i) {\n        c = string.charCodeAt(i);\n        if (c < 128) {\n            len += 1;\n        }\n        else if (c < 2048) {\n            len += 2;\n        }\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\n            ++i;\n            len += 4;\n        }\n        else {\n            len += 3;\n        }\n    }\n    return len;\n}\n/**\n * Reads UTF8 bytes as a string\n */\nexport function read(buffer, start, end) {\n    const len = end - start;\n    if (len < 1) {\n        return '';\n    }\n    let parts;\n    const chunk = [];\n    let i = 0; // char offset\n    let t; // temporary\n    while (start < end) {\n        t = buffer[start++];\n        if (t < 128) {\n            chunk[i++] = t;\n        }\n        else if (t > 191 && t < 224) {\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\n        }\n        else if (t > 239 && t < 365) {\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\n            chunk[i++] = 0xD800 + (t >> 10);\n            chunk[i++] = 0xDC00 + (t & 1023);\n        }\n        else {\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\n        }\n        if (i > 8191) {\n            (parts ?? (parts = [])).push(String.fromCharCode.apply(String, chunk));\n            i = 0;\n        }\n    }\n    if (parts != null) {\n        if (i > 0) {\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\n        }\n        return parts.join('');\n    }\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\n}\n/**\n * Writes a string as UTF8 bytes\n */\nexport function write(string, buffer, offset) {\n    const start = offset;\n    let c1; // character 1\n    let c2; // character 2\n    for (let i = 0; i < string.length; ++i) {\n        c1 = string.charCodeAt(i);\n        if (c1 < 128) {\n            buffer[offset++] = c1;\n        }\n        else if (c1 < 2048) {\n            buffer[offset++] = c1 >> 6 | 192;\n            buffer[offset++] = c1 & 63 | 128;\n        }\n        else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\n            ++i;\n            buffer[offset++] = c1 >> 18 | 240;\n            buffer[offset++] = c1 >> 12 & 63 | 128;\n            buffer[offset++] = c1 >> 6 & 63 | 128;\n            buffer[offset++] = c1 & 63 | 128;\n        }\n        else {\n            buffer[offset++] = c1 >> 12 | 224;\n            buffer[offset++] = c1 >> 6 & 63 | 128;\n            buffer[offset++] = c1 & 63 | 128;\n        }\n    }\n    return offset - start;\n}\n//# sourceMappingURL=utf8.js.map","import { decodeUint8Array, encodingLength } from 'uint8-varint';\nimport { readFloatLE, readDoubleLE } from './float.js';\nimport { LongBits } from './longbits.js';\nimport * as utf8 from './utf8.js';\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(`index out of range: ${reader.pos} + ${writeLength ?? 1} > ${reader.len}`);\n}\nfunction readFixed32End(buf, end) {\n    return (buf[end - 4] |\n        buf[end - 3] << 8 |\n        buf[end - 2] << 16 |\n        buf[end - 1] << 24) >>> 0;\n}\n/**\n * Constructs a new reader instance using the specified buffer.\n */\nexport class Uint8ArrayReader {\n    buf;\n    pos;\n    len;\n    _slice = Uint8Array.prototype.subarray;\n    constructor(buffer) {\n        /**\n         * Read buffer\n         */\n        this.buf = buffer;\n        /**\n         * Read buffer position\n         */\n        this.pos = 0;\n        /**\n         * Read buffer length\n         */\n        this.len = buffer.length;\n    }\n    /**\n     * Reads a varint as an unsigned 32 bit value\n     */\n    uint32() {\n        let value = 4294967295;\n        value = (this.buf[this.pos] & 127) >>> 0;\n        if (this.buf[this.pos++] < 128) {\n            return value;\n        }\n        value = (value | (this.buf[this.pos] & 127) << 7) >>> 0;\n        if (this.buf[this.pos++] < 128) {\n            return value;\n        }\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0;\n        if (this.buf[this.pos++] < 128) {\n            return value;\n        }\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0;\n        if (this.buf[this.pos++] < 128) {\n            return value;\n        }\n        value = (value | (this.buf[this.pos] & 15) << 28) >>> 0;\n        if (this.buf[this.pos++] < 128) {\n            return value;\n        }\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    }\n    /**\n     * Reads a varint as a signed 32 bit value\n     */\n    int32() {\n        return this.uint32() | 0;\n    }\n    /**\n     * Reads a zig-zag encoded varint as a signed 32 bit value\n     */\n    sint32() {\n        const value = this.uint32();\n        return value >>> 1 ^ -(value & 1) | 0;\n    }\n    /**\n     * Reads a varint as a boolean\n     */\n    bool() {\n        return this.uint32() !== 0;\n    }\n    /**\n     * Reads fixed 32 bits as an unsigned 32 bit integer\n     */\n    fixed32() {\n        if (this.pos + 4 > this.len) {\n            throw indexOutOfRange(this, 4);\n        }\n        const res = readFixed32End(this.buf, this.pos += 4);\n        return res;\n    }\n    /**\n     * Reads fixed 32 bits as a signed 32 bit integer\n     */\n    sfixed32() {\n        if (this.pos + 4 > this.len) {\n            throw indexOutOfRange(this, 4);\n        }\n        const res = readFixed32End(this.buf, this.pos += 4) | 0;\n        return res;\n    }\n    /**\n     * Reads a float (32 bit) as a number\n     */\n    float() {\n        if (this.pos + 4 > this.len) {\n            throw indexOutOfRange(this, 4);\n        }\n        const value = readFloatLE(this.buf, this.pos);\n        this.pos += 4;\n        return value;\n    }\n    /**\n     * Reads a double (64 bit float) as a number\n     */\n    double() {\n        /* istanbul ignore if */\n        if (this.pos + 8 > this.len) {\n            throw indexOutOfRange(this, 4);\n        }\n        const value = readDoubleLE(this.buf, this.pos);\n        this.pos += 8;\n        return value;\n    }\n    /**\n     * Reads a sequence of bytes preceded by its length as a varint\n     */\n    bytes() {\n        const length = this.uint32();\n        const start = this.pos;\n        const end = this.pos + length;\n        /* istanbul ignore if */\n        if (end > this.len) {\n            throw indexOutOfRange(this, length);\n        }\n        this.pos += length;\n        return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n            ? new Uint8Array(0)\n            : this.buf.subarray(start, end);\n    }\n    /**\n     * Reads a string preceded by its byte length as a varint\n     */\n    string() {\n        const bytes = this.bytes();\n        return utf8.read(bytes, 0, bytes.length);\n    }\n    /**\n     * Skips the specified number of bytes if specified, otherwise skips a varint\n     */\n    skip(length) {\n        if (typeof length === 'number') {\n            /* istanbul ignore if */\n            if (this.pos + length > this.len) {\n                throw indexOutOfRange(this, length);\n            }\n            this.pos += length;\n        }\n        else {\n            do {\n                /* istanbul ignore if */\n                if (this.pos >= this.len) {\n                    throw indexOutOfRange(this);\n                }\n            } while ((this.buf[this.pos++] & 128) !== 0);\n        }\n        return this;\n    }\n    /**\n     * Skips the next element of the specified wire type\n     */\n    skipType(wireType) {\n        switch (wireType) {\n            case 0:\n                this.skip();\n                break;\n            case 1:\n                this.skip(8);\n                break;\n            case 2:\n                this.skip(this.uint32());\n                break;\n            case 3:\n                while ((wireType = this.uint32() & 7) !== 4) {\n                    this.skipType(wireType);\n                }\n                break;\n            case 5:\n                this.skip(4);\n                break;\n            /* istanbul ignore next */\n            default:\n                throw Error(`invalid wire type ${wireType} at offset ${this.pos}`);\n        }\n        return this;\n    }\n    readLongVarint() {\n        // tends to deopt with local vars for octet etc.\n        const bits = new LongBits(0, 0);\n        let i = 0;\n        if (this.len - this.pos > 4) { // fast route (lo)\n            for (; i < 4; ++i) {\n                // 1st..4th\n                bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n                if (this.buf[this.pos++] < 128) {\n                    return bits;\n                }\n            }\n            // 5th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) >> 4) >>> 0;\n            if (this.buf[this.pos++] < 128) {\n                return bits;\n            }\n            i = 0;\n        }\n        else {\n            for (; i < 3; ++i) {\n                /* istanbul ignore if */\n                if (this.pos >= this.len) {\n                    throw indexOutOfRange(this);\n                }\n                // 1st..3th\n                bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n                if (this.buf[this.pos++] < 128) {\n                    return bits;\n                }\n            }\n            // 4th\n            bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n            return bits;\n        }\n        if (this.len - this.pos > 4) { // fast route (hi)\n            for (; i < 5; ++i) {\n                // 6th..10th\n                bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n                if (this.buf[this.pos++] < 128) {\n                    return bits;\n                }\n            }\n        }\n        else {\n            for (; i < 5; ++i) {\n                if (this.pos >= this.len) {\n                    throw indexOutOfRange(this);\n                }\n                // 6th..10th\n                bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n                if (this.buf[this.pos++] < 128) {\n                    return bits;\n                }\n            }\n        }\n        throw Error('invalid varint encoding');\n    }\n    readFixed64() {\n        if (this.pos + 8 > this.len) {\n            throw indexOutOfRange(this, 8);\n        }\n        const lo = readFixed32End(this.buf, this.pos += 4);\n        const hi = readFixed32End(this.buf, this.pos += 4);\n        return new LongBits(lo, hi);\n    }\n    /**\n     * Reads a varint as a signed 64 bit value\n     */\n    int64() {\n        return this.readLongVarint().toBigInt();\n    }\n    /**\n     * Reads a varint as a signed 64 bit value returned as a possibly unsafe\n     * JavaScript number\n     */\n    int64Number() {\n        return this.readLongVarint().toNumber();\n    }\n    /**\n     * Reads a varint as a signed 64 bit value returned as a string\n     */\n    int64String() {\n        return this.readLongVarint().toString();\n    }\n    /**\n     * Reads a varint as an unsigned 64 bit value\n     */\n    uint64() {\n        return this.readLongVarint().toBigInt(true);\n    }\n    /**\n     * Reads a varint as an unsigned 64 bit value returned as a possibly unsafe\n     * JavaScript number\n     */\n    uint64Number() {\n        const value = decodeUint8Array(this.buf, this.pos);\n        this.pos += encodingLength(value);\n        return value;\n    }\n    /**\n     * Reads a varint as an unsigned 64 bit value returned as a string\n     */\n    uint64String() {\n        return this.readLongVarint().toString(true);\n    }\n    /**\n     * Reads a zig-zag encoded varint as a signed 64 bit value\n     */\n    sint64() {\n        return this.readLongVarint().zzDecode().toBigInt();\n    }\n    /**\n     * Reads a zig-zag encoded varint as a signed 64 bit value returned as a\n     * possibly unsafe JavaScript number\n     */\n    sint64Number() {\n        return this.readLongVarint().zzDecode().toNumber();\n    }\n    /**\n     * Reads a zig-zag encoded varint as a signed 64 bit value returned as a\n     * string\n     */\n    sint64String() {\n        return this.readLongVarint().zzDecode().toString();\n    }\n    /**\n     * Reads fixed 64 bits\n     */\n    fixed64() {\n        return this.readFixed64().toBigInt();\n    }\n    /**\n     * Reads fixed 64 bits returned as a possibly unsafe JavaScript number\n     */\n    fixed64Number() {\n        return this.readFixed64().toNumber();\n    }\n    /**\n     * Reads fixed 64 bits returned as a string\n     */\n    fixed64String() {\n        return this.readFixed64().toString();\n    }\n    /**\n     * Reads zig-zag encoded fixed 64 bits\n     */\n    sfixed64() {\n        return this.readFixed64().toBigInt();\n    }\n    /**\n     * Reads zig-zag encoded fixed 64 bits returned as a possibly unsafe\n     * JavaScript number\n     */\n    sfixed64Number() {\n        return this.readFixed64().toNumber();\n    }\n    /**\n     * Reads zig-zag encoded fixed 64 bits returned as a string\n     */\n    sfixed64String() {\n        return this.readFixed64().toString();\n    }\n}\nexport function createReader(buf) {\n    return new Uint8ArrayReader(buf instanceof Uint8Array ? buf : buf.subarray());\n}\n//# sourceMappingURL=reader.js.map","import { createReader } from './utils/reader.js';\nexport function decodeMessage(buf, codec, opts) {\n    const reader = createReader(buf);\n    return codec.decode(reader, undefined, opts);\n}\n//# sourceMappingURL=decode.js.map","import { allocUnsafe } from 'uint8arrays/alloc';\n/**\n * A general purpose buffer pool\n */\nexport default function pool(size) {\n    const SIZE = size ?? 8192;\n    const MAX = SIZE >>> 1;\n    let slab;\n    let offset = SIZE;\n    return function poolAlloc(size) {\n        if (size < 1 || size > MAX) {\n            return allocUnsafe(size);\n        }\n        if (offset + size > SIZE) {\n            slab = allocUnsafe(SIZE);\n            offset = 0;\n        }\n        const buf = slab.subarray(offset, offset += size);\n        if ((offset & 7) !== 0) {\n            // align to 32 bit\n            offset = (offset | 7) + 1;\n        }\n        return buf;\n    };\n}\n//# sourceMappingURL=pool.js.map","import { encodeUint8Array, encodingLength } from 'uint8-varint';\nimport { allocUnsafe } from 'uint8arrays/alloc';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { writeFloatLE, writeDoubleLE } from './float.js';\nimport { LongBits } from './longbits.js';\nimport pool from './pool.js';\nimport * as utf8 from './utf8.js';\n/**\n * Constructs a new writer operation instance.\n *\n * @classdesc Scheduled writer operation\n */\nclass Op {\n    /**\n     * Function to call\n     */\n    fn;\n    /**\n     * Value byte length\n     */\n    len;\n    /**\n     * Next operation\n     */\n    next;\n    /**\n     * Value to write\n     */\n    val;\n    constructor(fn, len, val) {\n        this.fn = fn;\n        this.len = len;\n        this.next = undefined;\n        this.val = val; // type varies\n    }\n}\n/* istanbul ignore next */\nfunction noop() { }\n/**\n * Constructs a new writer state instance\n */\nclass State {\n    /**\n     * Current head\n     */\n    head;\n    /**\n     * Current tail\n     */\n    tail;\n    /**\n     * Current buffer length\n     */\n    len;\n    /**\n     * Next state\n     */\n    next;\n    constructor(writer) {\n        this.head = writer.head;\n        this.tail = writer.tail;\n        this.len = writer.len;\n        this.next = writer.states;\n    }\n}\nconst bufferPool = pool();\n/**\n * Allocates a buffer of the specified size\n */\nfunction alloc(size) {\n    if (globalThis.Buffer != null) {\n        return allocUnsafe(size);\n    }\n    return bufferPool(size);\n}\n/**\n * When a value is written, the writer calculates its byte length and puts it into a linked\n * list of operations to perform when finish() is called. This both allows us to allocate\n * buffers of the exact required size and reduces the amount of work we have to do compared\n * to first calculating over objects and then encoding over objects. In our case, the encoding\n * part is just a linked list walk calling operations with already prepared values.\n */\nclass Uint8ArrayWriter {\n    /**\n     * Current length\n     */\n    len;\n    /**\n     * Operations head\n     */\n    head;\n    /**\n     * Operations tail\n     */\n    tail;\n    /**\n     * Linked forked states\n     */\n    states;\n    constructor() {\n        this.len = 0;\n        this.head = new Op(noop, 0, 0);\n        this.tail = this.head;\n        this.states = null;\n    }\n    /**\n     * Pushes a new operation to the queue\n     */\n    _push(fn, len, val) {\n        this.tail = this.tail.next = new Op(fn, len, val);\n        this.len += len;\n        return this;\n    }\n    /**\n     * Writes an unsigned 32 bit value as a varint\n     */\n    uint32(value) {\n        // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n        // uint32 is by far the most frequently used operation and benefits significantly from this.\n        this.len += (this.tail = this.tail.next = new VarintOp((value = value >>> 0) <\n            128\n            ? 1\n            : value < 16384\n                ? 2\n                : value < 2097152\n                    ? 3\n                    : value < 268435456\n                        ? 4\n                        : 5, value)).len;\n        return this;\n    }\n    /**\n     * Writes a signed 32 bit value as a varint`\n     */\n    int32(value) {\n        return value < 0\n            ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n            : this.uint32(value);\n    }\n    /**\n     * Writes a 32 bit value as a varint, zig-zag encoded\n     */\n    sint32(value) {\n        return this.uint32((value << 1 ^ value >> 31) >>> 0);\n    }\n    /**\n     * Writes an unsigned 64 bit value as a varint\n     */\n    uint64(value) {\n        const bits = LongBits.fromBigInt(value);\n        return this._push(writeVarint64, bits.length(), bits);\n    }\n    /**\n     * Writes an unsigned 64 bit value as a varint\n     */\n    uint64Number(value) {\n        return this._push(encodeUint8Array, encodingLength(value), value);\n    }\n    /**\n     * Writes an unsigned 64 bit value as a varint\n     */\n    uint64String(value) {\n        return this.uint64(BigInt(value));\n    }\n    /**\n     * Writes a signed 64 bit value as a varint\n     */\n    int64(value) {\n        return this.uint64(value);\n    }\n    /**\n     * Writes a signed 64 bit value as a varint\n     */\n    int64Number(value) {\n        return this.uint64Number(value);\n    }\n    /**\n     * Writes a signed 64 bit value as a varint\n     */\n    int64String(value) {\n        return this.uint64String(value);\n    }\n    /**\n     * Writes a signed 64 bit value as a varint, zig-zag encoded\n     */\n    sint64(value) {\n        const bits = LongBits.fromBigInt(value).zzEncode();\n        return this._push(writeVarint64, bits.length(), bits);\n    }\n    /**\n     * Writes a signed 64 bit value as a varint, zig-zag encoded\n     */\n    sint64Number(value) {\n        const bits = LongBits.fromNumber(value).zzEncode();\n        return this._push(writeVarint64, bits.length(), bits);\n    }\n    /**\n     * Writes a signed 64 bit value as a varint, zig-zag encoded\n     */\n    sint64String(value) {\n        return this.sint64(BigInt(value));\n    }\n    /**\n     * Writes a boolish value as a varint\n     */\n    bool(value) {\n        return this._push(writeByte, 1, value ? 1 : 0);\n    }\n    /**\n     * Writes an unsigned 32 bit value as fixed 32 bits\n     */\n    fixed32(value) {\n        return this._push(writeFixed32, 4, value >>> 0);\n    }\n    /**\n     * Writes a signed 32 bit value as fixed 32 bits\n     */\n    sfixed32(value) {\n        return this.fixed32(value);\n    }\n    /**\n     * Writes an unsigned 64 bit value as fixed 64 bits\n     */\n    fixed64(value) {\n        const bits = LongBits.fromBigInt(value);\n        return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n    }\n    /**\n     * Writes an unsigned 64 bit value as fixed 64 bits\n     */\n    fixed64Number(value) {\n        const bits = LongBits.fromNumber(value);\n        return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n    }\n    /**\n     * Writes an unsigned 64 bit value as fixed 64 bits\n     */\n    fixed64String(value) {\n        return this.fixed64(BigInt(value));\n    }\n    /**\n     * Writes a signed 64 bit value as fixed 64 bits\n     */\n    sfixed64(value) {\n        return this.fixed64(value);\n    }\n    /**\n     * Writes a signed 64 bit value as fixed 64 bits\n     */\n    sfixed64Number(value) {\n        return this.fixed64Number(value);\n    }\n    /**\n     * Writes a signed 64 bit value as fixed 64 bits\n     */\n    sfixed64String(value) {\n        return this.fixed64String(value);\n    }\n    /**\n     * Writes a float (32 bit)\n     */\n    float(value) {\n        return this._push(writeFloatLE, 4, value);\n    }\n    /**\n     * Writes a double (64 bit float).\n     *\n     * @function\n     * @param {number} value - Value to write\n     * @returns {Writer} `this`\n     */\n    double(value) {\n        return this._push(writeDoubleLE, 8, value);\n    }\n    /**\n     * Writes a sequence of bytes\n     */\n    bytes(value) {\n        const len = value.length >>> 0;\n        if (len === 0) {\n            return this._push(writeByte, 1, 0);\n        }\n        return this.uint32(len)._push(writeBytes, len, value);\n    }\n    /**\n     * Writes a string\n     */\n    string(value) {\n        const len = utf8.length(value);\n        return len !== 0\n            ? this.uint32(len)._push(utf8.write, len, value)\n            : this._push(writeByte, 1, 0);\n    }\n    /**\n     * Forks this writer's state by pushing it to a stack.\n     * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n     */\n    fork() {\n        this.states = new State(this);\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len = 0;\n        return this;\n    }\n    /**\n     * Resets this instance to the last state\n     */\n    reset() {\n        if (this.states != null) {\n            this.head = this.states.head;\n            this.tail = this.states.tail;\n            this.len = this.states.len;\n            this.states = this.states.next;\n        }\n        else {\n            this.head = this.tail = new Op(noop, 0, 0);\n            this.len = 0;\n        }\n        return this;\n    }\n    /**\n     * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n     */\n    ldelim() {\n        const head = this.head;\n        const tail = this.tail;\n        const len = this.len;\n        this.reset().uint32(len);\n        if (len !== 0) {\n            this.tail.next = head.next; // skip noop\n            this.tail = tail;\n            this.len += len;\n        }\n        return this;\n    }\n    /**\n     * Finishes the write operation\n     */\n    finish() {\n        let head = this.head.next; // skip noop\n        const buf = alloc(this.len);\n        let pos = 0;\n        while (head != null) {\n            head.fn(head.val, buf, pos);\n            pos += head.len;\n            head = head.next;\n        }\n        // this.head = this.tail = null;\n        return buf;\n    }\n}\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n/**\n * Constructs a new varint writer operation instance.\n *\n * @classdesc Scheduled varint writer operation\n */\nclass VarintOp extends Op {\n    next;\n    constructor(len, val) {\n        super(writeVarint32, len, val);\n        this.next = undefined;\n    }\n}\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi !== 0) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\nfunction writeFixed32(val, buf, pos) {\n    buf[pos] = val & 255;\n    buf[pos + 1] = val >>> 8 & 255;\n    buf[pos + 2] = val >>> 16 & 255;\n    buf[pos + 3] = val >>> 24;\n}\nfunction writeBytes(val, buf, pos) {\n    buf.set(val, pos);\n}\nif (globalThis.Buffer != null) {\n    Uint8ArrayWriter.prototype.bytes = function (value) {\n        const len = value.length >>> 0;\n        this.uint32(len);\n        if (len > 0) {\n            this._push(writeBytesBuffer, len, value);\n        }\n        return this;\n    };\n    Uint8ArrayWriter.prototype.string = function (value) {\n        const len = globalThis.Buffer.byteLength(value);\n        this.uint32(len);\n        if (len > 0) {\n            this._push(writeStringBuffer, len, value);\n        }\n        return this;\n    };\n}\nfunction writeBytesBuffer(val, buf, pos) {\n    buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n    // also works for plain array values\n}\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) {\n        // plain js is faster for short strings (probably due to redundant assertions)\n        utf8.write(val, buf, pos);\n        // @ts-expect-error buf isn't a Uint8Array?\n    }\n    else if (buf.utf8Write != null) {\n        // @ts-expect-error buf isn't a Uint8Array?\n        buf.utf8Write(val, pos);\n    }\n    else {\n        buf.set(uint8ArrayFromString(val), pos);\n    }\n}\n/**\n * Creates a new writer\n */\nexport function createWriter() {\n    return new Uint8ArrayWriter();\n}\n//# sourceMappingURL=writer.js.map","import { createWriter } from './utils/writer.js';\nexport function encodeMessage(message, codec) {\n    const w = createWriter();\n    codec.encode(message, w, {\n        lengthDelimited: false\n    });\n    return w.finish();\n}\n//# sourceMappingURL=encode.js.map","// https://developers.google.com/protocol-buffers/docs/encoding#structure\nexport var CODEC_TYPES;\n(function (CODEC_TYPES) {\n    CODEC_TYPES[CODEC_TYPES[\"VARINT\"] = 0] = \"VARINT\";\n    CODEC_TYPES[CODEC_TYPES[\"BIT64\"] = 1] = \"BIT64\";\n    CODEC_TYPES[CODEC_TYPES[\"LENGTH_DELIMITED\"] = 2] = \"LENGTH_DELIMITED\";\n    CODEC_TYPES[CODEC_TYPES[\"START_GROUP\"] = 3] = \"START_GROUP\";\n    CODEC_TYPES[CODEC_TYPES[\"END_GROUP\"] = 4] = \"END_GROUP\";\n    CODEC_TYPES[CODEC_TYPES[\"BIT32\"] = 5] = \"BIT32\";\n})(CODEC_TYPES || (CODEC_TYPES = {}));\nexport function createCodec(name, type, encode, decode) {\n    return {\n        name,\n        type,\n        encode,\n        decode\n    };\n}\n//# sourceMappingURL=codec.js.map","import { createCodec, CODEC_TYPES } from '../codec.js';\nexport function enumeration(v) {\n    function findValue(val) {\n        // Use the reverse mapping to look up the enum key for the stored value\n        // https://www.typescriptlang.org/docs/handbook/enums.html#reverse-mappings\n        if (v[val.toString()] == null) {\n            throw new Error('Invalid enum value');\n        }\n        return v[val];\n    }\n    const encode = function enumEncode(val, writer) {\n        const enumValue = findValue(val);\n        writer.int32(enumValue);\n    };\n    const decode = function enumDecode(reader) {\n        const val = reader.int32();\n        return findValue(val);\n    };\n    // @ts-expect-error yeah yeah\n    return createCodec('enum', CODEC_TYPES.VARINT, encode, decode);\n}\n//# sourceMappingURL=enum.js.map","import { createCodec, CODEC_TYPES } from '../codec.js';\nexport function message(encode, decode) {\n    return createCodec('message', CODEC_TYPES.LENGTH_DELIMITED, encode, decode);\n}\n//# sourceMappingURL=message.js.map","/**\n * @packageDocumentation\n *\n * This module contains serialization/deserialization code used when encoding/decoding protobufs.\n *\n * It should be declared as a dependency of your project:\n *\n * ```console\n * npm i protons-runtime\n * ```\n */\nexport { decodeMessage } from './decode.js';\nexport { encodeMessage } from './encode.js';\nexport { enumeration } from './codecs/enum.js';\nexport { message } from './codecs/message.js';\nexport { createReader as reader } from './utils/reader.js';\nexport { createWriter as writer } from './utils/writer.js';\n/**\n * This will be removed in a future release\n *\n * @deprecated\n */\nexport class CodeError extends Error {\n    code;\n    constructor(message, code) {\n        super(message);\n        this.code = code;\n    }\n}\n/**\n * Thrown when a repeated field has too many elements\n */\nexport class MaxLengthError extends Error {\n    /**\n     * This will be removed in a future release\n     *\n     * @deprecated use the `.name` property instead\n     */\n    code = 'ERR_MAX_LENGTH';\n    name = 'MaxLengthError';\n}\n/**\n * Thrown when a map has too many elements\n */\nexport class MaxSizeError extends Error {\n    /**\n     * This will be removed in a future release\n     *\n     * @deprecated use the `.name` property instead\n     */\n    code = 'ERR_MAX_SIZE';\n    name = 'MaxSizeError';\n}\nexport class ParseError extends Error {\n    /**\n     * This will be removed in a future release\n     *\n     * @deprecated use the `.name` property instead\n     */\n    code = 'ERR_PARSE_ERROR';\n    name = 'ParseError';\n}\nexport class NoMessagesFoundError extends Error {\n    /**\n     * This will be removed in a future release\n     *\n     * @deprecated use the `.name` property instead\n     */\n    code = 'ERR_NO_MESSAGES_FOUND';\n    name = 'NoMessagesFoundError';\n}\n//# sourceMappingURL=index.js.map","import { decodeMessage, encodeMessage, enumeration, message } from 'protons-runtime';\nexport var KeyType;\n(function (KeyType) {\n    KeyType[\"RSA\"] = \"RSA\";\n    KeyType[\"Ed25519\"] = \"Ed25519\";\n    KeyType[\"secp256k1\"] = \"secp256k1\";\n    KeyType[\"ECDSA\"] = \"ECDSA\";\n})(KeyType || (KeyType = {}));\nvar __KeyTypeValues;\n(function (__KeyTypeValues) {\n    __KeyTypeValues[__KeyTypeValues[\"RSA\"] = 0] = \"RSA\";\n    __KeyTypeValues[__KeyTypeValues[\"Ed25519\"] = 1] = \"Ed25519\";\n    __KeyTypeValues[__KeyTypeValues[\"secp256k1\"] = 2] = \"secp256k1\";\n    __KeyTypeValues[__KeyTypeValues[\"ECDSA\"] = 3] = \"ECDSA\";\n})(__KeyTypeValues || (__KeyTypeValues = {}));\n(function (KeyType) {\n    KeyType.codec = () => {\n        return enumeration(__KeyTypeValues);\n    };\n})(KeyType || (KeyType = {}));\nexport var PublicKey;\n(function (PublicKey) {\n    let _codec;\n    PublicKey.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.Type != null) {\n                    w.uint32(8);\n                    KeyType.codec().encode(obj.Type, w);\n                }\n                if (obj.Data != null) {\n                    w.uint32(18);\n                    w.bytes(obj.Data);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.Type = KeyType.codec().decode(reader);\n                            break;\n                        }\n                        case 2: {\n                            obj.Data = reader.bytes();\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PublicKey.encode = (obj) => {\n        return encodeMessage(obj, PublicKey.codec());\n    };\n    PublicKey.decode = (buf, opts) => {\n        return decodeMessage(buf, PublicKey.codec(), opts);\n    };\n})(PublicKey || (PublicKey = {}));\nexport var PrivateKey;\n(function (PrivateKey) {\n    let _codec;\n    PrivateKey.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.Type != null) {\n                    w.uint32(8);\n                    KeyType.codec().encode(obj.Type, w);\n                }\n                if (obj.Data != null) {\n                    w.uint32(18);\n                    w.bytes(obj.Data);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.Type = KeyType.codec().decode(reader);\n                            break;\n                        }\n                        case 2: {\n                            obj.Data = reader.bytes();\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PrivateKey.encode = (obj) => {\n        return encodeMessage(obj, PrivateKey.codec());\n    };\n    PrivateKey.decode = (buf, opts) => {\n        return decodeMessage(buf, PrivateKey.codec(), opts);\n    };\n})(PrivateKey || (PrivateKey = {}));\n//# sourceMappingURL=keys.js.map","import { InvalidParametersError } from '@libp2p/interface';\nimport { randomBytes as randB } from '@noble/hashes/utils.js';\n/**\n * Generates a Uint8Array with length `number` populated by random bytes\n */\nexport default function randomBytes(length) {\n    if (isNaN(length) || length <= 0) {\n        throw new InvalidParametersError('random bytes length must be a Number bigger than 0');\n    }\n    return randB(length);\n}\n//# sourceMappingURL=random-bytes.js.map","import { base58btc } from 'multiformats/bases/base58';\nimport { CID } from 'multiformats/cid';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport { hashAndSign, utils, hashAndVerify } from './index.js';\nexport class RSAPublicKey {\n    type = 'RSA';\n    jwk;\n    _raw;\n    _multihash;\n    constructor(jwk, digest) {\n        this.jwk = jwk;\n        this._multihash = digest;\n    }\n    get raw() {\n        if (this._raw == null) {\n            this._raw = utils.jwkToPkix(this.jwk);\n        }\n        return this._raw;\n    }\n    toMultihash() {\n        return this._multihash;\n    }\n    toCID() {\n        return CID.createV1(114, this._multihash);\n    }\n    toString() {\n        return base58btc.encode(this.toMultihash().bytes).substring(1);\n    }\n    equals(key) {\n        if (key == null || !(key.raw instanceof Uint8Array)) {\n            return false;\n        }\n        return uint8ArrayEquals(this.raw, key.raw);\n    }\n    verify(data, sig, options) {\n        return hashAndVerify(this.jwk, sig, data, options);\n    }\n}\nexport class RSAPrivateKey {\n    type = 'RSA';\n    jwk;\n    _raw;\n    publicKey;\n    constructor(jwk, publicKey) {\n        this.jwk = jwk;\n        this.publicKey = publicKey;\n    }\n    get raw() {\n        if (this._raw == null) {\n            this._raw = utils.jwkToPkcs1(this.jwk);\n        }\n        return this._raw;\n    }\n    equals(key) {\n        if (key == null || !(key.raw instanceof Uint8Array)) {\n            return false;\n        }\n        return uint8ArrayEquals(this.raw, key.raw);\n    }\n    sign(message, options) {\n        return hashAndSign(this.jwk, message, options);\n    }\n}\n//# sourceMappingURL=rsa.js.map","import { InvalidParametersError, InvalidPublicKeyError } from '@libp2p/interface';\nimport { sha256 } from '@noble/hashes/sha2.js';\nimport { create } from 'multiformats/hashes/digest';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport * as pb from '../keys.js';\nimport { decodeDer, encodeBitString, encodeInteger, encodeSequence } from './der.js';\nimport { RSAPrivateKey as RSAPrivateKeyClass, RSAPublicKey as RSAPublicKeyClass } from './rsa.js';\nimport { generateRSAKey, rsaKeySize } from './index.js';\nexport const MAX_RSA_KEY_SIZE = 8192;\nconst SHA2_256_CODE = 0x12;\nconst MAX_RSA_JWK_SIZE = 1062;\nconst RSA_ALGORITHM_IDENTIFIER = Uint8Array.from([\n    0x30, 0x0D, 0x06, 0x09, 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x01, 0x01, 0x05, 0x00\n]);\n/**\n * Convert a PKCS#1 in ASN1 DER format to a JWK private key\n */\nexport function pkcs1ToJwk(bytes) {\n    const message = decodeDer(bytes);\n    return pkcs1MessageToJwk(message);\n}\n/**\n * Convert a PKCS#1 in ASN1 DER format to a JWK private key\n */\nexport function pkcs1MessageToJwk(message) {\n    return {\n        n: uint8ArrayToString(message[1], 'base64url'),\n        e: uint8ArrayToString(message[2], 'base64url'),\n        d: uint8ArrayToString(message[3], 'base64url'),\n        p: uint8ArrayToString(message[4], 'base64url'),\n        q: uint8ArrayToString(message[5], 'base64url'),\n        dp: uint8ArrayToString(message[6], 'base64url'),\n        dq: uint8ArrayToString(message[7], 'base64url'),\n        qi: uint8ArrayToString(message[8], 'base64url'),\n        kty: 'RSA'\n    };\n}\n/**\n * Convert a JWK private key into PKCS#1 in ASN1 DER format\n */\nexport function jwkToPkcs1(jwk) {\n    if (jwk.n == null || jwk.e == null || jwk.d == null || jwk.p == null || jwk.q == null || jwk.dp == null || jwk.dq == null || jwk.qi == null) {\n        throw new InvalidParametersError('JWK was missing components');\n    }\n    return encodeSequence([\n        encodeInteger(Uint8Array.from([0])),\n        encodeInteger(uint8ArrayFromString(jwk.n, 'base64url')),\n        encodeInteger(uint8ArrayFromString(jwk.e, 'base64url')),\n        encodeInteger(uint8ArrayFromString(jwk.d, 'base64url')),\n        encodeInteger(uint8ArrayFromString(jwk.p, 'base64url')),\n        encodeInteger(uint8ArrayFromString(jwk.q, 'base64url')),\n        encodeInteger(uint8ArrayFromString(jwk.dp, 'base64url')),\n        encodeInteger(uint8ArrayFromString(jwk.dq, 'base64url')),\n        encodeInteger(uint8ArrayFromString(jwk.qi, 'base64url'))\n    ]).subarray();\n}\n/**\n * Convert a PKIX in ASN1 DER format to a JWK public key\n */\nexport function pkixToJwk(bytes) {\n    const message = decodeDer(bytes, {\n        offset: 0\n    });\n    return pkixMessageToJwk(message);\n}\nexport function pkixMessageToJwk(message) {\n    const keys = decodeDer(message[1], {\n        offset: 0\n    });\n    // this looks fragile but DER is a canonical format so we are safe to have\n    // deeply property chains like this\n    return {\n        kty: 'RSA',\n        n: uint8ArrayToString(keys[0], 'base64url'),\n        e: uint8ArrayToString(keys[1], 'base64url')\n    };\n}\n/**\n * Convert a JWK public key to PKIX in ASN1 DER format\n */\nexport function jwkToPkix(jwk) {\n    if (jwk.n == null || jwk.e == null) {\n        throw new InvalidParametersError('JWK was missing components');\n    }\n    const subjectPublicKeyInfo = encodeSequence([\n        RSA_ALGORITHM_IDENTIFIER,\n        encodeBitString(encodeSequence([\n            encodeInteger(uint8ArrayFromString(jwk.n, 'base64url')),\n            encodeInteger(uint8ArrayFromString(jwk.e, 'base64url'))\n        ]))\n    ]);\n    return subjectPublicKeyInfo.subarray();\n}\n/**\n * Turn PKCS#1 DER bytes into a PrivateKey\n */\nexport function pkcs1ToRSAPrivateKey(bytes) {\n    const message = decodeDer(bytes);\n    return pkcs1MessageToRSAPrivateKey(message);\n}\n/**\n * Turn PKCS#1 DER bytes into a PrivateKey\n */\nexport function pkcs1MessageToRSAPrivateKey(message) {\n    const jwk = pkcs1MessageToJwk(message);\n    return jwkToRSAPrivateKey(jwk);\n}\n/**\n * Turn a PKIX message into a PublicKey\n */\nexport function pkixToRSAPublicKey(bytes, digest) {\n    if (bytes.byteLength >= MAX_RSA_JWK_SIZE) {\n        throw new InvalidPublicKeyError('Key size is too large');\n    }\n    const message = decodeDer(bytes, {\n        offset: 0\n    });\n    return pkixMessageToRSAPublicKey(message, bytes, digest);\n}\nexport function pkixMessageToRSAPublicKey(message, bytes, digest) {\n    const jwk = pkixMessageToJwk(message);\n    if (digest == null) {\n        const hash = sha256(pb.PublicKey.encode({\n            Type: pb.KeyType.RSA,\n            Data: bytes\n        }));\n        digest = create(SHA2_256_CODE, hash);\n    }\n    return new RSAPublicKeyClass(jwk, digest);\n}\nexport function jwkToRSAPrivateKey(jwk) {\n    if (rsaKeySize(jwk) > MAX_RSA_KEY_SIZE) {\n        throw new InvalidParametersError('Key size is too large');\n    }\n    const keys = jwkToJWKKeyPair(jwk);\n    const hash = sha256(pb.PublicKey.encode({\n        Type: pb.KeyType.RSA,\n        Data: jwkToPkix(keys.publicKey)\n    }));\n    const digest = create(SHA2_256_CODE, hash);\n    return new RSAPrivateKeyClass(keys.privateKey, new RSAPublicKeyClass(keys.publicKey, digest));\n}\nexport async function generateRSAKeyPair(bits) {\n    if (bits > MAX_RSA_KEY_SIZE) {\n        throw new InvalidParametersError('Key size is too large');\n    }\n    const keys = await generateRSAKey(bits);\n    const hash = sha256(pb.PublicKey.encode({\n        Type: pb.KeyType.RSA,\n        Data: jwkToPkix(keys.publicKey)\n    }));\n    const digest = create(SHA2_256_CODE, hash);\n    return new RSAPrivateKeyClass(keys.privateKey, new RSAPublicKeyClass(keys.publicKey, digest));\n}\n/**\n * Takes a jwk key and returns a JWK KeyPair\n */\nexport function jwkToJWKKeyPair(key) {\n    if (key == null) {\n        throw new InvalidParametersError('Missing key parameter');\n    }\n    return {\n        privateKey: key,\n        publicKey: {\n            kty: key.kty,\n            n: key.n,\n            e: key.e\n        }\n    };\n}\n//# sourceMappingURL=utils.js.map","import { InvalidParametersError } from '@libp2p/interface';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport randomBytes from '../../random-bytes.js';\nimport webcrypto from '../../webcrypto/index.js';\nimport * as utils from './utils.js';\nexport const RSAES_PKCS1_V1_5_OID = '1.2.840.113549.1.1.1';\nexport { utils };\nexport async function generateRSAKey(bits, options) {\n    const pair = await webcrypto.get().subtle.generateKey({\n        name: 'RSASSA-PKCS1-v1_5',\n        modulusLength: bits,\n        publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n        hash: { name: 'SHA-256' }\n    }, true, ['sign', 'verify']);\n    options?.signal?.throwIfAborted();\n    const keys = await exportKey(pair, options);\n    return {\n        privateKey: keys[0],\n        publicKey: keys[1]\n    };\n}\nexport { randomBytes as getRandomValues };\nexport async function hashAndSign(key, msg, options) {\n    const privateKey = await webcrypto.get().subtle.importKey('jwk', key, {\n        name: 'RSASSA-PKCS1-v1_5',\n        hash: { name: 'SHA-256' }\n    }, false, ['sign']);\n    options?.signal?.throwIfAborted();\n    const sig = await webcrypto.get().subtle.sign({ name: 'RSASSA-PKCS1-v1_5' }, privateKey, msg instanceof Uint8Array ? msg : msg.subarray());\n    options?.signal?.throwIfAborted();\n    return new Uint8Array(sig, 0, sig.byteLength);\n}\nexport async function hashAndVerify(key, sig, msg, options) {\n    const publicKey = await webcrypto.get().subtle.importKey('jwk', key, {\n        name: 'RSASSA-PKCS1-v1_5',\n        hash: { name: 'SHA-256' }\n    }, false, ['verify']);\n    options?.signal?.throwIfAborted();\n    const result = await webcrypto.get().subtle.verify({ name: 'RSASSA-PKCS1-v1_5' }, publicKey, sig, msg instanceof Uint8Array ? msg : msg.subarray());\n    options?.signal?.throwIfAborted();\n    return result;\n}\nasync function exportKey(pair, options) {\n    if (pair.privateKey == null || pair.publicKey == null) {\n        throw new InvalidParametersError('Private and public key are required');\n    }\n    const result = await Promise.all([\n        webcrypto.get().subtle.exportKey('jwk', pair.privateKey),\n        webcrypto.get().subtle.exportKey('jwk', pair.publicKey)\n    ]);\n    options?.signal?.throwIfAborted();\n    return result;\n}\nexport function rsaKeySize(jwk) {\n    if (jwk.kty !== 'RSA') {\n        throw new InvalidParametersError('invalid key type');\n    }\n    else if (jwk.n == null) {\n        throw new InvalidParametersError('invalid key modulus');\n    }\n    const bytes = uint8ArrayFromString(jwk.n, 'base64url');\n    return bytes.length * 8;\n}\n//# sourceMappingURL=index.browser.js.map","/**\n * HMAC: RFC2104 message authentication code.\n * @module\n */\nimport { abytes, aexists, ahash, clean } from \"./utils.js\";\n/** Internal class for HMAC. */\nexport class _HMAC {\n    oHash;\n    iHash;\n    blockLen;\n    outputLen;\n    finished = false;\n    destroyed = false;\n    constructor(hash, key) {\n        ahash(hash);\n        abytes(key, undefined, 'key');\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        clean(pad);\n    }\n    update(buf) {\n        aexists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        abytes(out, this.outputLen, 'output');\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to ||= Object.create(Object.getPrototypeOf(this), {});\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    clone() {\n        return this._cloneInto();\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n * @example\n * import { hmac } from '@noble/hashes/hmac';\n * import { sha256 } from '@noble/hashes/sha2';\n * const mac1 = hmac(sha256, 'key', 'message');\n */\nexport const hmac = (hash, key, message) => new _HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new _HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","/**\n * Short Weierstrass curve methods. The formula is: y² = x³ + ax + b.\n *\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance\n * of nominative types in TypeScript and interfaces only check for shape, so it's hard to create\n * unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * @todo https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac as nobleHmac } from '@noble/hashes/hmac.js';\nimport { ahash } from '@noble/hashes/utils.js';\nimport { abool, abytes, aInRange, bitLen, bitMask, bytesToHex, bytesToNumberBE, concatBytes, createHmacDrbg, hexToBytes, isBytes, memoized, numberToHexUnpadded, validateObject, randomBytes as wcRandomBytes, } from \"../utils.js\";\nimport { createCurveFields, createKeygen, mulEndoUnsafe, negateCt, normalizeZ, wNAF, } from \"./curve.js\";\nimport { FpInvertBatch, getMinHashLength, mapHashToField, validateField, } from \"./modular.js\";\n// We construct basis in such way that den is always positive and equals n, but num sign depends on basis (not on secret value)\nconst divNearest = (num, den) => (num + (num >= 0 ? den : -den) / _2n) / den;\n/**\n * Splits scalar for GLV endomorphism.\n */\nexport function _splitEndoScalar(k, basis, n) {\n    // Split scalar into two such that part is ~half bits: `abs(part) < sqrt(N)`\n    // Since part can be negative, we need to do this on point.\n    // TODO: verifyScalar function which consumes lambda\n    const [[a1, b1], [a2, b2]] = basis;\n    const c1 = divNearest(b2 * k, n);\n    const c2 = divNearest(-b1 * k, n);\n    // |k1|/|k2| is < sqrt(N), but can be negative.\n    // If we do `k1 mod N`, we'll get big scalar (`> sqrt(N)`): so, we do cheaper negation instead.\n    let k1 = k - c1 * a1 - c2 * a2;\n    let k2 = -c1 * b1 - c2 * b2;\n    const k1neg = k1 < _0n;\n    const k2neg = k2 < _0n;\n    if (k1neg)\n        k1 = -k1;\n    if (k2neg)\n        k2 = -k2;\n    // Double check that resulting scalar less than half bits of N: otherwise wNAF will fail.\n    // This should only happen on wrong basises. Also, math inside is too complex and I don't trust it.\n    const MAX_NUM = bitMask(Math.ceil(bitLen(n) / 2)) + _1n; // Half bits of N\n    if (k1 < _0n || k1 >= MAX_NUM || k2 < _0n || k2 >= MAX_NUM) {\n        throw new Error('splitScalar (endomorphism): failed, k=' + k);\n    }\n    return { k1neg, k1, k2neg, k2 };\n}\nfunction validateSigFormat(format) {\n    if (!['compact', 'recovered', 'der'].includes(format))\n        throw new Error('Signature format must be \"compact\", \"recovered\", or \"der\"');\n    return format;\n}\nfunction validateSigOpts(opts, def) {\n    const optsn = {};\n    for (let optName of Object.keys(def)) {\n        // @ts-ignore\n        optsn[optName] = opts[optName] === undefined ? def[optName] : opts[optName];\n    }\n    abool(optsn.lowS, 'lowS');\n    abool(optsn.prehash, 'prehash');\n    if (optsn.format !== undefined)\n        validateSigFormat(optsn.format);\n    return optsn;\n}\nexport class DERErr extends Error {\n    constructor(m = '') {\n        super(m);\n    }\n}\n/**\n * ASN.1 DER encoding utilities. ASN is very complex & fragile. Format:\n *\n *     [0x30 (SEQUENCE), bytelength, 0x02 (INTEGER), intLength, R, 0x02 (INTEGER), intLength, S]\n *\n * Docs: https://letsencrypt.org/docs/a-warm-welcome-to-asn1-and-der/, https://luca.ntop.org/Teaching/Appunti/asn1.html\n */\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: DERErr,\n    // Basic building block is TLV (Tag-Length-Value)\n    _tlv: {\n        encode: (tag, data) => {\n            const { Err: E } = DER;\n            if (tag < 0 || tag > 256)\n                throw new E('tlv.encode: wrong tag');\n            if (data.length & 1)\n                throw new E('tlv.encode: unpadded data');\n            const dataLen = data.length / 2;\n            const len = numberToHexUnpadded(dataLen);\n            if ((len.length / 2) & 0b1000_0000)\n                throw new E('tlv.encode: long form length too big');\n            // length of length with long form flag\n            const lenLen = dataLen > 127 ? numberToHexUnpadded((len.length / 2) | 0b1000_0000) : '';\n            const t = numberToHexUnpadded(tag);\n            return t + lenLen + len + data;\n        },\n        // v - value, l - left bytes (unparsed)\n        decode(tag, data) {\n            const { Err: E } = DER;\n            let pos = 0;\n            if (tag < 0 || tag > 256)\n                throw new E('tlv.encode: wrong tag');\n            if (data.length < 2 || data[pos++] !== tag)\n                throw new E('tlv.decode: wrong tlv');\n            const first = data[pos++];\n            const isLong = !!(first & 0b1000_0000); // First bit of first length byte is flag for short/long form\n            let length = 0;\n            if (!isLong)\n                length = first;\n            else {\n                // Long form: [longFlag(1bit), lengthLength(7bit), length (BE)]\n                const lenLen = first & 0b0111_1111;\n                if (!lenLen)\n                    throw new E('tlv.decode(long): indefinite length not supported');\n                if (lenLen > 4)\n                    throw new E('tlv.decode(long): byte length is too big'); // this will overflow u32 in js\n                const lengthBytes = data.subarray(pos, pos + lenLen);\n                if (lengthBytes.length !== lenLen)\n                    throw new E('tlv.decode: length bytes not complete');\n                if (lengthBytes[0] === 0)\n                    throw new E('tlv.decode(long): zero leftmost byte');\n                for (const b of lengthBytes)\n                    length = (length << 8) | b;\n                pos += lenLen;\n                if (length < 128)\n                    throw new E('tlv.decode(long): not minimal encoding');\n            }\n            const v = data.subarray(pos, pos + length);\n            if (v.length !== length)\n                throw new E('tlv.decode: wrong value length');\n            return { v, l: data.subarray(pos + length) };\n        },\n    },\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    _int: {\n        encode(num) {\n            const { Err: E } = DER;\n            if (num < _0n)\n                throw new E('integer: negative integers are not allowed');\n            let hex = numberToHexUnpadded(num);\n            // Pad with zero byte if negative flag is present\n            if (Number.parseInt(hex[0], 16) & 0b1000)\n                hex = '00' + hex;\n            if (hex.length & 1)\n                throw new E('unexpected DER parsing assertion: unpadded hex');\n            return hex;\n        },\n        decode(data) {\n            const { Err: E } = DER;\n            if (data[0] & 0b1000_0000)\n                throw new E('invalid signature integer: negative');\n            if (data[0] === 0x00 && !(data[1] & 0b1000_0000))\n                throw new E('invalid signature integer: unnecessary leading zero');\n            return bytesToNumberBE(data);\n        },\n    },\n    toSig(bytes) {\n        // parse DER signature\n        const { Err: E, _int: int, _tlv: tlv } = DER;\n        const data = abytes(bytes, undefined, 'signature');\n        const { v: seqBytes, l: seqLeftBytes } = tlv.decode(0x30, data);\n        if (seqLeftBytes.length)\n            throw new E('invalid signature: left bytes after parsing');\n        const { v: rBytes, l: rLeftBytes } = tlv.decode(0x02, seqBytes);\n        const { v: sBytes, l: sLeftBytes } = tlv.decode(0x02, rLeftBytes);\n        if (sLeftBytes.length)\n            throw new E('invalid signature: left bytes after parsing');\n        return { r: int.decode(rBytes), s: int.decode(sBytes) };\n    },\n    hexFromSig(sig) {\n        const { _tlv: tlv, _int: int } = DER;\n        const rs = tlv.encode(0x02, int.encode(sig.r));\n        const ss = tlv.encode(0x02, int.encode(sig.s));\n        const seq = rs + ss;\n        return tlv.encode(0x30, seq);\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\n/**\n * Creates weierstrass Point constructor, based on specified curve options.\n *\n * See {@link WeierstrassOpts}.\n *\n * @example\n```js\nconst opts = {\n  p: 0xfffffffffffffffffffffffffffffffeffffac73n,\n  n: 0x100000000000000000001b8fa16dfab9aca16b6b3n,\n  h: 1n,\n  a: 0n,\n  b: 7n,\n  Gx: 0x3b4c382ce37aa192a4019e763036f4f5dd4d7ebbn,\n  Gy: 0x938cf935318fdced6bc28286531733c3f03c4feen,\n};\nconst secp160k1_Point = weierstrass(opts);\n```\n */\nexport function weierstrass(params, extraOpts = {}) {\n    const validated = createCurveFields('weierstrass', params, extraOpts);\n    const { Fp, Fn } = validated;\n    let CURVE = validated.CURVE;\n    const { h: cofactor, n: CURVE_ORDER } = CURVE;\n    validateObject(extraOpts, {}, {\n        allowInfinityPoint: 'boolean',\n        clearCofactor: 'function',\n        isTorsionFree: 'function',\n        fromBytes: 'function',\n        toBytes: 'function',\n        endo: 'object',\n    });\n    const { endo } = extraOpts;\n    if (endo) {\n        // validateObject(endo, { beta: 'bigint', splitScalar: 'function' });\n        if (!Fp.is0(CURVE.a) || typeof endo.beta !== 'bigint' || !Array.isArray(endo.basises)) {\n            throw new Error('invalid endo: expected \"beta\": bigint and \"basises\": array');\n        }\n    }\n    const lengths = getWLengths(Fp, Fn);\n    function assertCompressionIsSupported() {\n        if (!Fp.isOdd)\n            throw new Error('compression is not supported: Field does not have .isOdd()');\n    }\n    // Implements IEEE P1363 point encoding\n    function pointToBytes(_c, point, isCompressed) {\n        const { x, y } = point.toAffine();\n        const bx = Fp.toBytes(x);\n        abool(isCompressed, 'isCompressed');\n        if (isCompressed) {\n            assertCompressionIsSupported();\n            const hasEvenY = !Fp.isOdd(y);\n            return concatBytes(pprefix(hasEvenY), bx);\n        }\n        else {\n            return concatBytes(Uint8Array.of(0x04), bx, Fp.toBytes(y));\n        }\n    }\n    function pointFromBytes(bytes) {\n        abytes(bytes, undefined, 'Point');\n        const { publicKey: comp, publicKeyUncompressed: uncomp } = lengths; // e.g. for 32-byte: 33, 65\n        const length = bytes.length;\n        const head = bytes[0];\n        const tail = bytes.subarray(1);\n        // No actual validation is done here: use .assertValidity()\n        if (length === comp && (head === 0x02 || head === 0x03)) {\n            const x = Fp.fromBytes(tail);\n            if (!Fp.isValid(x))\n                throw new Error('bad point: is not on curve, wrong x');\n            const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n            let y;\n            try {\n                y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n            }\n            catch (sqrtError) {\n                const err = sqrtError instanceof Error ? ': ' + sqrtError.message : '';\n                throw new Error('bad point: is not on curve, sqrt error' + err);\n            }\n            assertCompressionIsSupported();\n            const evenY = Fp.isOdd(y);\n            const evenH = (head & 1) === 1; // ECDSA-specific\n            if (evenH !== evenY)\n                y = Fp.neg(y);\n            return { x, y };\n        }\n        else if (length === uncomp && head === 0x04) {\n            // TODO: more checks\n            const L = Fp.BYTES;\n            const x = Fp.fromBytes(tail.subarray(0, L));\n            const y = Fp.fromBytes(tail.subarray(L, L * 2));\n            if (!isValidXY(x, y))\n                throw new Error('bad point: is not on curve');\n            return { x, y };\n        }\n        else {\n            throw new Error(`bad point: got length ${length}, expected compressed=${comp} or uncompressed=${uncomp}`);\n        }\n    }\n    const encodePoint = extraOpts.toBytes || pointToBytes;\n    const decodePoint = extraOpts.fromBytes || pointFromBytes;\n    function weierstrassEquation(x) {\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x² * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, CURVE.a)), CURVE.b); // x³ + a * x + b\n    }\n    // TODO: move top-level\n    /** Checks whether equation holds for given x, y: y² == x³ + ax + b */\n    function isValidXY(x, y) {\n        const left = Fp.sqr(y); // y²\n        const right = weierstrassEquation(x); // x³ + ax + b\n        return Fp.eql(left, right);\n    }\n    // Validate whether the passed curve params are valid.\n    // Test 1: equation y² = x³ + ax + b should work for generator point.\n    if (!isValidXY(CURVE.Gx, CURVE.Gy))\n        throw new Error('bad curve params: generator point');\n    // Test 2: discriminant Δ part should be non-zero: 4a³ + 27b² != 0.\n    // Guarantees curve is genus-1, smooth (non-singular).\n    const _4a3 = Fp.mul(Fp.pow(CURVE.a, _3n), _4n);\n    const _27b2 = Fp.mul(Fp.sqr(CURVE.b), BigInt(27));\n    if (Fp.is0(Fp.add(_4a3, _27b2)))\n        throw new Error('bad curve params: a or b');\n    /** Asserts coordinate is valid: 0 <= n < Fp.ORDER. */\n    function acoord(title, n, banZero = false) {\n        if (!Fp.isValid(n) || (banZero && Fp.is0(n)))\n            throw new Error(`bad point coordinate ${title}`);\n        return n;\n    }\n    function aprjpoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('Weierstrass Point expected');\n    }\n    function splitEndoScalarN(k) {\n        if (!endo || !endo.basises)\n            throw new Error('no endo');\n        return _splitEndoScalar(k, endo.basises, Fn.ORDER);\n    }\n    // Memoized toAffine / validity check. They are heavy. Points are immutable.\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (X, Y, Z) ∋ (x=X/Z, y=Y/Z)\n    const toAffineMemo = memoized((p, iz) => {\n        const { X, Y, Z } = p;\n        // Fast-path for normalized points\n        if (Fp.eql(Z, Fp.ONE))\n            return { x: X, y: Y };\n        const is0 = p.is0();\n        // If invZ was 0, we return zero point. However we still want to execute\n        // all operations, so we replace invZ with a random number, 1.\n        if (iz == null)\n            iz = is0 ? Fp.ONE : Fp.inv(Z);\n        const x = Fp.mul(X, iz);\n        const y = Fp.mul(Y, iz);\n        const zz = Fp.mul(Z, iz);\n        if (is0)\n            return { x: Fp.ZERO, y: Fp.ZERO };\n        if (!Fp.eql(zz, Fp.ONE))\n            throw new Error('invZ was invalid');\n        return { x, y };\n    });\n    // NOTE: on exception this will crash 'cached' and no value will be set.\n    // Otherwise true will be return\n    const assertValidMemo = memoized((p) => {\n        if (p.is0()) {\n            // (0, 1, 0) aka ZERO is invalid in most contexts.\n            // In BLS, ZERO can be serialized, so we allow it.\n            // (0, 0, 0) is invalid representation of ZERO.\n            if (extraOpts.allowInfinityPoint && !Fp.is0(p.Y))\n                return;\n            throw new Error('bad point: ZERO');\n        }\n        // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n        const { x, y } = p.toAffine();\n        if (!Fp.isValid(x) || !Fp.isValid(y))\n            throw new Error('bad point: x or y not field elements');\n        if (!isValidXY(x, y))\n            throw new Error('bad point: equation left != right');\n        if (!p.isTorsionFree())\n            throw new Error('bad point: not in prime-order subgroup');\n        return true;\n    });\n    function finishEndo(endoBeta, k1p, k2p, k1neg, k2neg) {\n        k2p = new Point(Fp.mul(k2p.X, endoBeta), k2p.Y, k2p.Z);\n        k1p = negateCt(k1neg, k1p);\n        k2p = negateCt(k2neg, k2p);\n        return k1p.add(k2p);\n    }\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates:(X, Y, Z) ∋ (x=X/Z, y=Y/Z).\n     * Default Point works in 2d / affine coordinates: (x, y).\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        // base / generator point\n        static BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n        // zero / infinity / identity point\n        static ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO); // 0, 1, 0\n        // math field\n        static Fp = Fp;\n        // scalar field\n        static Fn = Fn;\n        X;\n        Y;\n        Z;\n        /** Does NOT validate if the point is valid. Use `.assertValidity()`. */\n        constructor(X, Y, Z) {\n            this.X = acoord('x', X);\n            this.Y = acoord('y', Y, true);\n            this.Z = acoord('z', Z);\n            Object.freeze(this);\n        }\n        static CURVE() {\n            return CURVE;\n        }\n        /** Does NOT validate if the point is valid. Use `.assertValidity()`. */\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            // (0, 0) would've produced (0, 0, 1) - instead, we need (0, 1, 0)\n            if (Fp.is0(x) && Fp.is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        static fromBytes(bytes) {\n            const P = Point.fromAffine(decodePoint(abytes(bytes, undefined, 'point')));\n            P.assertValidity();\n            return P;\n        }\n        static fromHex(hex) {\n            return Point.fromBytes(hexToBytes(hex));\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         *\n         * @param windowSize\n         * @param isLazy true will defer table computation until the first multiplication\n         * @returns\n         */\n        precompute(windowSize = 8, isLazy = true) {\n            wnaf.createCache(this, windowSize);\n            if (!isLazy)\n                this.multiply(_3n); // random number\n            return this;\n        }\n        // TODO: return `this`\n        /** A point on curve is valid if it conforms to equation. */\n        assertValidity() {\n            assertValidMemo(this);\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (!Fp.isOdd)\n                throw new Error(\"Field doesn't support isOdd\");\n            return !Fp.isOdd(y);\n        }\n        /** Compare one point to another. */\n        equals(other) {\n            aprjpoint(other);\n            const { X: X1, Y: Y1, Z: Z1 } = this;\n            const { X: X2, Y: Y2, Z: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /** Flips point to one corresponding to (x, -y) in Affine coordinates. */\n        negate() {\n            return new Point(this.X, Fp.neg(this.Y), this.Z);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { X: X1, Y: Y1, Z: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            aprjpoint(other);\n            const { X: X1, Y: Y1, Z: Z1 } = this;\n            const { X: X2, Y: Y2, Z: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            const { endo } = extraOpts;\n            if (!Fn.isValidNot0(scalar))\n                throw new Error('invalid scalar: out of range'); // 0 is invalid\n            let point, fake; // Fake point is used to const-time mult\n            const mul = (n) => wnaf.cached(this, n, (p) => normalizeZ(Point, p));\n            /** See docs for {@link EndomorphismOpts} */\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = splitEndoScalarN(scalar);\n                const { p: k1p, f: k1f } = mul(k1);\n                const { p: k2p, f: k2f } = mul(k2);\n                fake = k1f.add(k2f);\n                point = finishEndo(endo.beta, k1p, k2p, k1neg, k2neg);\n            }\n            else {\n                const { p, f } = mul(scalar);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return normalizeZ(Point, [point, fake])[0];\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed secret key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(sc) {\n            const { endo } = extraOpts;\n            const p = this;\n            if (!Fn.isValid(sc))\n                throw new Error('invalid scalar: out of range'); // 0 is valid\n            if (sc === _0n || p.is0())\n                return Point.ZERO; // 0\n            if (sc === _1n)\n                return p; // 1\n            if (wnaf.hasCache(this))\n                return this.multiply(sc); // precomputes\n            // We don't have method for double scalar multiplication (aP + bQ):\n            // Even with using Strauss-Shamir trick, it's 35% slower than naïve mul+add.\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = splitEndoScalarN(sc);\n                const { p1, p2 } = mulEndoUnsafe(Point, p, k1, k2); // 30% faster vs wnaf.unsafe\n                return finishEndo(endo.beta, p1, p2, k1neg, k2neg);\n            }\n            else {\n                return wnaf.unsafe(p, sc);\n            }\n        }\n        /**\n         * Converts Projective point to affine (x, y) coordinates.\n         * @param invertedZ Z^-1 (inverted zero) - optional, precomputation is useful for invertBatch\n         */\n        toAffine(invertedZ) {\n            return toAffineMemo(this, invertedZ);\n        }\n        /**\n         * Checks whether Point is free of torsion elements (is in prime subgroup).\n         * Always torsion-free for cofactor=1 curves.\n         */\n        isTorsionFree() {\n            const { isTorsionFree } = extraOpts;\n            if (cofactor === _1n)\n                return true;\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            return wnaf.unsafe(this, CURVE_ORDER).is0();\n        }\n        clearCofactor() {\n            const { clearCofactor } = extraOpts;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(cofactor);\n        }\n        isSmallOrder() {\n            // can we use this.clearCofactor()?\n            return this.multiplyUnsafe(cofactor).is0();\n        }\n        toBytes(isCompressed = true) {\n            abool(isCompressed, 'isCompressed');\n            this.assertValidity();\n            return encodePoint(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            return bytesToHex(this.toBytes(isCompressed));\n        }\n        toString() {\n            return `<Point ${this.is0() ? 'ZERO' : this.toHex()}>`;\n        }\n    }\n    const bits = Fn.BITS;\n    const wnaf = new wNAF(Point, extraOpts.endo ? Math.ceil(bits / 2) : bits);\n    Point.BASE.precompute(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n    return Point;\n}\n// Points start with byte 0x02 when y is even; otherwise 0x03\nfunction pprefix(hasEvenY) {\n    return Uint8Array.of(hasEvenY ? 0x02 : 0x03);\n}\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    validateField(Fp);\n    const { A, B, Z } = opts;\n    if (!Fp.isValid(A) || !Fp.isValid(B) || !Fp.isValid(Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, Z);\n    if (!Fp.isOdd)\n        throw new Error('Field does not have .isOdd()');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        const tv4_inv = FpInvertBatch(Fp, [tv4], true)[0];\n        x = Fp.mul(x, tv4_inv); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\nfunction getWLengths(Fp, Fn) {\n    return {\n        secretKey: Fn.BYTES,\n        publicKey: 1 + Fp.BYTES,\n        publicKeyUncompressed: 1 + 2 * Fp.BYTES,\n        publicKeyHasPrefix: true,\n        signature: 2 * Fn.BYTES,\n    };\n}\n/**\n * Sometimes users only need getPublicKey, getSharedSecret, and secret key handling.\n * This helper ensures no signature functionality is present. Less code, smaller bundle size.\n */\nexport function ecdh(Point, ecdhOpts = {}) {\n    const { Fn } = Point;\n    const randomBytes_ = ecdhOpts.randomBytes || wcRandomBytes;\n    const lengths = Object.assign(getWLengths(Point.Fp, Fn), { seed: getMinHashLength(Fn.ORDER) });\n    function isValidSecretKey(secretKey) {\n        try {\n            const num = Fn.fromBytes(secretKey);\n            return Fn.isValidNot0(num);\n        }\n        catch (error) {\n            return false;\n        }\n    }\n    function isValidPublicKey(publicKey, isCompressed) {\n        const { publicKey: comp, publicKeyUncompressed } = lengths;\n        try {\n            const l = publicKey.length;\n            if (isCompressed === true && l !== comp)\n                return false;\n            if (isCompressed === false && l !== publicKeyUncompressed)\n                return false;\n            return !!Point.fromBytes(publicKey);\n        }\n        catch (error) {\n            return false;\n        }\n    }\n    /**\n     * Produces cryptographically secure secret key from random of size\n     * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n     */\n    function randomSecretKey(seed = randomBytes_(lengths.seed)) {\n        return mapHashToField(abytes(seed, lengths.seed, 'seed'), Fn.ORDER);\n    }\n    /**\n     * Computes public key for a secret key. Checks for validity of the secret key.\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(secretKey, isCompressed = true) {\n        return Point.BASE.multiply(Fn.fromBytes(secretKey)).toBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const { secretKey, publicKey, publicKeyUncompressed } = lengths;\n        if (!isBytes(item))\n            return undefined;\n        if (('_lengths' in Fn && Fn._lengths) || secretKey === publicKey)\n            return undefined;\n        const l = abytes(item, undefined, 'key').length;\n        return l === publicKey || l === publicKeyUncompressed;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from secret key A and public key B.\n     * Checks: 1) secret key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(secretKeyA, publicKeyB, isCompressed = true) {\n        if (isProbPub(secretKeyA) === true)\n            throw new Error('first arg must be private key');\n        if (isProbPub(publicKeyB) === false)\n            throw new Error('second arg must be public key');\n        const s = Fn.fromBytes(secretKeyA);\n        const b = Point.fromBytes(publicKeyB); // checks for being on-curve\n        return b.multiply(s).toBytes(isCompressed);\n    }\n    const utils = {\n        isValidSecretKey,\n        isValidPublicKey,\n        randomSecretKey,\n    };\n    const keygen = createKeygen(randomSecretKey, getPublicKey);\n    return Object.freeze({ getPublicKey, getSharedSecret, keygen, Point, utils, lengths });\n}\n/**\n * Creates ECDSA signing interface for given elliptic curve `Point` and `hash` function.\n *\n * @param Point created using {@link weierstrass} function\n * @param hash used for 1) message prehash-ing 2) k generation in `sign`, using hmac_drbg(hash)\n * @param ecdsaOpts rarely needed, see {@link ECDSAOpts}\n *\n * @example\n * ```js\n * const p256_Point = weierstrass(...);\n * const p256_sha256 = ecdsa(p256_Point, sha256);\n * const p256_sha224 = ecdsa(p256_Point, sha224);\n * const p256_sha224_r = ecdsa(p256_Point, sha224, { randomBytes: (length) => { ... } });\n * ```\n */\nexport function ecdsa(Point, hash, ecdsaOpts = {}) {\n    ahash(hash);\n    validateObject(ecdsaOpts, {}, {\n        hmac: 'function',\n        lowS: 'boolean',\n        randomBytes: 'function',\n        bits2int: 'function',\n        bits2int_modN: 'function',\n    });\n    ecdsaOpts = Object.assign({}, ecdsaOpts);\n    const randomBytes = ecdsaOpts.randomBytes || wcRandomBytes;\n    const hmac = ecdsaOpts.hmac || ((key, msg) => nobleHmac(hash, key, msg));\n    const { Fp, Fn } = Point;\n    const { ORDER: CURVE_ORDER, BITS: fnBits } = Fn;\n    const { keygen, getPublicKey, getSharedSecret, utils, lengths } = ecdh(Point, ecdsaOpts);\n    const defaultSigOpts = {\n        prehash: true,\n        lowS: typeof ecdsaOpts.lowS === 'boolean' ? ecdsaOpts.lowS : true,\n        format: 'compact',\n        extraEntropy: false,\n    };\n    const hasLargeCofactor = CURVE_ORDER * _2n < Fp.ORDER; // Won't CURVE().h > 2n be more effective?\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function validateRS(title, num) {\n        if (!Fn.isValidNot0(num))\n            throw new Error(`invalid signature ${title}: out of range 1..Point.Fn.ORDER`);\n        return num;\n    }\n    function assertSmallCofactor() {\n        // ECDSA recovery is hard for cofactor > 1 curves.\n        // In sign, `r = q.x mod n`, and here we recover q.x from r.\n        // While recovering q.x >= n, we need to add r+n for cofactor=1 curves.\n        // However, for cofactor>1, r+n may not get q.x:\n        // r+n*i would need to be done instead where i is unknown.\n        // To easily get i, we either need to:\n        // a. increase amount of valid recid values (4, 5...); OR\n        // b. prohibit non-prime-order signatures (recid > 1).\n        if (hasLargeCofactor)\n            throw new Error('\"recovered\" sig type is not supported for cofactor >2 curves');\n    }\n    function validateSigLength(bytes, format) {\n        validateSigFormat(format);\n        const size = lengths.signature;\n        const sizer = format === 'compact' ? size : format === 'recovered' ? size + 1 : undefined;\n        return abytes(bytes, sizer);\n    }\n    /**\n     * ECDSA signature with its (r, s) properties. Supports compact, recovered & DER representations.\n     */\n    class Signature {\n        r;\n        s;\n        recovery;\n        constructor(r, s, recovery) {\n            this.r = validateRS('r', r); // r in [1..N-1];\n            this.s = validateRS('s', s); // s in [1..N-1];\n            if (recovery != null) {\n                assertSmallCofactor();\n                if (![0, 1, 2, 3].includes(recovery))\n                    throw new Error('invalid recovery id');\n                this.recovery = recovery;\n            }\n            Object.freeze(this);\n        }\n        static fromBytes(bytes, format = defaultSigOpts.format) {\n            validateSigLength(bytes, format);\n            let recid;\n            if (format === 'der') {\n                const { r, s } = DER.toSig(abytes(bytes));\n                return new Signature(r, s);\n            }\n            if (format === 'recovered') {\n                recid = bytes[0];\n                format = 'compact';\n                bytes = bytes.subarray(1);\n            }\n            const L = lengths.signature / 2;\n            const r = bytes.subarray(0, L);\n            const s = bytes.subarray(L, L * 2);\n            return new Signature(Fn.fromBytes(r), Fn.fromBytes(s), recid);\n        }\n        static fromHex(hex, format) {\n            return this.fromBytes(hexToBytes(hex), format);\n        }\n        assertRecovery() {\n            const { recovery } = this;\n            if (recovery == null)\n                throw new Error('invalid recovery id: must be present');\n            return recovery;\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(messageHash) {\n            const { r, s } = this;\n            const recovery = this.assertRecovery();\n            const radj = recovery === 2 || recovery === 3 ? r + CURVE_ORDER : r;\n            if (!Fp.isValid(radj))\n                throw new Error('invalid recovery id: sig.r+curve.n != R.x');\n            const x = Fp.toBytes(radj);\n            const R = Point.fromBytes(concatBytes(pprefix((recovery & 1) === 0), x));\n            const ir = Fn.inv(radj); // r^-1\n            const h = bits2int_modN(abytes(messageHash, undefined, 'msgHash')); // Truncate hash\n            const u1 = Fn.create(-h * ir); // -hr^-1\n            const u2 = Fn.create(s * ir); // sr^-1\n            // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1). unsafe is fine: there is no private data.\n            const Q = Point.BASE.multiplyUnsafe(u1).add(R.multiplyUnsafe(u2));\n            if (Q.is0())\n                throw new Error('invalid recovery: point at infinify');\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        toBytes(format = defaultSigOpts.format) {\n            validateSigFormat(format);\n            if (format === 'der')\n                return hexToBytes(DER.hexFromSig(this));\n            const { r, s } = this;\n            const rb = Fn.toBytes(r);\n            const sb = Fn.toBytes(s);\n            if (format === 'recovered') {\n                assertSmallCofactor();\n                return concatBytes(Uint8Array.of(this.assertRecovery()), rb, sb);\n            }\n            return concatBytes(rb, sb);\n        }\n        toHex(format) {\n            return bytesToHex(this.toBytes(format));\n        }\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = ecdsaOpts.bits2int ||\n        function bits2int_def(bytes) {\n            // Our custom check \"just in case\", for protection against DoS\n            if (bytes.length > 8192)\n                throw new Error('input is too large');\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - fnBits; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = ecdsaOpts.bits2int_modN ||\n        function bits2int_modN_def(bytes) {\n            return Fn.create(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // Pads output with zero as per spec\n    const ORDER_MASK = bitMask(fnBits);\n    /** Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`. */\n    function int2octets(num) {\n        // IMPORTANT: the check ensures working for case `Fn.BYTES != Fn.BITS * 8`\n        aInRange('num < 2^' + fnBits, num, _0n, ORDER_MASK);\n        return Fn.toBytes(num);\n    }\n    function validateMsgAndHash(message, prehash) {\n        abytes(message, undefined, 'message');\n        return prehash ? abytes(hash(message), undefined, 'prehashed message') : message;\n    }\n    /**\n     * Steps A, D of RFC6979 3.2.\n     * Creates RFC6979 seed; converts msg/privKey to numbers.\n     * Used only in sign, not in verify.\n     *\n     * Warning: we cannot assume here that message has same amount of bytes as curve order,\n     * this will be invalid at least for P521. Also it can be bigger for P224 + SHA256.\n     */\n    function prepSig(message, secretKey, opts) {\n        const { lowS, prehash, extraEntropy } = validateSigOpts(opts, defaultSigOpts);\n        message = validateMsgAndHash(message, prehash); // RFC6979 3.2 A: h1 = H(m)\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with fnBits % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(message);\n        const d = Fn.fromBytes(secretKey); // validate secret key, convert to bigint\n        if (!Fn.isValidNot0(d))\n            throw new Error('invalid private key');\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (extraEntropy != null && extraEntropy !== false) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            // gen random bytes OR pass as-is\n            const e = extraEntropy === true ? randomBytes(lengths.secretKey) : extraEntropy;\n            seedArgs.push(abytes(e, undefined, 'extraEntropy')); // check for being bytes\n        }\n        const seed = concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        // To transform k => Signature:\n        // q = k⋅G\n        // r = q.x mod n\n        // s = k^-1(m + rd) mod n\n        // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n        // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n        // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            // Important: all mod() calls here must be done over N\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!Fn.isValidNot0(k))\n                return; // Valid scalars (including k) must be in 1..N-1\n            const ik = Fn.inv(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = k⋅G\n            const r = Fn.create(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            const s = Fn.create(ik * Fn.create(m + r * d)); // s = k^-1(m + rd) mod n\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3 when q.x>n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = Fn.neg(s); // if lowS was passed, ensure s is always in the bottom half of N\n                recovery ^= 1;\n            }\n            return new Signature(r, normS, hasLargeCofactor ? undefined : recovery);\n        }\n        return { seed, k2sig };\n    }\n    /**\n     * Signs message hash with a secret key.\n     *\n     * ```\n     * sign(m, d) where\n     *   k = rfc6979_hmac_drbg(m, d)\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr) / k mod n\n     * ```\n     */\n    function sign(message, secretKey, opts = {}) {\n        const { seed, k2sig } = prepSig(message, secretKey, opts); // Steps A, D of RFC6979 3.2.\n        const drbg = createHmacDrbg(hash.outputLen, Fn.BYTES, hmac);\n        const sig = drbg(seed, k2sig); // Steps B, C, D, E, F, G\n        return sig.toBytes(opts.format);\n    }\n    /**\n     * Verifies a signature against message and public key.\n     * Rejects lowS signatures by default: see {@link ECDSAVerifyOpts}.\n     * Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   u1 = hs^-1 mod n\n     *   u2 = rs^-1 mod n\n     *   R = u1⋅G + u2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, message, publicKey, opts = {}) {\n        const { lowS, prehash, format } = validateSigOpts(opts, defaultSigOpts);\n        publicKey = abytes(publicKey, undefined, 'publicKey');\n        message = validateMsgAndHash(message, prehash);\n        if (!isBytes(signature)) {\n            const end = signature instanceof Signature ? ', use sig.toBytes()' : '';\n            throw new Error('verify expects Uint8Array signature' + end);\n        }\n        validateSigLength(signature, format); // execute this twice because we want loud error\n        try {\n            const sig = Signature.fromBytes(signature, format);\n            const P = Point.fromBytes(publicKey);\n            if (lowS && sig.hasHighS())\n                return false;\n            const { r, s } = sig;\n            const h = bits2int_modN(message); // mod n, not mod p\n            const is = Fn.inv(s); // s^-1 mod n\n            const u1 = Fn.create(h * is); // u1 = hs^-1 mod n\n            const u2 = Fn.create(r * is); // u2 = rs^-1 mod n\n            const R = Point.BASE.multiplyUnsafe(u1).add(P.multiplyUnsafe(u2)); // u1⋅G + u2⋅P\n            if (R.is0())\n                return false;\n            const v = Fn.create(R.x); // v = r.x mod n\n            return v === r;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    function recoverPublicKey(signature, message, opts = {}) {\n        const { prehash } = validateSigOpts(opts, defaultSigOpts);\n        message = validateMsgAndHash(message, prehash);\n        return Signature.fromBytes(signature, 'recovered').recoverPublicKey(message).toBytes();\n    }\n    return Object.freeze({\n        keygen,\n        getPublicKey,\n        getSharedSecret,\n        utils,\n        lengths,\n        Point,\n        sign,\n        verify,\n        recoverPublicKey,\n        Signature,\n        hash,\n    });\n}\n//# sourceMappingURL=weierstrass.js.map","/**\n * SECG secp256k1. See [pdf](https://www.secg.org/sec2-v2.pdf).\n *\n * Belongs to Koblitz curves: it has efficiently-computable GLV endomorphism ψ,\n * check out {@link EndomorphismOpts}. Seems to be rigid (not backdoored).\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha2.js';\nimport { randomBytes } from '@noble/hashes/utils.js';\nimport { createKeygen } from \"./abstract/curve.js\";\nimport { createHasher, isogenyMap } from \"./abstract/hash-to-curve.js\";\nimport { Field, mapHashToField, pow2 } from \"./abstract/modular.js\";\nimport { ecdsa, mapToCurveSimpleSWU, weierstrass, } from \"./abstract/weierstrass.js\";\nimport { abytes, asciiToBytes, bytesToNumberBE, concatBytes } from \"./utils.js\";\n// Seems like generator was produced from some seed:\n// `Pointk1.BASE.multiply(Pointk1.Fn.inv(2n, N)).toAffine().x`\n// // gives short x 0x3b78ce563f89a0ed9414f5aa28ad0d96d6795f9c63n\nconst secp256k1_CURVE = {\n    p: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: BigInt(1),\n    a: BigInt(0),\n    b: BigInt(7),\n    Gx: BigInt('0x79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798'),\n    Gy: BigInt('0x483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8'),\n};\nconst secp256k1_ENDO = {\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n    basises: [\n        [BigInt('0x3086d221a7d46bcde86c90e49284eb15'), -BigInt('0xe4437ed6010e88286f547fa90abfe4c3')],\n        [BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8'), BigInt('0x3086d221a7d46bcde86c90e49284eb15')],\n    ],\n};\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _2n = /* @__PURE__ */ BigInt(2);\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1_CURVE.p;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = (pow2(b3, _3n, P) * b3) % P;\n    const b9 = (pow2(b6, _3n, P) * b3) % P;\n    const b11 = (pow2(b9, _2n, P) * b2) % P;\n    const b22 = (pow2(b11, _11n, P) * b11) % P;\n    const b44 = (pow2(b22, _22n, P) * b22) % P;\n    const b88 = (pow2(b44, _44n, P) * b44) % P;\n    const b176 = (pow2(b88, _88n, P) * b88) % P;\n    const b220 = (pow2(b176, _44n, P) * b44) % P;\n    const b223 = (pow2(b220, _3n, P) * b3) % P;\n    const t1 = (pow2(b223, _23n, P) * b22) % P;\n    const t2 = (pow2(t1, _6n, P) * b2) % P;\n    const root = pow2(t2, _2n, P);\n    if (!Fpk1.eql(Fpk1.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fpk1 = Field(secp256k1_CURVE.p, { sqrt: sqrtMod });\nconst Pointk1 = /* @__PURE__ */ weierstrass(secp256k1_CURVE, {\n    Fp: Fpk1,\n    endo: secp256k1_ENDO,\n});\n/**\n * secp256k1 curve: ECDSA and ECDH methods.\n *\n * Uses sha256 to hash messages. To use a different hash,\n * pass `{ prehash: false }` to sign / verify.\n *\n * @example\n * ```js\n * import { secp256k1 } from '@noble/curves/secp256k1.js';\n * const { secretKey, publicKey } = secp256k1.keygen();\n * // const publicKey = secp256k1.getPublicKey(secretKey);\n * const msg = new TextEncoder().encode('hello noble');\n * const sig = secp256k1.sign(msg, secretKey);\n * const isValid = secp256k1.verify(sig, msg, publicKey);\n * // const sigKeccak = secp256k1.sign(keccak256(msg), secretKey, { prehash: false });\n * ```\n */\nexport const secp256k1 = /* @__PURE__ */ ecdsa(Pointk1, sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = sha256(asciiToBytes(tag));\n        tagP = concatBytes(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return sha256(concatBytes(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toBytes(true).slice(1);\nconst hasEven = (y) => y % _2n === _0n;\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    const { Fn, BASE } = Pointk1;\n    const d_ = Fn.fromBytes(priv);\n    const p = BASE.multiply(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = hasEven(p.y) ? d_ : Fn.neg(d_);\n    return { scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    const Fp = Fpk1;\n    if (!Fp.isValidNot0(x))\n        throw new Error('invalid x: Fail if x ≥ p');\n    const xx = Fp.create(x * x);\n    const c = Fp.create(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = Fp.sqrt(c); // Let y = c^(p+1)/4 mod p. Same as sqrt().\n    // Return the unique point P such that x(P) = x and\n    // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    if (!hasEven(y))\n        y = Fp.neg(y);\n    const p = Pointk1.fromAffine({ x, y });\n    p.assertValidity();\n    return p;\n}\nconst num = bytesToNumberBE;\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return Pointk1.Fn.create(num(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(secretKey) {\n    return schnorrGetExtPubKey(secretKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, secretKey, auxRand = randomBytes(32)) {\n    const { Fn } = Pointk1;\n    const m = abytes(message, undefined, 'message');\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(secretKey); // checks for isWithinCurveOrder\n    const a = abytes(auxRand, 32, 'auxRand'); // Auxiliary random data a: a 32-byte array\n    const t = Fn.toBytes(d ^ num(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    // Let k' = int(rand) mod n. Fail if k' = 0. Let R = k'⋅G\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(rand);\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(Fn.toBytes(Fn.create(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const { Fp, Fn, BASE } = Pointk1;\n    const sig = abytes(signature, 64, 'signature');\n    const m = abytes(message, undefined, 'message');\n    const pub = abytes(publicKey, 32, 'publicKey');\n    try {\n        const P = lift_x(num(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = num(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!Fp.isValidNot0(r))\n            return false;\n        const s = num(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!Fn.isValidNot0(s))\n            return false;\n        const e = challenge(Fn.toBytes(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        // R = s⋅G - e⋅P, where -eP == (n-e)P\n        const R = BASE.multiplyUnsafe(s).add(P.multiplyUnsafe(Fn.neg(e)));\n        const { x, y } = R.toAffine();\n        // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n        if (R.is0() || !hasEven(y) || x !== r)\n            return false;\n        return true;\n    }\n    catch (error) {\n        return false;\n    }\n}\n/**\n * Schnorr signatures over secp256k1.\n * https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\n * @example\n * ```js\n * import { schnorr } from '@noble/curves/secp256k1.js';\n * const { secretKey, publicKey } = schnorr.keygen();\n * // const publicKey = schnorr.getPublicKey(secretKey);\n * const msg = new TextEncoder().encode('hello');\n * const sig = schnorr.sign(msg, secretKey);\n * const isValid = schnorr.verify(sig, msg, publicKey);\n * ```\n */\nexport const schnorr = /* @__PURE__ */ (() => {\n    const size = 32;\n    const seedLength = 48;\n    const randomSecretKey = (seed = randomBytes(seedLength)) => {\n        return mapHashToField(seed, secp256k1_CURVE.n);\n    };\n    return {\n        keygen: createKeygen(randomSecretKey, schnorrGetPublicKey),\n        getPublicKey: schnorrGetPublicKey,\n        sign: schnorrSign,\n        verify: schnorrVerify,\n        Point: Pointk1,\n        utils: {\n            randomSecretKey,\n            taggedHash,\n            lift_x,\n            pointToBytes,\n        },\n        lengths: {\n            secretKey: size,\n            publicKey: size,\n            publicKeyHasPrefix: false,\n            signature: size * 2,\n            seed: seedLength,\n        },\n    };\n})();\nconst isoMap = /* @__PURE__ */ (() => isogenyMap(Fpk1, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j)))))();\nconst mapSWU = /* @__PURE__ */ (() => mapToCurveSimpleSWU(Fpk1, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fpk1.create(BigInt('-11')),\n}))();\n/** Hashing / encoding to secp256k1 points / field. RFC 9380 methods. */\nexport const secp256k1_hasher = /* @__PURE__ */ (() => createHasher(Pointk1, (scalars) => {\n    const { x, y } = mapSWU(Fpk1.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fpk1.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n}))();\n//# sourceMappingURL=secp256k1.js.map","import { secp256k1 as secp } from '@noble/curves/secp256k1.js';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { SigningError, VerificationError } from '../../errors.js';\nimport { isPromise } from '../../util.js';\nconst PUBLIC_KEY_BYTE_LENGTH = 33;\nconst PRIVATE_KEY_BYTE_LENGTH = 32;\nexport { PUBLIC_KEY_BYTE_LENGTH as publicKeyLength };\nexport { PRIVATE_KEY_BYTE_LENGTH as privateKeyLength };\n/**\n * Hash and sign message with private key\n */\nexport function hashAndSign(key, msg, options) {\n    const p = sha256.digest(msg instanceof Uint8Array ? msg : msg.subarray());\n    if (isPromise(p)) {\n        return p\n            .then(({ digest }) => {\n            options?.signal?.throwIfAborted();\n            return secp.sign(digest, key, {\n                prehash: false,\n                format: 'der'\n            });\n        })\n            .catch(err => {\n            if (err.name === 'AbortError') {\n                throw err;\n            }\n            throw new SigningError(String(err));\n        });\n    }\n    try {\n        return secp.sign(p.digest, key, {\n            prehash: false,\n            format: 'der'\n        });\n    }\n    catch (err) {\n        throw new SigningError(String(err));\n    }\n}\n/**\n * Hash message and verify signature with public key\n */\nexport function hashAndVerify(key, sig, msg, options) {\n    const p = sha256.digest(msg instanceof Uint8Array ? msg : msg.subarray());\n    if (isPromise(p)) {\n        return p\n            .then(({ digest }) => {\n            options?.signal?.throwIfAborted();\n            return secp.verify(sig, digest, key, {\n                prehash: false,\n                format: 'der'\n            });\n        })\n            .catch(err => {\n            if (err.name === 'AbortError') {\n                throw err;\n            }\n            throw new VerificationError(String(err));\n        });\n    }\n    try {\n        options?.signal?.throwIfAborted();\n        return secp.verify(sig, p.digest, key, {\n            prehash: false,\n            format: 'der'\n        });\n    }\n    catch (err) {\n        throw new VerificationError(String(err));\n    }\n}\n//# sourceMappingURL=index.browser.js.map","import { base58btc } from 'multiformats/bases/base58';\nimport { CID } from 'multiformats/cid';\nimport { identity } from 'multiformats/hashes/identity';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport { publicKeyToProtobuf } from '../index.js';\nimport { validateSecp256k1PublicKey, compressSecp256k1PublicKey, computeSecp256k1PublicKey, validateSecp256k1PrivateKey } from './utils.js';\nimport { hashAndVerify, hashAndSign } from './index.js';\nexport class Secp256k1PublicKey {\n    type = 'secp256k1';\n    raw;\n    _key;\n    constructor(key) {\n        this._key = validateSecp256k1PublicKey(key);\n        this.raw = compressSecp256k1PublicKey(this._key);\n    }\n    toMultihash() {\n        return identity.digest(publicKeyToProtobuf(this));\n    }\n    toCID() {\n        return CID.createV1(114, this.toMultihash());\n    }\n    toString() {\n        return base58btc.encode(this.toMultihash().bytes).substring(1);\n    }\n    equals(key) {\n        if (key == null || !(key.raw instanceof Uint8Array)) {\n            return false;\n        }\n        return uint8ArrayEquals(this.raw, key.raw);\n    }\n    verify(data, sig, options) {\n        return hashAndVerify(this._key, sig, data, options);\n    }\n}\nexport class Secp256k1PrivateKey {\n    type = 'secp256k1';\n    raw;\n    publicKey;\n    constructor(key, publicKey) {\n        this.raw = validateSecp256k1PrivateKey(key);\n        this.publicKey = new Secp256k1PublicKey(publicKey ?? computeSecp256k1PublicKey(key));\n    }\n    equals(key) {\n        if (key == null || !(key.raw instanceof Uint8Array)) {\n            return false;\n        }\n        return uint8ArrayEquals(this.raw, key.raw);\n    }\n    sign(message, options) {\n        return hashAndSign(this.raw, message, options);\n    }\n}\n//# sourceMappingURL=secp256k1.js.map","import { InvalidPrivateKeyError, InvalidPublicKeyError } from '@libp2p/interface';\nimport { secp256k1 as secp } from '@noble/curves/secp256k1.js';\nimport { Secp256k1PublicKey as Secp256k1PublicKeyClass, Secp256k1PrivateKey as Secp256k1PrivateKeyClass } from './secp256k1.js';\nconst PRIVATE_KEY_BYTE_LENGTH = 32;\nexport { PRIVATE_KEY_BYTE_LENGTH as privateKeyLength };\nexport function unmarshalSecp256k1PrivateKey(bytes) {\n    return new Secp256k1PrivateKeyClass(bytes);\n}\nexport function unmarshalSecp256k1PublicKey(bytes) {\n    return new Secp256k1PublicKeyClass(bytes);\n}\nexport async function generateSecp256k1KeyPair() {\n    const privateKeyBytes = generateSecp256k1PrivateKey();\n    return new Secp256k1PrivateKeyClass(privateKeyBytes);\n}\nexport function compressSecp256k1PublicKey(key) {\n    return secp.Point.fromBytes(key).toBytes();\n}\nexport function decompressSecp256k1PublicKey(key) {\n    return secp.Point.fromBytes(key).toBytes(false);\n}\nexport function validateSecp256k1PrivateKey(key) {\n    try {\n        secp.getPublicKey(key, true);\n        return key;\n    }\n    catch (err) {\n        throw new InvalidPrivateKeyError(String(err));\n    }\n}\nexport function validateSecp256k1PublicKey(key) {\n    try {\n        secp.Point.fromBytes(key);\n        return key;\n    }\n    catch (err) {\n        throw new InvalidPublicKeyError(String(err));\n    }\n}\nexport function computeSecp256k1PublicKey(privateKey) {\n    try {\n        return secp.getPublicKey(privateKey, true);\n    }\n    catch (err) {\n        throw new InvalidPrivateKeyError(String(err));\n    }\n}\nexport function generateSecp256k1PrivateKey() {\n    return secp.utils.randomSecretKey();\n}\n//# sourceMappingURL=utils.js.map","/**\n * @packageDocumentation\n *\n * ## Supported Key Types\n *\n * Currently the `'RSA'`, `'ed25519'`, and `secp256k1` types are supported, although ed25519 and secp256k1 keys support only signing and verification of messages.\n *\n * For encryption / decryption support, RSA keys should be used.\n */\nimport { InvalidParametersError, UnsupportedKeyTypeError } from '@libp2p/interface';\nimport { ECDSAPrivateKey as ECDSAPrivateKeyClass } from './ecdsa/ecdsa.js';\nimport { ECDSA_P_256_OID, ECDSA_P_384_OID, ECDSA_P_521_OID } from './ecdsa/index.js';\nimport { generateECDSAKeyPair, pkiMessageToECDSAPrivateKey, pkiMessageToECDSAPublicKey, unmarshalECDSAPrivateKey, unmarshalECDSAPublicKey } from './ecdsa/utils.js';\nimport { privateKeyLength as ed25519PrivateKeyLength, publicKeyLength as ed25519PublicKeyLength } from './ed25519/index.js';\nimport { generateEd25519KeyPair, generateEd25519KeyPairFromSeed, unmarshalEd25519PrivateKey, unmarshalEd25519PublicKey } from './ed25519/utils.js';\nimport * as pb from './keys.js';\nimport { decodeDer } from './rsa/der.js';\nimport { RSAES_PKCS1_V1_5_OID } from './rsa/index.js';\nimport { pkcs1ToRSAPrivateKey, pkixToRSAPublicKey, generateRSAKeyPair, pkcs1MessageToRSAPrivateKey, pkixMessageToRSAPublicKey, jwkToRSAPrivateKey } from './rsa/utils.js';\nimport { privateKeyLength as secp256k1PrivateKeyLength, publicKeyLength as secp256k1PublicKeyLength } from './secp256k1/index.js';\nimport { generateSecp256k1KeyPair, unmarshalSecp256k1PrivateKey, unmarshalSecp256k1PublicKey } from './secp256k1/utils.js';\nexport { generateEphemeralKeyPair } from './ecdh/index.js';\nexport { keyStretcher } from './key-stretcher.js';\nexport async function generateKeyPair(type, bits) {\n    if (type === 'Ed25519') {\n        return generateEd25519KeyPair();\n    }\n    if (type === 'secp256k1') {\n        return generateSecp256k1KeyPair();\n    }\n    if (type === 'RSA') {\n        return generateRSAKeyPair(toBits(bits));\n    }\n    if (type === 'ECDSA') {\n        return generateECDSAKeyPair(toCurve(bits));\n    }\n    throw new UnsupportedKeyTypeError();\n}\nexport async function generateKeyPairFromSeed(type, seed) {\n    if (type !== 'Ed25519') {\n        throw new UnsupportedKeyTypeError('Seed key derivation only supported for Ed25519 keys');\n    }\n    return generateEd25519KeyPairFromSeed(seed);\n}\n/**\n * Converts a protobuf serialized public key into its representative object.\n *\n * For RSA public keys optionally pass the multihash digest of the public key if\n * it is known. If the digest is omitted it will be calculated which can be\n * expensive.\n *\n * For other key types the digest option is ignored.\n */\nexport function publicKeyFromProtobuf(buf, digest) {\n    const { Type, Data } = pb.PublicKey.decode(buf);\n    const data = Data ?? new Uint8Array();\n    switch (Type) {\n        case pb.KeyType.RSA:\n            return pkixToRSAPublicKey(data, digest);\n        case pb.KeyType.Ed25519:\n            return unmarshalEd25519PublicKey(data);\n        case pb.KeyType.secp256k1:\n            return unmarshalSecp256k1PublicKey(data);\n        case pb.KeyType.ECDSA:\n            return unmarshalECDSAPublicKey(data);\n        default:\n            throw new UnsupportedKeyTypeError();\n    }\n}\n/**\n * Creates a public key from the raw key bytes\n */\nexport function publicKeyFromRaw(buf) {\n    if (buf.byteLength === ed25519PublicKeyLength) {\n        return unmarshalEd25519PublicKey(buf);\n    }\n    else if (buf.byteLength === secp256k1PublicKeyLength) {\n        return unmarshalSecp256k1PublicKey(buf);\n    }\n    const message = decodeDer(buf);\n    const ecdsaOid = message[1]?.[0];\n    if (ecdsaOid === ECDSA_P_256_OID || ecdsaOid === ECDSA_P_384_OID || ecdsaOid === ECDSA_P_521_OID) {\n        return pkiMessageToECDSAPublicKey(message);\n    }\n    if (message[0]?.[0] === RSAES_PKCS1_V1_5_OID) {\n        return pkixMessageToRSAPublicKey(message, buf);\n    }\n    throw new InvalidParametersError('Could not extract public key from raw bytes');\n}\n/**\n * Creates a public key from an identity multihash which contains a protobuf\n * encoded Ed25519 or secp256k1 public key.\n *\n * RSA keys are not supported as in practice we they are not stored in identity\n * multihash since the hash would be very large.\n */\nexport function publicKeyFromMultihash(digest) {\n    const { Type, Data } = pb.PublicKey.decode(digest.digest);\n    const data = Data ?? new Uint8Array();\n    switch (Type) {\n        case pb.KeyType.Ed25519:\n            return unmarshalEd25519PublicKey(data);\n        case pb.KeyType.secp256k1:\n            return unmarshalSecp256k1PublicKey(data);\n        case pb.KeyType.ECDSA:\n            return unmarshalECDSAPublicKey(data);\n        default:\n            throw new UnsupportedKeyTypeError();\n    }\n}\n/**\n * Converts a public key object into a protobuf serialized public key\n */\nexport function publicKeyToProtobuf(key) {\n    return pb.PublicKey.encode({\n        Type: pb.KeyType[key.type],\n        Data: key.raw\n    });\n}\n/**\n * Converts a protobuf serialized private key into its representative object\n */\nexport function privateKeyFromProtobuf(buf) {\n    const decoded = pb.PrivateKey.decode(buf);\n    const data = decoded.Data ?? new Uint8Array();\n    switch (decoded.Type) {\n        case pb.KeyType.RSA:\n            return pkcs1ToRSAPrivateKey(data);\n        case pb.KeyType.Ed25519:\n            return unmarshalEd25519PrivateKey(data);\n        case pb.KeyType.secp256k1:\n            return unmarshalSecp256k1PrivateKey(data);\n        case pb.KeyType.ECDSA:\n            return unmarshalECDSAPrivateKey(data);\n        default:\n            throw new UnsupportedKeyTypeError();\n    }\n}\n/**\n * Creates a private key from the raw key bytes. For Ed25519 keys this requires\n * the public key to be appended to the private key otherwise we can't\n * differentiate between Ed25519 and secp256k1 keys as they are the same length.\n */\nexport function privateKeyFromRaw(buf) {\n    if (buf.byteLength === ed25519PrivateKeyLength) {\n        return unmarshalEd25519PrivateKey(buf);\n    }\n    else if (buf.byteLength === secp256k1PrivateKeyLength) {\n        return unmarshalSecp256k1PrivateKey(buf);\n    }\n    const message = decodeDer(buf);\n    const ecdsaOid = message[2]?.[0];\n    if (ecdsaOid === ECDSA_P_256_OID || ecdsaOid === ECDSA_P_384_OID || ecdsaOid === ECDSA_P_521_OID) {\n        return pkiMessageToECDSAPrivateKey(message);\n    }\n    if (message.length > 8) {\n        return pkcs1MessageToRSAPrivateKey(message);\n    }\n    throw new InvalidParametersError('Could not extract private key from raw bytes');\n}\n/**\n * Converts a private key object into a protobuf serialized private key\n */\nexport function privateKeyToProtobuf(key) {\n    return pb.PrivateKey.encode({\n        Type: pb.KeyType[key.type],\n        Data: key.raw\n    });\n}\nfunction toBits(bits) {\n    if (bits == null) {\n        return 2048;\n    }\n    return parseInt(bits, 10);\n}\nfunction toCurve(curve) {\n    if (curve === 'P-256' || curve == null) {\n        return 'P-256';\n    }\n    if (curve === 'P-384') {\n        return 'P-384';\n    }\n    if (curve === 'P-521') {\n        return 'P-521';\n    }\n    throw new InvalidParametersError('Unsupported curve, should be P-256, P-384 or P-521');\n}\n/**\n * Convert a libp2p RSA or ECDSA private key to a WebCrypto CryptoKeyPair\n */\nexport async function privateKeyToCryptoKeyPair(privateKey) {\n    if (privateKey.type === 'RSA') {\n        return {\n            privateKey: await crypto.subtle.importKey('jwk', privateKey.jwk, {\n                name: 'RSASSA-PKCS1-v1_5',\n                hash: { name: 'SHA-256' }\n            }, true, ['sign']),\n            publicKey: await crypto.subtle.importKey('jwk', privateKey.publicKey.jwk, {\n                name: 'RSASSA-PKCS1-v1_5',\n                hash: { name: 'SHA-256' }\n            }, true, ['verify'])\n        };\n    }\n    if (privateKey.type === 'ECDSA') {\n        return {\n            privateKey: await crypto.subtle.importKey('jwk', privateKey.jwk, {\n                name: 'ECDSA',\n                namedCurve: privateKey.jwk.crv ?? 'P-256'\n            }, true, ['sign']),\n            publicKey: await crypto.subtle.importKey('jwk', privateKey.publicKey.jwk, {\n                name: 'ECDSA',\n                namedCurve: privateKey.publicKey.jwk.crv ?? 'P-256'\n            }, true, ['verify'])\n        };\n    }\n    throw new InvalidParametersError('Only RSA and ECDSA keys are supported');\n}\n/**\n * Convert a RSA or ECDSA WebCrypto CryptoKeyPair to a libp2p private key\n */\nexport async function privateKeyFromCryptoKeyPair(keyPair) {\n    if (keyPair.privateKey.algorithm.name === 'RSASSA-PKCS1-v1_5') {\n        const jwk = await crypto.subtle.exportKey('jwk', keyPair.privateKey);\n        return jwkToRSAPrivateKey(jwk);\n    }\n    if (keyPair.privateKey.algorithm.name === 'ECDSA') {\n        const jwk = await crypto.subtle.exportKey('jwk', keyPair.privateKey);\n        return new ECDSAPrivateKeyClass(jwk);\n    }\n    throw new InvalidParametersError('Only RSA and ECDSA keys are supported');\n}\n//# sourceMappingURL=index.js.map","/**\n * @packageDocumentation\n *\n * An implementation of a peer id\n *\n * @example\n *\n * ```TypeScript\n * import { peerIdFromString } from '@libp2p/peer-id'\n * const peer = peerIdFromString('k51qzi5uqu5dkwkqm42v9j9kqcam2jiuvloi16g72i4i4amoo2m8u3ol3mqu6s')\n *\n * console.log(peer.toCID()) // CID(bafzaa...)\n * console.log(peer.toString()) // \"12D3K...\"\n * ```\n */\nimport { peerIdSymbol } from '@libp2p/interface';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { CID } from 'multiformats/cid';\nimport { identity } from 'multiformats/hashes/identity';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nconst inspect = Symbol.for('nodejs.util.inspect.custom');\n// these values are from https://github.com/multiformats/multicodec/blob/master/table.csv\nconst LIBP2P_KEY_CODE = 0x72;\nclass PeerIdImpl {\n    type;\n    multihash;\n    publicKey;\n    string;\n    constructor(init) {\n        this.type = init.type;\n        this.multihash = init.multihash;\n        // mark string cache as non-enumerable\n        Object.defineProperty(this, 'string', {\n            enumerable: false,\n            writable: true\n        });\n    }\n    get [Symbol.toStringTag]() {\n        return `PeerId(${this.toString()})`;\n    }\n    [peerIdSymbol] = true;\n    toString() {\n        if (this.string == null) {\n            this.string = base58btc.encode(this.multihash.bytes).slice(1);\n        }\n        return this.string;\n    }\n    toMultihash() {\n        return this.multihash;\n    }\n    // return self-describing String representation\n    // in default format from RFC 0001: https://github.com/libp2p/specs/pull/209\n    toCID() {\n        return CID.createV1(LIBP2P_KEY_CODE, this.multihash);\n    }\n    toJSON() {\n        return this.toString();\n    }\n    /**\n     * Checks the equality of `this` peer against a given PeerId\n     */\n    equals(id) {\n        if (id == null) {\n            return false;\n        }\n        if (id instanceof Uint8Array) {\n            return uint8ArrayEquals(this.multihash.bytes, id);\n        }\n        else if (typeof id === 'string') {\n            return this.toString() === id;\n        }\n        else if (id?.toMultihash()?.bytes != null) {\n            return uint8ArrayEquals(this.multihash.bytes, id.toMultihash().bytes);\n        }\n        else {\n            throw new Error('not valid Id');\n        }\n    }\n    /**\n     * Returns PeerId as a human-readable string\n     * https://nodejs.org/api/util.html#utilinspectcustom\n     *\n     * @example\n     * ```TypeScript\n     * import { peerIdFromString } from '@libp2p/peer-id'\n     *\n     * console.info(peerIdFromString('QmFoo'))\n     * // 'PeerId(QmFoo)'\n     * ```\n     */\n    [inspect]() {\n        return `PeerId(${this.toString()})`;\n    }\n}\nexport class RSAPeerId extends PeerIdImpl {\n    type = 'RSA';\n    publicKey;\n    constructor(init) {\n        super({ ...init, type: 'RSA' });\n        this.publicKey = init.publicKey;\n    }\n}\nexport class Ed25519PeerId extends PeerIdImpl {\n    type = 'Ed25519';\n    publicKey;\n    constructor(init) {\n        super({ ...init, type: 'Ed25519' });\n        this.publicKey = init.publicKey;\n    }\n}\nexport class Secp256k1PeerId extends PeerIdImpl {\n    type = 'secp256k1';\n    publicKey;\n    constructor(init) {\n        super({ ...init, type: 'secp256k1' });\n        this.publicKey = init.publicKey;\n    }\n}\n// these values are from https://github.com/multiformats/multicodec/blob/master/table.csv\nconst TRANSPORT_IPFS_GATEWAY_HTTP_CODE = 0x0920;\nexport class URLPeerId {\n    type = 'url';\n    multihash;\n    publicKey;\n    url;\n    constructor(url) {\n        this.url = url.toString();\n        this.multihash = identity.digest(uint8ArrayFromString(this.url));\n    }\n    [inspect]() {\n        return `PeerId(${this.url})`;\n    }\n    [peerIdSymbol] = true;\n    toString() {\n        return this.toCID().toString();\n    }\n    toMultihash() {\n        return this.multihash;\n    }\n    toCID() {\n        return CID.createV1(TRANSPORT_IPFS_GATEWAY_HTTP_CODE, this.toMultihash());\n    }\n    toJSON() {\n        return this.toString();\n    }\n    equals(other) {\n        if (other == null) {\n            return false;\n        }\n        if (other instanceof Uint8Array) {\n            other = uint8ArrayToString(other);\n        }\n        return other.toString() === this.toString();\n    }\n}\n//# sourceMappingURL=peer-id.js.map","/**\n * @packageDocumentation\n *\n * An implementation of a peer id\n *\n * @example\n *\n * ```TypeScript\n * import { peerIdFromString } from '@libp2p/peer-id'\n * const peer = peerIdFromString('12D3KooWKnDdG3iXw9eTFijk3EWSunZcFi54Zka4wmtqtt6rPxc8')\n *\n * console.log(peer.toCID()) // CID(bafzaa...)\n * console.log(peer.toString()) // \"12D3K...\"\n * ```\n */\nimport { publicKeyFromMultihash } from '@libp2p/crypto/keys';\nimport { InvalidCIDError, InvalidMultihashError, InvalidParametersError, UnsupportedKeyTypeError } from '@libp2p/interface';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { CID } from 'multiformats/cid';\nimport * as Digest from 'multiformats/hashes/digest';\nimport { identity } from 'multiformats/hashes/identity';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { RSAPeerId as RSAPeerIdClass, Ed25519PeerId as Ed25519PeerIdClass, Secp256k1PeerId as Secp256k1PeerIdClass, URLPeerId as URLPeerIdClass } from './peer-id.js';\n// these values are from https://github.com/multiformats/multicodec/blob/master/table.csv\nconst LIBP2P_KEY_CODE = 0x72;\nconst TRANSPORT_IPFS_GATEWAY_HTTP_CODE = 0x0920;\nexport function peerIdFromString(str, decoder) {\n    let multihash;\n    if (str.charAt(0) === '1' || str.charAt(0) === 'Q') {\n        // identity hash ed25519/secp256k1 key or sha2-256 hash of\n        // rsa public key - base58btc encoded either way\n        multihash = Digest.decode(base58btc.decode(`z${str}`));\n    }\n    else if (str.startsWith('k51qzi5uqu5') || str.startsWith('kzwfwjn5ji4') || str.startsWith('k2k4r8') || str.startsWith('bafz')) {\n        // base36 encoded CIDv1 with libp2p-key and identity hash (for ed25519/secp256k1/rsa) or base32 encoded CIDv1 with libp2p-key and identity hash (for ed25519/secp256k1/rsa)\n        return peerIdFromCID(CID.parse(str));\n    }\n    else {\n        if (decoder == null) {\n            throw new InvalidParametersError('Please pass a multibase decoder for strings that do not start with \"1\" or \"Q\"');\n        }\n        multihash = Digest.decode(decoder.decode(str));\n    }\n    return peerIdFromMultihash(multihash);\n}\nexport function peerIdFromPublicKey(publicKey) {\n    if (publicKey.type === 'Ed25519') {\n        return new Ed25519PeerIdClass({\n            multihash: publicKey.toCID().multihash,\n            publicKey\n        });\n    }\n    else if (publicKey.type === 'secp256k1') {\n        return new Secp256k1PeerIdClass({\n            multihash: publicKey.toCID().multihash,\n            publicKey\n        });\n    }\n    else if (publicKey.type === 'RSA') {\n        return new RSAPeerIdClass({\n            multihash: publicKey.toCID().multihash,\n            publicKey\n        });\n    }\n    throw new UnsupportedKeyTypeError();\n}\nexport function peerIdFromPrivateKey(privateKey) {\n    return peerIdFromPublicKey(privateKey.publicKey);\n}\nexport function peerIdFromMultihash(multihash) {\n    if (isSha256Multihash(multihash)) {\n        return new RSAPeerIdClass({ multihash });\n    }\n    else if (isIdentityMultihash(multihash)) {\n        try {\n            const publicKey = publicKeyFromMultihash(multihash);\n            if (publicKey.type === 'Ed25519') {\n                return new Ed25519PeerIdClass({ multihash, publicKey });\n            }\n            else if (publicKey.type === 'secp256k1') {\n                return new Secp256k1PeerIdClass({ multihash, publicKey });\n            }\n        }\n        catch (err) {\n            // was not Ed or secp key, try URL\n            const url = uint8ArrayToString(multihash.digest);\n            return new URLPeerIdClass(new URL(url));\n        }\n    }\n    throw new InvalidMultihashError('Supplied PeerID Multihash is invalid');\n}\nexport function peerIdFromCID(cid) {\n    if (cid?.multihash == null || cid.version == null || (cid.version === 1 && (cid.code !== LIBP2P_KEY_CODE) && cid.code !== TRANSPORT_IPFS_GATEWAY_HTTP_CODE)) {\n        throw new InvalidCIDError('Supplied PeerID CID is invalid');\n    }\n    if (cid.code === TRANSPORT_IPFS_GATEWAY_HTTP_CODE) {\n        const url = uint8ArrayToString(cid.multihash.digest);\n        return new URLPeerIdClass(new URL(url));\n    }\n    return peerIdFromMultihash(cid.multihash);\n}\nfunction isIdentityMultihash(multihash) {\n    return multihash.code === identity.code;\n}\nfunction isSha256Multihash(multihash) {\n    return multihash.code === sha256.code;\n}\n//# sourceMappingURL=index.js.map","import { InvalidParametersError } from '@libp2p/interface';\nexport async function validateConfig(opts) {\n    if (opts.connectionProtector === null && globalThis.process?.env?.LIBP2P_FORCE_PNET != null) {\n        throw new InvalidParametersError('Private network is enforced, but no protector was provided');\n    }\n    return opts;\n}\n//# sourceMappingURL=config.js.map","const e=1e3,t=e*60,n=t*60,r=n*24,i=r*7,a=r*365.25,o=a/12;function s(e,t){if(typeof e==`string`)return l(e);if(typeof e==`number`)return p(e,t);throw Error(`Value provided to ms() must be a string or number. value=${JSON.stringify(e)}`)}var c=s;function l(s){if(typeof s!=`string`||s.length===0||s.length>100)throw Error(`Value provided to ms.parse() must be a string with length between 1 and 99. value=${JSON.stringify(s)}`);let c=/^(?<value>-?\\d*\\.?\\d+) *(?<unit>milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|months?|mo|years?|yrs?|y)?$/i.exec(s);if(!c?.groups)return NaN;let{value:l,unit:u=`ms`}=c.groups,d=parseFloat(l),f=u.toLowerCase();switch(f){case`years`:case`year`:case`yrs`:case`yr`:case`y`:return d*a;case`months`:case`month`:case`mo`:return d*o;case`weeks`:case`week`:case`w`:return d*i;case`days`:case`day`:case`d`:return d*r;case`hours`:case`hour`:case`hrs`:case`hr`:case`h`:return d*n;case`minutes`:case`minute`:case`mins`:case`min`:case`m`:return d*t;case`seconds`:case`second`:case`secs`:case`sec`:case`s`:return d*e;case`milliseconds`:case`millisecond`:case`msecs`:case`msec`:case`ms`:return d;default:throw Error(`Unknown unit \"${f}\" provided to ms.parse(). value=${JSON.stringify(s)}`)}}function u(e){return l(e)}function d(s){let c=Math.abs(s);return c>=a?`${Math.round(s/a)}y`:c>=o?`${Math.round(s/o)}mo`:c>=i?`${Math.round(s/i)}w`:c>=r?`${Math.round(s/r)}d`:c>=n?`${Math.round(s/n)}h`:c>=t?`${Math.round(s/t)}m`:c>=e?`${Math.round(s/e)}s`:`${s}ms`}function f(s){let c=Math.abs(s);return c>=a?m(s,c,a,`year`):c>=o?m(s,c,o,`month`):c>=i?m(s,c,i,`week`):c>=r?m(s,c,r,`day`):c>=n?m(s,c,n,`hour`):c>=t?m(s,c,t,`minute`):c>=e?m(s,c,e,`second`):`${s} ms`}function p(e,t){if(typeof e!=`number`||!Number.isFinite(e))throw Error(`Value provided to ms.format() must be of type number.`);return t?.long?f(e):d(e)}function m(e,t,n,r){let i=t>=n*1.5;return`${Math.round(e/n)} ${r}${i?`s`:``}`}export{c as default,p as format,s as ms,l as parse,u as parseStrict};\n//# sourceMappingURL=index.js.map","/* eslint-disable no-console */\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\nimport humanize from 'ms';\nexport default function setup(env) {\n    createDebug.debug = createDebug;\n    createDebug.default = createDebug;\n    createDebug.coerce = coerce;\n    createDebug.disable = disable;\n    createDebug.enable = enable;\n    createDebug.enabled = enabled;\n    createDebug.humanize = humanize;\n    createDebug.destroy = destroy;\n    Object.keys(env).forEach(key => {\n        // @ts-expect-error cannot use string to index type\n        createDebug[key] = env[key];\n    });\n    /**\n     * The currently active debug mode names, and names to skip.\n     */\n    createDebug.names = [];\n    createDebug.skips = [];\n    /**\n     * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n     *\n     * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n     */\n    createDebug.formatters = {};\n    /**\n     * Selects a color for a debug namespace\n     *\n     * @param {string} namespace - The namespace string for the debug instance to be colored\n     * @returns {number | string} An ANSI color code for the given namespace\n     */\n    function selectColor(namespace) {\n        let hash = 0;\n        for (let i = 0; i < namespace.length; i++) {\n            hash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n            hash |= 0; // Convert to 32bit integer\n        }\n        // @ts-expect-error colors is not in the types\n        return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n    }\n    createDebug.selectColor = selectColor;\n    /**\n     * Create a debugger with the given `namespace`.\n     *\n     * @param {string} namespace\n     * @returns {Function}\n     */\n    function createDebug(namespace) {\n        let prevTime;\n        let enableOverride = null;\n        let namespacesCache;\n        let enabledCache;\n        function debug(...args) {\n            // Disabled?\n            // @ts-expect-error enabled is not in the types\n            if (!debug.enabled) {\n                return;\n            }\n            const self = debug;\n            // Set `diff` timestamp\n            const curr = Number(new Date());\n            const ms = curr - (prevTime || curr);\n            self.diff = ms;\n            self.prev = prevTime;\n            self.curr = curr;\n            prevTime = curr;\n            args[0] = createDebug.coerce(args[0]);\n            if (typeof args[0] !== 'string') {\n                // Anything else let's inspect with %O\n                args.unshift('%O');\n            }\n            // Apply any `formatters` transformations\n            let index = 0;\n            args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n                // If we encounter an escaped % then don't increase the array index\n                if (match === '%%') {\n                    return '%';\n                }\n                index++;\n                // @ts-expect-error formatters is not in the types\n                const formatter = createDebug.formatters[format];\n                if (typeof formatter === 'function') {\n                    const val = args[index];\n                    match = formatter.call(self, val);\n                    // Now we need to remove `args[index]` since it's inlined in the `format`\n                    args.splice(index, 1);\n                    index--;\n                }\n                return match;\n            });\n            // Apply env-specific formatting (colors, etc.)\n            // @ts-expect-error formatArgs is not in the types\n            createDebug.formatArgs.call(self, args);\n            // @ts-expect-error log is not in the types\n            const logFn = self.log || createDebug.log;\n            logFn.apply(self, args);\n        }\n        debug.namespace = namespace;\n        // @ts-expect-error useColors is not in the types\n        debug.useColors = createDebug.useColors();\n        debug.color = createDebug.selectColor(namespace);\n        debug.extend = extend;\n        debug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n        Object.defineProperty(debug, 'enabled', {\n            enumerable: true,\n            configurable: false,\n            get: () => {\n                if (enableOverride !== null) {\n                    return enableOverride;\n                }\n                // @ts-expect-error namespaces is not in the types\n                if (namespacesCache !== createDebug.namespaces) {\n                    // @ts-expect-error namespaces is not in the types\n                    namespacesCache = createDebug.namespaces;\n                    enabledCache = createDebug.enabled(namespace);\n                }\n                return enabledCache;\n            },\n            set: v => {\n                enableOverride = v;\n            }\n        });\n        // Env-specific initialization logic for debug instances\n        // @ts-expect-error init is not in the types\n        if (typeof createDebug.init === 'function') {\n            // @ts-expect-error init is not in the types\n            createDebug.init(debug);\n        }\n        // @ts-expect-error some properties are added dynamically\n        return debug;\n    }\n    function extend(namespace, delimiter) {\n        const newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n        newDebug.log = this.log;\n        return newDebug;\n    }\n    /**\n     * Enables a debug mode by namespaces. This can include modes\n     * separated by a colon and wildcards.\n     *\n     * @param {string} namespaces\n     */\n    function enable(namespaces) {\n        // @ts-expect-error save is not in the types\n        createDebug.save(namespaces);\n        // @ts-expect-error namespaces is not in the types\n        createDebug.namespaces = namespaces;\n        createDebug.names = [];\n        createDebug.skips = [];\n        let i;\n        const split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n        const len = split.length;\n        for (i = 0; i < len; i++) {\n            if (!split[i]) {\n                // ignore empty strings\n                continue;\n            }\n            namespaces = split[i].replace(/\\*/g, '.*?');\n            if (namespaces[0] === '-') {\n                createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n            }\n            else {\n                createDebug.names.push(new RegExp('^' + namespaces + '$'));\n            }\n        }\n    }\n    /**\n     * Disable debug output.\n     *\n     * @returns {string} namespaces\n     */\n    function disable() {\n        const namespaces = [\n            ...createDebug.names.map(toNamespace),\n            ...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n        ].join(',');\n        createDebug.enable('');\n        return namespaces;\n    }\n    /**\n     * Returns true if the given mode name is enabled, false otherwise.\n     *\n     * @param {string} name\n     * @returns {boolean}\n     */\n    function enabled(name) {\n        if (name[name.length - 1] === '*') {\n            return true;\n        }\n        let i;\n        let len;\n        for (i = 0, len = createDebug.skips.length; i < len; i++) {\n            if (createDebug.skips[i].test(name)) {\n                return false;\n            }\n        }\n        for (i = 0, len = createDebug.names.length; i < len; i++) {\n            if (createDebug.names[i].test(name)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Convert regexp to namespace\n     */\n    function toNamespace(regexp) {\n        return regexp.toString()\n            .substring(2, regexp.toString().length - 2)\n            .replace(/\\.\\*\\?$/, '*');\n    }\n    /**\n     * Coerce `val`.\n     */\n    function coerce(val) {\n        if (val instanceof Error) {\n            return val.stack ?? val.message;\n        }\n        return val;\n    }\n    /**\n     * XXX DO NOT USE. This is a temporary stub function.\n     * XXX It WILL be removed in the next major release.\n     */\n    function destroy() {\n        console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n    }\n    // @ts-expect-error setupFormatters is not in the types\n    createDebug.setupFormatters(createDebug.formatters);\n    // @ts-expect-error load is not in the types\n    createDebug.enable(createDebug.load());\n    // @ts-expect-error some properties are added dynamically\n    return createDebug;\n}\n//# sourceMappingURL=common.js.map","/* eslint-disable no-console */\n/* eslint-env browser */\n/**\n * This is the web browser implementation of `debug()`.\n */\nimport humanize from 'ms';\nimport setup from './common.js';\nconst storage = localstorage();\n/**\n * Colors.\n */\nconst colors = [\n    '#0000CC',\n    '#0000FF',\n    '#0033CC',\n    '#0033FF',\n    '#0066CC',\n    '#0066FF',\n    '#0099CC',\n    '#0099FF',\n    '#00CC00',\n    '#00CC33',\n    '#00CC66',\n    '#00CC99',\n    '#00CCCC',\n    '#00CCFF',\n    '#3300CC',\n    '#3300FF',\n    '#3333CC',\n    '#3333FF',\n    '#3366CC',\n    '#3366FF',\n    '#3399CC',\n    '#3399FF',\n    '#33CC00',\n    '#33CC33',\n    '#33CC66',\n    '#33CC99',\n    '#33CCCC',\n    '#33CCFF',\n    '#6600CC',\n    '#6600FF',\n    '#6633CC',\n    '#6633FF',\n    '#66CC00',\n    '#66CC33',\n    '#9900CC',\n    '#9900FF',\n    '#9933CC',\n    '#9933FF',\n    '#99CC00',\n    '#99CC33',\n    '#CC0000',\n    '#CC0033',\n    '#CC0066',\n    '#CC0099',\n    '#CC00CC',\n    '#CC00FF',\n    '#CC3300',\n    '#CC3333',\n    '#CC3366',\n    '#CC3399',\n    '#CC33CC',\n    '#CC33FF',\n    '#CC6600',\n    '#CC6633',\n    '#CC9900',\n    '#CC9933',\n    '#CCCC00',\n    '#CCCC33',\n    '#FF0000',\n    '#FF0033',\n    '#FF0066',\n    '#FF0099',\n    '#FF00CC',\n    '#FF00FF',\n    '#FF3300',\n    '#FF3333',\n    '#FF3366',\n    '#FF3399',\n    '#FF33CC',\n    '#FF33FF',\n    '#FF6600',\n    '#FF6633',\n    '#FF9900',\n    '#FF9933',\n    '#FFCC00',\n    '#FFCC33'\n];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n// eslint-disable-next-line complexity\nfunction useColors() {\n    // NB: In an Electron preload script, document will be defined but not fully\n    // initialized. Since we know we're in Chrome, we'll just detect this case\n    // explicitly\n    // @ts-expect-error window.process.type and window.process.__nwjs are not in the types\n    if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n        return true;\n    }\n    // Internet Explorer and Edge do not support colors.\n    if (typeof navigator !== 'undefined' && (navigator.userAgent?.toLowerCase().match(/(edge|trident)\\/(\\d+)/) != null)) {\n        return false;\n    }\n    // Is webkit? http://stackoverflow.com/a/16459606/376773\n    // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n    // @ts-expect-error document.documentElement.style.WebkitAppearance is not in the types\n    return (typeof document !== 'undefined' && document.documentElement?.style?.WebkitAppearance) ||\n        // Is firebug? http://stackoverflow.com/a/398120/376773\n        // @ts-expect-error window.console.firebug and window.console.exception are not in the types\n        (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n        // Is firefox >= v31?\n        // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n        (typeof navigator !== 'undefined' && (navigator.userAgent?.toLowerCase().match(/firefox\\/(\\d+)/) != null) && parseInt(RegExp.$1, 10) >= 31) ||\n        // Double check webkit in userAgent just in case we are in a worker\n        (typeof navigator !== 'undefined' && navigator.userAgent?.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n/**\n * Colorize log arguments if enabled.\n */\nfunction formatArgs(args) {\n    args[0] = (this.useColors ? '%c' : '') +\n        this.namespace +\n        (this.useColors ? ' %c' : ' ') +\n        args[0] +\n        (this.useColors ? '%c ' : ' ') +\n        '+' + humanize(this.diff);\n    if (!this.useColors) {\n        return;\n    }\n    const c = 'color: ' + this.color;\n    args.splice(1, 0, c, 'color: inherit');\n    // The final \"%c\" is somewhat tricky, because there could be other\n    // arguments passed either before or after the %c, so we need to\n    // figure out the correct index to insert the CSS into\n    let index = 0;\n    let lastC = 0;\n    args[0].replace(/%[a-zA-Z%]/g, (match) => {\n        if (match === '%%') {\n            return;\n        }\n        index++;\n        if (match === '%c') {\n            // We only are interested in the *last* %c\n            // (the user may have provided their own)\n            lastC = index;\n        }\n    });\n    args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n */\nconst log = console.debug ?? console.log ?? (() => { });\n/**\n * Save `namespaces`.\n *\n * @param {string} namespaces\n */\nfunction save(namespaces) {\n    try {\n        if (namespaces) {\n            storage?.setItem('debug', namespaces);\n        }\n        else {\n            storage?.removeItem('debug');\n        }\n    }\n    catch (error) {\n        // Swallow\n        // XXX (@Qix-) should we be logging these?\n    }\n}\n/**\n * Load `namespaces`.\n *\n * @returns {string} returns the previously persisted debug modes\n */\nfunction load() {\n    let r;\n    try {\n        r = storage?.getItem('debug');\n    }\n    catch (error) {\n        // Swallow\n        // XXX (@Qix-) should we be logging these?\n    }\n    // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n    if (!r && typeof globalThis.process !== 'undefined' && 'env' in globalThis.process) {\n        r = globalThis.process.env.DEBUG;\n    }\n    return r;\n}\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n */\nfunction localstorage() {\n    try {\n        // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n        // The Browser also has localStorage in the global context.\n        return localStorage;\n    }\n    catch (error) {\n        // Swallow\n        // XXX (@Qix-) should we be logging these?\n    }\n}\nfunction setupFormatters(formatters) {\n    /**\n     * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n     */\n    formatters.j = function (v) {\n        try {\n            return JSON.stringify(v);\n        }\n        catch (error) {\n            return '[UnexpectedJSONParseError]: ' + error.message;\n        }\n    };\n}\nexport default setup({ formatArgs, save, load, useColors, setupFormatters, colors, storage, log });\n//# sourceMappingURL=browser.js.map","/**\n * @packageDocumentation\n *\n * A logger for libp2p based on [weald](https://www.npmjs.com/package/weald), a TypeScript port of the venerable [debug](https://www.npmjs.com/package/debug) module.\n *\n * @example\n *\n * ```TypeScript\n * import { logger } from '@libp2p/logger'\n *\n * const log = logger('libp2p:my:component:name')\n *\n * try {\n *   // an operation\n *   log('something happened: %s', 'it was ok')\n * } catch (err) {\n *   log.error('something bad happened: %e', err)\n * }\n *\n * log('with this peer: %p', {})\n * log('and this base58btc: %b', Uint8Array.from([0, 1, 2, 3]))\n * log('and this base32: %t', Uint8Array.from([4, 5, 6, 7]))\n * ```\n *\n * ```console\n * $ DEBUG=libp2p:* node index.js\n * something happened: it was ok\n * something bad happened: <stack trace>\n * with this peer: 12D3Foo\n * with this base58btc: Qmfoo\n * with this base32: bafyfoo\n * ```\n */\nimport { base32 } from 'multiformats/bases/base32';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { base64 } from 'multiformats/bases/base64';\nimport debug from 'weald';\nimport { truncatePeerId } from './utils.js';\n// Add a formatter for converting to a base58 string\ndebug.formatters.b = (v) => {\n    return v == null ? 'undefined' : base58btc.baseEncode(v);\n};\n// Add a formatter for converting to a base32 string\ndebug.formatters.t = (v) => {\n    return v == null ? 'undefined' : base32.baseEncode(v);\n};\n// Add a formatter for converting to a base64 string\ndebug.formatters.m = (v) => {\n    return v == null ? 'undefined' : base64.baseEncode(v);\n};\n// Add a formatter for stringifying peer ids\ndebug.formatters.p = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying CIDs\ndebug.formatters.c = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying Datastore keys\ndebug.formatters.k = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying Multiaddrs\ndebug.formatters.a = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying Errors\ndebug.formatters.e = (v) => {\n    if (v == null) {\n        return 'undefined';\n    }\n    const message = notEmpty(v.message);\n    const stack = notEmpty(v.stack);\n    // some browser errors (mostly from Firefox) have no message or no stack,\n    // sometimes both, sometimes neither. Sometimes the message is in the stack,\n    // sometimes is isn't so try to do *something* useful\n    if (message != null && stack != null) {\n        if (stack.includes(message)) {\n            return stack;\n        }\n        return `${message}\\n${stack}`;\n    }\n    if (stack != null) {\n        return stack;\n    }\n    if (message != null) {\n        return message;\n    }\n    return v.toString();\n};\nfunction createDisabledLogger(namespace) {\n    const logger = () => { };\n    logger.enabled = false;\n    logger.color = '';\n    logger.diff = 0;\n    logger.log = () => { };\n    logger.namespace = namespace;\n    logger.destroy = () => true;\n    logger.extend = () => logger;\n    return logger;\n}\n/**\n * Create a component logger that will prefix any log messages with a truncated\n * peer id.\n *\n * @example\n *\n * ```TypeScript\n * import { peerLogger } from '@libp2p/logger'\n * import { peerIdFromString } from '@libp2p/peer-id'\n *\n * const peerId = peerIdFromString('12D3FooBar')\n * const logger = peerLogger(peerId)\n *\n * const log = logger.forComponent('my-component')\n * log.info('hello world')\n * // logs \"12…oBar:my-component hello world\"\n * ```\n */\nexport function peerLogger(peerId, options = {}) {\n    return prefixLogger(truncatePeerId(peerId, options));\n}\n/**\n * Create a component logger that will prefix any log messages with the passed\n * string.\n *\n * @example\n *\n * ```TypeScript\n * import { prefixLogger } from '@libp2p/logger'\n *\n * const logger = prefixLogger('my-node')\n *\n * const log = logger.forComponent('my-component')\n * log.info('hello world')\n * // logs \"my-node:my-component hello world\"\n * ```\n */\nexport function prefixLogger(prefix) {\n    return {\n        forComponent(name) {\n            return logger(`${prefix}:${name}`);\n        }\n    };\n}\n/**\n * Create a component logger\n *\n * @example\n *\n * ```TypeScript\n * import { defaultLogger } from '@libp2p/logger'\n * import { peerIdFromString } from '@libp2p/peer-id'\n *\n * const logger = defaultLogger()\n *\n * const log = logger.forComponent('my-component')\n * log.info('hello world')\n * // logs \"my-component hello world\"\n * ```\n */\nexport function defaultLogger() {\n    return {\n        forComponent(name) {\n            return logger(name);\n        }\n    };\n}\n/**\n * Creates a logger for the passed component name.\n *\n * @example\n *\n * ```TypeScript\n * import { logger } from '@libp2p/logger'\n *\n * const log = logger('my-component')\n * log.info('hello world')\n * // logs \"my-component hello world\"\n * ```\n */\nexport function logger(name) {\n    // trace logging is a no-op by default\n    let trace = createDisabledLogger(`${name}:trace`);\n    // look at all the debug names and see if trace logging has explicitly been enabled\n    if (debug.enabled(`${name}:trace`) && debug.names.map((r) => r.toString()).find((n) => n.includes(':trace')) != null) {\n        trace = debug(`${name}:trace`);\n    }\n    return Object.assign(debug(name), {\n        error: debug(`${name}:error`),\n        trace,\n        newScope: (scope) => logger(`${name}:${scope}`)\n    });\n}\nexport function disable() {\n    debug.disable();\n}\nexport function enable(namespaces) {\n    debug.enable(namespaces);\n}\nexport function enabled(namespaces) {\n    return debug.enabled(namespaces);\n}\nfunction notEmpty(str) {\n    if (str == null) {\n        return;\n    }\n    str = str.trim();\n    if (str.length === 0) {\n        return;\n    }\n    return str;\n}\n//# sourceMappingURL=index.js.map","import { peerIdFromMultihash } from '@libp2p/peer-id';\nimport { base58btc } from 'multiformats/bases/base58';\nimport * as Digest from 'multiformats/hashes/digest';\n/**\n * Calls the passed map function on every entry of the passed iterable iterator\n */\nexport function mapIterable(iter, map) {\n    const iterator = {\n        [Symbol.iterator]: () => {\n            return iterator;\n        },\n        next: () => {\n            const next = iter.next();\n            const val = next.value;\n            if (next.done === true || val == null) {\n                const result = {\n                    done: true,\n                    value: undefined\n                };\n                return result;\n            }\n            return {\n                done: false,\n                value: map(val)\n            };\n        }\n    };\n    return iterator;\n}\nexport function peerIdFromString(str) {\n    const multihash = Digest.decode(base58btc.decode(`z${str}`));\n    return peerIdFromMultihash(multihash);\n}\n//# sourceMappingURL=util.js.map","import { mapIterable } from './util.js';\n/**\n * We can't use PeerIds as map keys because map keys are\n * compared using same-value-zero equality, so this is just\n * a map that stringifies the PeerIds before storing them.\n *\n * PeerIds cache stringified versions of themselves so this\n * should be a cheap operation.\n *\n * @example\n *\n * ```TypeScript\n * import { peerMap } from '@libp2p/peer-collections'\n *\n * const map = peerMap<string>()\n * map.set(peerId, 'value')\n * ```\n */\nexport class PeerMap {\n    map;\n    constructor(map) {\n        this.map = new Map();\n        if (map != null) {\n            for (const [key, value] of map.entries()) {\n                this.map.set(key.toString(), { key, value });\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    clear() {\n        this.map.clear();\n    }\n    delete(peer) {\n        return this.map.delete(peer.toString());\n    }\n    entries() {\n        return mapIterable(this.map.entries(), (val) => {\n            return [val[1].key, val[1].value];\n        });\n    }\n    forEach(fn) {\n        this.map.forEach((value, key) => {\n            fn(value.value, value.key, this);\n        });\n    }\n    get(peer) {\n        return this.map.get(peer.toString())?.value;\n    }\n    has(peer) {\n        return this.map.has(peer.toString());\n    }\n    set(peer, value) {\n        this.map.set(peer.toString(), { key: peer, value });\n    }\n    keys() {\n        return mapIterable(this.map.values(), (val) => {\n            return val.key;\n        });\n    }\n    values() {\n        return mapIterable(this.map.values(), (val) => val.value);\n    }\n    get size() {\n        return this.map.size;\n    }\n}\nexport function peerMap() {\n    return new PeerMap();\n}\n//# sourceMappingURL=map.js.map","import { mapIterable, peerIdFromString } from './util.js';\n/**\n * We can't use PeerIds as set entries because set entries are\n * compared using same-value-zero equality, so this is just\n * a map that stringifies the PeerIds before storing them.\n *\n * PeerIds cache stringified versions of themselves so this\n * should be a cheap operation.\n *\n * @example\n *\n * ```TypeScript\n * import { peerSet } from '@libp2p/peer-collections'\n *\n * const set = peerSet()\n * set.add(peerId)\n * ```\n */\nexport class PeerSet {\n    set;\n    constructor(set) {\n        this.set = new Set();\n        if (set != null) {\n            for (const key of set) {\n                this.set.add(key.toString());\n            }\n        }\n    }\n    get size() {\n        return this.set.size;\n    }\n    [Symbol.iterator]() {\n        return this.values();\n    }\n    add(peer) {\n        this.set.add(peer.toString());\n    }\n    clear() {\n        this.set.clear();\n    }\n    delete(peer) {\n        this.set.delete(peer.toString());\n    }\n    entries() {\n        return mapIterable(this.set.entries(), (val) => {\n            const peerId = peerIdFromString(val[0]);\n            return [peerId, peerId];\n        });\n    }\n    forEach(predicate) {\n        this.set.forEach((str) => {\n            const peerId = peerIdFromString(str);\n            predicate(peerId, peerId, this);\n        });\n    }\n    has(peer) {\n        return this.set.has(peer.toString());\n    }\n    values() {\n        return mapIterable(this.set.values(), (val) => {\n            return peerIdFromString(val);\n        });\n    }\n    intersection(other) {\n        const output = new PeerSet();\n        for (const peerId of other) {\n            if (this.has(peerId)) {\n                output.add(peerId);\n            }\n        }\n        return output;\n    }\n    difference(other) {\n        const output = new PeerSet();\n        for (const peerId of this) {\n            if (!other.has(peerId)) {\n                output.add(peerId);\n            }\n        }\n        return output;\n    }\n    union(other) {\n        const output = new PeerSet();\n        for (const peerId of other) {\n            output.add(peerId);\n        }\n        for (const peerId of this) {\n            output.add(peerId);\n        }\n        return output;\n    }\n}\nexport function peerSet() {\n    return new PeerSet();\n}\n//# sourceMappingURL=set.js.map","// FNV_PRIMES and FNV_OFFSETS from\n// http://www.isthe.com/chongo/tech/comp/fnv/index.html#FNV-param\n\nconst FNV_PRIMES = {\n\t32: 16_777_619n,\n\t64: 1_099_511_628_211n,\n\t128: 309_485_009_821_345_068_724_781_371n,\n\t256: 374_144_419_156_711_147_060_143_317_175_368_453_031_918_731_002_211n,\n\t512: 35_835_915_874_844_867_368_919_076_489_095_108_449_946_327_955_754_392_558_399_825_615_420_669_938_882_575_126_094_039_892_345_713_852_759n,\n\t1024: 5_016_456_510_113_118_655_434_598_811_035_278_955_030_765_345_404_790_744_303_017_523_831_112_055_108_147_451_509_157_692_220_295_382_716_162_651_878_526_895_249_385_292_291_816_524_375_083_746_691_371_804_094_271_873_160_484_737_966_720_260_389_217_684_476_157_468_082_573n,\n};\n\nconst FNV_OFFSETS = {\n\t32: 2_166_136_261n,\n\t64: 14_695_981_039_346_656_037n,\n\t128: 144_066_263_297_769_815_596_495_629_667_062_367_629n,\n\t256: 100_029_257_958_052_580_907_070_968_620_625_704_837_092_796_014_241_193_945_225_284_501_741_471_925_557n,\n\t512: 9_659_303_129_496_669_498_009_435_400_716_310_466_090_418_745_672_637_896_108_374_329_434_462_657_994_582_932_197_716_438_449_813_051_892_206_539_805_784_495_328_239_340_083_876_191_928_701_583_869_517_785n,\n\t1024: 14_197_795_064_947_621_068_722_070_641_403_218_320_880_622_795_441_933_960_878_474_914_617_582_723_252_296_732_303_717_722_150_864_096_521_202_355_549_365_628_174_669_108_571_814_760_471_015_076_148_029_755_969_804_077_320_157_692_458_563_003_215_304_957_150_157_403_644_460_363_550_505_412_711_285_966_361_610_267_868_082_893_823_963_790_439_336_411_086_884_584_107_735_010_676_915n,\n};\n\nconst cachedEncoder = new globalThis.TextEncoder();\n\nfunction fnv1aUint8Array(uint8Array, size) {\n\tconst fnvPrime = FNV_PRIMES[size];\n\tlet hash = FNV_OFFSETS[size];\n\n\t// eslint-disable-next-line unicorn/no-for-loop -- This is a performance-sensitive loop\n\tfor (let index = 0; index < uint8Array.length; index++) {\n\t\thash ^= BigInt(uint8Array[index]);\n\t\thash = BigInt.asUintN(size, hash * fnvPrime);\n\t}\n\n\treturn hash;\n}\n\nfunction fnv1aEncodeInto(string, size, utf8Buffer) {\n\tif (utf8Buffer.length === 0) {\n\t\tthrow new Error('The `utf8Buffer` option must have a length greater than zero');\n\t}\n\n\tconst fnvPrime = FNV_PRIMES[size];\n\tlet hash = FNV_OFFSETS[size];\n\tlet remaining = string;\n\n\twhile (remaining.length > 0) {\n\t\tconst result = cachedEncoder.encodeInto(remaining, utf8Buffer);\n\t\tremaining = remaining.slice(result.read);\n\t\tfor (let index = 0; index < result.written; index++) {\n\t\t\thash ^= BigInt(utf8Buffer[index]);\n\t\t\thash = BigInt.asUintN(size, hash * fnvPrime);\n\t\t}\n\t}\n\n\treturn hash;\n}\n\nexport default function fnv1a(value, {size = 32, utf8Buffer} = {}) {\n\tif (!FNV_PRIMES[size]) {\n\t\tthrow new Error('The `size` option must be one of 32, 64, 128, 256, 512, or 1024');\n\t}\n\n\tif (typeof value === 'string') {\n\t\tif (utf8Buffer) {\n\t\t\treturn fnv1aEncodeInto(value, size, utf8Buffer);\n\t\t}\n\n\t\tvalue = cachedEncoder.encode(value);\n\t}\n\n\treturn fnv1aUint8Array(value, size);\n}\n","import fnv1aHash from '@sindresorhus/fnv1a';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nexport const fnv1a = {\n    hash: (input) => {\n        return Number(fnv1aHash(input, {\n            size: 32\n        }));\n    },\n    hashV: (input, seed) => {\n        return numberToBuffer(fnv1a.hash(input, seed));\n    }\n};\nexport function numberToBuffer(num) {\n    let hex = num.toString(16);\n    if (hex.length % 2 === 1) {\n        hex = `0${hex}`;\n    }\n    return uint8ArrayFromString(hex, 'base16');\n}\n//# sourceMappingURL=hashes.js.map","import { alloc as uint8ArrayAlloc } from 'uint8arrays/alloc';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nexport const MAX_FINGERPRINT_SIZE = 64;\nexport class Fingerprint {\n    fp;\n    h;\n    seed;\n    constructor(buf, hash, seed, fingerprintSize = 2) {\n        if (fingerprintSize > MAX_FINGERPRINT_SIZE) {\n            throw new TypeError('Invalid Fingerprint Size');\n        }\n        const fnv = hash.hashV(buf, seed);\n        const fp = uint8ArrayAlloc(fingerprintSize);\n        for (let i = 0; i < fp.length; i++) {\n            fp[i] = fnv[i];\n        }\n        if (fp.length === 0) {\n            fp[0] = 7;\n        }\n        this.fp = fp;\n        this.h = hash;\n        this.seed = seed;\n    }\n    hash() {\n        return this.h.hash(this.fp, this.seed);\n    }\n    equals(other) {\n        if (!(other?.fp instanceof Uint8Array)) {\n            return false;\n        }\n        return uint8ArrayEquals(this.fp, other.fp);\n    }\n}\n//# sourceMappingURL=fingerprint.js.map","export function getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n//# sourceMappingURL=utils.js.map","import { Fingerprint } from './fingerprint.js';\nimport { getRandomInt } from './utils.js';\nexport class Bucket {\n    contents;\n    constructor(size) {\n        this.contents = new Array(size).fill(null);\n    }\n    has(fingerprint) {\n        if (!(fingerprint instanceof Fingerprint)) {\n            throw new TypeError('Invalid Fingerprint');\n        }\n        return this.contents.some((fp) => {\n            return fingerprint.equals(fp);\n        });\n    }\n    add(fingerprint) {\n        if (!(fingerprint instanceof Fingerprint)) {\n            throw new TypeError('Invalid Fingerprint');\n        }\n        for (let i = 0; i < this.contents.length; i++) {\n            if (this.contents[i] == null) {\n                this.contents[i] = fingerprint;\n                return true;\n            }\n        }\n        return true;\n    }\n    swap(fingerprint) {\n        if (!(fingerprint instanceof Fingerprint)) {\n            throw new TypeError('Invalid Fingerprint');\n        }\n        const i = getRandomInt(0, this.contents.length - 1);\n        const current = this.contents[i];\n        this.contents[i] = fingerprint;\n        return current;\n    }\n    remove(fingerprint) {\n        if (!(fingerprint instanceof Fingerprint)) {\n            throw new TypeError('Invalid Fingerprint');\n        }\n        const found = this.contents.findIndex((fp) => {\n            return fingerprint.equals(fp);\n        });\n        if (found > -1) {\n            this.contents[found] = null;\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n}\n//# sourceMappingURL=bucket.js.map","import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { Bucket } from './bucket.js';\nimport { Fingerprint, MAX_FINGERPRINT_SIZE } from './fingerprint.js';\nimport { fnv1a } from './hashes.js';\nimport { getRandomInt } from './utils.js';\nconst maxCuckooCount = 500;\nexport class CuckooFilter {\n    bucketSize;\n    filterSize;\n    fingerprintSize;\n    buckets;\n    count;\n    hash;\n    seed;\n    constructor(init) {\n        this.filterSize = init.filterSize;\n        this.bucketSize = init.bucketSize ?? 4;\n        this.fingerprintSize = init.fingerprintSize ?? 2;\n        this.count = 0;\n        this.buckets = [];\n        this.hash = init.hash ?? fnv1a;\n        this.seed = init.seed ?? getRandomInt(0, Math.pow(2, 10));\n    }\n    add(item) {\n        if (typeof item === 'string') {\n            item = uint8ArrayFromString(item);\n        }\n        const fingerprint = new Fingerprint(item, this.hash, this.seed, this.fingerprintSize);\n        const j = this.hash.hash(item, this.seed) % this.filterSize;\n        const k = (j ^ fingerprint.hash()) % this.filterSize;\n        if (this.buckets[j] == null) {\n            this.buckets[j] = new Bucket(this.bucketSize);\n        }\n        if (this.buckets[k] == null) {\n            this.buckets[k] = new Bucket(this.bucketSize);\n        }\n        if (this.buckets[j].add(fingerprint) || this.buckets[k].add(fingerprint)) {\n            this.count++;\n            return true;\n        }\n        const rand = [j, k];\n        let i = rand[getRandomInt(0, rand.length - 1)];\n        if (this.buckets[i] == null) {\n            this.buckets[i] = new Bucket(this.bucketSize);\n        }\n        for (let n = 0; n < maxCuckooCount; n++) {\n            const swapped = this.buckets[i].swap(fingerprint);\n            if (swapped == null) {\n                continue;\n            }\n            i = (i ^ swapped.hash()) % this.filterSize;\n            if (this.buckets[i] == null) {\n                this.buckets[i] = new Bucket(this.bucketSize);\n            }\n            if (this.buckets[i].add(swapped)) {\n                this.count++;\n                return true;\n            }\n            else {\n                continue;\n            }\n        }\n        return false;\n    }\n    has(item) {\n        if (typeof item === 'string') {\n            item = uint8ArrayFromString(item);\n        }\n        const fingerprint = new Fingerprint(item, this.hash, this.seed, this.fingerprintSize);\n        const j = this.hash.hash(item, this.seed) % this.filterSize;\n        const inJ = this.buckets[j]?.has(fingerprint) ?? false;\n        if (inJ) {\n            return inJ;\n        }\n        const k = (j ^ fingerprint.hash()) % this.filterSize;\n        return this.buckets[k]?.has(fingerprint) ?? false;\n    }\n    remove(item) {\n        if (typeof item === 'string') {\n            item = uint8ArrayFromString(item);\n        }\n        const fingerprint = new Fingerprint(item, this.hash, this.seed, this.fingerprintSize);\n        const j = this.hash.hash(item, this.seed) % this.filterSize;\n        const inJ = this.buckets[j]?.remove(fingerprint) ?? false;\n        if (inJ) {\n            this.count--;\n            return inJ;\n        }\n        const k = (j ^ fingerprint.hash()) % this.filterSize;\n        const inK = this.buckets[k]?.remove(fingerprint) ?? false;\n        if (inK) {\n            this.count--;\n        }\n        return inK;\n    }\n    get reliable() {\n        return Math.floor(100 * (this.count / this.filterSize)) <= 90;\n    }\n}\n// max load constants, defined in the cuckoo paper\nconst MAX_LOAD = {\n    1: 0.5,\n    2: 0.84,\n    4: 0.95,\n    8: 0.98\n};\nfunction calculateBucketSize(errorRate = 0.001) {\n    if (errorRate > 0.002) {\n        return 2;\n    }\n    if (errorRate > 0.00001) {\n        return 4;\n    }\n    return 8;\n}\nexport function optimize(maxItems, errorRate = 0.001) {\n    // https://www.eecs.harvard.edu/~michaelm/postscripts/cuckoo-conext2014.pdf\n    // Section 5.1 Optimal Bucket Size\n    const bucketSize = calculateBucketSize(errorRate);\n    const load = MAX_LOAD[bucketSize];\n    // https://stackoverflow.com/questions/57555236/how-to-size-a-cuckoo-filter/57617208#57617208\n    const filterSize = Math.round(maxItems / load);\n    const fingerprintSize = Math.min(Math.ceil(Math.log2(1 / errorRate) + Math.log2(2 * bucketSize)), MAX_FINGERPRINT_SIZE);\n    return {\n        filterSize,\n        bucketSize,\n        fingerprintSize\n    };\n}\nexport function createCuckooFilter(maxItems, errorRate = 0.005) {\n    const opts = optimize(maxItems, errorRate);\n    return new CuckooFilter(opts);\n}\n//# sourceMappingURL=cuckoo-filter.js.map","import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { CuckooFilter, optimize } from './cuckoo-filter.js';\nimport { fnv1a } from './hashes.js';\nimport { getRandomInt } from './utils.js';\nexport class ScalableCuckooFilter {\n    filterSize;\n    bucketSize;\n    fingerprintSize;\n    scale;\n    filterSeries;\n    hash;\n    seed;\n    constructor(init) {\n        this.bucketSize = init.bucketSize ?? 4;\n        this.filterSize = init.filterSize ?? (1 << 18) / this.bucketSize;\n        this.fingerprintSize = init.fingerprintSize ?? 2;\n        this.scale = init.scale ?? 2;\n        this.hash = init.hash ?? fnv1a;\n        this.seed = init.seed ?? getRandomInt(0, Math.pow(2, 10));\n        this.filterSeries = [\n            new CuckooFilter({\n                filterSize: this.filterSize,\n                bucketSize: this.bucketSize,\n                fingerprintSize: this.fingerprintSize,\n                hash: this.hash,\n                seed: this.seed\n            })\n        ];\n    }\n    add(item) {\n        if (typeof item === 'string') {\n            item = uint8ArrayFromString(item);\n        }\n        if (this.has(item)) {\n            return true;\n        }\n        let current = this.filterSeries.find((cuckoo) => {\n            return cuckoo.reliable;\n        });\n        if (current == null) {\n            const curSize = this.filterSize * Math.pow(this.scale, this.filterSeries.length);\n            current = new CuckooFilter({\n                filterSize: curSize,\n                bucketSize: this.bucketSize,\n                fingerprintSize: this.fingerprintSize,\n                hash: this.hash,\n                seed: this.seed\n            });\n            this.filterSeries.push(current);\n        }\n        return current.add(item);\n    }\n    has(item) {\n        if (typeof item === 'string') {\n            item = uint8ArrayFromString(item);\n        }\n        for (let i = 0; i < this.filterSeries.length; i++) {\n            if (this.filterSeries[i].has(item)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    remove(item) {\n        if (typeof item === 'string') {\n            item = uint8ArrayFromString(item);\n        }\n        for (let i = 0; i < this.filterSeries.length; i++) {\n            if (this.filterSeries[i].remove(item)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    get count() {\n        return this.filterSeries.reduce((acc, curr) => {\n            return acc + curr.count;\n        }, 0);\n    }\n}\nexport function createScalableCuckooFilter(maxItems, errorRate = 0.001, options) {\n    return new ScalableCuckooFilter({\n        ...optimize(maxItems, errorRate),\n        ...(options ?? {})\n    });\n}\n//# sourceMappingURL=scalable-cuckoo-filter.js.map","import { InvalidParametersError } from '@libp2p/interface';\n/**\n * Returns host/port/etc information for multiaddrs, if it is available.\n *\n * It will throw if the passed multiaddr does not start with a network address,\n * e.g. a IPv4, IPv6, DNS, DNS4, DNS6 or DNSADDR address\n */\nexport function getNetConfig(ma) {\n    const components = ma.getComponents();\n    const config = {};\n    let index = 0;\n    if (components[index]?.name === 'ip6zone') {\n        config.zone = `${components[index].value}`;\n        index++;\n    }\n    if (components[index].name === 'ip4' || components[index].name === 'ip6') {\n        config.type = components[index].name;\n        config.host = components[index].value;\n        index++;\n    }\n    else if (components[index].name === 'dns' || components[index].name === 'dns4' || components[index].name === 'dns6') {\n        config.type = components[index].name;\n        config.host = components[index].value;\n        index++;\n    }\n    else if (components[index].name === 'dnsaddr') {\n        config.type = components[index].name;\n        config.host = `_dnsaddr.${components[index].value}`;\n        index++;\n    }\n    if (components[index]?.name === 'tcp' || components[index]?.name === 'udp') {\n        config.protocol = components[index].name === 'tcp' ? 'tcp' : 'udp';\n        config.port = parseInt(`${components[index].value}`);\n        index++;\n    }\n    if (components[index]?.name === 'ipcidr') {\n        if (config.type === 'ip4') {\n            config.cidr = parseInt(`${components[index].value}`);\n        }\n        else if (config.type === 'ip6') {\n            config.cidr = `${components[index].value}`;\n        }\n        index++;\n    }\n    if (config.type == null || config.host == null) {\n        throw new InvalidParametersError(`Multiaddr ${ma} was not an IPv4, IPv6, DNS, DNS4, DNS6 or DNSADDR address`);\n    }\n    if (components[index]?.name === 'tls' && components[index + 1]?.name === 'sni') {\n        config.sni = components[index + 1].value;\n        index += 2;\n    }\n    return config;\n}\n//# sourceMappingURL=get-net-config.js.map","/* eslint-disable @typescript-eslint/no-unsafe-return */\nexport class Parser {\n    index = 0;\n    input = \"\";\n    new(input) {\n        this.index = 0;\n        this.input = input;\n        return this;\n    }\n    /** Run a parser, and restore the pre-parse state if it fails. */\n    readAtomically(fn) {\n        const index = this.index;\n        const result = fn();\n        if (result === undefined) {\n            this.index = index;\n        }\n        return result;\n    }\n    /** Run a parser, but fail if the entire input wasn't consumed. Doesn't run atomically. */\n    parseWith(fn) {\n        const result = fn();\n        if (this.index !== this.input.length) {\n            return undefined;\n        }\n        return result;\n    }\n    /** Peek the next character from the input */\n    peekChar() {\n        if (this.index >= this.input.length) {\n            return undefined;\n        }\n        return this.input[this.index];\n    }\n    /** Read the next character from the input */\n    readChar() {\n        if (this.index >= this.input.length) {\n            return undefined;\n        }\n        return this.input[this.index++];\n    }\n    /** Read the next character from the input if it matches the target. */\n    readGivenChar(target) {\n        return this.readAtomically(() => {\n            const char = this.readChar();\n            if (char !== target) {\n                return undefined;\n            }\n            return char;\n        });\n    }\n    /**\n     * Helper for reading separators in an indexed loop. Reads the separator\n     * character iff index > 0, then runs the parser. When used in a loop,\n     * the separator character will only be read on index > 0 (see\n     * readIPv4Addr for an example)\n     */\n    readSeparator(sep, index, inner) {\n        return this.readAtomically(() => {\n            if (index > 0) {\n                if (this.readGivenChar(sep) === undefined) {\n                    return undefined;\n                }\n            }\n            return inner();\n        });\n    }\n    /**\n     * Read a number off the front of the input in the given radix, stopping\n     * at the first non-digit character or eof. Fails if the number has more\n     * digits than max_digits or if there is no number.\n     */\n    readNumber(radix, maxDigits, allowZeroPrefix, maxBytes) {\n        return this.readAtomically(() => {\n            let result = 0;\n            let digitCount = 0;\n            const leadingChar = this.peekChar();\n            if (leadingChar === undefined) {\n                return undefined;\n            }\n            const hasLeadingZero = leadingChar === \"0\";\n            const maxValue = 2 ** (8 * maxBytes) - 1;\n            // eslint-disable-next-line no-constant-condition\n            while (true) {\n                const digit = this.readAtomically(() => {\n                    const char = this.readChar();\n                    if (char === undefined) {\n                        return undefined;\n                    }\n                    const num = Number.parseInt(char, radix);\n                    if (Number.isNaN(num)) {\n                        return undefined;\n                    }\n                    return num;\n                });\n                if (digit === undefined) {\n                    break;\n                }\n                result *= radix;\n                result += digit;\n                if (result > maxValue) {\n                    return undefined;\n                }\n                digitCount += 1;\n                if (maxDigits !== undefined) {\n                    if (digitCount > maxDigits) {\n                        return undefined;\n                    }\n                }\n            }\n            if (digitCount === 0) {\n                return undefined;\n            }\n            else if (!allowZeroPrefix && hasLeadingZero && digitCount > 1) {\n                return undefined;\n            }\n            else {\n                return result;\n            }\n        });\n    }\n    /** Read an IPv4 address. */\n    readIPv4Addr() {\n        return this.readAtomically(() => {\n            const out = new Uint8Array(4);\n            for (let i = 0; i < out.length; i++) {\n                const ix = this.readSeparator(\".\", i, () => this.readNumber(10, 3, false, 1));\n                if (ix === undefined) {\n                    return undefined;\n                }\n                out[i] = ix;\n            }\n            return out;\n        });\n    }\n    /** Read an IPv6 Address. */\n    readIPv6Addr() {\n        /**\n         * Read a chunk of an IPv6 address into `groups`. Returns the number\n         * of groups read, along with a bool indicating if an embedded\n         * trailing IPv4 address was read. Specifically, read a series of\n         * colon-separated IPv6 groups (0x0000 - 0xFFFF), with an optional\n         * trailing embedded IPv4 address.\n         */\n        const readGroups = (groups) => {\n            for (let i = 0; i < groups.length / 2; i++) {\n                const ix = i * 2;\n                // Try to read a trailing embedded IPv4 address. There must be at least 4 groups left.\n                if (i < groups.length - 3) {\n                    const ipv4 = this.readSeparator(\":\", i, () => this.readIPv4Addr());\n                    if (ipv4 !== undefined) {\n                        groups[ix] = ipv4[0];\n                        groups[ix + 1] = ipv4[1];\n                        groups[ix + 2] = ipv4[2];\n                        groups[ix + 3] = ipv4[3];\n                        return [ix + 4, true];\n                    }\n                }\n                const group = this.readSeparator(\":\", i, () => this.readNumber(16, 4, true, 2));\n                if (group === undefined) {\n                    return [ix, false];\n                }\n                groups[ix] = group >> 8;\n                groups[ix + 1] = group & 255;\n            }\n            return [groups.length, false];\n        };\n        return this.readAtomically(() => {\n            // Read the front part of the address; either the whole thing, or up to the first ::\n            const head = new Uint8Array(16);\n            const [headSize, headIp4] = readGroups(head);\n            if (headSize === 16) {\n                return head;\n            }\n            // IPv4 part is not allowed before `::`\n            if (headIp4) {\n                return undefined;\n            }\n            // Read `::` if previous code parsed less than 8 groups.\n            // `::` indicates one or more groups of 16 bits of zeros.\n            if (this.readGivenChar(\":\") === undefined) {\n                return undefined;\n            }\n            if (this.readGivenChar(\":\") === undefined) {\n                return undefined;\n            }\n            // Read the back part of the address. The :: must contain at least one\n            // set of zeroes, so our max length is 7.\n            const tail = new Uint8Array(14);\n            const limit = 16 - (headSize + 2);\n            const [tailSize] = readGroups(tail.subarray(0, limit));\n            // Concat the head and tail of the IP address\n            head.set(tail.subarray(0, tailSize), 16 - tailSize);\n            return head;\n        });\n    }\n    /** Read an IP Address, either IPv4 or IPv6. */\n    readIPAddr() {\n        return this.readIPv4Addr() ?? this.readIPv6Addr();\n    }\n}\n//# sourceMappingURL=parser.js.map","import { Parser } from \"./parser.js\";\n// See https://stackoverflow.com/questions/166132/maximum-length-of-the-textual-representation-of-an-ipv6-address\nconst MAX_IPV6_LENGTH = 45;\nconst MAX_IPV4_LENGTH = 15;\nconst parser = new Parser();\n/** Parse `input` into IPv4 bytes. */\nexport function parseIPv4(input) {\n    if (input.length > MAX_IPV4_LENGTH) {\n        return undefined;\n    }\n    return parser.new(input).parseWith(() => parser.readIPv4Addr());\n}\n/** Parse IPv4 `input` into IPv6 with IPv4-mapped bytes, eg ::ffff:1.2.3.4 */\nexport function parseIPv4Mapped(input) {\n    if (input.length > MAX_IPV4_LENGTH) {\n        return undefined;\n    }\n    const ipv4 = parser.new(input).parseWith(() => parser.readIPv4Addr());\n    if (ipv4 === undefined) {\n        return undefined;\n    }\n    return Uint8Array.from([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff, ipv4[0], ipv4[1], ipv4[2], ipv4[3]]);\n}\n/** Parse `input` into IPv6 bytes. */\nexport function parseIPv6(input) {\n    // strip zone index if it is present\n    if (input.includes(\"%\")) {\n        input = input.split(\"%\")[0];\n    }\n    if (input.length > MAX_IPV6_LENGTH) {\n        return undefined;\n    }\n    return parser.new(input).parseWith(() => parser.readIPv6Addr());\n}\n/** Parse `input` into IPv4 or IPv6 bytes. */\nexport function parseIP(input, mapIPv4ToIPv6 = false) {\n    // strip zone index if it is present\n    if (input.includes(\"%\")) {\n        input = input.split(\"%\")[0];\n    }\n    if (input.length > MAX_IPV6_LENGTH) {\n        return undefined;\n    }\n    const addr = parser.new(input).parseWith(() => parser.readIPAddr());\n    if (!addr) {\n        return undefined;\n    }\n    if (mapIPv4ToIPv6 && addr.length === 4) {\n        return Uint8Array.from([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff, addr[0], addr[1], addr[2], addr[3]]);\n    }\n    return addr;\n}\n//# sourceMappingURL=parse.js.map","import { IPv4Len, IPv6Len } from \"./ip.js\";\nexport function allFF(a, from, to) {\n    let i = 0;\n    for (const e of a) {\n        if (i < from)\n            continue;\n        if (i > to)\n            break;\n        if (e !== 0xff)\n            return false;\n        i++;\n    }\n    return true;\n}\nexport function deepEqual(a, b, from, to) {\n    let i = 0;\n    for (const e of a) {\n        if (i < from)\n            continue;\n        if (i > to)\n            break;\n        if (e !== b[i])\n            return false;\n        i++;\n    }\n    return true;\n}\n/***\n * Returns long ip format\n */\nexport function ipToString(ip) {\n    switch (ip.length) {\n        case IPv4Len: {\n            return ip.join(\".\");\n        }\n        case IPv6Len: {\n            const result = [];\n            for (let i = 0; i < ip.length; i++) {\n                if (i % 2 === 0) {\n                    result.push(ip[i].toString(16).padStart(2, \"0\") +\n                        ip[i + 1].toString(16).padStart(2, \"0\"));\n                }\n            }\n            return result.join(\":\");\n        }\n        default: {\n            throw new Error(\"Invalid ip length\");\n        }\n    }\n}\n/**\n * If mask is a sequence of 1 bits followed by 0 bits, return number of 1 bits else -1\n */\nexport function simpleMaskLength(mask) {\n    let ones = 0;\n    // eslint-disable-next-line prefer-const\n    for (let [index, byte] of mask.entries()) {\n        if (byte === 0xff) {\n            ones += 8;\n            continue;\n        }\n        while ((byte & 0x80) != 0) {\n            ones++;\n            byte = byte << 1;\n        }\n        if ((byte & 0x80) != 0) {\n            return -1;\n        }\n        for (let i = index + 1; i < mask.length; i++) {\n            if (mask[i] != 0) {\n                return -1;\n            }\n        }\n        break;\n    }\n    return ones;\n}\nexport function maskToHex(mask) {\n    let hex = \"0x\";\n    for (const byte of mask) {\n        hex += (byte >> 4).toString(16) + (byte & 0x0f).toString(16);\n    }\n    return hex;\n}\n//# sourceMappingURL=util.js.map","import { parseIP } from \"@chainsafe/is-ip/parse\";\nimport { allFF, deepEqual } from \"./util.js\";\nexport const IPv4Len = 4;\nexport const IPv6Len = 16;\nexport const maxIPv6Octet = parseInt(\"0xFFFF\", 16);\nexport const ipv4Prefix = new Uint8Array([\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255,\n]);\nexport function maskIp(ip, mask) {\n    if (mask.length === IPv6Len && ip.length === IPv4Len && allFF(mask, 0, 11)) {\n        mask = mask.slice(12);\n    }\n    if (mask.length === IPv4Len &&\n        ip.length === IPv6Len &&\n        deepEqual(ip, ipv4Prefix, 0, 11)) {\n        ip = ip.slice(12);\n    }\n    const n = ip.length;\n    if (n != mask.length) {\n        throw new Error(\"Failed to mask ip\");\n    }\n    const out = new Uint8Array(n);\n    for (let i = 0; i < n; i++) {\n        out[i] = ip[i] & mask[i];\n    }\n    return out;\n}\nexport function containsIp(net, ip) {\n    if (typeof ip === \"string\") {\n        ip = parseIP(ip);\n    }\n    if (ip == null)\n        throw new Error(\"Invalid ip\");\n    if (ip.length !== net.network.length) {\n        return false;\n    }\n    for (let i = 0; i < ip.length; i++) {\n        if ((net.network[i] & net.mask[i]) !== (ip[i] & net.mask[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function iPv4FromIPv6(ip) {\n    if (!isIPv4mappedIPv6(ip)) {\n        throw new Error(\"Must have 0xffff prefix\");\n    }\n    return ip.slice(12);\n}\nexport function isIPv4mappedIPv6(ip) {\n    return deepEqual(ip, ipv4Prefix, 0, 11);\n}\n//# sourceMappingURL=ip.js.map","import { parseIPv4, parseIPv6 } from \"@chainsafe/is-ip/parse\";\nimport { IPv4Len, IPv6Len, maskIp } from \"./ip.js\";\nexport function parseCidr(s) {\n    const [address, maskString] = s.split(\"/\");\n    if (!address || !maskString)\n        throw new Error(\"Failed to parse given CIDR: \" + s);\n    let ipLength = IPv4Len;\n    let ip = parseIPv4(address);\n    if (ip == null) {\n        ipLength = IPv6Len;\n        ip = parseIPv6(address);\n        if (ip == null)\n            throw new Error(\"Failed to parse given CIDR: \" + s);\n    }\n    const m = parseInt(maskString, 10);\n    if (Number.isNaN(m) ||\n        String(m).length !== maskString.length ||\n        m < 0 ||\n        m > ipLength * 8) {\n        throw new Error(\"Failed to parse given CIDR: \" + s);\n    }\n    const mask = cidrMask(m, 8 * ipLength);\n    return {\n        network: maskIp(ip, mask),\n        mask,\n    };\n}\nexport function cidrMask(ones, bits) {\n    if (bits !== 8 * IPv4Len && bits !== 8 * IPv6Len)\n        throw new Error(\"Invalid CIDR mask\");\n    if (ones < 0 || ones > bits)\n        throw new Error(\"Invalid CIDR mask\");\n    const l = bits / 8;\n    const m = new Uint8Array(l);\n    for (let i = 0; i < l; i++) {\n        if (ones >= 8) {\n            m[i] = 0xff;\n            ones -= 8;\n            continue;\n        }\n        m[i] = 255 - (0xff >> ones);\n        ones = 0;\n    }\n    return m;\n}\n//# sourceMappingURL=cidr.js.map","import { parseIP } from \"@chainsafe/is-ip/parse\";\nimport { cidrMask, parseCidr } from \"./cidr.js\";\nimport { containsIp, maskIp } from \"./ip.js\";\nimport { ipToString, maskToHex, simpleMaskLength } from \"./util.js\";\nexport class IpNet {\n    /**\n     *\n     * @param ipOrCidr either network ip or full cidr address\n     * @param mask in case ipOrCidr is network this can be either mask in decimal format or as ip address\n     */\n    constructor(ipOrCidr, mask) {\n        if (mask == null) {\n            ({ network: this.network, mask: this.mask } = parseCidr(ipOrCidr));\n        }\n        else {\n            const ipResult = parseIP(ipOrCidr);\n            if (ipResult == null) {\n                throw new Error(\"Failed to parse network\");\n            }\n            mask = String(mask);\n            const m = parseInt(mask, 10);\n            if (Number.isNaN(m) ||\n                String(m).length !== mask.length ||\n                m < 0 ||\n                m > ipResult.length * 8) {\n                const maskResult = parseIP(mask);\n                if (maskResult == null) {\n                    throw new Error(\"Failed to parse mask\");\n                }\n                this.mask = maskResult;\n            }\n            else {\n                this.mask = cidrMask(m, 8 * ipResult.length);\n            }\n            this.network = maskIp(ipResult, this.mask);\n        }\n    }\n    /**\n     * Checks if netmask contains ip address\n     * @param ip\n     * @returns\n     */\n    contains(ip) {\n        return containsIp({ network: this.network, mask: this.mask }, ip);\n    }\n    /**Serializes back to string format */\n    toString() {\n        const l = simpleMaskLength(this.mask);\n        const mask = l !== -1 ? String(l) : maskToHex(this.mask);\n        return ipToString(this.network) + \"/\" + mask;\n    }\n}\n//# sourceMappingURL=ipnet.js.map","import { IpNet } from \"./ipnet.js\";\nexport { ipToString } from \"./util.js\";\nexport { maskIp, iPv4FromIPv6, isIPv4mappedIPv6 } from \"./ip.js\";\nexport { IpNet } from \"./ipnet.js\";\nexport { parseCidr } from \"./cidr.js\";\n/**\n * Checks if cidr block contains ip address\n * @param cidr ipv4 or ipv6 formatted cidr . Example 198.51.100.14/24 or 2001:db8::/48\n * @param ip ipv4 or ipv6 address Example 198.51.100.14 or 2001:db8::\n *\n */\nexport function cidrContains(cidr, ip) {\n    const ipnet = new IpNet(cidr);\n    return ipnet.contains(ip);\n}\n//# sourceMappingURL=index.js.map","import { cidrContains } from '@chainsafe/netmask';\nimport { getNetConfig } from \"./get-net-config.js\";\n/**\n * Check if a given multiaddr is an IPv6 global unicast address\n */\nexport function isGlobalUnicast(ma) {\n    try {\n        const config = getNetConfig(ma);\n        switch (config.type) {\n            case 'ip6':\n                return cidrContains('2000::/3', config.host);\n            default:\n                return false;\n        }\n    }\n    catch {\n        return false;\n    }\n}\n//# sourceMappingURL=is-global-unicast.js.map","import { getNetConfig } from \"./get-net-config.js\";\n/**\n * Check if a given multiaddr is a link-local address\n */\nexport function isLinkLocal(ma) {\n    try {\n        const config = getNetConfig(ma);\n        switch (config.type) {\n            case 'ip4':\n                return config.host.startsWith('169.254.');\n            case 'ip6':\n                return config.host.toLowerCase().startsWith('fe80');\n            default:\n                return false;\n        }\n    }\n    catch (err) {\n        return false;\n    }\n}\n//# sourceMappingURL=is-link-local.js.map","/**\n * Check if a given ip address is a loopback address\n */\nexport function isLoopbackAddr(ip) {\n    return /^127\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(ip) ||\n        /^::1$/.test(ip);\n}\n//# sourceMappingURL=index.js.map","import { isLoopbackAddr } from 'is-loopback-addr';\nimport { getNetConfig } from \"./get-net-config.js\";\n/**\n * Check if a given multiaddr is a loopback address.\n */\nexport function isLoopback(ma) {\n    try {\n        const config = getNetConfig(ma);\n        switch (config.type) {\n            case 'ip4':\n            case 'ip6':\n                return isLoopbackAddr(config.host);\n            default:\n                return false;\n        }\n    }\n    catch {\n        return false;\n    }\n}\n//# sourceMappingURL=is-loopback.js.map","import { getNetConfig } from \"./get-net-config.js\";\n/**\n * Check if a given multiaddr is a network address\n */\nexport function isNetworkAddress(ma) {\n    try {\n        getNetConfig(ma);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\n//# sourceMappingURL=is-network-address.js.map","import { parseIP, parseIPv4, parseIPv6 } from \"./parse.js\";\n/** Check if `input` is IPv4. */\nexport function isIPv4(input) {\n    return Boolean(parseIPv4(input));\n}\n/** Check if `input` is IPv6. */\nexport function isIPv6(input) {\n    return Boolean(parseIPv6(input));\n}\n/** Check if `input` is IPv4 or IPv6. */\nexport function isIP(input) {\n    return Boolean(parseIP(input));\n}\n/**\n * @returns `6` if `input` is IPv6, `4` if `input` is IPv4, or `undefined` if `input` is neither.\n */\nexport function ipVersion(input) {\n    if (isIPv4(input)) {\n        return 4;\n    }\n    else if (isIPv6(input)) {\n        return 6;\n    }\n    else {\n        return undefined;\n    }\n}\n//# sourceMappingURL=is-ip.js.map","// Generated by CoffeeScript 1.12.7\n(function() {\n  var Netmask, atob, chr, chr0, chrA, chra, ip2long, long2ip;\n\n  long2ip = function(long) {\n    var a, b, c, d;\n    a = (long & (0xff << 24)) >>> 24;\n    b = (long & (0xff << 16)) >>> 16;\n    c = (long & (0xff << 8)) >>> 8;\n    d = long & 0xff;\n    return [a, b, c, d].join('.');\n  };\n\n  ip2long = function(ip) {\n    var b, c, i, j, n, ref;\n    b = [];\n    for (i = j = 0; j <= 3; i = ++j) {\n      if (ip.length === 0) {\n        break;\n      }\n      if (i > 0) {\n        if (ip[0] !== '.') {\n          throw new Error('Invalid IP');\n        }\n        ip = ip.substring(1);\n      }\n      ref = atob(ip), n = ref[0], c = ref[1];\n      ip = ip.substring(c);\n      b.push(n);\n    }\n    if (ip.length !== 0) {\n      throw new Error('Invalid IP');\n    }\n    switch (b.length) {\n      case 1:\n        if (b[0] > 0xFFFFFFFF) {\n          throw new Error('Invalid IP');\n        }\n        return b[0] >>> 0;\n      case 2:\n        if (b[0] > 0xFF || b[1] > 0xFFFFFF) {\n          throw new Error('Invalid IP');\n        }\n        return (b[0] << 24 | b[1]) >>> 0;\n      case 3:\n        if (b[0] > 0xFF || b[1] > 0xFF || b[2] > 0xFFFF) {\n          throw new Error('Invalid IP');\n        }\n        return (b[0] << 24 | b[1] << 16 | b[2]) >>> 0;\n      case 4:\n        if (b[0] > 0xFF || b[1] > 0xFF || b[2] > 0xFF || b[3] > 0xFF) {\n          throw new Error('Invalid IP');\n        }\n        return (b[0] << 24 | b[1] << 16 | b[2] << 8 | b[3]) >>> 0;\n      default:\n        throw new Error('Invalid IP');\n    }\n  };\n\n  chr = function(b) {\n    return b.charCodeAt(0);\n  };\n\n  chr0 = chr('0');\n\n  chra = chr('a');\n\n  chrA = chr('A');\n\n  atob = function(s) {\n    var base, dmax, i, n, start;\n    n = 0;\n    base = 10;\n    dmax = '9';\n    i = 0;\n    if (s.length > 1 && s[i] === '0') {\n      if (s[i + 1] === 'x' || s[i + 1] === 'X') {\n        i += 2;\n        base = 16;\n      } else if ('0' <= s[i + 1] && s[i + 1] <= '9') {\n        i++;\n        base = 8;\n        dmax = '7';\n      }\n    }\n    start = i;\n    while (i < s.length) {\n      if ('0' <= s[i] && s[i] <= dmax) {\n        n = (n * base + (chr(s[i]) - chr0)) >>> 0;\n      } else if (base === 16) {\n        if ('a' <= s[i] && s[i] <= 'f') {\n          n = (n * base + (10 + chr(s[i]) - chra)) >>> 0;\n        } else if ('A' <= s[i] && s[i] <= 'F') {\n          n = (n * base + (10 + chr(s[i]) - chrA)) >>> 0;\n        } else {\n          break;\n        }\n      } else {\n        break;\n      }\n      if (n > 0xFFFFFFFF) {\n        throw new Error('too large');\n      }\n      i++;\n    }\n    if (i === start) {\n      throw new Error('empty octet');\n    }\n    return [n, i];\n  };\n\n  Netmask = (function() {\n    function Netmask(net, mask) {\n      var error, i, j, ref;\n      if (typeof net !== 'string') {\n        throw new Error(\"Missing `net' parameter\");\n      }\n      if (!mask) {\n        ref = net.split('/', 2), net = ref[0], mask = ref[1];\n      }\n      if (!mask) {\n        mask = 32;\n      }\n      if (typeof mask === 'string' && mask.indexOf('.') > -1) {\n        try {\n          this.maskLong = ip2long(mask);\n        } catch (error1) {\n          error = error1;\n          throw new Error(\"Invalid mask: \" + mask);\n        }\n        for (i = j = 32; j >= 0; i = --j) {\n          if (this.maskLong === (0xffffffff << (32 - i)) >>> 0) {\n            this.bitmask = i;\n            break;\n          }\n        }\n      } else if (mask || mask === 0) {\n        this.bitmask = parseInt(mask, 10);\n        this.maskLong = 0;\n        if (this.bitmask > 0) {\n          this.maskLong = (0xffffffff << (32 - this.bitmask)) >>> 0;\n        }\n      } else {\n        throw new Error(\"Invalid mask: empty\");\n      }\n      try {\n        this.netLong = (ip2long(net) & this.maskLong) >>> 0;\n      } catch (error1) {\n        error = error1;\n        throw new Error(\"Invalid net address: \" + net);\n      }\n      if (!(this.bitmask <= 32)) {\n        throw new Error(\"Invalid mask for ip4: \" + mask);\n      }\n      this.size = Math.pow(2, 32 - this.bitmask);\n      this.base = long2ip(this.netLong);\n      this.mask = long2ip(this.maskLong);\n      this.hostmask = long2ip(~this.maskLong);\n      this.first = this.bitmask <= 30 ? long2ip(this.netLong + 1) : this.base;\n      this.last = this.bitmask <= 30 ? long2ip(this.netLong + this.size - 2) : long2ip(this.netLong + this.size - 1);\n      this.broadcast = this.bitmask <= 30 ? long2ip(this.netLong + this.size - 1) : void 0;\n    }\n\n    Netmask.prototype.contains = function(ip) {\n      if (typeof ip === 'string' && (ip.indexOf('/') > 0 || ip.split('.').length !== 4)) {\n        ip = new Netmask(ip);\n      }\n      if (ip instanceof Netmask) {\n        return this.contains(ip.base) && this.contains(ip.broadcast || ip.last);\n      } else {\n        return (ip2long(ip) & this.maskLong) >>> 0 === (this.netLong & this.maskLong) >>> 0;\n      }\n    };\n\n    Netmask.prototype.next = function(count) {\n      if (count == null) {\n        count = 1;\n      }\n      return new Netmask(long2ip(this.netLong + (this.size * count)), this.mask);\n    };\n\n    Netmask.prototype.forEach = function(fn) {\n      var index, lastLong, long;\n      long = ip2long(this.first);\n      lastLong = ip2long(this.last);\n      index = 0;\n      while (long <= lastLong) {\n        fn(long2ip(long), long, index);\n        index++;\n        long++;\n      }\n    };\n\n    Netmask.prototype.toString = function() {\n      return this.base + \"/\" + this.bitmask;\n    };\n\n    return Netmask;\n\n  })();\n\n  exports.ip2long = ip2long;\n\n  exports.long2ip = long2ip;\n\n  exports.Netmask = Netmask;\n\n}).call(this);\n","import { isIPv4, isIPv6 } from '@chainsafe/is-ip';\nimport { Netmask } from 'netmask';\nconst PRIVATE_IP_RANGES = [\n    '0.0.0.0/8',\n    '10.0.0.0/8',\n    '100.64.0.0/10',\n    '127.0.0.0/8',\n    '169.254.0.0/16',\n    '172.16.0.0/12',\n    '192.0.0.0/24',\n    '192.0.0.0/29',\n    '192.0.0.8/32',\n    '192.0.0.9/32',\n    '192.0.0.10/32',\n    '192.0.0.170/32',\n    '192.0.0.171/32',\n    '192.0.2.0/24',\n    '192.31.196.0/24',\n    '192.52.193.0/24',\n    '192.88.99.0/24',\n    '192.168.0.0/16',\n    '192.175.48.0/24',\n    '198.18.0.0/15',\n    '198.51.100.0/24',\n    '203.0.113.0/24',\n    '240.0.0.0/4',\n    '255.255.255.255/32'\n];\nconst NETMASK_RANGES = PRIVATE_IP_RANGES.map(ipRange => new Netmask(ipRange));\nfunction ipv4Check(ipAddr) {\n    for (const r of NETMASK_RANGES) {\n        if (r.contains(ipAddr)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction isIpv4MappedIpv6(ipAddr) {\n    return /^::ffff:([0-9a-fA-F]{1,4}):([0-9a-fA-F]{1,4})$/.test(ipAddr);\n}\n/**\n * @see https://datatracker.ietf.org/doc/html/rfc4291#section-2.5.5.2\n */\nfunction ipv4MappedIpv6Check(ipAddr) {\n    const parts = ipAddr.split(':');\n    if (parts.length < 2) {\n        return false;\n    }\n    const octet34 = parts[parts.length - 1].padStart(4, '0');\n    const octet12 = parts[parts.length - 2].padStart(4, '0');\n    const ip4 = `${parseInt(octet12.substring(0, 2), 16)}.${parseInt(octet12.substring(2), 16)}.${parseInt(octet34.substring(0, 2), 16)}.${parseInt(octet34.substring(2), 16)}`;\n    return ipv4Check(ip4);\n}\n/**\n * @see https://datatracker.ietf.org/doc/html/rfc4291#section-2.2 example 3\n */\nfunction isIpv4EmbeddedIpv6(ipAddr) {\n    return /^::ffff:([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/.test(ipAddr);\n}\nfunction ipv4EmbeddedIpv6Check(ipAddr) {\n    const parts = ipAddr.split(':');\n    const ip4 = parts[parts.length - 1];\n    return ipv4Check(ip4);\n}\nfunction ipv6Check(ipAddr) {\n    return /^::$/.test(ipAddr) ||\n        /^::1$/.test(ipAddr) ||\n        /^64:ff9b::([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/.test(ipAddr) ||\n        /^100::([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ipAddr) ||\n        /^2001::([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ipAddr) ||\n        /^2001:2[0-9a-fA-F]:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ipAddr) ||\n        /^2001:db8:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ipAddr) ||\n        /^2002:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ipAddr) ||\n        /^f[c-d]([0-9a-fA-F]{2,2}):/i.test(ipAddr) ||\n        /^fe[8-9a-bA-B][0-9a-fA-F]:/i.test(ipAddr) ||\n        /^ff([0-9a-fA-F]{2,2}):/i.test(ipAddr);\n}\nexport function isPrivateIp(ip) {\n    if (isIPv4(ip)) {\n        return ipv4Check(ip);\n    }\n    if (isIpv4MappedIpv6(ip)) {\n        return ipv4MappedIpv6Check(ip);\n    }\n    if (isIpv4EmbeddedIpv6(ip)) {\n        return ipv4EmbeddedIpv6Check(ip);\n    }\n    if (isIPv6(ip)) {\n        return ipv6Check(ip);\n    }\n}\n//# sourceMappingURL=private-ip.js.map","import { isPrivateIp } from '../private-ip.js';\nimport { getNetConfig } from \"./get-net-config.js\";\n/**\n * Check if a given multiaddr starts with a private address\n */\nexport function isPrivate(ma) {\n    try {\n        const config = getNetConfig(ma);\n        switch (config.type) {\n            case 'ip4':\n            case 'ip6':\n                return isPrivateIp(config.host) ?? false;\n            default:\n                return config.host === 'localhost';\n        }\n    }\n    catch {\n        return false;\n    }\n}\n//# sourceMappingURL=is-private.js.map","export default function pDefer() {\n\tconst deferred = {};\n\n\tdeferred.promise = new Promise((resolve, reject) => {\n\t\tdeferred.resolve = resolve;\n\t\tdeferred.reject = reject;\n\t});\n\n\treturn deferred;\n}\n","// ported from https://www.npmjs.com/package/fast-fifo\nclass FixedFIFO {\n    buffer;\n    mask;\n    top;\n    btm;\n    next;\n    constructor(hwm) {\n        if (!(hwm > 0) || ((hwm - 1) & hwm) !== 0) {\n            throw new Error('Max size for a FixedFIFO should be a power of two');\n        }\n        this.buffer = new Array(hwm);\n        this.mask = hwm - 1;\n        this.top = 0;\n        this.btm = 0;\n        this.next = null;\n    }\n    push(data) {\n        if (this.buffer[this.top] !== undefined) {\n            return false;\n        }\n        this.buffer[this.top] = data;\n        this.top = (this.top + 1) & this.mask;\n        return true;\n    }\n    shift() {\n        const last = this.buffer[this.btm];\n        if (last === undefined) {\n            return undefined;\n        }\n        this.buffer[this.btm] = undefined;\n        this.btm = (this.btm + 1) & this.mask;\n        return last;\n    }\n    isEmpty() {\n        return this.buffer[this.btm] === undefined;\n    }\n}\nexport class FIFO {\n    size;\n    hwm;\n    head;\n    tail;\n    constructor(options = {}) {\n        this.hwm = options.splitLimit ?? 16;\n        this.head = new FixedFIFO(this.hwm);\n        this.tail = this.head;\n        this.size = 0;\n    }\n    calculateSize(obj) {\n        if (obj?.byteLength != null) {\n            return obj.byteLength;\n        }\n        return 1;\n    }\n    push(val) {\n        if (val?.value != null) {\n            this.size += this.calculateSize(val.value);\n        }\n        if (!this.head.push(val)) {\n            const prev = this.head;\n            this.head = prev.next = new FixedFIFO(2 * this.head.buffer.length);\n            this.head.push(val);\n        }\n    }\n    shift() {\n        let val = this.tail.shift();\n        if (val === undefined && (this.tail.next != null)) {\n            const next = this.tail.next;\n            this.tail.next = null;\n            this.tail = next;\n            val = this.tail.shift();\n        }\n        if (val?.value != null) {\n            this.size -= this.calculateSize(val.value);\n        }\n        return val;\n    }\n    isEmpty() {\n        return this.head.isEmpty();\n    }\n}\n//# sourceMappingURL=fifo.js.map","/**\n * @packageDocumentation\n *\n * An iterable that you can push values into.\n *\n * @example\n *\n * ```js\n * import { pushable } from 'it-pushable'\n *\n * const source = pushable()\n *\n * setTimeout(() => source.push('hello'), 100)\n * setTimeout(() => source.push('world'), 200)\n * setTimeout(() => source.end(), 300)\n *\n * const start = Date.now()\n *\n * for await (const value of source) {\n *   console.log(`got \"${value}\" after ${Date.now() - start}ms`)\n * }\n * console.log(`done after ${Date.now() - start}ms`)\n *\n * // Output:\n * // got \"hello\" after 105ms\n * // got \"world\" after 207ms\n * // done after 309ms\n * ```\n *\n * @example\n *\n * ```js\n * import { pushableV } from 'it-pushable'\n * import all from 'it-all'\n *\n * const source = pushableV()\n *\n * source.push(1)\n * source.push(2)\n * source.push(3)\n * source.end()\n *\n * console.info(await all(source))\n *\n * // Output:\n * // [ [1, 2, 3] ]\n * ```\n */\nimport deferred from 'p-defer';\nimport { FIFO } from './fifo.js';\nexport class AbortError extends Error {\n    type;\n    code;\n    constructor(message, code) {\n        super(message ?? 'The operation was aborted');\n        this.type = 'aborted';\n        this.code = code ?? 'ABORT_ERR';\n    }\n}\nexport function pushable(options = {}) {\n    const getNext = (buffer) => {\n        const next = buffer.shift();\n        if (next == null) {\n            return { done: true };\n        }\n        if (next.error != null) {\n            throw next.error;\n        }\n        return {\n            done: next.done === true,\n            // @ts-expect-error if done is false, value will be present\n            value: next.value\n        };\n    };\n    return _pushable(getNext, options);\n}\nexport function pushableV(options = {}) {\n    const getNext = (buffer) => {\n        let next;\n        const values = [];\n        while (!buffer.isEmpty()) {\n            next = buffer.shift();\n            if (next == null) {\n                break;\n            }\n            if (next.error != null) {\n                throw next.error;\n            }\n            if (next.done === false) {\n                // @ts-expect-error if done is false value should be pushed\n                values.push(next.value);\n            }\n        }\n        if (next == null) {\n            return { done: true };\n        }\n        return {\n            done: next.done === true,\n            value: values\n        };\n    };\n    return _pushable(getNext, options);\n}\nfunction _pushable(getNext, options) {\n    options = options ?? {};\n    let onEnd = options.onEnd;\n    let buffer = new FIFO();\n    let pushable;\n    let onNext;\n    let ended;\n    let drain = deferred();\n    const waitNext = async () => {\n        try {\n            if (!buffer.isEmpty()) {\n                return getNext(buffer);\n            }\n            if (ended) {\n                return { done: true };\n            }\n            return await new Promise((resolve, reject) => {\n                onNext = (next) => {\n                    onNext = null;\n                    buffer.push(next);\n                    try {\n                        resolve(getNext(buffer));\n                    }\n                    catch (err) {\n                        reject(err);\n                    }\n                    return pushable;\n                };\n            });\n        }\n        finally {\n            if (buffer.isEmpty()) {\n                // settle promise in the microtask queue to give consumers a chance to\n                // await after calling .push\n                queueMicrotask(() => {\n                    drain.resolve();\n                    drain = deferred();\n                });\n            }\n        }\n    };\n    const bufferNext = (next) => {\n        if (onNext != null) {\n            return onNext(next);\n        }\n        buffer.push(next);\n        return pushable;\n    };\n    const bufferError = (err) => {\n        buffer = new FIFO();\n        if (onNext != null) {\n            return onNext({ error: err });\n        }\n        buffer.push({ error: err });\n        return pushable;\n    };\n    const push = (value) => {\n        if (ended) {\n            return pushable;\n        }\n        // @ts-expect-error `byteLength` is not declared on PushType\n        if (options?.objectMode !== true && value?.byteLength == null) {\n            throw new Error('objectMode was not true but tried to push non-Uint8Array value');\n        }\n        return bufferNext({ done: false, value });\n    };\n    const end = (err) => {\n        if (ended)\n            return pushable;\n        ended = true;\n        return (err != null) ? bufferError(err) : bufferNext({ done: true });\n    };\n    const _return = () => {\n        buffer = new FIFO();\n        end();\n        return { done: true };\n    };\n    const _throw = (err) => {\n        end(err);\n        return { done: true };\n    };\n    pushable = {\n        [Symbol.asyncIterator]() { return this; },\n        next: waitNext,\n        return: _return,\n        throw: _throw,\n        push,\n        end,\n        get readableLength() {\n            return buffer.size;\n        },\n        onEmpty: async (options) => {\n            const signal = options?.signal;\n            signal?.throwIfAborted();\n            if (buffer.isEmpty()) {\n                return;\n            }\n            let cancel;\n            let listener;\n            if (signal != null) {\n                cancel = new Promise((resolve, reject) => {\n                    listener = () => {\n                        reject(new AbortError());\n                    };\n                    signal.addEventListener('abort', listener);\n                });\n            }\n            try {\n                await Promise.race([\n                    drain.promise,\n                    cancel\n                ]);\n            }\n            finally {\n                if (listener != null && signal != null) {\n                    signal?.removeEventListener('abort', listener);\n                }\n            }\n        }\n    };\n    if (onEnd == null) {\n        return pushable;\n    }\n    const _pushable = pushable;\n    pushable = {\n        [Symbol.asyncIterator]() { return this; },\n        next() {\n            return _pushable.next();\n        },\n        throw(err) {\n            _pushable.throw(err);\n            if (onEnd != null) {\n                onEnd(err);\n                onEnd = undefined;\n            }\n            return { done: true };\n        },\n        return() {\n            _pushable.return();\n            if (onEnd != null) {\n                onEnd();\n                onEnd = undefined;\n            }\n            return { done: true };\n        },\n        push,\n        end(err) {\n            _pushable.end(err);\n            if (onEnd != null) {\n                onEnd(err);\n                onEnd = undefined;\n            }\n            return pushable;\n        },\n        get readableLength() {\n            return _pushable.readableLength;\n        },\n        onEmpty: (opts) => {\n            return _pushable.onEmpty(opts);\n        }\n    };\n    return pushable;\n}\n//# sourceMappingURL=index.js.map","export class TimeoutError extends Error {\n\tconstructor(message) {\n\t\tsuper(message);\n\t\tthis.name = 'TimeoutError';\n\t}\n}\n\n/**\nAn error to be thrown when the request is aborted by AbortController.\nDOMException is thrown instead of this Error when DOMException is available.\n*/\nexport class AbortError extends Error {\n\tconstructor(message) {\n\t\tsuper();\n\t\tthis.name = 'AbortError';\n\t\tthis.message = message;\n\t}\n}\n\n/**\nTODO: Remove AbortError and just throw DOMException when targeting Node 18.\n*/\nconst getDOMException = errorMessage => globalThis.DOMException === undefined\n\t? new AbortError(errorMessage)\n\t: new DOMException(errorMessage);\n\n/**\nTODO: Remove below function and just 'reject(signal.reason)' when targeting Node 18.\n*/\nconst getAbortedReason = signal => {\n\tconst reason = signal.reason === undefined\n\t\t? getDOMException('This operation was aborted.')\n\t\t: signal.reason;\n\n\treturn reason instanceof Error ? reason : getDOMException(reason);\n};\n\nexport default function pTimeout(promise, options) {\n\tconst {\n\t\tmilliseconds,\n\t\tfallback,\n\t\tmessage,\n\t\tcustomTimers = {setTimeout, clearTimeout},\n\t} = options;\n\n\tlet timer;\n\tlet abortHandler;\n\n\tconst wrappedPromise = new Promise((resolve, reject) => {\n\t\tif (typeof milliseconds !== 'number' || Math.sign(milliseconds) !== 1) {\n\t\t\tthrow new TypeError(`Expected \\`milliseconds\\` to be a positive number, got \\`${milliseconds}\\``);\n\t\t}\n\n\t\tif (options.signal) {\n\t\t\tconst {signal} = options;\n\t\t\tif (signal.aborted) {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t}\n\n\t\t\tabortHandler = () => {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t};\n\n\t\t\tsignal.addEventListener('abort', abortHandler, {once: true});\n\t\t}\n\n\t\tif (milliseconds === Number.POSITIVE_INFINITY) {\n\t\t\tpromise.then(resolve, reject);\n\t\t\treturn;\n\t\t}\n\n\t\t// We create the error outside of `setTimeout` to preserve the stack trace.\n\t\tconst timeoutError = new TimeoutError();\n\n\t\ttimer = customTimers.setTimeout.call(undefined, () => {\n\t\t\tif (fallback) {\n\t\t\t\ttry {\n\t\t\t\t\tresolve(fallback());\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof promise.cancel === 'function') {\n\t\t\t\tpromise.cancel();\n\t\t\t}\n\n\t\t\tif (message === false) {\n\t\t\t\tresolve();\n\t\t\t} else if (message instanceof Error) {\n\t\t\t\treject(message);\n\t\t\t} else {\n\t\t\t\ttimeoutError.message = message ?? `Promise timed out after ${milliseconds} milliseconds`;\n\t\t\t\treject(timeoutError);\n\t\t\t}\n\t\t}, milliseconds);\n\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tresolve(await promise);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t})();\n\t});\n\n\tconst cancelablePromise = wrappedPromise.finally(() => {\n\t\tcancelablePromise.clear();\n\t\tif (abortHandler && options.signal) {\n\t\t\toptions.signal.removeEventListener('abort', abortHandler);\n\t\t}\n\t});\n\n\tcancelablePromise.clear = () => {\n\t\tcustomTimers.clearTimeout.call(undefined, timer);\n\t\ttimer = undefined;\n\t};\n\n\treturn cancelablePromise;\n}\n","import pTimeout from 'p-timeout';\n\nconst normalizeEmitter = emitter => {\n\tconst addListener = emitter.addEventListener || emitter.on || emitter.addListener;\n\tconst removeListener = emitter.removeEventListener || emitter.off || emitter.removeListener;\n\n\tif (!addListener || !removeListener) {\n\t\tthrow new TypeError('Emitter is not compatible');\n\t}\n\n\treturn {\n\t\taddListener: addListener.bind(emitter),\n\t\tremoveListener: removeListener.bind(emitter),\n\t};\n};\n\nexport function pEventMultiple(emitter, event, options) {\n\tlet cancel;\n\tconst returnValue = new Promise((resolve, reject) => {\n\t\toptions = {\n\t\t\trejectionEvents: ['error'],\n\t\t\tmultiArgs: false,\n\t\t\trejectionMultiArgs: false,\n\t\t\tresolveImmediately: false,\n\t\t\t...options,\n\t\t};\n\n\t\tif (!(options.count >= 0 && (options.count === Number.POSITIVE_INFINITY || Number.isInteger(options.count)))) {\n\t\t\tthrow new TypeError('The `count` option should be at least 0 or more');\n\t\t}\n\n\t\toptions.signal?.throwIfAborted();\n\n\t\t// Allow multiple events\n\t\tconst events = [event].flat();\n\n\t\tconst items = [];\n\t\tconst {addListener, removeListener} = normalizeEmitter(emitter);\n\n\t\tconst onItem = async (...arguments_) => {\n\t\t\tconst value = options.multiArgs ? arguments_ : arguments_[0];\n\n\t\t\tif (options.filter) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!(await options.filter(value))) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tcancel();\n\t\t\t\t\treject(error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\titems.push(value);\n\n\t\t\tif (options.count === items.length) {\n\t\t\t\tcancel();\n\t\t\t\tresolve(items);\n\t\t\t}\n\t\t};\n\n\t\tconst rejectHandler = (...arguments_) => {\n\t\t\tcancel();\n\t\t\treject(options.rejectionMultiArgs ? arguments_ : arguments_[0]);\n\t\t};\n\n\t\tcancel = () => {\n\t\t\tfor (const event of events) {\n\t\t\t\tremoveListener(event, onItem);\n\t\t\t}\n\n\t\t\tfor (const rejectionEvent of options.rejectionEvents) {\n\t\t\t\t// Only remove rejection handler if we actually registered it\n\t\t\t\tif (!events.includes(rejectionEvent)) {\n\t\t\t\t\tremoveListener(rejectionEvent, rejectHandler);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfor (const event of events) {\n\t\t\taddListener(event, onItem);\n\t\t}\n\n\t\tfor (const rejectionEvent of options.rejectionEvents) {\n\t\t\t// Skip registering rejection handler if we're already listening to this event\n\t\t\t// as the main event takes priority (as documented)\n\t\t\tif (!events.includes(rejectionEvent)) {\n\t\t\t\taddListener(rejectionEvent, rejectHandler);\n\t\t\t}\n\t\t}\n\n\t\tif (options.signal) {\n\t\t\toptions.signal.addEventListener('abort', () => {\n\t\t\t\trejectHandler(options.signal.reason);\n\t\t\t}, {once: true});\n\t\t}\n\n\t\tif (options.resolveImmediately) {\n\t\t\tresolve(items);\n\t\t}\n\t});\n\n\treturnValue.cancel = cancel;\n\n\tif (typeof options.timeout === 'number') {\n\t\tconst timeout = pTimeout(returnValue, {milliseconds: options.timeout});\n\t\t// When cancelling, also clear the timeout timer\n\t\ttimeout.cancel = () => {\n\t\t\tcancel();\n\t\t\ttimeout.clear();\n\t\t};\n\n\t\treturn timeout;\n\t}\n\n\treturn returnValue;\n}\n\nexport function pEvent(emitter, event, options) {\n\tif (typeof options === 'function') {\n\t\toptions = {filter: options};\n\t}\n\n\toptions = {\n\t\t...options,\n\t\tcount: 1,\n\t\tresolveImmediately: false,\n\t};\n\n\tconst arrayPromise = pEventMultiple(emitter, event, options);\n\tconst promise = arrayPromise.then(array => array[0]); // eslint-disable-line promise/prefer-await-to-then\n\tpromise.cancel = arrayPromise.cancel;\n\n\treturn promise;\n}\n\nexport function pEventIterator(emitter, event, options) {\n\tif (typeof options === 'function') {\n\t\toptions = {filter: options};\n\t}\n\n\t// Allow multiple events\n\tconst events = [event].flat();\n\n\toptions = {\n\t\trejectionEvents: ['error'],\n\t\tresolutionEvents: [],\n\t\tlimit: Number.POSITIVE_INFINITY,\n\t\tmultiArgs: false,\n\t\trejectionMultiArgs: false,\n\t\t...options,\n\t};\n\n\tconst {limit} = options;\n\tconst isValidLimit = limit >= 0 && (limit === Number.POSITIVE_INFINITY || Number.isInteger(limit));\n\tif (!isValidLimit) {\n\t\tthrow new TypeError('The `limit` option should be a non-negative integer or Infinity');\n\t}\n\n\toptions.signal?.throwIfAborted();\n\n\tif (limit === 0) {\n\t\t// Return an empty async iterator to avoid any further cost\n\t\treturn {\n\t\t\t[Symbol.asyncIterator]() {\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tasync next() {\n\t\t\t\treturn {\n\t\t\t\t\tdone: true,\n\t\t\t\t\tvalue: undefined,\n\t\t\t\t};\n\t\t\t},\n\t\t};\n\t}\n\n\tconst {addListener, removeListener} = normalizeEmitter(emitter);\n\n\tlet isDone = false;\n\tlet error;\n\tlet hasPendingError = false;\n\tconst nextQueue = [];\n\tconst valueQueue = [];\n\tlet eventCount = 0;\n\tlet isLimitReached = false;\n\n\tconst valueHandler = (...arguments_) => {\n\t\teventCount++;\n\t\tisLimitReached = eventCount === limit;\n\n\t\tconst value = options.multiArgs ? arguments_ : arguments_[0];\n\n\t\tif (nextQueue.length > 0) {\n\t\t\tconst {resolve} = nextQueue.shift();\n\n\t\t\tresolve({done: false, value});\n\n\t\t\tif (isLimitReached) {\n\t\t\t\tcancel();\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvalueQueue.push(value);\n\n\t\tif (isLimitReached) {\n\t\t\tcancel();\n\t\t}\n\t};\n\n\tconst cancel = () => {\n\t\tisDone = true;\n\n\t\tfor (const event of events) {\n\t\t\tremoveListener(event, valueHandler);\n\t\t}\n\n\t\tfor (const rejectionEvent of options.rejectionEvents) {\n\t\t\tremoveListener(rejectionEvent, rejectHandler);\n\t\t}\n\n\t\tfor (const resolutionEvent of options.resolutionEvents) {\n\t\t\tremoveListener(resolutionEvent, resolveHandler);\n\t\t}\n\n\t\twhile (nextQueue.length > 0) {\n\t\t\tconst {resolve} = nextQueue.shift();\n\t\t\tresolve({done: true, value: undefined});\n\t\t}\n\t};\n\n\tconst rejectHandler = (...arguments_) => {\n\t\terror = options.rejectionMultiArgs ? arguments_ : arguments_[0];\n\n\t\tif (nextQueue.length > 0) {\n\t\t\tconst {reject} = nextQueue.shift();\n\t\t\treject(error);\n\t\t} else {\n\t\t\thasPendingError = true;\n\t\t}\n\n\t\tcancel();\n\t};\n\n\tconst resolveHandler = async (...arguments_) => {\n\t\tconst value = options.multiArgs ? arguments_ : arguments_[0];\n\n\t\tif (options.filter) {\n\t\t\ttry {\n\t\t\t\tif (!(await options.filter(value))) {\n\t\t\t\t\tcancel();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} catch (filterError) {\n\t\t\t\tcancel();\n\t\t\t\tif (nextQueue.length > 0) {\n\t\t\t\t\tconst {reject} = nextQueue.shift();\n\t\t\t\t\treject(filterError);\n\t\t\t\t} else {\n\t\t\t\t\t// Store error for next iterator call\n\t\t\t\t\thasPendingError = true;\n\t\t\t\t\terror = filterError;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (nextQueue.length > 0) {\n\t\t\tconst {resolve} = nextQueue.shift();\n\t\t\tresolve({done: true, value});\n\t\t} else {\n\t\t\tvalueQueue.push(value);\n\t\t}\n\n\t\tcancel();\n\t};\n\n\tfor (const event of events) {\n\t\taddListener(event, valueHandler);\n\t}\n\n\tfor (const rejectionEvent of options.rejectionEvents) {\n\t\taddListener(rejectionEvent, rejectHandler);\n\t}\n\n\tfor (const resolutionEvent of options.resolutionEvents) {\n\t\taddListener(resolutionEvent, resolveHandler);\n\t}\n\n\tif (options.signal) {\n\t\toptions.signal.addEventListener('abort', () => {\n\t\t\trejectHandler(options.signal.reason);\n\t\t}, {once: true});\n\t}\n\n\treturn {\n\t\t[Symbol.asyncIterator]() {\n\t\t\treturn this;\n\t\t},\n\t\tasync next() {\n\t\t\tif (valueQueue.length > 0) {\n\t\t\t\tconst value = valueQueue.shift();\n\t\t\t\treturn {\n\t\t\t\t\tdone: isDone && valueQueue.length === 0 && !isLimitReached,\n\t\t\t\t\tvalue,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (hasPendingError) {\n\t\t\t\thasPendingError = false;\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tif (isDone) {\n\t\t\t\treturn {\n\t\t\t\t\tdone: true,\n\t\t\t\t\tvalue: undefined,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tnextQueue.push({resolve, reject});\n\t\t\t});\n\t\t},\n\t\tasync return(value) {\n\t\t\tcancel();\n\t\t\treturn {\n\t\t\t\tdone: isDone,\n\t\t\t\tvalue,\n\t\t\t};\n\t\t},\n\t};\n}\n\nexport {TimeoutError} from 'p-timeout';\n","/**\n * Returns a function wrapper that will only call the passed function once\n *\n * Important - the passed function should not throw or reject\n */\nexport function debounce(func, wait) {\n    let timeout;\n    const output = function () {\n        const later = function () {\n            timeout = undefined;\n            void func();\n        };\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n    };\n    output.start = () => { };\n    output.stop = () => {\n        clearTimeout(timeout);\n    };\n    return output;\n}\n//# sourceMappingURL=debounce.js.map","/**\n * A rate limit was hit\n */\nexport class RateLimitError extends Error {\n    remainingPoints;\n    msBeforeNext;\n    consumedPoints;\n    isFirstInDuration;\n    constructor(message = 'Rate limit exceeded', props) {\n        super(message);\n        this.name = 'RateLimitError';\n        this.remainingPoints = props.remainingPoints;\n        this.msBeforeNext = props.msBeforeNext;\n        this.consumedPoints = props.consumedPoints;\n        this.isFirstInDuration = props.isFirstInDuration;\n    }\n}\nexport class QueueFullError extends Error {\n    static name = 'QueueFullError';\n    constructor(message = 'The queue was full') {\n        super(message);\n        this.name = 'QueueFullError';\n    }\n}\nexport class UnexpectedEOFError extends Error {\n    static name = 'UnexpectedEOFError';\n    name = 'UnexpectedEOFError';\n}\nexport class MaxEarlyStreamsError extends Error {\n    static name = 'MaxEarlyStreamsError';\n    name = 'MaxEarlyStreamsError';\n}\nexport class StreamClosedError extends Error {\n    static name = 'StreamClosedError';\n    name = 'StreamClosedError';\n}\n//# sourceMappingURL=errors.js.map","/**\n * @packageDocumentation\n *\n * Pass a promise and an abort signal and await the result.\n *\n * @example Basic usage\n *\n * ```ts\n * import { raceSignal } from 'race-signal'\n *\n * const controller = new AbortController()\n *\n * const promise = new Promise((resolve, reject) => {\n *   setTimeout(() => {\n *     resolve('a value')\n *   }, 1000)\n * })\n *\n * setTimeout(() => {\n *   controller.abort()\n * }, 500)\n *\n * // throws an AbortError\n * const resolve = await raceSignal(promise, controller.signal)\n * ```\n *\n * @example Overriding errors\n *\n * By default the thrown error is the `.reason` property of the signal but it's\n * possible to override this behaviour with the `translateError` option:\n *\n * ```ts\n * import { raceSignal } from 'race-signal'\n *\n * const controller = new AbortController()\n *\n * const promise = new Promise((resolve, reject) => {\n *   setTimeout(() => {\n *     resolve('a value')\n *   }, 1000)\n * })\n *\n * setTimeout(() => {\n *   controller.abort()\n * }, 500)\n *\n * // throws `Error('Oh no!')`\n * const resolve = await raceSignal(promise, controller.signal, {\n *   translateError: (signal) => {\n *     // use `signal`, or don't\n *     return new Error('Oh no!')\n *   }\n * })\n * ```\n */\nfunction defaultTranslate(signal) {\n    return signal.reason;\n}\n/**\n * Race a promise against an abort signal\n */\nexport async function raceSignal(promise, signal, opts) {\n    if (signal == null) {\n        return promise;\n    }\n    const translateError = opts?.translateError ?? defaultTranslate;\n    if (signal.aborted) {\n        // the passed promise may yet resolve or reject but the use has signalled\n        // they are no longer interested so smother the error\n        promise.catch(() => { });\n        return Promise.reject(translateError(signal));\n    }\n    let listener;\n    try {\n        return await Promise.race([\n            promise,\n            new Promise((resolve, reject) => {\n                listener = () => {\n                    reject(translateError(signal));\n                };\n                signal.addEventListener('abort', listener);\n            })\n        ]);\n    }\n    finally {\n        if (listener != null) {\n            signal.removeEventListener('abort', listener);\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","import { AbortError } from '@libp2p/interface';\nimport pDefer from 'p-defer';\nexport class JobRecipient {\n    deferred;\n    signal;\n    constructor(signal) {\n        this.signal = signal;\n        this.deferred = pDefer();\n        this.onAbort = this.onAbort.bind(this);\n        this.signal?.addEventListener('abort', this.onAbort);\n    }\n    onAbort() {\n        this.deferred.reject(this.signal?.reason ?? new AbortError());\n    }\n    cleanup() {\n        this.signal?.removeEventListener('abort', this.onAbort);\n    }\n}\n//# sourceMappingURL=recipient.js.map","import { AbortError } from '@libp2p/interface';\nimport { setMaxListeners } from 'main-event';\nimport { raceSignal } from 'race-signal';\nimport { JobRecipient } from './recipient.js';\n/**\n * Returns a random string\n */\nfunction randomId() {\n    return `${(parseInt(String(Math.random() * 1e9), 10)).toString()}${Date.now()}`;\n}\nexport class Job {\n    id;\n    fn;\n    options;\n    recipients;\n    status;\n    timeline;\n    controller;\n    constructor(fn, options) {\n        this.id = randomId();\n        this.status = 'queued';\n        this.fn = fn;\n        this.options = options;\n        this.recipients = [];\n        this.timeline = {\n            created: Date.now()\n        };\n        this.controller = new AbortController();\n        setMaxListeners(Infinity, this.controller.signal);\n        this.onAbort = this.onAbort.bind(this);\n    }\n    abort(err) {\n        this.controller.abort(err);\n    }\n    onAbort() {\n        const allAborted = this.recipients.reduce((acc, curr) => {\n            return acc && (curr.signal?.aborted === true);\n        }, true);\n        // if all recipients have aborted the job, actually abort the job\n        if (allAborted) {\n            this.controller.abort(new AbortError());\n            this.cleanup();\n        }\n    }\n    async join(options = {}) {\n        const recipient = new JobRecipient(options.signal);\n        this.recipients.push(recipient);\n        options.signal?.addEventListener('abort', this.onAbort);\n        return recipient.deferred.promise;\n    }\n    async run() {\n        this.status = 'running';\n        this.timeline.started = Date.now();\n        try {\n            this.controller.signal.throwIfAborted();\n            const result = await raceSignal(this.fn({\n                ...(this.options ?? {}),\n                signal: this.controller.signal\n            }), this.controller.signal);\n            this.recipients.forEach(recipient => {\n                recipient.deferred.resolve(result);\n            });\n            this.status = 'complete';\n        }\n        catch (err) {\n            this.recipients.forEach(recipient => {\n                recipient.deferred.reject(err);\n            });\n            this.status = 'errored';\n        }\n        finally {\n            this.timeline.finished = Date.now();\n            this.cleanup();\n        }\n    }\n    cleanup() {\n        this.recipients.forEach(recipient => {\n            recipient.cleanup();\n            recipient.signal?.removeEventListener('abort', this.onAbort);\n        });\n    }\n}\n//# sourceMappingURL=job.js.map","import { AbortError } from '@libp2p/interface';\nimport { pushable } from 'it-pushable';\nimport { TypedEventEmitter } from 'main-event';\nimport { pEvent } from 'p-event';\nimport { debounce } from '../debounce.js';\nimport { QueueFullError } from '../errors.js';\nimport { Job } from './job.js';\n/**\n * Heavily influence by `p-queue` with the following differences:\n *\n * 1. Items remain at the head of the queue while they are running so `queue.size` includes `queue.pending` items - this is so interested parties can join the results of a queue item while it is running\n * 2. The options for a job are stored separately to the job in order for them to be modified while they are still in the queue\n */\nexport class Queue extends TypedEventEmitter {\n    concurrency;\n    maxSize;\n    queue;\n    pending;\n    sort;\n    paused;\n    constructor(init = {}) {\n        super();\n        this.concurrency = init.concurrency ?? Number.POSITIVE_INFINITY;\n        this.maxSize = init.maxSize ?? Number.POSITIVE_INFINITY;\n        this.pending = 0;\n        this.paused = false;\n        if (init.metricName != null) {\n            init.metrics?.registerMetricGroup(init.metricName, {\n                calculate: () => {\n                    return {\n                        size: this.queue.length,\n                        running: this.pending,\n                        queued: this.queue.length - this.pending\n                    };\n                }\n            });\n        }\n        this.sort = init.sort;\n        this.queue = [];\n        this.emitEmpty = debounce(this.emitEmpty.bind(this), 1);\n        this.emitIdle = debounce(this.emitIdle.bind(this), 1);\n    }\n    emitEmpty() {\n        if (this.size !== 0) {\n            return;\n        }\n        this.safeDispatchEvent('empty');\n    }\n    emitIdle() {\n        if (this.running !== 0) {\n            return;\n        }\n        this.safeDispatchEvent('idle');\n    }\n    pause() {\n        this.paused = true;\n    }\n    resume() {\n        if (!this.paused) {\n            return;\n        }\n        this.paused = false;\n        this.tryToStartAnother();\n    }\n    tryToStartAnother() {\n        if (this.paused) {\n            return false;\n        }\n        if (this.size === 0) {\n            this.emitEmpty();\n            if (this.running === 0) {\n                this.emitIdle();\n            }\n            return false;\n        }\n        if (this.pending < this.concurrency) {\n            let job;\n            for (const j of this.queue) {\n                if (j.status === 'queued') {\n                    job = j;\n                    break;\n                }\n            }\n            if (job == null) {\n                return false;\n            }\n            this.safeDispatchEvent('active');\n            this.pending++;\n            void job.run()\n                .finally(() => {\n                // remove the job from the queue\n                for (let i = 0; i < this.queue.length; i++) {\n                    if (this.queue[i] === job) {\n                        this.queue.splice(i, 1);\n                        break;\n                    }\n                }\n                this.pending--;\n                this.tryToStartAnother();\n                this.safeDispatchEvent('next');\n            });\n            return true;\n        }\n        return false;\n    }\n    enqueue(job) {\n        this.queue.push(job);\n        if (this.sort != null) {\n            this.queue.sort(this.sort);\n        }\n    }\n    /**\n     * Adds a sync or async task to the queue. Always returns a promise.\n     */\n    async add(fn, options) {\n        options?.signal?.throwIfAborted();\n        if (this.size === this.maxSize) {\n            throw new QueueFullError();\n        }\n        const job = new Job(fn, options);\n        this.enqueue(job);\n        this.safeDispatchEvent('add');\n        this.tryToStartAnother();\n        return job.join(options)\n            .then(result => {\n            this.safeDispatchEvent('completed', { detail: result });\n            this.safeDispatchEvent('success', { detail: { job, result } });\n            return result;\n        })\n            .catch(err => {\n            if (job.status === 'queued') {\n                // job was aborted before it started - remove the job from the queue\n                for (let i = 0; i < this.queue.length; i++) {\n                    if (this.queue[i] === job) {\n                        this.queue.splice(i, 1);\n                        break;\n                    }\n                }\n            }\n            this.safeDispatchEvent('failure', { detail: { job, error: err } });\n            throw err;\n        });\n    }\n    /**\n     * Clear the queue\n     */\n    clear() {\n        this.queue.splice(0, this.queue.length);\n    }\n    /**\n     * Abort all jobs in the queue and clear it\n     */\n    abort() {\n        this.queue.forEach(job => {\n            job.abort(new AbortError());\n        });\n        this.clear();\n    }\n    /**\n     * Can be called multiple times. Useful if you for example add additional items at a later time.\n     *\n     * @returns A promise that settles when the queue becomes empty.\n     */\n    async onEmpty(options) {\n        // Instantly resolve if the queue is empty\n        if (this.size === 0) {\n            return;\n        }\n        await pEvent(this, 'empty', options);\n    }\n    /**\n     * @returns A promise that settles when the queue size is less than the given\n     * limit: `queue.size < limit`.\n     *\n     * If you want to avoid having the queue grow beyond a certain size you can\n     * `await queue.onSizeLessThan()` before adding a new item.\n     *\n     * Note that this only limits the number of items waiting to start. There\n     * could still be up to `concurrency` jobs already running that this call does\n     * not include in its calculation.\n     */\n    async onSizeLessThan(limit, options) {\n        // Instantly resolve if the queue is empty.\n        if (this.size < limit) {\n            return;\n        }\n        await pEvent(this, 'next', {\n            ...options,\n            filter: () => this.size < limit\n        });\n    }\n    /**\n     * The difference with `.onEmpty` is that `.onIdle` guarantees that all work\n     * from the queue has finished. `.onEmpty` merely signals that the queue is\n     * empty, but it could mean that some promises haven't completed yet.\n     *\n     * @returns A promise that settles when the queue becomes empty, and all\n     * promises have completed; `queue.size === 0 && queue.pending === 0`.\n     */\n    async onIdle(options) {\n        // Instantly resolve if none pending and if nothing else is queued\n        if (this.pending === 0 && this.size === 0) {\n            return;\n        }\n        await pEvent(this, 'idle', options);\n    }\n    /**\n     * Size of the queue including running items\n     */\n    get size() {\n        return this.queue.length;\n    }\n    /**\n     * The number of queued items waiting to run.\n     */\n    get queued() {\n        return this.queue.length - this.pending;\n    }\n    /**\n     * The number of items currently running.\n     */\n    get running() {\n        return this.pending;\n    }\n    /**\n     * Returns an async generator that makes it easy to iterate over the results\n     * of jobs added to the queue.\n     *\n     * The generator will end when the queue becomes idle, that is there are no\n     * jobs running and no jobs that have yet to run.\n     *\n     * If you need to keep the queue open indefinitely, consider using it-pushable\n     * instead.\n     */\n    async *toGenerator(options) {\n        options?.signal?.throwIfAborted();\n        const stream = pushable({\n            objectMode: true\n        });\n        const cleanup = (err) => {\n            if (err != null) {\n                this.abort();\n            }\n            else {\n                this.clear();\n            }\n            stream.end(err);\n        };\n        const onQueueJobComplete = (evt) => {\n            if (evt.detail != null) {\n                stream.push(evt.detail);\n            }\n        };\n        const onQueueFailure = (evt) => {\n            cleanup(evt.detail.error);\n        };\n        const onQueueIdle = () => {\n            cleanup();\n        };\n        // clear the queue and throw if the query is aborted\n        const onSignalAbort = () => {\n            cleanup(new AbortError('Queue aborted'));\n        };\n        // add listeners\n        this.addEventListener('completed', onQueueJobComplete);\n        this.addEventListener('failure', onQueueFailure);\n        this.addEventListener('idle', onQueueIdle);\n        options?.signal?.addEventListener('abort', onSignalAbort);\n        try {\n            yield* stream;\n        }\n        finally {\n            // remove listeners\n            this.removeEventListener('completed', onQueueJobComplete);\n            this.removeEventListener('failure', onQueueFailure);\n            this.removeEventListener('idle', onQueueIdle);\n            options?.signal?.removeEventListener('abort', onSignalAbort);\n            // empty the queue for when the user has broken out of a loop early\n            cleanup();\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","import { StreamResetError, TypedEventEmitter, StreamMessageEvent, StreamBufferError, StreamResetEvent, StreamAbortEvent, StreamCloseEvent, StreamStateError } from '@libp2p/interface';\nimport { pushable } from 'it-pushable';\nimport { raceSignal } from 'race-signal';\nimport { Uint8ArrayList } from 'uint8arraylist';\nimport { StreamClosedError } from \"./errors.js\";\nconst DEFAULT_MAX_READ_BUFFER_LENGTH = Math.pow(2, 20) * 4; // 4MB\nexport class AbstractMessageStream extends TypedEventEmitter {\n    status;\n    timeline;\n    inactivityTimeout;\n    maxReadBufferLength;\n    maxWriteBufferLength;\n    log;\n    direction;\n    maxMessageSize;\n    readStatus;\n    writeStatus;\n    remoteReadStatus;\n    remoteWriteStatus;\n    writableNeedsDrain;\n    /**\n     * Any data stored here is emitted before any new incoming data.\n     *\n     * This is used when the stream is paused or if data is pushed onto the stream\n     */\n    readBuffer;\n    writeBuffer;\n    sendingData;\n    onDrainPromise;\n    constructor(init) {\n        super();\n        this.status = 'open';\n        this.log = init.log;\n        this.direction = init.direction ?? 'outbound';\n        this.inactivityTimeout = init.inactivityTimeout ?? 120_000;\n        this.maxReadBufferLength = init.maxReadBufferLength ?? DEFAULT_MAX_READ_BUFFER_LENGTH;\n        this.maxWriteBufferLength = init.maxWriteBufferLength;\n        this.maxMessageSize = init.maxMessageSize;\n        this.readBuffer = new Uint8ArrayList();\n        this.writeBuffer = new Uint8ArrayList();\n        this.readStatus = 'readable';\n        this.remoteReadStatus = 'readable';\n        this.writeStatus = 'writable';\n        this.remoteWriteStatus = 'writable';\n        this.sendingData = false;\n        this.writableNeedsDrain = false;\n        // @ts-expect-error type could have required fields other than 'open'\n        this.timeline = {\n            open: Date.now()\n        };\n        this.processSendQueue = this.processSendQueue.bind(this);\n        const continueSendingOnDrain = () => {\n            if (this.writableNeedsDrain) {\n                this.log.trace('drain event received, continue sending data');\n                this.writableNeedsDrain = false;\n                this.processSendQueue();\n            }\n            this.onDrainPromise?.resolve();\n        };\n        this.addEventListener('drain', continueSendingOnDrain);\n        const rejectOnDrainOnClose = (evt) => {\n            this.onDrainPromise?.reject(evt.error ?? new StreamClosedError());\n        };\n        this.addEventListener('close', rejectOnDrainOnClose);\n    }\n    get readBufferLength() {\n        return this.readBuffer.byteLength;\n    }\n    get writeBufferLength() {\n        return this.writeBuffer.byteLength;\n    }\n    async onDrain(options) {\n        if (this.writableNeedsDrain !== true) {\n            return Promise.resolve();\n        }\n        if (this.onDrainPromise == null) {\n            this.onDrainPromise = Promise.withResolvers();\n        }\n        return raceSignal(this.onDrainPromise.promise, options?.signal);\n    }\n    async *[Symbol.asyncIterator]() {\n        if (this.readStatus !== 'readable' && this.readStatus !== 'paused') {\n            return;\n        }\n        const output = pushable();\n        const streamAsyncIterableOnMessageListener = (evt) => {\n            output.push(evt.data);\n        };\n        this.addEventListener('message', streamAsyncIterableOnMessageListener);\n        const streamAsyncIterableOnCloseListener = (evt) => {\n            output.end(evt.error);\n        };\n        this.addEventListener('close', streamAsyncIterableOnCloseListener);\n        const streamAsyncIterableOnRemoteCloseWriteListener = () => {\n            output.end();\n        };\n        this.addEventListener('remoteCloseWrite', streamAsyncIterableOnRemoteCloseWriteListener);\n        try {\n            yield* output;\n        }\n        finally {\n            this.removeEventListener('message', streamAsyncIterableOnMessageListener);\n            this.removeEventListener('close', streamAsyncIterableOnCloseListener);\n            this.removeEventListener('remoteCloseWrite', streamAsyncIterableOnRemoteCloseWriteListener);\n        }\n    }\n    isReadable() {\n        return this.status === 'open';\n    }\n    send(data) {\n        if (this.writeStatus === 'closed' || this.writeStatus === 'closing') {\n            throw new StreamStateError(`Cannot write to a stream that is ${this.writeStatus}`);\n        }\n        this.log.trace('append %d bytes to write buffer', data.byteLength);\n        this.writeBuffer.append(data);\n        return this.processSendQueue();\n    }\n    /**\n     * Close immediately for reading and writing and send a reset message (local\n     * error)\n     */\n    abort(err) {\n        if (this.status === 'aborted' || this.status === 'reset' || this.status === 'closed') {\n            return;\n        }\n        this.log.error('abort with error - %e', err);\n        this.status = 'aborted';\n        // throw away unread data\n        if (this.readBuffer.byteLength > 0) {\n            this.readBuffer.consume(this.readBuffer.byteLength);\n        }\n        // throw away unsent data\n        if (this.writeBuffer.byteLength > 0) {\n            this.writeBuffer.consume(this.writeBuffer.byteLength);\n            this.safeDispatchEvent('idle');\n        }\n        this.writeStatus = 'closed';\n        this.remoteWriteStatus = 'closed';\n        this.readStatus = 'closed';\n        this.remoteReadStatus = 'closed';\n        this.timeline.close = Date.now();\n        try {\n            this.sendReset(err);\n        }\n        catch (err) {\n            this.log('failed to send reset to remote - %e', err);\n        }\n        this.dispatchEvent(new StreamAbortEvent(err));\n    }\n    pause() {\n        if (this.readStatus === 'closed' || this.readStatus === 'closing') {\n            throw new StreamStateError('Cannot pause a stream that is closing/closed');\n        }\n        if (this.readStatus === 'paused') {\n            return;\n        }\n        this.readStatus = 'paused';\n        this.sendPause();\n    }\n    resume() {\n        if (this.readStatus === 'closed' || this.readStatus === 'closing') {\n            throw new StreamStateError('Cannot resume a stream that is closing/closed');\n        }\n        if (this.readStatus === 'readable') {\n            return;\n        }\n        this.readStatus = 'readable';\n        // emit any data that accumulated while we were paused\n        this.dispatchReadBuffer();\n        this.sendResume();\n    }\n    push(data) {\n        if (this.readStatus === 'closed' || this.readStatus === 'closing') {\n            throw new StreamStateError(`Cannot push data onto a stream that is ${this.readStatus}`);\n        }\n        if (data.byteLength === 0) {\n            return;\n        }\n        this.readBuffer.append(data);\n        if (this.readStatus === 'paused' || this.listenerCount('message') === 0) {\n            // abort if the read buffer is too large\n            this.checkReadBufferLength();\n            return;\n        }\n        // TODO: use a microtask instead?\n        setTimeout(() => {\n            this.dispatchReadBuffer();\n        }, 0);\n    }\n    unshift(data) {\n        if (this.readStatus === 'closed' || this.readStatus === 'closing') {\n            throw new StreamStateError(`Cannot push data onto a stream that is ${this.readStatus}`);\n        }\n        if (data.byteLength === 0) {\n            return;\n        }\n        this.readBuffer.prepend(data);\n        if (this.readStatus === 'paused' || this.listenerCount('message') === 0) {\n            // abort if the read buffer is too large\n            this.checkReadBufferLength();\n            return;\n        }\n        // TODO: use a microtask instead?\n        setTimeout(() => {\n            this.dispatchReadBuffer();\n        }, 0);\n    }\n    /**\n     * When an extending class reads data from it's implementation-specific source,\n     * call this method to allow the stream consumer to read the data.\n     */\n    onData(data) {\n        if (data.byteLength === 0) {\n            // this.log('ignoring empty data')\n            return;\n        }\n        // discard the data if our readable end is closed\n        if (this.readStatus === 'closing' || this.readStatus === 'closed') {\n            this.log('ignoring data - read status %s', this.readStatus);\n            return;\n        }\n        this.readBuffer.append(data);\n        this.dispatchReadBuffer();\n    }\n    addEventListener(...args) {\n        // @ts-expect-error cannot ensure args has enough members\n        super.addEventListener.apply(this, args);\n        // if a 'message' listener is being added and we have queued data, dispatch\n        // the data\n        if (args[0] === 'message' && this.readBuffer.byteLength > 0) {\n            // event listeners can be added in constructors and often use object\n            // properties - if this the case we can access a class member before it\n            // has been initialized so dispatch the message in the microtask queue\n            queueMicrotask(() => {\n                this.dispatchReadBuffer();\n            });\n        }\n    }\n    /**\n     * Receive a reset message - close immediately for reading and writing (remote\n     * error)\n     */\n    onRemoteReset() {\n        this.log('remote reset');\n        this.status = 'reset';\n        this.writeStatus = 'closed';\n        this.remoteWriteStatus = 'closed';\n        this.remoteReadStatus = 'closed';\n        this.timeline.close = Date.now();\n        if (this.readBuffer.byteLength === 0) {\n            this.readStatus = 'closed';\n        }\n        const err = new StreamResetError();\n        this.dispatchEvent(new StreamResetEvent(err));\n    }\n    /**\n     * The underlying resource or transport this stream uses has closed - it is\n     * not possible to send any more messages though any data still in the read\n     * buffer may still be read\n     */\n    onTransportClosed(err) {\n        this.log('transport closed');\n        if (this.readStatus === 'readable' && this.readBuffer.byteLength === 0) {\n            this.log('close readable end after transport closed and read buffer is empty');\n            this.readStatus = 'closed';\n        }\n        if (this.remoteReadStatus !== 'closed') {\n            this.remoteReadStatus = 'closed';\n        }\n        if (this.remoteWriteStatus !== 'closed') {\n            this.remoteWriteStatus = 'closed';\n        }\n        if (this.writeStatus !== 'closed') {\n            this.writeStatus = 'closed';\n        }\n        if (err != null) {\n            this.abort(err);\n        }\n        else {\n            if (this.status === 'open' || this.status === 'closing') {\n                this.timeline.close = Date.now();\n                this.status = 'closed';\n                this.writeStatus = 'closed';\n                this.remoteWriteStatus = 'closed';\n                this.remoteReadStatus = 'closed';\n                this.dispatchEvent(new StreamCloseEvent());\n            }\n        }\n    }\n    /**\n     * Called by extending classes when the remote closes its writable end\n     */\n    onRemoteCloseWrite() {\n        if (this.remoteWriteStatus === 'closed') {\n            return;\n        }\n        this.log.trace('on remote close write');\n        this.remoteWriteStatus = 'closed';\n        this.safeDispatchEvent('remoteCloseWrite');\n        if (this.writeStatus === 'closed') {\n            this.onTransportClosed();\n        }\n    }\n    /**\n     * Called by extending classes when the remote closes its readable end\n     */\n    onRemoteCloseRead() {\n        this.log.trace('on remote close read');\n        this.remoteReadStatus = 'closed';\n        // throw away any unsent bytes if the remote closes it's readable end\n        if (this.writeBuffer.byteLength > 0) {\n            this.writeBuffer.consume(this.writeBuffer.byteLength);\n            this.safeDispatchEvent('idle');\n        }\n    }\n    processSendQueue() {\n        // bail if the underlying transport is full\n        if (this.writableNeedsDrain) {\n            this.log.trace('not processing send queue as drain is required');\n            this.checkWriteBufferLength();\n            return false;\n        }\n        // bail if there is no data to send\n        if (this.writeBuffer.byteLength === 0) {\n            this.log.trace('not processing send queue as no bytes to send');\n            return true;\n        }\n        // bail if we are already sending data\n        if (this.sendingData) {\n            this.log.trace('not processing send queue as already sending data');\n            return true;\n        }\n        this.sendingData = true;\n        this.log.trace('processing send queue with %d queued bytes', this.writeBuffer.byteLength);\n        try {\n            let canSendMore = true;\n            const totalBytes = this.writeBuffer.byteLength;\n            let sentBytes = 0;\n            // send as much data as possible while we have data to send and the\n            // underlying muxer can still accept data\n            while (this.writeBuffer.byteLength > 0) {\n                const end = Math.min(this.maxMessageSize ?? this.writeBuffer.byteLength, this.writeBuffer.byteLength);\n                // this can happen if a subclass changes the max message size dynamically\n                if (end === 0) {\n                    canSendMore = false;\n                    break;\n                }\n                // chunk to send to the remote end\n                const toSend = this.writeBuffer.sublist(0, end);\n                // copy toSend in case the extending class modifies the list\n                const willSend = new Uint8ArrayList(toSend);\n                this.writeBuffer.consume(toSend.byteLength);\n                // sending data can cause buffers to fill up, events to be emitted and\n                // this method to be invoked again\n                const sendResult = this.sendData(toSend);\n                canSendMore = sendResult.canSendMore;\n                sentBytes += sendResult.sentBytes;\n                if (sendResult.sentBytes !== willSend.byteLength) {\n                    willSend.consume(sendResult.sentBytes);\n                    this.writeBuffer.prepend(willSend);\n                }\n                if (!canSendMore) {\n                    break;\n                }\n            }\n            if (!canSendMore) {\n                this.log.trace('sent %d/%d bytes, pausing sending because underlying stream is full, %d bytes left in the write buffer', sentBytes, totalBytes, this.writeBuffer.byteLength);\n                this.writableNeedsDrain = true;\n                this.checkWriteBufferLength();\n            }\n            // we processed all bytes in the queue, resolve the write queue idle promise\n            if (this.writeBuffer.byteLength === 0) {\n                this.safeDispatchEvent('idle');\n            }\n            return canSendMore;\n        }\n        finally {\n            this.sendingData = false;\n        }\n    }\n    dispatchReadBuffer() {\n        try {\n            if (this.listenerCount('message') === 0) {\n                this.log.trace('not dispatching pause buffer as there are no listeners for the message event');\n                return;\n            }\n            if (this.readBuffer.byteLength === 0) {\n                this.log.trace('not dispatching pause buffer as there is no data to dispatch');\n                return;\n            }\n            if (this.readStatus === 'paused') {\n                this.log.trace('not dispatching pause buffer we are paused');\n                return;\n            }\n            // discard the pause buffer if our readable end is closed\n            if (this.readStatus === 'closing' || this.readStatus === 'closed') {\n                this.log('dropping %d bytes because the readable end is %s', this.readBuffer.byteLength, this.readStatus);\n                this.readBuffer.consume(this.readBuffer.byteLength);\n                return;\n            }\n            const buf = this.readBuffer.sublist();\n            this.readBuffer.consume(buf.byteLength);\n            this.dispatchEvent(new StreamMessageEvent(buf));\n        }\n        finally {\n            if (this.readBuffer.byteLength === 0 && this.remoteWriteStatus === 'closed') {\n                this.log('close readable end after dispatching read buffer and remote writable end is closed');\n                this.readStatus = 'closed';\n            }\n            // abort if we failed to consume the read buffer and it is too large\n            this.checkReadBufferLength();\n        }\n    }\n    checkReadBufferLength() {\n        if (this.readBuffer.byteLength > this.maxReadBufferLength) {\n            this.abort(new StreamBufferError(`Read buffer length of ${this.readBuffer.byteLength} exceeded limit of ${this.maxReadBufferLength}, read status is ${this.readStatus}`));\n        }\n    }\n    checkWriteBufferLength() {\n        if (this.maxWriteBufferLength == null) {\n            return;\n        }\n        if (this.writeBuffer.byteLength > this.maxWriteBufferLength) {\n            this.abort(new StreamBufferError(`Write buffer length of ${this.writeBuffer.byteLength} exceeded limit of ${this.maxWriteBufferLength}, write status is ${this.writeStatus}`));\n        }\n    }\n    onMuxerNeedsDrain() {\n        this.writableNeedsDrain = true;\n    }\n    onMuxerDrain() {\n        this.safeDispatchEvent('drain');\n    }\n}\n//# sourceMappingURL=abstract-message-stream.js.map","import { pEvent } from 'p-event';\nimport { AbstractMessageStream } from \"./abstract-message-stream.js\";\nexport class AbstractMultiaddrConnection extends AbstractMessageStream {\n    remoteAddr;\n    metricPrefix;\n    metrics;\n    constructor(init) {\n        super(init);\n        this.metricPrefix = init.metricPrefix ?? '';\n        this.metrics = init.metrics;\n        this.remoteAddr = init.remoteAddr;\n        this.addEventListener('close', (evt) => {\n            this.metrics?.increment({ [`${this.metricPrefix}end`]: true });\n            if (evt.error != null) {\n                if (evt.local) {\n                    this.metrics?.increment({ [`${this.metricPrefix}abort`]: true });\n                }\n                else {\n                    this.metrics?.increment({ [`${this.metricPrefix}reset`]: true });\n                }\n            }\n            else {\n                if (evt.local) {\n                    this.metrics?.increment({ [`${this.metricPrefix}_local_close`]: true });\n                }\n                else {\n                    this.metrics?.increment({ [`${this.metricPrefix}_remote_close`]: true });\n                }\n            }\n        });\n    }\n    async close(options) {\n        if (this.status !== 'open') {\n            return;\n        }\n        this.status = 'closing';\n        this.writeStatus = 'closing';\n        this.remoteWriteStatus = 'closing';\n        this.remoteReadStatus = 'closing';\n        // if we are currently sending data, wait for all the data to be written\n        // into the underlying transport\n        if (this.sendingData || this.writeBuffer.byteLength > 0) {\n            this.log('waiting for write queue to become idle before closing writable end of stream, %d unsent bytes', this.writeBuffer.byteLength);\n            await pEvent(this, 'idle', {\n                ...options,\n                rejectionEvents: [\n                    'close'\n                ]\n            });\n        }\n        // now that the underlying transport has all the data, if the buffer is full\n        // wait for it to be emptied\n        if (this.writableNeedsDrain) {\n            this.log('waiting for write queue to drain before closing writable end of stream, %d unsent bytes', this.writeBuffer.byteLength);\n            await pEvent(this, 'drain', {\n                ...options,\n                rejectionEvents: [\n                    'close'\n                ]\n            });\n        }\n        await this.sendClose(options);\n        this.onTransportClosed();\n    }\n}\n//# sourceMappingURL=abstract-multiaddr-connection.js.map","export function isPromise(thing) {\n    if (thing == null) {\n        return false;\n    }\n    return typeof thing.then === 'function' &&\n        typeof thing.catch === 'function' &&\n        typeof thing.finally === 'function';\n}\n//# sourceMappingURL=is-promise.js.map","import { MuxerClosedError, TypedEventEmitter } from '@libp2p/interface';\nimport { raceSignal } from 'race-signal';\nimport { MaxEarlyStreamsError } from \"./errors.js\";\nimport { isPromise } from \"./is-promise.js\";\nexport class AbstractStreamMuxer extends TypedEventEmitter {\n    streams;\n    protocol;\n    status;\n    log;\n    maConn;\n    streamOptions;\n    earlyStreams;\n    maxEarlyStreams;\n    metrics;\n    constructor(maConn, init) {\n        super();\n        this.maConn = maConn;\n        this.protocol = init.protocol;\n        this.streams = [];\n        this.earlyStreams = [];\n        this.status = 'open';\n        this.log = maConn.log.newScope(init.name);\n        this.streamOptions = init.streamOptions;\n        this.maxEarlyStreams = init.maxEarlyStreams ?? 10;\n        this.metrics = init.metrics;\n        // read/write all data from/to underlying maConn\n        const muxerMaConnOnMessage = (evt) => {\n            try {\n                this.onData(evt.data);\n            }\n            catch (err) {\n                this.abort(err);\n                this.maConn.abort(err);\n            }\n        };\n        this.maConn.addEventListener('message', muxerMaConnOnMessage);\n        // signal stream writers when the underlying connection can accept more data\n        const muxerMaConnOnDrain = () => {\n            this.log('underlying stream drained, signal %d streams to continue writing', this.streams.length);\n            this.streams.forEach(stream => {\n                stream.onMuxerDrain();\n            });\n        };\n        this.maConn.addEventListener('drain', muxerMaConnOnDrain);\n        const muxerOnMaConnClose = () => {\n            this.log('underlying stream closed with status %s and %d streams', this.status, this.streams.length);\n            this.onTransportClosed();\n        };\n        this.maConn.addEventListener('close', muxerOnMaConnClose);\n    }\n    send(data) {\n        const result = this.maConn.send(data);\n        if (result === false) {\n            this.log('underlying stream saturated, signal %d streams to pause writing', this.streams.length);\n            this.streams.forEach(stream => {\n                stream.onMuxerNeedsDrain();\n            });\n        }\n        return result;\n    }\n    async close(options) {\n        if (this.status === 'closed' || this.status === 'closing') {\n            return;\n        }\n        this.status = 'closing';\n        await raceSignal(Promise.all([...this.streams].map(async (s) => {\n            await s.close(options);\n        })), options?.signal);\n        this.status = 'closed';\n    }\n    abort(err) {\n        if (this.status === 'closed') {\n            return;\n        }\n        this.status = 'closing';\n        [...this.streams].forEach(s => {\n            s.abort(err);\n        });\n        this.status = 'closed';\n    }\n    onTransportClosed(err) {\n        this.status = 'closing';\n        try {\n            [...this.streams].forEach(stream => {\n                stream.onTransportClosed(err);\n            });\n        }\n        catch (err) {\n            this.abort(err);\n        }\n        this.status = 'closed';\n    }\n    async createStream(options) {\n        if (this.status !== 'open') {\n            throw new MuxerClosedError();\n        }\n        let stream = this.onCreateStream({\n            ...this.streamOptions,\n            ...options\n        });\n        if (isPromise(stream)) {\n            stream = await stream;\n        }\n        this.streams.push(stream);\n        this.cleanUpStream(stream);\n        return stream;\n    }\n    /**\n     * Extending classes should invoke this method when a new stream was created\n     * by the remote muxer\n     */\n    onRemoteStream(stream) {\n        this.streams.push(stream);\n        this.cleanUpStream(stream);\n        if (this.listenerCount('stream') === 0) {\n            // no listener has been added for the stream event yet, store the stream\n            // to emit it later\n            this.earlyStreams.push(stream);\n            if (this.earlyStreams.length > this.maxEarlyStreams) {\n                this.abort(new MaxEarlyStreamsError(`Too many early streams were opened - ${this.earlyStreams.length}/${this.maxEarlyStreams}`));\n            }\n            return;\n        }\n        this.safeDispatchEvent('stream', {\n            detail: stream\n        });\n    }\n    cleanUpStream(stream) {\n        const muxerOnStreamEnd = (evt) => {\n            const index = this.streams.findIndex(s => s === stream);\n            if (index !== -1) {\n                this.streams.splice(index, 1);\n            }\n            if (evt.error != null) {\n                if (evt.local) {\n                    this.metrics?.increment({ [`${stream.direction}_stream_reset`]: true });\n                }\n                else {\n                    this.metrics?.increment({ [`${stream.direction}_stream_abort`]: true });\n                }\n            }\n            else {\n                this.metrics?.increment({ [`${stream.direction}_stream_end`]: true });\n            }\n        };\n        stream.addEventListener('close', muxerOnStreamEnd);\n        this.metrics?.increment({ [`${stream.direction}_stream`]: true });\n    }\n    addEventListener(...args) {\n        // @ts-expect-error cannot ensure args has enough members\n        super.addEventListener.apply(this, args);\n        // if a 'stream' listener is being added and we have early streams, emit\n        // them\n        if (args[0] === 'stream' && this.earlyStreams.length > 0) {\n            // event listeners can be added in constructors and often use object\n            // properties - if this the case we can access a class member before it\n            // has been initialized so dispatch the message in the microtask queue\n            queueMicrotask(() => {\n                this.earlyStreams.forEach(stream => {\n                    this.safeDispatchEvent('stream', {\n                        detail: stream\n                    });\n                });\n                this.earlyStreams = [];\n            });\n        }\n    }\n}\n//# sourceMappingURL=abstract-stream-muxer.js.map","import { pEvent } from 'p-event';\nimport { AbstractMessageStream } from './abstract-message-stream.js';\nexport class AbstractStream extends AbstractMessageStream {\n    id;\n    protocol;\n    constructor(init) {\n        super(init);\n        this.id = init.id;\n        this.protocol = init.protocol ?? '';\n    }\n    async close(options) {\n        if (this.writeStatus === 'closing' || this.writeStatus === 'closed') {\n            return;\n        }\n        this.writeStatus = 'closing';\n        // if we are currently sending data, wait for all the data to be written\n        // into the underlying transport\n        if (this.sendingData || this.writeBuffer.byteLength > 0) {\n            this.log('waiting for write queue to become idle before closing writable end of stream, %d unsent bytes', this.writeBuffer.byteLength);\n            await pEvent(this, 'idle', {\n                ...options,\n                rejectionEvents: [\n                    'close'\n                ]\n            });\n        }\n        // now that the underlying transport has all the data, if the buffer is full\n        // wait for it to be emptied\n        if (this.writableNeedsDrain) {\n            this.log('waiting for write queue to drain before closing writable end of stream, %d unsent bytes, sending %s', this.writeBuffer.byteLength, this.sendingData);\n            await pEvent(this, 'drain', {\n                ...options,\n                rejectionEvents: [\n                    'close'\n                ]\n            });\n            this.log('write queue drained, closing writable end of stream, %d unsent bytes, sending %s', this.writeBuffer.byteLength, this.sendingData);\n        }\n        await this.sendCloseWrite(options);\n        this.writeStatus = 'closed';\n        this.log('closed writable end gracefully');\n        if (this.remoteWriteStatus === 'closed') {\n            this.onTransportClosed();\n        }\n    }\n    async closeRead(options) {\n        if (this.readStatus === 'closing' || this.readStatus === 'closed') {\n            return;\n        }\n        // throw away any unread data\n        if (this.readBuffer.byteLength > 0) {\n            this.readBuffer.consume(this.readBuffer.byteLength);\n        }\n        this.readStatus = 'closing';\n        await this.sendCloseRead(options);\n        this.readStatus = 'closed';\n        this.log('closed readable end gracefully');\n    }\n}\n//# sourceMappingURL=abstract-stream.js.map","/**\n * Takes an array of AbortSignals and returns a single signal.\n * If any signals are aborted, the returned signal will be aborted.\n */\nexport function anySignal(signals) {\n    const controller = new globalThis.AbortController();\n    function onAbort() {\n        controller.abort();\n        for (const signal of signals) {\n            if (signal?.removeEventListener != null) {\n                signal.removeEventListener('abort', onAbort);\n            }\n        }\n    }\n    for (const signal of signals) {\n        if (signal?.aborted === true) {\n            onAbort();\n            break;\n        }\n        if (signal?.addEventListener != null) {\n            signal.addEventListener('abort', onAbort);\n        }\n    }\n    function clear() {\n        for (const signal of signals) {\n            if (signal?.removeEventListener != null) {\n                signal.removeEventListener('abort', onAbort);\n            }\n        }\n    }\n    const signal = controller.signal;\n    signal.clear = clear;\n    return signal;\n}\n//# sourceMappingURL=index.js.map","/**\n * Implements exponential moving average. Ported from `moving-average`.\n *\n * @see https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\n * @see https://www.npmjs.com/package/moving-average\n */\nexport class MovingAverage {\n    movingAverage;\n    variance;\n    deviation;\n    forecast;\n    timeSpan;\n    previousTime;\n    constructor(timeSpan) {\n        this.timeSpan = timeSpan;\n        this.movingAverage = 0;\n        this.variance = 0;\n        this.deviation = 0;\n        this.forecast = 0;\n    }\n    alpha(t, pt) {\n        return 1 - (Math.exp(-(t - pt) / this.timeSpan));\n    }\n    push(value, time = Date.now()) {\n        if (this.previousTime != null) {\n            // calculate moving average\n            const a = this.alpha(time, this.previousTime);\n            const diff = value - this.movingAverage;\n            const incr = a * diff;\n            this.movingAverage = a * value + (1 - a) * this.movingAverage;\n            // calculate variance & deviation\n            this.variance = (1 - a) * (this.variance + diff * incr);\n            this.deviation = Math.sqrt(this.variance);\n            // calculate forecast\n            this.forecast = this.movingAverage + a * diff;\n        }\n        else {\n            this.movingAverage = value;\n        }\n        this.previousTime = time;\n    }\n}\n//# sourceMappingURL=moving-average.js.map","import { anySignal } from 'any-signal';\nimport { setMaxListeners } from 'main-event';\nimport { MovingAverage } from './moving-average.js';\nexport const DEFAULT_TIMEOUT_MULTIPLIER = 1.2;\nexport const DEFAULT_FAILURE_MULTIPLIER = 2;\nexport const DEFAULT_MIN_TIMEOUT = 5_000;\nexport const DEFAULT_MAX_TIMEOUT = 60_000;\nexport const DEFAULT_INTERVAL = 5_000;\nexport class AdaptiveTimeout {\n    success;\n    failure;\n    next;\n    metric;\n    timeoutMultiplier;\n    failureMultiplier;\n    minTimeout;\n    maxTimeout;\n    constructor(init = {}) {\n        const interval = init.interval ?? DEFAULT_INTERVAL;\n        this.success = new MovingAverage(interval);\n        this.failure = new MovingAverage(interval);\n        this.next = new MovingAverage(interval);\n        this.failureMultiplier = init.failureMultiplier ?? DEFAULT_FAILURE_MULTIPLIER;\n        this.timeoutMultiplier = init.timeoutMultiplier ?? DEFAULT_TIMEOUT_MULTIPLIER;\n        this.minTimeout = init.minTimeout ?? DEFAULT_MIN_TIMEOUT;\n        this.maxTimeout = init.maxTimeout ?? DEFAULT_MAX_TIMEOUT;\n        if (init.metricName != null) {\n            this.metric = init.metrics?.registerMetricGroup(init.metricName);\n        }\n    }\n    getTimeoutSignal(options = {}) {\n        // calculate timeout for individual peers based on moving average of\n        // previous successful requests\n        let timeout = Math.round(this.next.movingAverage * (options.timeoutFactor ?? this.timeoutMultiplier));\n        if (timeout < this.minTimeout) {\n            timeout = this.minTimeout;\n        }\n        if (timeout > this.maxTimeout) {\n            timeout = this.maxTimeout;\n        }\n        const sendTimeout = AbortSignal.timeout(timeout);\n        const timeoutSignal = anySignal([options.signal, sendTimeout]);\n        setMaxListeners(Infinity, timeoutSignal, sendTimeout);\n        timeoutSignal.start = Date.now();\n        timeoutSignal.timeout = timeout;\n        return timeoutSignal;\n    }\n    cleanUp(signal) {\n        const time = Date.now() - signal.start;\n        if (signal.aborted) {\n            this.failure.push(time);\n            this.next.push(time * this.failureMultiplier);\n            this.metric?.update({\n                failureMovingAverage: this.failure.movingAverage,\n                failureDeviation: this.failure.deviation,\n                failureForecast: this.failure.forecast,\n                failureVariance: this.failure.variance,\n                failure: time\n            });\n        }\n        else {\n            this.success.push(time);\n            this.next.push(time);\n            this.metric?.update({\n                successMovingAverage: this.success.movingAverage,\n                successDeviation: this.success.deviation,\n                successForecast: this.success.forecast,\n                successVariance: this.success.variance,\n                success: time\n            });\n        }\n    }\n}\n//# sourceMappingURL=adaptive-timeout.js.map","/**\n * Thrown when an invalid multiaddr is encountered\n */\nexport class InvalidMultiaddrError extends Error {\n    static name = 'InvalidMultiaddrError';\n    name = 'InvalidMultiaddrError';\n}\nexport class ValidationError extends Error {\n    static name = 'ValidationError';\n    name = 'ValidationError';\n}\nexport class InvalidParametersError extends Error {\n    static name = 'InvalidParametersError';\n    name = 'InvalidParametersError';\n}\nexport class UnknownProtocolError extends Error {\n    static name = 'UnknownProtocolError';\n    name = 'UnknownProtocolError';\n}\n//# sourceMappingURL=errors.js.map","// the values here come from https://github.com/multiformats/multiaddr/blob/master/protocols.csv\nexport const CODE_IP4 = 4;\nexport const CODE_TCP = 6;\nexport const CODE_UDP = 273;\nexport const CODE_DCCP = 33;\nexport const CODE_IP6 = 41;\nexport const CODE_IP6ZONE = 42;\nexport const CODE_IPCIDR = 43;\nexport const CODE_DNS = 53;\nexport const CODE_DNS4 = 54;\nexport const CODE_DNS6 = 55;\nexport const CODE_DNSADDR = 56;\nexport const CODE_SCTP = 132;\nexport const CODE_UDT = 301;\nexport const CODE_UTP = 302;\nexport const CODE_UNIX = 400;\nexport const CODE_P2P = 421; // also IPFS\nexport const CODE_ONION = 444;\nexport const CODE_ONION3 = 445;\nexport const CODE_GARLIC64 = 446;\nexport const CODE_GARLIC32 = 447;\nexport const CODE_TLS = 448;\nexport const CODE_SNI = 449;\nexport const CODE_NOISE = 454;\nexport const CODE_QUIC = 460;\nexport const CODE_QUIC_V1 = 461;\nexport const CODE_WEBTRANSPORT = 465;\nexport const CODE_CERTHASH = 466;\nexport const CODE_HTTP = 480;\nexport const CODE_HTTP_PATH = 481;\nexport const CODE_HTTPS = 443;\nexport const CODE_WS = 477;\nexport const CODE_WSS = 478;\nexport const CODE_P2P_WEBSOCKET_STAR = 479;\nexport const CODE_P2P_STARDUST = 277;\nexport const CODE_P2P_WEBRTC_STAR = 275;\nexport const CODE_P2P_WEBRTC_DIRECT = 276;\nexport const CODE_WEBRTC_DIRECT = 280;\nexport const CODE_WEBRTC = 281;\nexport const CODE_P2P_CIRCUIT = 290;\nexport const CODE_MEMORY = 777;\n//# sourceMappingURL=constants.js.map","import { isIPv4 } from '@chainsafe/is-ip';\nimport { base32 } from 'multiformats/bases/base32';\nimport { bases } from 'multiformats/basics';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { InvalidMultiaddrError } from \"./errors.js\";\nexport function bytesToString(base) {\n    return (buf) => {\n        return uint8ArrayToString(buf, base);\n    };\n}\nexport function stringToBytes(base) {\n    return (buf) => {\n        return uint8ArrayFromString(buf, base);\n    };\n}\nexport function bytes2port(buf) {\n    const view = new DataView(buf.buffer);\n    return view.getUint16(buf.byteOffset).toString();\n}\nexport function port2bytes(port) {\n    const buf = new ArrayBuffer(2);\n    const view = new DataView(buf);\n    view.setUint16(0, typeof port === 'string' ? parseInt(port) : port);\n    return new Uint8Array(buf);\n}\nexport function onion2bytes(str) {\n    const addr = str.split(':');\n    if (addr.length !== 2) {\n        throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`);\n    }\n    if (addr[0].length !== 16) {\n        throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion address.`);\n    }\n    // onion addresses do not include the multibase prefix, add it before decoding\n    const buf = uint8ArrayFromString(addr[0], 'base32');\n    // onion port number\n    const port = parseInt(addr[1], 10);\n    if (port < 1 || port > 65536) {\n        throw new Error('Port number is not in range(1, 65536)');\n    }\n    const portBuf = port2bytes(port);\n    return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length);\n}\nexport function onion32bytes(str) {\n    const addr = str.split(':');\n    if (addr.length !== 2) {\n        throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`);\n    }\n    if (addr[0].length !== 56) {\n        throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion3 address.`);\n    }\n    // onion addresses do not include the multibase prefix, add it before decoding\n    const buf = base32.decode(`b${addr[0]}`);\n    // onion port number\n    const port = parseInt(addr[1], 10);\n    if (port < 1 || port > 65536) {\n        throw new Error('Port number is not in range(1, 65536)');\n    }\n    const portBuf = port2bytes(port);\n    return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length);\n}\nexport function bytes2onion(buf) {\n    const addrBytes = buf.subarray(0, buf.length - 2);\n    const portBytes = buf.subarray(buf.length - 2);\n    const addr = uint8ArrayToString(addrBytes, 'base32');\n    const port = bytes2port(portBytes);\n    return `${addr}:${port}`;\n}\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L7\n// but with buf/offset args removed because we don't use them\nexport const ip4ToBytes = function (ip) {\n    ip = ip.toString().trim();\n    const bytes = new Uint8Array(4);\n    ip.split(/\\./g).forEach((byte, index) => {\n        const value = parseInt(byte, 10);\n        if (isNaN(value) || value < 0 || value > 0xff) {\n            throw new InvalidMultiaddrError('Invalid byte value in IP address');\n        }\n        bytes[index] = value;\n    });\n    return bytes;\n};\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L7\n// but with buf/offset args removed because we don't use them\nexport const ip6ToBytes = function (ip) {\n    let offset = 0;\n    ip = ip.toString().trim();\n    const sections = ip.split(':', 8);\n    let i;\n    for (i = 0; i < sections.length; i++) {\n        const isv4 = isIPv4(sections[i]);\n        let v4Buffer;\n        if (isv4) {\n            v4Buffer = ip4ToBytes(sections[i]);\n            sections[i] = uint8ArrayToString(v4Buffer.subarray(0, 2), 'base16');\n        }\n        if (v4Buffer != null && ++i < 8) {\n            sections.splice(i, 0, uint8ArrayToString(v4Buffer.subarray(2, 4), 'base16'));\n        }\n    }\n    if (sections[0] === '') {\n        while (sections.length < 8) {\n            sections.unshift('0');\n        }\n    }\n    else if (sections[sections.length - 1] === '') {\n        while (sections.length < 8) {\n            sections.push('0');\n        }\n    }\n    else if (sections.length < 8) {\n        for (i = 0; i < sections.length && sections[i] !== ''; i++) { }\n        const argv = [i, 1];\n        for (i = 9 - sections.length; i > 0; i--) {\n            argv.push('0');\n        }\n        sections.splice.apply(sections, argv);\n    }\n    const bytes = new Uint8Array(offset + 16);\n    for (i = 0; i < sections.length; i++) {\n        if (sections[i] === '') {\n            sections[i] = '0';\n        }\n        const word = parseInt(sections[i], 16);\n        if (isNaN(word) || word < 0 || word > 0xffff) {\n            throw new InvalidMultiaddrError('Invalid byte value in IP address');\n        }\n        bytes[offset++] = (word >> 8) & 0xff;\n        bytes[offset++] = word & 0xff;\n    }\n    return bytes;\n};\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L63\nexport const ip4ToString = function (buf) {\n    if (buf.byteLength !== 4) {\n        throw new InvalidMultiaddrError('IPv4 address was incorrect length');\n    }\n    const result = [];\n    for (let i = 0; i < buf.byteLength; i++) {\n        result.push(buf[i]);\n    }\n    return result.join('.');\n};\nexport const ip6ToString = function (buf) {\n    if (buf.byteLength !== 16) {\n        throw new InvalidMultiaddrError('IPv6 address was incorrect length');\n    }\n    const result = [];\n    for (let i = 0; i < buf.byteLength; i += 2) {\n        const byte1 = buf[i];\n        const byte2 = buf[i + 1];\n        const tuple = `${byte1.toString(16).padStart(2, '0')}${byte2.toString(16).padStart(2, '0')}`;\n        result.push(tuple);\n    }\n    const ip = result.join(':');\n    try {\n        const url = new URL(`http://[${ip}]`);\n        return url.hostname.substring(1, url.hostname.length - 1);\n    }\n    catch {\n        throw new InvalidMultiaddrError(`Invalid IPv6 address \"${ip}\"`);\n    }\n};\nexport function ip6StringToValue(str) {\n    try {\n        const url = new URL(`http://[${str}]`);\n        return url.hostname.substring(1, url.hostname.length - 1);\n    }\n    catch {\n        throw new InvalidMultiaddrError(`Invalid IPv6 address \"${str}\"`);\n    }\n}\nconst decoders = Object.values(bases).map((c) => c.decoder);\nconst anybaseDecoder = (function () {\n    let acc = decoders[0].or(decoders[1]);\n    decoders.slice(2).forEach((d) => (acc = acc.or(d)));\n    return acc;\n})();\nexport function mb2bytes(mbstr) {\n    return anybaseDecoder.decode(mbstr);\n}\nexport function bytes2mb(base) {\n    return (buf) => {\n        return base.encoder.encode(buf);\n    };\n}\n//# sourceMappingURL=utils.js.map","import { ValidationError } from \"./errors.js\";\nexport function integer(value) {\n    const int = parseInt(value);\n    if (int.toString() !== value) {\n        throw new ValidationError('Value must be an integer');\n    }\n}\nexport function positive(value) {\n    if (value < 0) {\n        throw new ValidationError('Value must be a positive integer, or zero');\n    }\n}\nexport function maxValue(max) {\n    return (value) => {\n        if (value > max) {\n            throw new ValidationError(`Value must be smaller than or equal to ${max}`);\n        }\n    };\n}\nexport function validate(...funcs) {\n    return (value) => {\n        for (const fn of funcs) {\n            fn(value);\n        }\n    };\n}\nexport const validatePort = validate(integer, positive, maxValue(65_535));\n//# sourceMappingURL=validation.js.map","import { isIPv4, isIPv6 } from '@chainsafe/is-ip';\nimport { CID } from 'multiformats';\nimport { base64url } from 'multiformats/bases/base64';\nimport { CODE_CERTHASH, CODE_DCCP, CODE_DNS, CODE_DNS4, CODE_DNS6, CODE_DNSADDR, CODE_GARLIC32, CODE_GARLIC64, CODE_HTTP, CODE_HTTP_PATH, CODE_HTTPS, CODE_IP4, CODE_IP6, CODE_IP6ZONE, CODE_IPCIDR, CODE_MEMORY, CODE_NOISE, CODE_ONION, CODE_ONION3, CODE_P2P, CODE_P2P_CIRCUIT, CODE_P2P_STARDUST, CODE_P2P_WEBRTC_DIRECT, CODE_P2P_WEBRTC_STAR, CODE_P2P_WEBSOCKET_STAR, CODE_QUIC, CODE_QUIC_V1, CODE_SCTP, CODE_SNI, CODE_TCP, CODE_TLS, CODE_UDP, CODE_UDT, CODE_UNIX, CODE_UTP, CODE_WEBRTC, CODE_WEBRTC_DIRECT, CODE_WEBTRANSPORT, CODE_WS, CODE_WSS } from \"./constants.js\";\nimport { UnknownProtocolError, ValidationError } from \"./errors.js\";\nimport { bytes2mb, bytes2onion, bytes2port, bytesToString, ip4ToBytes, ip4ToString, ip6StringToValue, ip6ToBytes, ip6ToString, mb2bytes, onion2bytes, onion32bytes, port2bytes, stringToBytes } from \"./utils.js\";\nimport { validatePort } from \"./validation.js\";\nexport const V = -1;\nclass Registry {\n    protocolsByCode = new Map();\n    protocolsByName = new Map();\n    getProtocol(key) {\n        let codec;\n        if (typeof key === 'string') {\n            codec = this.protocolsByName.get(key);\n        }\n        else {\n            codec = this.protocolsByCode.get(key);\n        }\n        if (codec == null) {\n            throw new UnknownProtocolError(`Protocol ${key} was unknown`);\n        }\n        return codec;\n    }\n    addProtocol(codec) {\n        this.protocolsByCode.set(codec.code, codec);\n        this.protocolsByName.set(codec.name, codec);\n        codec.aliases?.forEach(alias => {\n            this.protocolsByName.set(alias, codec);\n        });\n    }\n    removeProtocol(code) {\n        const codec = this.protocolsByCode.get(code);\n        if (codec == null) {\n            return;\n        }\n        this.protocolsByCode.delete(codec.code);\n        this.protocolsByName.delete(codec.name);\n        codec.aliases?.forEach(alias => {\n            this.protocolsByName.delete(alias);\n        });\n    }\n}\nexport const registry = new Registry();\nconst codecs = [{\n        code: CODE_IP4,\n        name: 'ip4',\n        size: 32,\n        valueToBytes: ip4ToBytes,\n        bytesToValue: ip4ToString,\n        validate: (value) => {\n            if (!isIPv4(value)) {\n                throw new ValidationError(`Invalid IPv4 address \"${value}\"`);\n            }\n        }\n    }, {\n        code: CODE_TCP,\n        name: 'tcp',\n        size: 16,\n        valueToBytes: port2bytes,\n        bytesToValue: bytes2port,\n        validate: validatePort\n    }, {\n        code: CODE_UDP,\n        name: 'udp',\n        size: 16,\n        valueToBytes: port2bytes,\n        bytesToValue: bytes2port,\n        validate: validatePort\n    }, {\n        code: CODE_DCCP,\n        name: 'dccp',\n        size: 16,\n        valueToBytes: port2bytes,\n        bytesToValue: bytes2port,\n        validate: validatePort\n    }, {\n        code: CODE_IP6,\n        name: 'ip6',\n        size: 128,\n        valueToBytes: ip6ToBytes,\n        bytesToValue: ip6ToString,\n        stringToValue: ip6StringToValue,\n        validate: (value) => {\n            if (!isIPv6(value)) {\n                throw new ValidationError(`Invalid IPv6 address \"${value}\"`);\n            }\n        }\n    }, {\n        code: CODE_IP6ZONE,\n        name: 'ip6zone',\n        size: V\n    }, {\n        code: CODE_IPCIDR,\n        name: 'ipcidr',\n        size: 8,\n        bytesToValue: bytesToString('base10'),\n        valueToBytes: stringToBytes('base10')\n    }, {\n        code: CODE_DNS,\n        name: 'dns',\n        size: V\n    }, {\n        code: CODE_DNS4,\n        name: 'dns4',\n        size: V\n    }, {\n        code: CODE_DNS6,\n        name: 'dns6',\n        size: V\n    }, {\n        code: CODE_DNSADDR,\n        name: 'dnsaddr',\n        size: V\n    }, {\n        code: CODE_SCTP,\n        name: 'sctp',\n        size: 16,\n        valueToBytes: port2bytes,\n        bytesToValue: bytes2port,\n        validate: validatePort\n    }, {\n        code: CODE_UDT,\n        name: 'udt'\n    }, {\n        code: CODE_UTP,\n        name: 'utp'\n    }, {\n        code: CODE_UNIX,\n        name: 'unix',\n        size: V,\n        stringToValue: (str) => decodeURIComponent(str),\n        valueToString: (val) => encodeURIComponent(val)\n    }, {\n        code: CODE_P2P,\n        name: 'p2p',\n        aliases: ['ipfs'],\n        size: V,\n        bytesToValue: bytesToString('base58btc'),\n        valueToBytes: (val) => {\n            if (val.startsWith('Q') || val.startsWith('1')) {\n                return stringToBytes('base58btc')(val);\n            }\n            return CID.parse(val).multihash.bytes;\n        }\n    }, {\n        code: CODE_ONION,\n        name: 'onion',\n        size: 96,\n        bytesToValue: bytes2onion,\n        valueToBytes: onion2bytes\n    }, {\n        code: CODE_ONION3,\n        name: 'onion3',\n        size: 296,\n        bytesToValue: bytes2onion,\n        valueToBytes: onion32bytes\n    }, {\n        code: CODE_GARLIC64,\n        name: 'garlic64',\n        size: V\n    }, {\n        code: CODE_GARLIC32,\n        name: 'garlic32',\n        size: V\n    }, {\n        code: CODE_TLS,\n        name: 'tls'\n    }, {\n        code: CODE_SNI,\n        name: 'sni',\n        size: V\n    }, {\n        code: CODE_NOISE,\n        name: 'noise'\n    }, {\n        code: CODE_QUIC,\n        name: 'quic'\n    }, {\n        code: CODE_QUIC_V1,\n        name: 'quic-v1'\n    }, {\n        code: CODE_WEBTRANSPORT,\n        name: 'webtransport'\n    }, {\n        code: CODE_CERTHASH,\n        name: 'certhash',\n        size: V,\n        bytesToValue: bytes2mb(base64url),\n        valueToBytes: mb2bytes\n    }, {\n        code: CODE_HTTP,\n        name: 'http'\n    }, {\n        code: CODE_HTTP_PATH,\n        name: 'http-path',\n        size: V,\n        stringToValue: (str) => `/${decodeURIComponent(str)}`,\n        valueToString: (val) => encodeURIComponent(val.substring(1))\n    }, {\n        code: CODE_HTTPS,\n        name: 'https'\n    }, {\n        code: CODE_WS,\n        name: 'ws'\n    }, {\n        code: CODE_WSS,\n        name: 'wss'\n    }, {\n        code: CODE_P2P_WEBSOCKET_STAR,\n        name: 'p2p-websocket-star'\n    }, {\n        code: CODE_P2P_STARDUST,\n        name: 'p2p-stardust'\n    }, {\n        code: CODE_P2P_WEBRTC_STAR,\n        name: 'p2p-webrtc-star'\n    }, {\n        code: CODE_P2P_WEBRTC_DIRECT,\n        name: 'p2p-webrtc-direct'\n    }, {\n        code: CODE_WEBRTC_DIRECT,\n        name: 'webrtc-direct'\n    }, {\n        code: CODE_WEBRTC,\n        name: 'webrtc'\n    }, {\n        code: CODE_P2P_CIRCUIT,\n        name: 'p2p-circuit'\n    }, {\n        code: CODE_MEMORY,\n        name: 'memory',\n        size: V\n    }];\ncodecs.forEach(codec => {\n    registry.addProtocol(codec);\n});\n//# sourceMappingURL=registry.js.map","import * as varint from 'uint8-varint';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { InvalidMultiaddrError } from \"./errors.js\";\nimport { registry, V } from \"./registry.js\";\nexport function bytesToComponents(bytes) {\n    const components = [];\n    let i = 0;\n    while (i < bytes.length) {\n        const code = varint.decode(bytes, i);\n        const codec = registry.getProtocol(code);\n        const codeLength = varint.encodingLength(code);\n        const size = sizeForAddr(codec, bytes, i + codeLength);\n        let sizeLength = 0;\n        if (size > 0 && codec.size === V) {\n            sizeLength = varint.encodingLength(size);\n        }\n        const componentLength = codeLength + sizeLength + size;\n        const component = {\n            code,\n            name: codec.name,\n            bytes: bytes.subarray(i, i + componentLength)\n        };\n        if (size > 0) {\n            const valueOffset = i + codeLength + sizeLength;\n            const valueBytes = bytes.subarray(valueOffset, valueOffset + size);\n            component.value = codec.bytesToValue?.(valueBytes) ?? uint8ArrayToString(valueBytes);\n        }\n        components.push(component);\n        i += componentLength;\n    }\n    return components;\n}\nexport function componentsToBytes(components) {\n    let length = 0;\n    const bytes = [];\n    for (const component of components) {\n        if (component.bytes == null) {\n            const codec = registry.getProtocol(component.code);\n            const codecLength = varint.encodingLength(component.code);\n            let valueBytes;\n            let valueLength = 0;\n            let valueLengthLength = 0;\n            if (component.value != null) {\n                valueBytes = codec.valueToBytes?.(component.value) ?? uint8ArrayFromString(component.value);\n                valueLength = valueBytes.byteLength;\n                if (codec.size === V) {\n                    valueLengthLength = varint.encodingLength(valueLength);\n                }\n            }\n            const bytes = new Uint8Array(codecLength + valueLengthLength + valueLength);\n            // encode the protocol code\n            let offset = 0;\n            varint.encodeUint8Array(component.code, bytes, offset);\n            offset += codecLength;\n            // if there is a value\n            if (valueBytes != null) {\n                // if the value has variable length, encode the length\n                if (codec.size === V) {\n                    varint.encodeUint8Array(valueLength, bytes, offset);\n                    offset += valueLengthLength;\n                }\n                // finally encode the value\n                bytes.set(valueBytes, offset);\n            }\n            component.bytes = bytes;\n        }\n        bytes.push(component.bytes);\n        length += component.bytes.byteLength;\n    }\n    return uint8ArrayConcat(bytes, length);\n}\nexport function stringToComponents(string) {\n    if (string.charAt(0) !== '/') {\n        throw new InvalidMultiaddrError('String multiaddr must start with \"/\"');\n    }\n    const components = [];\n    let collecting = 'protocol';\n    let value = '';\n    let protocol = '';\n    for (let i = 1; i < string.length; i++) {\n        const char = string.charAt(i);\n        if (char !== '/') {\n            if (collecting === 'protocol') {\n                protocol += string.charAt(i);\n            }\n            else {\n                value += string.charAt(i);\n            }\n        }\n        const ended = i === string.length - 1;\n        if (char === '/' || ended) {\n            const codec = registry.getProtocol(protocol);\n            if (collecting === 'protocol') {\n                if (codec.size == null || codec.size === 0) {\n                    // a protocol without an address, eg. `/tls`\n                    components.push({\n                        code: codec.code,\n                        name: codec.name\n                    });\n                    value = '';\n                    protocol = '';\n                    collecting = 'protocol';\n                    continue;\n                }\n                else if (ended) {\n                    throw new InvalidMultiaddrError(`Component ${protocol} was missing value`);\n                }\n                // continue collecting value\n                collecting = 'value';\n            }\n            else if (collecting === 'value') {\n                const component = {\n                    code: codec.code,\n                    name: codec.name\n                };\n                if (codec.size != null && codec.size !== 0) {\n                    if (value === '') {\n                        throw new InvalidMultiaddrError(`Component ${protocol} was missing value`);\n                    }\n                    component.value = codec.stringToValue?.(value) ?? value;\n                }\n                components.push(component);\n                value = '';\n                protocol = '';\n                collecting = 'protocol';\n            }\n        }\n    }\n    if (protocol !== '' && value !== '') {\n        throw new InvalidMultiaddrError('Incomplete multiaddr');\n    }\n    return components;\n}\nexport function componentsToString(components) {\n    return `/${components.flatMap(component => {\n        if (component.value == null) {\n            return component.name;\n        }\n        const codec = registry.getProtocol(component.code);\n        if (codec == null) {\n            throw new InvalidMultiaddrError(`Unknown protocol code ${component.code}`);\n        }\n        return [\n            component.name,\n            codec.valueToString?.(component.value) ?? component.value\n        ];\n    }).join('/')}`;\n}\n/**\n * For the passed address, return the serialized size\n */\nfunction sizeForAddr(codec, bytes, offset) {\n    if (codec.size == null || codec.size === 0) {\n        return 0;\n    }\n    if (codec.size > 0) {\n        return codec.size / 8;\n    }\n    return varint.decode(bytes, offset);\n}\n//# sourceMappingURL=components.js.map","import { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport { bytesToComponents, componentsToBytes, componentsToString, stringToComponents } from './components.js';\nimport { InvalidMultiaddrError, InvalidParametersError } from \"./errors.js\";\nimport { registry } from \"./registry.js\";\nimport { isMultiaddr } from './index.js';\nconst inspect = Symbol.for('nodejs.util.inspect.custom');\nexport const symbol = Symbol.for('@multiformats/multiaddr');\nfunction toComponents(addr) {\n    if (addr == null) {\n        addr = '/';\n    }\n    if (isMultiaddr(addr)) {\n        return addr.getComponents();\n    }\n    if (addr instanceof Uint8Array) {\n        return bytesToComponents(addr);\n    }\n    if (typeof addr === 'string') {\n        addr = addr\n            .replace(/\\/(\\/)+/, '/')\n            .replace(/(\\/)+$/, '');\n        if (addr === '') {\n            addr = '/';\n        }\n        return stringToComponents(addr);\n    }\n    if (Array.isArray(addr)) {\n        return addr;\n    }\n    throw new InvalidMultiaddrError('Must be a string, Uint8Array, Component[], or another Multiaddr');\n}\n/**\n * Creates a {@link Multiaddr} from a {@link MultiaddrInput}\n */\nexport class Multiaddr {\n    [symbol] = true;\n    #components;\n    // cache string representation\n    #string;\n    // cache byte representation\n    #bytes;\n    constructor(addr = '/', options = {}) {\n        this.#components = toComponents(addr);\n        if (options.validate !== false) {\n            validate(this);\n        }\n    }\n    get bytes() {\n        if (this.#bytes == null) {\n            this.#bytes = componentsToBytes(this.#components);\n        }\n        return this.#bytes;\n    }\n    toString() {\n        if (this.#string == null) {\n            this.#string = componentsToString(this.#components);\n        }\n        return this.#string;\n    }\n    toJSON() {\n        return this.toString();\n    }\n    getComponents() {\n        return [\n            ...this.#components.map(c => ({ ...c }))\n        ];\n    }\n    encapsulate(addr) {\n        const ma = new Multiaddr(addr);\n        return new Multiaddr([\n            ...this.#components,\n            ...ma.getComponents()\n        ], {\n            validate: false\n        });\n    }\n    decapsulate(addr) {\n        const addrString = addr.toString();\n        const s = this.toString();\n        const i = s.lastIndexOf(addrString);\n        if (i < 0) {\n            throw new InvalidParametersError(`Address ${this.toString()} does not contain subaddress: ${addrString}`);\n        }\n        return new Multiaddr(s.slice(0, i), {\n            validate: false\n        });\n    }\n    decapsulateCode(code) {\n        let index;\n        for (let i = this.#components.length - 1; i > -1; i--) {\n            if (this.#components[i].code === code) {\n                index = i;\n                break;\n            }\n        }\n        return new Multiaddr(this.#components.slice(0, index), {\n            validate: false\n        });\n    }\n    equals(addr) {\n        return uint8ArrayEquals(this.bytes, addr.bytes);\n    }\n    /**\n     * Returns Multiaddr as a human-readable string\n     * https://nodejs.org/api/util.html#utilinspectcustom\n     *\n     * @example\n     * ```js\n     * import { multiaddr } from '@multiformats/multiaddr'\n     *\n     * console.info(multiaddr('/ip4/127.0.0.1/tcp/4001'))\n     * // 'Multiaddr(/ip4/127.0.0.1/tcp/4001)'\n     * ```\n     */\n    [inspect]() {\n        return `Multiaddr(${this.toString()})`;\n    }\n}\n/**\n * Ensures all multiaddr tuples are correct. Throws if any invalid protocols or\n * values are encountered.\n */\nexport function validate(addr) {\n    addr.getComponents()\n        .forEach(component => {\n        const codec = registry.getProtocol(component.code);\n        if (component.value == null) {\n            return;\n        }\n        codec.validate?.(component.value);\n    });\n}\n//# sourceMappingURL=multiaddr.js.map","/**\n * @packageDocumentation\n *\n * A standard way to represent addresses that\n *\n * - support any standard network protocol\n * - have a binary packed format\n * - have a nice string representation\n * - encapsulate well\n *\n * @example\n *\n * ```TypeScript\n * import { multiaddr } from '@multiformats/multiaddr'\n *\n * const addr = multiaddr('/ip4/127.0.0.1/udp/1234')\n * // Multiaddr(/ip4/127.0.0.1/udp/1234)\n *\n * addr.bytes\n * // <Uint8Array 04 7f 00 00 01 11 04 d2>\n *\n * addr.toString()\n * // '/ip4/127.0.0.1/udp/1234'\n *\n * addr.getComponents()\n * // [\n * //   { code: 4, name: 'ip4', value: '127.0.0.1' },\n * //   { code: 273, name: 'udp', value: '1234' }\n * // ]\n *\n * addr.encapsulate('/sctp/5678')\n * // Multiaddr(/ip4/127.0.0.1/udp/1234/sctp/5678)\n * ```\n *\n * @example Adding custom protocols\n *\n * To add application-specific or experimental protocols, add a protocol codec\n * to the protocol registry:\n *\n * ```ts\n * import { registry, V, multiaddr } from '@multiformats/multiaddr'\n * import type { ProtocolCodec } from '@multiformats/multiaddr'\n *\n * const maWithCustomTuple = '/custom-protocol/hello'\n *\n * // throws UnknownProtocolError\n * multiaddr(maWithCustomTuple)\n *\n * const protocol: ProtocolCodec = {\n *   code: 2059,\n *   name: 'custom-protocol',\n *   size: V\n *   // V means variable length, can also be 0, a positive integer (e.g. a fixed\n *   // length or omitted\n * }\n *\n * registry.addProtocol(protocol)\n *\n * // does not throw UnknownProtocolError\n * multiaddr(maWithCustomTuple)\n *\n * // protocols can also be removed\n * registry.removeProtocol(protocol.code)\n * ```\n */\nimport { Multiaddr as MultiaddrClass, symbol } from './multiaddr.js';\nimport { registry, V } from \"./registry.js\";\n/**\n * Check if object is a {@link Multiaddr} instance\n *\n * @example\n *\n * ```js\n * import { isMultiaddr, multiaddr } from '@multiformats/multiaddr'\n *\n * isMultiaddr(5)\n * // false\n * isMultiaddr(multiaddr('/ip4/127.0.0.1'))\n * // true\n * ```\n */\nexport function isMultiaddr(value) {\n    return Boolean(value?.[symbol]);\n}\n/**\n * A function that takes a {@link MultiaddrInput} and returns a {@link Multiaddr}\n *\n * @example\n * ```js\n * import { multiaddr } from '@libp2p/multiaddr'\n *\n * multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n * ```\n *\n * @param {MultiaddrInput} [addr] - If String or Uint8Array, needs to adhere to the address format of a [multiaddr](https://github.com/multiformats/multiaddr#string-format)\n */\nexport function multiaddr(addr) {\n    return new MultiaddrClass(addr);\n}\n/**\n * Export all table.csv codes. These are all named exports so can be tree-shaken\n * out by bundlers.\n */\nexport * from \"./constants.js\";\nexport { registry, V };\n//# sourceMappingURL=index.js.map","/**\n * An abort error class that extends error\n */\nexport class AbortError extends Error {\n    type;\n    code;\n    constructor(message, code, name) {\n        super(message ?? 'The operation was aborted');\n        this.type = 'aborted';\n        this.name = name ?? 'AbortError';\n        this.code = code ?? 'ABORT_ERR';\n    }\n}\n/**\n * Race a promise against an abort signal\n */\nexport async function raceSignal(promise, signal, opts) {\n    if (signal == null) {\n        return promise;\n    }\n    if (signal.aborted) {\n        // the passed promise may yet resolve or reject but the use has signalled\n        // they are no longer interested so smother the error\n        promise.catch(() => { });\n        return Promise.reject(new AbortError(opts?.errorMessage, opts?.errorCode, opts?.errorName));\n    }\n    let listener;\n    // create the error here so we have more context in the stack trace\n    const error = new AbortError(opts?.errorMessage, opts?.errorCode, opts?.errorName);\n    try {\n        return await Promise.race([\n            promise,\n            new Promise((resolve, reject) => {\n                listener = () => {\n                    reject(error);\n                };\n                signal.addEventListener('abort', listener);\n            })\n        ]);\n    }\n    finally {\n        if (listener != null) {\n            signal.removeEventListener('abort', listener);\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","/**\n * @packageDocumentation\n *\n * A pushable async generator that waits until the current value is consumed\n * before allowing a new value to be pushed.\n *\n * Useful for when you don't want to keep memory usage under control and/or\n * allow a downstream consumer to dictate how fast data flows through a pipe,\n * but you want to be able to apply a transform to that data.\n *\n * @example\n *\n * ```typescript\n * import { queuelessPushable } from 'it-queueless-pushable'\n *\n * const pushable = queuelessPushable<string>()\n *\n * // run asynchronously\n * Promise.resolve().then(async () => {\n *   // push a value - the returned promise will not resolve until the value is\n *   // read from the pushable\n *   await pushable.push('hello')\n * })\n *\n * // read a value\n * const result = await pushable.next()\n * console.info(result) // { done: false, value: 'hello' }\n * ```\n */\nimport deferred from 'p-defer';\nimport { raceSignal } from 'race-signal';\nclass QueuelessPushable {\n    readNext;\n    haveNext;\n    ended;\n    nextResult;\n    error;\n    constructor() {\n        this.ended = false;\n        this.readNext = deferred();\n        this.haveNext = deferred();\n    }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n    async next() {\n        if (this.nextResult == null) {\n            // wait for the supplier to push a value\n            await this.haveNext.promise;\n        }\n        if (this.nextResult == null) {\n            throw new Error('HaveNext promise resolved but nextResult was undefined');\n        }\n        const nextResult = this.nextResult;\n        this.nextResult = undefined;\n        // signal to the supplier that we read the value\n        this.readNext.resolve();\n        this.readNext = deferred();\n        return nextResult;\n    }\n    async throw(err) {\n        this.ended = true;\n        this.error = err;\n        if (err != null) {\n            // this can cause unhandled promise rejections if nothing is awaiting the\n            // next value so attach a dummy catch listener to the promise\n            this.haveNext.promise.catch(() => { });\n            this.haveNext.reject(err);\n        }\n        const result = {\n            done: true,\n            value: undefined\n        };\n        return result;\n    }\n    async return() {\n        const result = {\n            done: true,\n            value: undefined\n        };\n        this.ended = true;\n        this.nextResult = result;\n        // let the consumer know we have a new value\n        this.haveNext.resolve();\n        return result;\n    }\n    async push(value, options) {\n        await this._push(value, options);\n    }\n    async end(err, options) {\n        if (err != null) {\n            await this.throw(err);\n        }\n        else {\n            // abortable return\n            await this._push(undefined, options);\n        }\n    }\n    async _push(value, options) {\n        if (value != null && this.ended) {\n            throw this.error ?? new Error('Cannot push value onto an ended pushable');\n        }\n        // wait for all values to be read\n        while (this.nextResult != null) {\n            await this.readNext.promise;\n        }\n        if (value != null) {\n            this.nextResult = { done: false, value };\n        }\n        else {\n            this.ended = true;\n            this.nextResult = { done: true, value: undefined };\n        }\n        // let the consumer know we have a new value\n        this.haveNext.resolve();\n        this.haveNext = deferred();\n        // wait for the consumer to have finished processing the value and requested\n        // the next one or for the passed signal to abort the waiting\n        await raceSignal(this.readNext.promise, options?.signal, options);\n    }\n}\nexport function queuelessPushable() {\n    return new QueuelessPushable();\n}\n//# sourceMappingURL=index.js.map","/**\n * @packageDocumentation\n *\n * Merge several (async)iterables into one, yield values as they arrive.\n *\n * Nb. sources are iterated over in parallel so the order of emitted items is not guaranteed.\n *\n * @example\n *\n * ```javascript\n * import merge from 'it-merge'\n * import all from 'it-all'\n *\n * // This can also be an iterator, generator, etc\n * const values1 = [0, 1, 2, 3, 4]\n * const values2 = [5, 6, 7, 8, 9]\n *\n * const arr = all(merge(values1, values2))\n *\n * console.info(arr) // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9\n * ```\n *\n * Async sources must be awaited:\n *\n * ```javascript\n * import merge from 'it-merge'\n * import all from 'it-all'\n *\n * // This can also be an iterator, async iterator, generator, etc\n * const values1 = async function * () {\n *   yield * [0, 1, 2, 3, 4]\n * }\n * const values2 = async function * () {\n *   yield * [5, 6, 7, 8, 9]\n * }\n *\n * const arr = await all(merge(values1(), values2()))\n *\n * console.info(arr) // 0, 1, 5, 6, 2, 3, 4, 7, 8, 9  <- nb. order is not guaranteed\n * ```\n */\nimport { queuelessPushable } from 'it-queueless-pushable';\nfunction isAsyncIterable(thing) {\n    return thing[Symbol.asyncIterator] != null;\n}\nasync function addAllToPushable(sources, output, signal) {\n    try {\n        await Promise.all(sources.map(async (source) => {\n            for await (const item of source) {\n                await output.push(item, {\n                    signal\n                });\n                signal.throwIfAborted();\n            }\n        }));\n        await output.end(undefined, {\n            signal\n        });\n    }\n    catch (err) {\n        await output.end(err, {\n            signal\n        })\n            .catch(() => { });\n    }\n}\nasync function* mergeSources(sources) {\n    const controller = new AbortController();\n    const output = queuelessPushable();\n    addAllToPushable(sources, output, controller.signal)\n        .catch(() => { });\n    try {\n        yield* output;\n    }\n    finally {\n        controller.abort();\n    }\n}\nfunction* mergeSyncSources(syncSources) {\n    for (const source of syncSources) {\n        yield* source;\n    }\n}\nfunction merge(...sources) {\n    const syncSources = [];\n    for (const source of sources) {\n        if (!isAsyncIterable(source)) {\n            syncSources.push(source);\n        }\n    }\n    if (syncSources.length === sources.length) {\n        // all sources are synchronous\n        return mergeSyncSources(syncSources);\n    }\n    return mergeSources(sources);\n}\nexport default merge;\n//# sourceMappingURL=index.js.map","import { pushable } from 'it-pushable';\nimport merge from 'it-merge';\nexport function pipe(first, ...rest) {\n    if (first == null) {\n        throw new Error('Empty pipeline');\n    }\n    // Duplex at start: wrap in function and return duplex source\n    if (isDuplex(first)) {\n        const duplex = first;\n        first = () => duplex.source;\n        // Iterable at start: wrap in function\n    }\n    else if (isIterable(first) || isAsyncIterable(first)) {\n        const source = first;\n        first = () => source;\n    }\n    const fns = [first, ...rest];\n    if (fns.length > 1) {\n        // Duplex at end: use duplex sink\n        if (isDuplex(fns[fns.length - 1])) {\n            fns[fns.length - 1] = fns[fns.length - 1].sink;\n        }\n    }\n    if (fns.length > 2) {\n        // Duplex in the middle, consume source with duplex sink and return duplex source\n        for (let i = 1; i < fns.length - 1; i++) {\n            if (isDuplex(fns[i])) {\n                fns[i] = duplexPipelineFn(fns[i]);\n            }\n        }\n    }\n    return rawPipe(...fns);\n}\nexport const rawPipe = (...fns) => {\n    let res;\n    while (fns.length > 0) {\n        res = fns.shift()(res);\n    }\n    return res;\n};\nconst isAsyncIterable = (obj) => {\n    return obj?.[Symbol.asyncIterator] != null;\n};\nconst isIterable = (obj) => {\n    return obj?.[Symbol.iterator] != null;\n};\nconst isDuplex = (obj) => {\n    if (obj == null) {\n        return false;\n    }\n    return obj.sink != null && obj.source != null;\n};\nconst duplexPipelineFn = (duplex) => {\n    return (source) => {\n        const p = duplex.sink(source);\n        if (p?.then != null) {\n            const stream = pushable({\n                objectMode: true\n            });\n            p.then(() => {\n                stream.end();\n            }, (err) => {\n                stream.end(err);\n            });\n            let sourceWrap;\n            const source = duplex.source;\n            if (isAsyncIterable(source)) {\n                sourceWrap = async function* () {\n                    yield* source;\n                    stream.end();\n                };\n            }\n            else if (isIterable(source)) {\n                sourceWrap = function* () {\n                    yield* source;\n                    stream.end();\n                };\n            }\n            else {\n                throw new Error('Unknown duplex source type - must be Iterable or AsyncIterable');\n            }\n            return merge(stream, sourceWrap());\n        }\n        return duplex.source;\n    };\n};\n//# sourceMappingURL=index.js.map","import { StreamMessageEvent, StreamCloseEvent, InvalidParametersError } from '@libp2p/interface';\nimport { pipe as itPipe } from 'it-pipe';\nimport { pushable } from 'it-pushable';\nimport { pEvent } from 'p-event';\nimport { raceSignal } from 'race-signal';\nimport * as varint from 'uint8-varint';\nimport { Uint8ArrayList } from 'uint8arraylist';\nimport { UnexpectedEOFError } from './errors.js';\nconst DEFAULT_MAX_BUFFER_SIZE = 4_194_304;\nexport class UnwrappedError extends Error {\n    static name = 'UnwrappedError';\n    name = 'UnwrappedError';\n}\n/**\n * The reported length of the next data message was not a positive integer\n */\nexport class InvalidMessageLengthError extends Error {\n    name = 'InvalidMessageLengthError';\n    code = 'ERR_INVALID_MSG_LENGTH';\n}\n/**\n * The reported length of the next data message was larger than the configured\n * max allowable value\n */\nexport class InvalidDataLengthError extends Error {\n    name = 'InvalidDataLengthError';\n    code = 'ERR_MSG_DATA_TOO_LONG';\n}\n/**\n * The varint used to specify the length of the next data message contained more\n * bytes than the configured max allowable value\n */\nexport class InvalidDataLengthLengthError extends Error {\n    name = 'InvalidDataLengthLengthError';\n    code = 'ERR_MSG_LENGTH_TOO_LONG';\n}\nfunction isStream(obj) {\n    return typeof obj?.closeRead === 'function';\n}\nfunction isMultiaddrConnection(obj) {\n    return typeof obj?.close === 'function';\n}\nfunction isEOF(obj) {\n    if (isStream(obj)) {\n        return obj.remoteWriteStatus !== 'writable' && obj.readBufferLength === 0;\n    }\n    if (isMultiaddrConnection(obj)) {\n        return obj.status !== 'open';\n    }\n    return false;\n}\nfunction isValid(obj) {\n    return obj?.addEventListener != null && obj?.removeEventListener != null && obj?.send != null && obj?.push != null && obj?.log != null;\n}\nexport function byteStream(stream, opts) {\n    const maxBufferSize = opts?.maxBufferSize ?? DEFAULT_MAX_BUFFER_SIZE;\n    const readBuffer = new Uint8ArrayList();\n    let hasBytes;\n    let unwrapped = false;\n    if (!isValid(stream)) {\n        throw new InvalidParametersError('Argument should be a Stream or a Multiaddr');\n    }\n    const byteStreamOnMessageListener = (evt) => {\n        readBuffer.append(evt.data);\n        if (readBuffer.byteLength > maxBufferSize) {\n            const readBufferSize = readBuffer.byteLength;\n            readBuffer.consume(readBuffer.byteLength);\n            hasBytes?.reject(new Error(`Read buffer overflow - ${readBufferSize} > ${maxBufferSize}`));\n        }\n        hasBytes?.resolve();\n    };\n    stream.addEventListener('message', byteStreamOnMessageListener);\n    const byteStreamOnCloseListener = (evt) => {\n        if (evt.error != null) {\n            hasBytes?.reject(evt.error);\n        }\n        else {\n            hasBytes?.resolve();\n        }\n    };\n    stream.addEventListener('close', byteStreamOnCloseListener);\n    const byteStreamOnRemoteCloseWrite = () => {\n        hasBytes?.resolve();\n    };\n    stream.addEventListener('remoteCloseWrite', byteStreamOnRemoteCloseWrite);\n    const byteStream = {\n        readBuffer,\n        // @ts-expect-error options type prevents type inference\n        async read(options) {\n            if (unwrapped === true) {\n                throw new UnwrappedError('Stream was unwrapped');\n            }\n            if (isEOF(stream)) {\n                if (options?.bytes == null) {\n                    return null;\n                }\n                if (readBuffer.byteLength < options.bytes) {\n                    stream.log.error('closed after reading %d/%d bytes', readBuffer.byteLength, options.bytes);\n                    throw new UnexpectedEOFError(`Unexpected EOF - stream closed after reading ${readBuffer.byteLength}/${options.bytes} bytes`);\n                }\n            }\n            const bytesToRead = options?.bytes ?? 1;\n            hasBytes = Promise.withResolvers();\n            while (true) {\n                if (readBuffer.byteLength >= bytesToRead) {\n                    // if we are about to exit the loop this promise will not be awaited\n                    // so resolve it to prevent and unhandled promise rejections that may\n                    // occur\n                    hasBytes.resolve();\n                    break;\n                }\n                await raceSignal(hasBytes.promise, options?.signal);\n                if (isEOF(stream)) {\n                    if (readBuffer.byteLength === 0 && options?.bytes == null) {\n                        return null;\n                    }\n                    break;\n                }\n                hasBytes = Promise.withResolvers();\n            }\n            const toRead = options?.bytes ?? readBuffer.byteLength;\n            if (readBuffer.byteLength < toRead) {\n                if (isEOF(stream)) {\n                    stream.log.error('closed while reading %d/%d bytes', readBuffer.byteLength, toRead);\n                    throw new UnexpectedEOFError(`Unexpected EOF - stream closed while reading ${readBuffer.byteLength}/${toRead} bytes`);\n                }\n                return byteStream.read(options);\n            }\n            const output = readBuffer.sublist(0, toRead);\n            readBuffer.consume(toRead);\n            return output;\n        },\n        async write(data, options) {\n            if (unwrapped === true) {\n                throw new UnwrappedError('Stream was unwrapped');\n            }\n            if (!stream.send(data)) {\n                await pEvent(stream, 'drain', {\n                    signal: options?.signal,\n                    rejectionEvents: ['close']\n                });\n            }\n        },\n        unwrap() {\n            // already unwrapped, just return the original stream\n            if (unwrapped) {\n                return stream;\n            }\n            // only unwrap once\n            unwrapped = true;\n            stream.removeEventListener('message', byteStreamOnMessageListener);\n            stream.removeEventListener('close', byteStreamOnCloseListener);\n            stream.removeEventListener('remoteCloseWrite', byteStreamOnRemoteCloseWrite);\n            // emit any unread data\n            if (readBuffer.byteLength > 0) {\n                stream.log('stream unwrapped with %d unread bytes', readBuffer.byteLength);\n                stream.push(readBuffer);\n            }\n            return stream;\n        }\n    };\n    return byteStream;\n}\nexport function lpStream(stream, opts = {}) {\n    const bytes = byteStream(stream, opts);\n    if (opts.maxDataLength != null && opts.maxLengthLength == null) {\n        // if max data length is set but max length length is not, calculate the\n        // max length length needed to encode max data length\n        opts.maxLengthLength = varint.encodingLength(opts.maxDataLength);\n    }\n    const decodeLength = opts?.lengthDecoder ?? varint.decode;\n    const encodeLength = opts?.lengthEncoder ?? varint.encode;\n    const lpStream = {\n        async read(options) {\n            let dataLength = -1;\n            const lengthBuffer = new Uint8ArrayList();\n            while (true) {\n                // read one byte at a time until we can decode a varint\n                const buf = await bytes.read({\n                    ...options,\n                    bytes: 1\n                });\n                // the underlying resource closed gracefully\n                if (buf == null) {\n                    break;\n                }\n                // append byte and try to decode\n                lengthBuffer.append(buf);\n                try {\n                    dataLength = decodeLength(lengthBuffer);\n                }\n                catch (err) {\n                    if (err instanceof RangeError) {\n                        continue;\n                    }\n                    throw err;\n                }\n                if (dataLength < 0) {\n                    throw new InvalidMessageLengthError('Invalid message length');\n                }\n                if (opts?.maxLengthLength != null && lengthBuffer.byteLength > opts.maxLengthLength) {\n                    throw new InvalidDataLengthLengthError(`Message length length too long - ${lengthBuffer.byteLength} > ${opts.maxLengthLength}`);\n                }\n                if (dataLength > -1) {\n                    break;\n                }\n            }\n            if (opts?.maxDataLength != null && dataLength > opts.maxDataLength) {\n                throw new InvalidDataLengthError(`Message length too long - ${dataLength} > ${opts.maxDataLength}`);\n            }\n            const buf = await bytes.read({\n                ...options,\n                bytes: dataLength\n            });\n            if (buf == null) {\n                stream.log.error('tried to read %d bytes but the stream closed', dataLength);\n                throw new UnexpectedEOFError(`Unexpected EOF - tried to read ${dataLength} bytes but the stream closed`);\n            }\n            if (buf.byteLength !== dataLength) {\n                stream.log.error('read %d/%d bytes before the stream closed', buf.byteLength, dataLength);\n                throw new UnexpectedEOFError(`Unexpected EOF - read ${buf.byteLength}/${dataLength} bytes before the stream closed`);\n            }\n            return buf;\n        },\n        async write(data, options) {\n            // encode, write\n            await bytes.write(new Uint8ArrayList(encodeLength(data.byteLength), data), options);\n        },\n        async writeV(data, options) {\n            const list = new Uint8ArrayList(...data.flatMap(buf => ([encodeLength(buf.byteLength), buf])));\n            // encode, write\n            await bytes.write(list, options);\n        },\n        unwrap() {\n            return bytes.unwrap();\n        }\n    };\n    return lpStream;\n}\nexport function pbStream(stream, opts) {\n    const lp = lpStream(stream, opts);\n    const pbStream = {\n        read: async (proto, options) => {\n            // readLP, decode\n            const value = await lp.read(options);\n            return proto.decode(value);\n        },\n        write: async (message, proto, options) => {\n            // encode, writeLP\n            await lp.write(proto.encode(message), options);\n        },\n        writeV: async (messages, proto, options) => {\n            // encode, writeLP\n            await lp.writeV(messages.map(message => proto.encode(message)), options);\n        },\n        pb: (proto) => {\n            return {\n                read: async (options) => pbStream.read(proto, options),\n                write: async (d, options) => pbStream.write(d, proto, options),\n                writeV: async (d, options) => pbStream.writeV(d, proto, options),\n                unwrap: () => pbStream\n            };\n        },\n        unwrap: () => {\n            return lp.unwrap();\n        }\n    };\n    return pbStream;\n}\nexport async function echo(stream, options) {\n    const log = stream.log.newScope('echo');\n    const start = Date.now();\n    let bytes = 0;\n    try {\n        for await (const buf of stream) {\n            bytes += buf.byteLength;\n            if (!stream.send(buf)) {\n                stream.pause();\n                await pEvent(stream, 'drain', {\n                    rejectionEvents: [\n                        'close'\n                    ],\n                    ...options\n                });\n                stream.resume();\n            }\n        }\n        log('echoed %d bytes in %dms', bytes, Date.now() - start);\n        await stream.close(options);\n    }\n    catch (err) {\n        stream.abort(err);\n    }\n}\nfunction isMessageStream(obj) {\n    return obj?.addEventListener != null;\n}\nexport function messageStreamToDuplex(stream) {\n    const source = pushable();\n    let onError;\n    const onMessage = (evt) => {\n        source.push(evt.data);\n    };\n    const onRemoteCloseWrite = () => {\n        source.end();\n        stream.removeEventListener('message', onMessage);\n        stream.removeEventListener('close', onClose);\n        stream.removeEventListener('remoteCloseWrite', onRemoteCloseWrite);\n    };\n    const onClose = (evt) => {\n        source.end(evt.error);\n        if (evt.error != null) {\n            onError?.reject(evt.error);\n        }\n        stream.removeEventListener('message', onMessage);\n        stream.removeEventListener('close', onClose);\n        stream.removeEventListener('remoteCloseWrite', onRemoteCloseWrite);\n    };\n    stream.addEventListener('message', onMessage);\n    stream.addEventListener('close', onClose, {\n        once: true\n    });\n    stream.addEventListener('remoteCloseWrite', onRemoteCloseWrite, {\n        once: true\n    });\n    return {\n        source,\n        async sink(source) {\n            async function* toGenerator() {\n                yield* source;\n            }\n            const gen = toGenerator();\n            while (true) {\n                onError = Promise.withResolvers();\n                const { done, value } = await Promise.race([\n                    gen.next(),\n                    onError.promise\n                ]);\n                if (stream.writeStatus === 'closing' || stream.writeStatus === 'closed') {\n                    break;\n                }\n                if (value != null) {\n                    if (!stream.send(value)) {\n                        await Promise.race([\n                            pEvent(stream, 'drain', {\n                                rejectionEvents: [\n                                    'close'\n                                ]\n                            })\n                        ]);\n                    }\n                }\n                if (done === true) {\n                    break;\n                }\n            }\n            await stream.close();\n        }\n    };\n}\nexport function pipe(...input) {\n    const sources = input.map(source => {\n        if (isMessageStream(source)) {\n            return messageStreamToDuplex(source);\n        }\n        return source;\n    });\n    // @ts-expect-error it-pipe types say args cannot be spread like this\n    return itPipe(...sources);\n}\n//# sourceMappingURL=stream-utils.js.map","import { InvalidParametersError } from '@libp2p/interface';\nimport * as varint from 'uint8-varint';\nimport { Uint8ArrayList } from 'uint8arraylist';\nimport { InvalidMessageLengthError } from \"./stream-utils.js\";\nconst DEFAULT_MAX_BUFFER_SIZE = 1024 * 1024 * 4;\nconst DEFAULT_MAX_DATA_LENGTH = 1024 * 1024 * 4;\n/**\n * Decode length-prefixed data from a buffer\n */\nexport class LengthPrefixedDecoder {\n    buffer;\n    maxBufferSize;\n    lengthDecoder;\n    maxDataLength;\n    encodingLength;\n    constructor(init = {}) {\n        this.buffer = new Uint8ArrayList();\n        this.maxBufferSize = init.maxBufferSize ?? DEFAULT_MAX_BUFFER_SIZE;\n        this.maxDataLength = init.maxDataLength ?? DEFAULT_MAX_DATA_LENGTH;\n        this.lengthDecoder = init.lengthDecoder ?? varint.decode;\n        this.encodingLength = init.encodingLength ?? varint.encodingLength;\n    }\n    /**\n     * Decodes length-prefixed data\n     */\n    *decode(buf) {\n        this.buffer.append(buf);\n        if (this.buffer.byteLength > this.maxBufferSize) {\n            throw new InvalidParametersError(`Buffer length limit exceeded - ${this.buffer.byteLength}/${this.maxBufferSize}`);\n        }\n        // Loop to consume as many bytes from the buffer as possible\n        // Eg: when a single chunk contains several frames\n        while (true) {\n            let dataLength;\n            try {\n                dataLength = this.lengthDecoder(this.buffer);\n            }\n            catch (err) {\n                if (err instanceof RangeError) {\n                    // ignore errors where we don't have enough data to read the length\n                    // prefix\n                    break;\n                }\n                throw err;\n            }\n            if (dataLength < 0 || dataLength > this.maxDataLength) {\n                throw new InvalidMessageLengthError('Invalid message length');\n            }\n            const lengthLength = this.encodingLength(dataLength);\n            const chunkLength = lengthLength + dataLength;\n            if (this.buffer.byteLength >= chunkLength) {\n                const buf = this.buffer.sublist(lengthLength, chunkLength);\n                this.buffer.consume(chunkLength);\n                if (buf.byteLength > 0) {\n                    yield buf;\n                }\n            }\n            else {\n                break;\n            }\n        }\n    }\n}\n//# sourceMappingURL=length-prefixed-decoder.js.map","// Maximum length of the length section of the message\nexport const MAX_LENGTH_LENGTH = 8; // Varint.encode(Number.MAX_SAFE_INTEGER).length\n// Maximum length of the data section of the message\nexport const MAX_DATA_LENGTH = 1024 * 1024 * 4;\n//# sourceMappingURL=constants.js.map","/**\n * The reported length of the next data message was not a positive integer\n */\nexport class InvalidMessageLengthError extends Error {\n    name = 'InvalidMessageLengthError';\n    code = 'ERR_INVALID_MSG_LENGTH';\n}\n/**\n * The reported length of the next data message was larger than the configured\n * max allowable value\n */\nexport class InvalidDataLengthError extends Error {\n    name = 'InvalidDataLengthError';\n    code = 'ERR_MSG_DATA_TOO_LONG';\n}\n/**\n * The varint used to specify the length of the next data message contained more\n * bytes than the configured max allowable value\n */\nexport class InvalidDataLengthLengthError extends Error {\n    name = 'InvalidDataLengthLengthError';\n    code = 'ERR_MSG_LENGTH_TOO_LONG';\n}\n/**\n * The incoming stream ended before the expected number of bytes were read\n */\nexport class UnexpectedEOFError extends Error {\n    name = 'UnexpectedEOFError';\n    code = 'ERR_UNEXPECTED_EOF';\n}\n//# sourceMappingURL=errors.js.map","export function isAsyncIterable(thing) {\n    return thing[Symbol.asyncIterator] != null;\n}\n//# sourceMappingURL=utils.js.map","import * as varint from 'uint8-varint';\nimport { Uint8ArrayList } from 'uint8arraylist';\nimport { allocUnsafe } from 'uint8arrays/alloc';\nimport { MAX_DATA_LENGTH } from './constants.js';\nimport { InvalidDataLengthError } from './errors.js';\nimport { isAsyncIterable } from './utils.js';\n// Helper function to validate the chunk size against maxDataLength\nfunction validateMaxDataLength(chunk, maxDataLength) {\n    if (chunk.byteLength > maxDataLength) {\n        throw new InvalidDataLengthError('Message length too long');\n    }\n}\nconst defaultEncoder = (length) => {\n    const lengthLength = varint.encodingLength(length);\n    const lengthBuf = allocUnsafe(lengthLength);\n    varint.encode(length, lengthBuf);\n    defaultEncoder.bytes = lengthLength;\n    return lengthBuf;\n};\ndefaultEncoder.bytes = 0;\nexport function encode(source, options) {\n    options = options ?? {};\n    const encodeLength = options.lengthEncoder ?? defaultEncoder;\n    const maxDataLength = options?.maxDataLength ?? MAX_DATA_LENGTH;\n    function* maybeYield(chunk) {\n        validateMaxDataLength(chunk, maxDataLength);\n        // length + data\n        const length = encodeLength(chunk.byteLength);\n        // yield only Uint8Arrays\n        if (length instanceof Uint8Array) {\n            yield length;\n        }\n        else {\n            yield* length;\n        }\n        // yield only Uint8Arrays\n        if (chunk instanceof Uint8Array) {\n            yield chunk;\n        }\n        else {\n            yield* chunk;\n        }\n    }\n    if (isAsyncIterable(source)) {\n        return (async function* () {\n            for await (const chunk of source) {\n                yield* maybeYield(chunk);\n            }\n        })();\n    }\n    return (function* () {\n        for (const chunk of source) {\n            yield* maybeYield(chunk);\n        }\n    })();\n}\nencode.single = (chunk, options) => {\n    options = options ?? {};\n    const encodeLength = options.lengthEncoder ?? defaultEncoder;\n    const maxDataLength = options?.maxDataLength ?? MAX_DATA_LENGTH;\n    validateMaxDataLength(chunk, maxDataLength);\n    return new Uint8ArrayList(encodeLength(chunk.byteLength), chunk);\n};\n//# sourceMappingURL=encode.js.map","/* eslint max-depth: [\"error\", 6] */\nimport * as varint from 'uint8-varint';\nimport { Uint8ArrayList } from 'uint8arraylist';\nimport { MAX_DATA_LENGTH, MAX_LENGTH_LENGTH } from './constants.js';\nimport { InvalidDataLengthError, InvalidDataLengthLengthError, InvalidMessageLengthError, UnexpectedEOFError } from './errors.js';\nimport { isAsyncIterable } from './utils.js';\nvar ReadMode;\n(function (ReadMode) {\n    ReadMode[ReadMode[\"LENGTH\"] = 0] = \"LENGTH\";\n    ReadMode[ReadMode[\"DATA\"] = 1] = \"DATA\";\n})(ReadMode || (ReadMode = {}));\nconst defaultDecoder = (buf) => {\n    const length = varint.decode(buf);\n    defaultDecoder.bytes = varint.encodingLength(length);\n    return length;\n};\ndefaultDecoder.bytes = 0;\nexport function decode(source, options) {\n    const buffer = new Uint8ArrayList();\n    let mode = ReadMode.LENGTH;\n    let dataLength = -1;\n    const lengthDecoder = options?.lengthDecoder ?? defaultDecoder;\n    const maxLengthLength = options?.maxLengthLength ?? MAX_LENGTH_LENGTH;\n    const maxDataLength = options?.maxDataLength ?? MAX_DATA_LENGTH;\n    function* maybeYield() {\n        while (buffer.byteLength > 0) {\n            if (mode === ReadMode.LENGTH) {\n                // read length, ignore errors for short reads\n                try {\n                    dataLength = lengthDecoder(buffer);\n                    if (dataLength < 0) {\n                        throw new InvalidMessageLengthError('Invalid message length');\n                    }\n                    if (dataLength > maxDataLength) {\n                        throw new InvalidDataLengthError('Message length too long');\n                    }\n                    const dataLengthLength = lengthDecoder.bytes;\n                    buffer.consume(dataLengthLength);\n                    if (options?.onLength != null) {\n                        options.onLength(dataLength);\n                    }\n                    mode = ReadMode.DATA;\n                }\n                catch (err) {\n                    if (err instanceof RangeError) {\n                        if (buffer.byteLength > maxLengthLength) {\n                            throw new InvalidDataLengthLengthError('Message length length too long');\n                        }\n                        break;\n                    }\n                    throw err;\n                }\n            }\n            if (mode === ReadMode.DATA) {\n                if (buffer.byteLength < dataLength) {\n                    // not enough data, wait for more\n                    break;\n                }\n                const data = buffer.sublist(0, dataLength);\n                buffer.consume(dataLength);\n                if (options?.onData != null) {\n                    options.onData(data);\n                }\n                yield data;\n                mode = ReadMode.LENGTH;\n            }\n        }\n    }\n    if (isAsyncIterable(source)) {\n        return (async function* () {\n            for await (const buf of source) {\n                buffer.append(buf);\n                yield* maybeYield();\n            }\n            if (buffer.byteLength > 0) {\n                throw new UnexpectedEOFError('Unexpected end of input');\n            }\n        })();\n    }\n    return (function* () {\n        for (const buf of source) {\n            buffer.append(buf);\n            yield* maybeYield();\n        }\n        if (buffer.byteLength > 0) {\n            throw new UnexpectedEOFError('Unexpected end of input');\n        }\n    })();\n}\ndecode.fromReader = (reader, options) => {\n    let byteLength = 1; // Read single byte chunks until the length is known\n    const varByteSource = (async function* () {\n        while (true) {\n            try {\n                const { done, value } = await reader.next(byteLength);\n                if (done === true) {\n                    return;\n                }\n                if (value != null) {\n                    yield value;\n                }\n            }\n            catch (err) {\n                if (err.code === 'ERR_UNDER_READ') {\n                    return { done: true, value: null };\n                }\n                throw err;\n            }\n            finally {\n                // Reset the byteLength so we continue to check for varints\n                byteLength = 1;\n            }\n        }\n    }());\n    /**\n     * Once the length has been parsed, read chunk for that length\n     */\n    const onLength = (l) => { byteLength = l; };\n    return decode(varByteSource, {\n        ...(options ?? {}),\n        onLength\n    });\n};\n//# sourceMappingURL=decode.js.map","import { Queue } from './queue/index.js';\n/**\n * Extends Queue to add support for querying queued jobs by peer id\n */\nexport class PeerQueue extends Queue {\n    has(peerId) {\n        return this.find(peerId) != null;\n    }\n    find(peerId) {\n        return this.queue.find(job => {\n            return peerId.equals(job.options.peerId);\n        });\n    }\n}\n//# sourceMappingURL=peer-queue.js.map","import { Queue } from './queue/index.js';\nexport class PriorityQueue extends Queue {\n    constructor(init = {}) {\n        super({\n            ...init,\n            sort: (a, b) => {\n                if (a.options.priority > b.options.priority) {\n                    return -1;\n                }\n                if (a.options.priority < b.options.priority) {\n                    return 1;\n                }\n                return 0;\n            }\n        });\n    }\n}\n//# sourceMappingURL=priority-queue.js.map","import { RateLimitError } from './errors.js';\nexport class RateLimiter {\n    memoryStorage;\n    points;\n    duration;\n    blockDuration;\n    keyPrefix;\n    constructor(opts = {}) {\n        this.points = opts.points ?? 4;\n        this.duration = opts.duration ?? 1;\n        this.blockDuration = opts.blockDuration ?? 0;\n        this.keyPrefix = opts.keyPrefix ?? 'rlflx';\n        this.memoryStorage = new MemoryStorage();\n    }\n    consume(key, pointsToConsume = 1, options = {}) {\n        const rlKey = this.getKey(key);\n        const secDuration = this._getKeySecDuration(options);\n        let res = this.memoryStorage.incrby(rlKey, pointsToConsume, secDuration);\n        res.remainingPoints = Math.max(this.points - res.consumedPoints, 0);\n        if (res.consumedPoints > this.points) {\n            // Block only first time when consumed more than points\n            if (this.blockDuration > 0 && res.consumedPoints <= (this.points + pointsToConsume)) {\n                // Block key\n                res = this.memoryStorage.set(rlKey, res.consumedPoints, this.blockDuration);\n            }\n            throw new RateLimitError('Rate limit exceeded', res);\n        }\n        return res;\n    }\n    penalty(key, points = 1, options = {}) {\n        const rlKey = this.getKey(key);\n        const secDuration = this._getKeySecDuration(options);\n        const res = this.memoryStorage.incrby(rlKey, points, secDuration);\n        res.remainingPoints = Math.max(this.points - res.consumedPoints, 0);\n        return res;\n    }\n    reward(key, points = 1, options = {}) {\n        const rlKey = this.getKey(key);\n        const secDuration = this._getKeySecDuration(options);\n        const res = this.memoryStorage.incrby(rlKey, -points, secDuration);\n        res.remainingPoints = Math.max(this.points - res.consumedPoints, 0);\n        return res;\n    }\n    /**\n     * Block any key for secDuration seconds\n     *\n     * @param key\n     * @param secDuration\n     */\n    block(key, secDuration) {\n        const msDuration = secDuration * 1000;\n        const initPoints = this.points + 1;\n        this.memoryStorage.set(this.getKey(key), initPoints, secDuration);\n        return {\n            remainingPoints: 0,\n            msBeforeNext: msDuration === 0 ? -1 : msDuration,\n            consumedPoints: initPoints,\n            isFirstInDuration: false\n        };\n    }\n    set(key, points, secDuration = 0) {\n        const msDuration = (secDuration >= 0 ? secDuration : this.duration) * 1000;\n        this.memoryStorage.set(this.getKey(key), points, secDuration);\n        return {\n            remainingPoints: 0,\n            msBeforeNext: msDuration === 0 ? -1 : msDuration,\n            consumedPoints: points,\n            isFirstInDuration: false\n        };\n    }\n    get(key) {\n        const res = this.memoryStorage.get(this.getKey(key));\n        if (res != null) {\n            res.remainingPoints = Math.max(this.points - res.consumedPoints, 0);\n        }\n        return res;\n    }\n    delete(key) {\n        this.memoryStorage.delete(this.getKey(key));\n    }\n    _getKeySecDuration(options) {\n        if (options?.customDuration != null && options.customDuration >= 0) {\n            return options.customDuration;\n        }\n        return this.duration;\n    }\n    getKey(key) {\n        return this.keyPrefix.length > 0 ? `${this.keyPrefix}:${key}` : key;\n    }\n    parseKey(rlKey) {\n        return rlKey.substring(this.keyPrefix.length);\n    }\n}\nexport class MemoryStorage {\n    storage;\n    constructor() {\n        this.storage = new Map();\n    }\n    incrby(key, value, durationSec) {\n        const existing = this.storage.get(key);\n        if (existing != null) {\n            const msBeforeExpires = existing.expiresAt != null\n                ? existing.expiresAt.getTime() - new Date().getTime()\n                : -1;\n            if (existing.expiresAt == null || msBeforeExpires > 0) {\n                // Change value\n                existing.value += value;\n                return {\n                    remainingPoints: 0,\n                    msBeforeNext: msBeforeExpires,\n                    consumedPoints: existing.value,\n                    isFirstInDuration: false\n                };\n            }\n            return this.set(key, value, durationSec);\n        }\n        return this.set(key, value, durationSec);\n    }\n    set(key, value, durationSec) {\n        const durationMs = durationSec * 1000;\n        const existing = this.storage.get(key);\n        if (existing != null) {\n            clearTimeout(existing.timeoutId);\n        }\n        const record = {\n            value,\n            expiresAt: durationMs > 0 ? new Date(Date.now() + durationMs) : undefined\n        };\n        this.storage.set(key, record);\n        if (durationMs > 0) {\n            record.timeoutId = setTimeout(() => {\n                this.storage.delete(key);\n            }, durationMs);\n            if (record.timeoutId.unref != null) {\n                record.timeoutId.unref();\n            }\n        }\n        return {\n            remainingPoints: 0,\n            msBeforeNext: durationMs === 0 ? -1 : durationMs,\n            consumedPoints: record.value,\n            isFirstInDuration: true\n        };\n    }\n    get(key) {\n        const existing = this.storage.get(key);\n        if (existing != null) {\n            const msBeforeExpires = existing.expiresAt != null\n                ? existing.expiresAt.getTime() - new Date().getTime()\n                : -1;\n            return {\n                remainingPoints: 0,\n                msBeforeNext: msBeforeExpires,\n                consumedPoints: existing.value,\n                isFirstInDuration: false\n            };\n        }\n    }\n    delete(key) {\n        const record = this.storage.get(key);\n        if (record != null) {\n            if (record.timeoutId != null) {\n                clearTimeout(record.timeoutId);\n            }\n            this.storage.delete(key);\n            return true;\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=rate-limiter.js.map","import { anySignal } from 'any-signal';\nimport { setMaxListeners } from 'main-event';\nimport { debounce } from \"./debounce.js\";\nexport function repeatingTask(fn, interval, options) {\n    let timeout;\n    let shutdownController;\n    let running = false;\n    function runTask() {\n        const opts = {\n            signal: shutdownController.signal\n        };\n        if (options?.timeout != null) {\n            const signal = anySignal([shutdownController.signal, AbortSignal.timeout(options.timeout)]);\n            setMaxListeners(Infinity, signal);\n            opts.signal = signal;\n        }\n        running = true;\n        Promise.resolve().then(async () => {\n            await fn(opts);\n        })\n            .catch(() => { })\n            .finally(() => {\n            running = false;\n            if (shutdownController.signal.aborted) {\n                // task has been cancelled, bail\n                return;\n            }\n            // reschedule\n            timeout = setTimeout(runTask, interval);\n        });\n    }\n    const runTaskDebounced = debounce(runTask, options?.debounce ?? 100);\n    let started = false;\n    return {\n        setInterval: (ms) => {\n            if (interval === ms) {\n                // already running at this interval, nothing to do\n                return;\n            }\n            interval = ms;\n            // maybe reschedule\n            if (timeout != null) {\n                clearTimeout(timeout);\n                timeout = setTimeout(runTask, interval);\n            }\n        },\n        setTimeout: (ms) => {\n            options ??= {};\n            options.timeout = ms;\n        },\n        run: () => {\n            if (running) {\n                return;\n            }\n            clearTimeout(timeout);\n            runTaskDebounced();\n        },\n        start: () => {\n            if (started) {\n                return;\n            }\n            started = true;\n            shutdownController = new AbortController();\n            setMaxListeners(Infinity, shutdownController.signal);\n            // run now\n            if (options?.runImmediately === true) {\n                queueMicrotask(() => {\n                    runTask();\n                });\n            }\n            else {\n                // run later\n                timeout = setTimeout(runTask, interval);\n            }\n        },\n        stop: () => {\n            clearTimeout(timeout);\n            shutdownController?.abort();\n            started = false;\n        }\n    };\n}\n//# sourceMappingURL=repeating-task.js.map","class TrackedMap extends Map {\n    metric;\n    constructor(init) {\n        super();\n        const { name, metrics } = init;\n        this.metric = metrics.registerMetric(name);\n        this.updateComponentMetric();\n    }\n    set(key, value) {\n        super.set(key, value);\n        this.updateComponentMetric();\n        return this;\n    }\n    delete(key) {\n        const deleted = super.delete(key);\n        this.updateComponentMetric();\n        return deleted;\n    }\n    clear() {\n        super.clear();\n        this.updateComponentMetric();\n    }\n    updateComponentMetric() {\n        this.metric.update(this.size);\n    }\n}\nexport function trackedMap(config) {\n    const { name, metrics } = config;\n    let map;\n    if (metrics != null) {\n        map = new TrackedMap({ name, metrics });\n    }\n    else {\n        map = new Map();\n    }\n    return map;\n}\n//# sourceMappingURL=tracked-map.js.map","import { createScalableCuckooFilter } from '@libp2p/utils';\n/**\n * Uses a Cuckoo filter to implement a mechanism for deduplicating PeerIds in a\n * way that uses a smaller amount of memory than a PeerSet.\n */\nexport class PeerFilter {\n    filter;\n    constructor(size, errorRate) {\n        this.filter = createScalableCuckooFilter(size, errorRate);\n    }\n    has(peerId) {\n        return this.filter.has(peerId.toMultihash().bytes);\n    }\n    add(peerId) {\n        this.filter.add(peerId.toMultihash().bytes);\n    }\n    remove(peerId) {\n        this.filter.remove?.(peerId.toMultihash().bytes);\n    }\n}\n/**\n * Create and return a PeerFilter. This can be used by topologies to prevent\n * them receiving duplicate notifications for a peer that connects repeatedly.\n *\n * @example\n *\n * ```TypeScript\n * import { peerFilter } from '@libp2p/peer-collections'\n * import type { Registrar } from '@libp2p/interface-internal'\n *\n * const registrar: Registrar\n *\n * registrar.register('/my/protocol/1.0.0', {\n *   filter: peerFilter(),\n *   onConnect: (peerId) => {\n *     // will only be invoked for a given peerId once\n *   }\n * })\n * ```\n *\n * @param size - The maximum number of peers expected to be added to the filter\n * @param errorRate - The acceptable error rate\n */\nexport function peerFilter(size, errorRate = 0.001) {\n    return new PeerFilter(size, errorRate);\n}\n//# sourceMappingURL=filter.js.map","import { PeerMap } from './map.js';\nclass TrackedPeerMap extends PeerMap {\n    metric;\n    constructor(init) {\n        super();\n        const { name, metrics } = init;\n        this.metric = metrics.registerMetric(name);\n        this.updateComponentMetric();\n    }\n    set(key, value) {\n        super.set(key, value);\n        this.updateComponentMetric();\n        return this;\n    }\n    delete(key) {\n        const deleted = super.delete(key);\n        this.updateComponentMetric();\n        return deleted;\n    }\n    clear() {\n        super.clear();\n        this.updateComponentMetric();\n    }\n    updateComponentMetric() {\n        this.metric.update(this.size);\n    }\n}\n/**\n * Creates a PeerMap that reports it's size to the libp2p Metrics service\n *\n * @example\n *\n * ```Typescript\n * import { trackedPeerMap } from '@libp2p/peer-collections'\n * import { createLibp2p } from 'libp2p'\n *\n * const libp2p = await createLibp2p()\n *\n * const list = trackedPeerMap({ name: 'my_metric_name', metrics: libp2p.metrics })\n * map.set(peerId, 'value')\n * ```\n */\nexport function trackedPeerMap(config) {\n    const { name, metrics } = config;\n    let map;\n    if (metrics != null) {\n        map = new TrackedPeerMap({ name, metrics });\n    }\n    else {\n        map = new PeerMap();\n    }\n    return map;\n}\n//# sourceMappingURL=tracked-map.js.map","import { decodeMessage, encodeMessage, message } from 'protons-runtime';\nimport { alloc as uint8ArrayAlloc } from 'uint8arrays/alloc';\nexport var Envelope;\n(function (Envelope) {\n    let _codec;\n    Envelope.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if ((obj.publicKey != null && obj.publicKey.byteLength > 0)) {\n                    w.uint32(10);\n                    w.bytes(obj.publicKey);\n                }\n                if ((obj.payloadType != null && obj.payloadType.byteLength > 0)) {\n                    w.uint32(18);\n                    w.bytes(obj.payloadType);\n                }\n                if ((obj.payload != null && obj.payload.byteLength > 0)) {\n                    w.uint32(26);\n                    w.bytes(obj.payload);\n                }\n                if ((obj.signature != null && obj.signature.byteLength > 0)) {\n                    w.uint32(42);\n                    w.bytes(obj.signature);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    publicKey: uint8ArrayAlloc(0),\n                    payloadType: uint8ArrayAlloc(0),\n                    payload: uint8ArrayAlloc(0),\n                    signature: uint8ArrayAlloc(0)\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.publicKey = reader.bytes();\n                            break;\n                        }\n                        case 2: {\n                            obj.payloadType = reader.bytes();\n                            break;\n                        }\n                        case 3: {\n                            obj.payload = reader.bytes();\n                            break;\n                        }\n                        case 5: {\n                            obj.signature = reader.bytes();\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    Envelope.encode = (obj) => {\n        return encodeMessage(obj, Envelope.codec());\n    };\n    Envelope.decode = (buf, opts) => {\n        return decodeMessage(buf, Envelope.codec(), opts);\n    };\n})(Envelope || (Envelope = {}));\n//# sourceMappingURL=envelope.js.map","/**\n * The key in the record is not valid for the domain\n */\nexport class InvalidSignatureError extends Error {\n    constructor(message = 'Invalid signature') {\n        super(message);\n        this.name = 'InvalidSignatureError';\n    }\n}\n//# sourceMappingURL=errors.js.map","import { publicKeyFromProtobuf, publicKeyToProtobuf } from '@libp2p/crypto/keys';\nimport * as varint from 'uint8-varint';\nimport { Uint8ArrayList } from 'uint8arraylist';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport { fromString as uint8arraysFromString } from 'uint8arrays/from-string';\nimport { Envelope as Protobuf } from './envelope.js';\nimport { InvalidSignatureError } from './errors.js';\nexport class RecordEnvelope {\n    /**\n     * Unmarshal a serialized Envelope protobuf message\n     */\n    static createFromProtobuf = (data) => {\n        const envelopeData = Protobuf.decode(data);\n        const publicKey = publicKeyFromProtobuf(envelopeData.publicKey);\n        return new RecordEnvelope({\n            publicKey,\n            payloadType: envelopeData.payloadType,\n            payload: envelopeData.payload,\n            signature: envelopeData.signature\n        });\n    };\n    /**\n     * Seal marshals the given Record, places the marshaled bytes inside an Envelope\n     * and signs it with the given peerId's private key\n     */\n    static seal = async (record, privateKey, options) => {\n        if (privateKey == null) {\n            throw new Error('Missing private key');\n        }\n        const domain = record.domain;\n        const payloadType = record.codec;\n        const payload = record.marshal();\n        const signData = formatSignaturePayload(domain, payloadType, payload);\n        const signature = await privateKey.sign(signData.subarray(), options);\n        return new RecordEnvelope({\n            publicKey: privateKey.publicKey,\n            payloadType,\n            payload,\n            signature\n        });\n    };\n    /**\n     * Open and certify a given marshaled envelope.\n     * Data is unmarshaled and the signature validated for the given domain.\n     */\n    static openAndCertify = async (data, domain, options) => {\n        const envelope = RecordEnvelope.createFromProtobuf(data);\n        const valid = await envelope.validate(domain, options);\n        if (!valid) {\n            throw new InvalidSignatureError('Envelope signature is not valid for the given domain');\n        }\n        return envelope;\n    };\n    publicKey;\n    payloadType;\n    payload;\n    signature;\n    marshaled;\n    /**\n     * The Envelope is responsible for keeping an arbitrary signed record\n     * by a libp2p peer.\n     */\n    constructor(init) {\n        const { publicKey, payloadType, payload, signature } = init;\n        this.publicKey = publicKey;\n        this.payloadType = payloadType;\n        this.payload = payload;\n        this.signature = signature;\n    }\n    /**\n     * Marshal the envelope content\n     */\n    marshal() {\n        if (this.marshaled == null) {\n            this.marshaled = Protobuf.encode({\n                publicKey: publicKeyToProtobuf(this.publicKey),\n                payloadType: this.payloadType,\n                payload: this.payload.subarray(),\n                signature: this.signature\n            });\n        }\n        return this.marshaled;\n    }\n    /**\n     * Verifies if the other Envelope is identical to this one\n     */\n    equals(other) {\n        if (other == null) {\n            return false;\n        }\n        return uint8ArrayEquals(this.marshal(), other.marshal());\n    }\n    /**\n     * Validate envelope data signature for the given domain\n     */\n    async validate(domain, options) {\n        const signData = formatSignaturePayload(domain, this.payloadType, this.payload);\n        return this.publicKey.verify(signData.subarray(), this.signature, options);\n    }\n}\n/**\n * Helper function that prepares a Uint8Array to sign or verify a signature\n */\nconst formatSignaturePayload = (domain, payloadType, payload) => {\n    // When signing, a peer will prepare a Uint8Array by concatenating the following:\n    // - The length of the domain separation string string in bytes\n    // - The domain separation string, encoded as UTF-8\n    // - The length of the payload_type field in bytes\n    // - The value of the payload_type field\n    // - The length of the payload field in bytes\n    // - The value of the payload field\n    const domainUint8Array = uint8arraysFromString(domain);\n    const domainLength = varint.encode(domainUint8Array.byteLength);\n    const payloadTypeLength = varint.encode(payloadType.length);\n    const payloadLength = varint.encode(payload.length);\n    return new Uint8ArrayList(domainLength, domainUint8Array, payloadTypeLength, payloadType, payloadLength, payload);\n};\n//# sourceMappingURL=index.js.map","// The domain string used for peer records contained in a Envelope.\nexport const ENVELOPE_DOMAIN_PEER_RECORD = 'libp2p-peer-record';\n// The type hint used to identify peer records in a Envelope.\n// Defined in https://github.com/multiformats/multicodec/blob/master/table.csv\n// with name \"libp2p-peer-record\"\nexport const ENVELOPE_PAYLOAD_TYPE_PEER_RECORD = Uint8Array.from([3, 1]);\n//# sourceMappingURL=consts.js.map","import { decodeMessage, encodeMessage, MaxLengthError, message } from 'protons-runtime';\nimport { alloc as uint8ArrayAlloc } from 'uint8arrays/alloc';\nexport var PeerRecord;\n(function (PeerRecord) {\n    let AddressInfo;\n    (function (AddressInfo) {\n        let _codec;\n        AddressInfo.codec = () => {\n            if (_codec == null) {\n                _codec = message((obj, w, opts = {}) => {\n                    if (opts.lengthDelimited !== false) {\n                        w.fork();\n                    }\n                    if ((obj.multiaddr != null && obj.multiaddr.byteLength > 0)) {\n                        w.uint32(10);\n                        w.bytes(obj.multiaddr);\n                    }\n                    if (opts.lengthDelimited !== false) {\n                        w.ldelim();\n                    }\n                }, (reader, length, opts = {}) => {\n                    const obj = {\n                        multiaddr: uint8ArrayAlloc(0)\n                    };\n                    const end = length == null ? reader.len : reader.pos + length;\n                    while (reader.pos < end) {\n                        const tag = reader.uint32();\n                        switch (tag >>> 3) {\n                            case 1: {\n                                obj.multiaddr = reader.bytes();\n                                break;\n                            }\n                            default: {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                    }\n                    return obj;\n                });\n            }\n            return _codec;\n        };\n        AddressInfo.encode = (obj) => {\n            return encodeMessage(obj, AddressInfo.codec());\n        };\n        AddressInfo.decode = (buf, opts) => {\n            return decodeMessage(buf, AddressInfo.codec(), opts);\n        };\n    })(AddressInfo = PeerRecord.AddressInfo || (PeerRecord.AddressInfo = {}));\n    let _codec;\n    PeerRecord.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if ((obj.peerId != null && obj.peerId.byteLength > 0)) {\n                    w.uint32(10);\n                    w.bytes(obj.peerId);\n                }\n                if ((obj.seq != null && obj.seq !== 0n)) {\n                    w.uint32(16);\n                    w.uint64(obj.seq);\n                }\n                if (obj.addresses != null) {\n                    for (const value of obj.addresses) {\n                        w.uint32(26);\n                        PeerRecord.AddressInfo.codec().encode(value, w);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    peerId: uint8ArrayAlloc(0),\n                    seq: 0n,\n                    addresses: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.peerId = reader.bytes();\n                            break;\n                        }\n                        case 2: {\n                            obj.seq = reader.uint64();\n                            break;\n                        }\n                        case 3: {\n                            if (opts.limits?.addresses != null && obj.addresses.length === opts.limits.addresses) {\n                                throw new MaxLengthError('Decode error - map field \"addresses\" had too many elements');\n                            }\n                            obj.addresses.push(PeerRecord.AddressInfo.codec().decode(reader, reader.uint32(), {\n                                limits: opts.limits?.addresses$\n                            }));\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PeerRecord.encode = (obj) => {\n        return encodeMessage(obj, PeerRecord.codec());\n    };\n    PeerRecord.decode = (buf, opts) => {\n        return decodeMessage(buf, PeerRecord.codec(), opts);\n    };\n})(PeerRecord || (PeerRecord = {}));\n//# sourceMappingURL=peer-record.js.map","/**\n * Verify if two arrays of non primitive types with the \"equals\" function are equal.\n * Compatible with multiaddr, peer-id and others.\n */\nexport function arrayEquals(a, b) {\n    const sort = (a, b) => a.toString().localeCompare(b.toString());\n    if (a.length !== b.length) {\n        return false;\n    }\n    b.sort(sort);\n    return a.sort(sort).every((item, index) => b[index].equals(item));\n}\n//# sourceMappingURL=utils.js.map","import { peerIdFromMultihash } from '@libp2p/peer-id';\nimport { multiaddr } from '@multiformats/multiaddr';\nimport * as Digest from 'multiformats/hashes/digest';\nimport { ENVELOPE_DOMAIN_PEER_RECORD, ENVELOPE_PAYLOAD_TYPE_PEER_RECORD } from './consts.js';\nimport { PeerRecord as Protobuf } from './peer-record.js';\nimport { arrayEquals } from \"./utils.js\";\n/**\n * The PeerRecord is used for distributing peer routing records across the network.\n * It contains the peer's reachable listen addresses.\n */\nexport class PeerRecord {\n    /**\n     * Unmarshal Peer Record Protobuf\n     */\n    static createFromProtobuf = (buf) => {\n        const peerRecord = Protobuf.decode(buf);\n        const peerId = peerIdFromMultihash(Digest.decode(peerRecord.peerId));\n        const multiaddrs = (peerRecord.addresses ?? []).map((a) => multiaddr(a.multiaddr));\n        const seqNumber = peerRecord.seq;\n        return new PeerRecord({ peerId, multiaddrs, seqNumber });\n    };\n    static DOMAIN = ENVELOPE_DOMAIN_PEER_RECORD;\n    static CODEC = ENVELOPE_PAYLOAD_TYPE_PEER_RECORD;\n    peerId;\n    multiaddrs;\n    seqNumber;\n    domain = PeerRecord.DOMAIN;\n    codec = PeerRecord.CODEC;\n    marshaled;\n    constructor(init) {\n        const { peerId, multiaddrs, seqNumber } = init;\n        this.peerId = peerId;\n        this.multiaddrs = multiaddrs ?? [];\n        this.seqNumber = seqNumber ?? BigInt(Date.now());\n    }\n    /**\n     * Marshal a record to be used in an envelope\n     */\n    marshal() {\n        if (this.marshaled == null) {\n            this.marshaled = Protobuf.encode({\n                peerId: this.peerId.toMultihash().bytes,\n                seq: BigInt(this.seqNumber),\n                addresses: this.multiaddrs.map((m) => ({\n                    multiaddr: m.bytes\n                }))\n            });\n        }\n        return this.marshaled;\n    }\n    /**\n     * Returns true if `this` record equals the `other`\n     */\n    equals(other) {\n        if (!(other instanceof PeerRecord)) {\n            return false;\n        }\n        // Validate PeerId\n        if (!this.peerId.equals(other.peerId)) {\n            return false;\n        }\n        // Validate seqNumber\n        if (this.seqNumber !== other.seqNumber) {\n            return false;\n        }\n        // Validate multiaddrs\n        if (!arrayEquals(this.multiaddrs, other.multiaddrs)) {\n            return false;\n        }\n        return true;\n    }\n}\n//# sourceMappingURL=index.js.map","/**\n * @packageDocumentation\n *\n * For when you need a one-liner to collect iterable values.\n *\n * @example\n *\n * ```javascript\n * import all from 'it-all'\n *\n * // This can also be an iterator, etc\n * const values = function * () {\n *   yield * [0, 1, 2, 3, 4]\n * }\n *\n * const arr = all(values)\n *\n * console.info(arr) // 0, 1, 2, 3, 4\n * ```\n *\n * Async sources must be awaited:\n *\n * ```javascript\n * const values = async function * () {\n *   yield * [0, 1, 2, 3, 4]\n * }\n *\n * const arr = await all(values())\n *\n * console.info(arr) // 0, 1, 2, 3, 4\n * ```\n */\nfunction isAsyncIterable(thing) {\n    return thing[Symbol.asyncIterator] != null;\n}\nfunction all(source) {\n    if (isAsyncIterable(source)) {\n        return (async () => {\n            const arr = [];\n            for await (const entry of source) {\n                arr.push(entry);\n            }\n            return arr;\n        })();\n    }\n    const arr = [];\n    for (const entry of source) {\n        arr.push(entry);\n    }\n    return arr;\n}\nexport default all;\n//# sourceMappingURL=index.js.map","/**\n * @packageDocumentation\n *\n * A simple error class and options interface that seems to get copied from\n * project to project.\n *\n * @example Using `AbortError`\n *\n * ```JavaScript\n * import { AbortError } from 'abort-error'\n *\n * // a promise that will be settled later\n * const deferred = Promise.withResolvers()\n *\n * const signal = AbortSignal.timeout(1000)\n * signal.addEventListener('abort', () => {\n *   deferred.reject(new AbortError())\n * })\n * ```\n *\n * @example Using `AbortOptions`\n *\n * ```TypeScript\n * import type { AbortOptions } from 'abort-error'\n *\n * async function myFunction (options?: AbortOptions) {\n *   return fetch('https://example.com', {\n *     signal: options?.signal\n *   })\n * }\n * ```\n */\nexport class AbortError extends Error {\n    static name = 'AbortError';\n    name = 'AbortError';\n    constructor(message = 'The operation was aborted', ...rest) {\n        super(message, ...rest);\n    }\n}\n//# sourceMappingURL=index.js.map","/**\n * @packageDocumentation\n *\n * Race an event against an AbortSignal, taking care to remove any event\n * listeners that were added.\n *\n * @example Getting started\n *\n * ```TypeScript\n * import { raceEvent } from 'race-event'\n *\n * const controller = new AbortController()\n * const emitter = new EventTarget()\n *\n * setTimeout(() => {\n *   controller.abort()\n * }, 500)\n *\n * setTimeout(() => {\n *   // too late\n *   emitter.dispatchEvent(new CustomEvent('event'))\n * }, 1000)\n *\n * // throws an AbortError\n * const resolve = await raceEvent(emitter, 'event', controller.signal)\n * ```\n *\n * @example Aborting the promise with an error event\n *\n * ```TypeScript\n * import { raceEvent } from 'race-event'\n *\n * const emitter = new EventTarget()\n *\n * setTimeout(() => {\n *   emitter.dispatchEvent(new CustomEvent('failure', {\n *     detail: new Error('Oh no!')\n *   }))\n * }, 1000)\n *\n * // throws 'Oh no!' error\n * const resolve = await raceEvent(emitter, 'success', AbortSignal.timeout(5000), {\n *   errorEvent: 'failure'\n * })\n * ```\n *\n * @example Customising the thrown AbortError\n *\n * The error message and `.code` property of the thrown `AbortError` can be\n * specified by passing options:\n *\n * ```TypeScript\n * import { raceEvent } from 'race-event'\n *\n * const controller = new AbortController()\n * const emitter = new EventTarget()\n *\n * setTimeout(() => {\n *   controller.abort()\n * }, 500)\n *\n * // throws a Error: Oh no!\n * const resolve = await raceEvent(emitter, 'event', controller.signal, {\n *   errorMessage: 'Oh no!',\n *   errorCode: 'ERR_OH_NO'\n * })\n * ```\n *\n * @example Only resolving on specific events\n *\n * Where multiple events with the same type are emitted, a `filter` function can\n * be passed to only resolve on one of them:\n *\n * ```TypeScript\n * import { raceEvent } from 'race-event'\n *\n * const controller = new AbortController()\n * const emitter = new EventTarget()\n *\n * // throws a Error: Oh no!\n * const resolve = await raceEvent(emitter, 'event', controller.signal, {\n *   filter: (evt: Event) => {\n *     return evt.detail.foo === 'bar'\n *   }\n * })\n * ```\n *\n * @example Terminating early by throwing from the filter\n *\n * You can cause listening for the event to cease and all event listeners to be\n * removed by throwing from the filter:\n *\n * ```TypeScript\n * import { raceEvent } from 'race-event'\n *\n * const controller = new AbortController()\n * const emitter = new EventTarget()\n *\n * // throws Error: Cannot continue\n * const resolve = await raceEvent(emitter, 'event', controller.signal, {\n *   filter: (evt) => {\n *     if (...reasons) {\n *       throw new Error('Cannot continue')\n *     }\n *\n *     return true\n *   }\n * })\n * ```\n */\nimport { AbortError } from 'abort-error';\n/**\n * Race a promise against an abort signal\n */\nexport async function raceEvent(emitter, eventName, signal, opts) {\n    // create the error here so we have more context in the stack trace\n    const error = new AbortError(opts?.errorMessage);\n    if (opts?.errorCode != null) {\n        // @ts-expect-error not a field of AbortError\n        error.code = opts.errorCode;\n    }\n    const errorEvent = opts?.errorEvent ?? 'error';\n    if (signal?.aborted === true) {\n        return Promise.reject(error);\n    }\n    return new Promise((resolve, reject) => {\n        function removeListeners() {\n            removeListener(signal, 'abort', abortListener);\n            removeListener(emitter, eventName, eventListener);\n            removeListener(emitter, errorEvent, errorEventListener);\n        }\n        const eventListener = (evt) => {\n            try {\n                if (opts?.filter?.(evt) === false) {\n                    return;\n                }\n            }\n            catch (err) {\n                removeListeners();\n                reject(err);\n                return;\n            }\n            removeListeners();\n            resolve(evt);\n        };\n        const errorEventListener = (evt) => {\n            removeListeners();\n            if (evt instanceof Error) {\n                reject(evt);\n                return;\n            }\n            reject(evt.detail ?? opts?.error ?? new Error(`The \"${opts?.errorEvent}\" event was emitted but the event had no '.detail' field. Pass an 'error' option to race-event to change this message.`));\n        };\n        const abortListener = () => {\n            removeListeners();\n            reject(error);\n        };\n        addListener(signal, 'abort', abortListener);\n        addListener(emitter, eventName, eventListener);\n        addListener(emitter, errorEvent, errorEventListener);\n    });\n}\nfunction addListener(emitter, event, listener) {\n    if (emitter == null) {\n        return;\n    }\n    if (isEventTarget(emitter)) {\n        emitter.addEventListener(event, listener);\n    }\n    else {\n        emitter.addListener(event, listener);\n    }\n}\nfunction removeListener(emitter, event, listener) {\n    if (emitter == null) {\n        return;\n    }\n    if (isEventTarget(emitter)) {\n        emitter.removeEventListener(event, listener);\n    }\n    else {\n        emitter.removeListener(event, listener);\n    }\n}\nfunction isEventTarget(emitter) {\n    return typeof emitter.addEventListener === 'function' && typeof emitter.removeEventListener === 'function';\n}\n//# sourceMappingURL=index.js.map","export class QueueFullError extends Error {\n    static name = 'QueueFullError';\n    constructor(message = 'The queue was full') {\n        super(message);\n        this.name = 'QueueFullError';\n    }\n}\n//# sourceMappingURL=errors.js.map","/**\n * An abort error class that extends error\n */\nexport class AbortError extends Error {\n    type;\n    code;\n    constructor(message, code, name) {\n        super(message ?? 'The operation was aborted');\n        this.type = 'aborted';\n        this.name = name ?? 'AbortError';\n        this.code = code ?? 'ABORT_ERR';\n    }\n}\n/**\n * Race a promise against an abort signal\n */\nexport async function raceSignal(promise, signal, opts) {\n    if (signal == null) {\n        return promise;\n    }\n    if (signal.aborted) {\n        // the passed promise may yet resolve or reject but the use has signalled\n        // they are no longer interested so smother the error\n        promise.catch(() => { });\n        return Promise.reject(new AbortError(opts?.errorMessage, opts?.errorCode, opts?.errorName));\n    }\n    let listener;\n    // create the error here so we have more context in the stack trace\n    const error = new AbortError(opts?.errorMessage, opts?.errorCode, opts?.errorName);\n    try {\n        return await Promise.race([\n            promise,\n            new Promise((resolve, reject) => {\n                listener = () => {\n                    reject(error);\n                };\n                signal.addEventListener('abort', listener);\n            })\n        ]);\n    }\n    finally {\n        if (listener != null) {\n            signal.removeEventListener('abort', listener);\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","import { AbortError } from 'abort-error';\nexport class JobRecipient {\n    deferred;\n    signal;\n    constructor(signal) {\n        this.signal = signal;\n        this.deferred = Promise.withResolvers();\n        this.onAbort = this.onAbort.bind(this);\n        this.signal?.addEventListener('abort', this.onAbort);\n    }\n    onAbort() {\n        this.deferred.reject(this.signal?.reason ?? new AbortError());\n    }\n    cleanup() {\n        this.signal?.removeEventListener('abort', this.onAbort);\n    }\n}\n//# sourceMappingURL=recipient.js.map","import { AbortError } from 'abort-error';\nimport { setMaxListeners } from 'main-event';\nimport { raceSignal } from 'race-signal';\nimport { JobRecipient } from './recipient.js';\n/**\n * Returns a random string\n */\nfunction randomId() {\n    return `${(parseInt(String(Math.random() * 1e9), 10)).toString()}${Date.now()}`;\n}\nexport class Job {\n    id;\n    fn;\n    options;\n    recipients;\n    status;\n    timeline;\n    controller;\n    constructor(fn, options) {\n        this.id = randomId();\n        this.status = 'queued';\n        this.fn = fn;\n        this.options = options;\n        this.recipients = [];\n        this.timeline = {\n            created: Date.now()\n        };\n        this.controller = new AbortController();\n        setMaxListeners(Infinity, this.controller.signal);\n        this.onAbort = this.onAbort.bind(this);\n    }\n    abort(err) {\n        this.controller.abort(err);\n    }\n    onAbort() {\n        const allAborted = this.recipients.reduce((acc, curr) => {\n            return acc && (curr.signal?.aborted === true);\n        }, true);\n        // if all recipients have aborted the job, actually abort the job\n        if (allAborted) {\n            this.controller.abort(new AbortError());\n            this.cleanup();\n        }\n    }\n    async join(options = {}) {\n        const recipient = new JobRecipient(options.signal);\n        this.recipients.push(recipient);\n        options.signal?.addEventListener('abort', this.onAbort);\n        return recipient.deferred.promise;\n    }\n    async run() {\n        this.status = 'running';\n        this.timeline.started = Date.now();\n        try {\n            this.controller.signal.throwIfAborted();\n            const result = await raceSignal(this.fn({\n                ...(this.options ?? {}),\n                signal: this.controller.signal\n            }), this.controller.signal);\n            this.recipients.forEach(recipient => {\n                recipient.deferred.resolve(result);\n            });\n            this.status = 'complete';\n        }\n        catch (err) {\n            this.recipients.forEach(recipient => {\n                recipient.deferred.reject(err);\n            });\n            this.status = 'errored';\n        }\n        finally {\n            this.timeline.finished = Date.now();\n            this.cleanup();\n        }\n    }\n    cleanup() {\n        this.recipients.forEach(recipient => {\n            recipient.cleanup();\n            recipient.signal?.removeEventListener('abort', this.onAbort);\n        });\n    }\n}\n//# sourceMappingURL=job.js.map","/**\n * Returns a function wrapper that will only call the passed function once\n *\n * Important - the passed function should not throw or reject\n */\nexport function debounce(func, wait) {\n    let timeout;\n    const output = function () {\n        const later = function () {\n            timeout = undefined;\n            void func();\n        };\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n    };\n    output.start = () => { };\n    output.stop = () => {\n        clearTimeout(timeout);\n    };\n    return output;\n}\n//# sourceMappingURL=utils.js.map","/**\n * @packageDocumentation\n *\n * Based on `p-queue` but with access to the underlying queue, aborting a task\n * removes it from the queue and you can iterate over the queue results.\n *\n * @example\n *\n * ```ts\n * import all from 'it-all'\n * import { Queue } from 'it-queue'\n *\n * const queue = new Queue({\n *   concurrency: Infinity\n * })\n * void queue.add(async () => {\n *   return 'hello'\n * })\n * void queue.add(async () => {\n *   return 'world'\n * })\n *\n * const results = await all(queue)\n * // ['hello', 'world']\n *\n * // how many items are in the queue (includes running items)\n * console.info(queue.size)\n *\n * // how many items are running\n * console.info(queue.running)\n *\n * // how many items have not started running yet\n * console.info(queue.queued)\n * ```\n */\nimport { AbortError } from 'abort-error';\nimport { pushable } from 'it-pushable';\nimport { TypedEventEmitter } from 'main-event';\nimport { raceEvent } from 'race-event';\nimport { QueueFullError } from './errors.js';\nimport { Job } from './job.js';\nimport { debounce } from './utils.js';\n/**\n * Heavily influence by `p-queue` with the following differences:\n *\n * 1. Items remain at the head of the queue while they are running so `queue.size` includes `queue.pending` items - this is so interested parties can join the results of a queue item while it is running\n * 2. The options for a job are stored separately to the job in order for them to be modified while they are still in the queue\n * 3. If a job's abort signal fires before execution begins, it is removed from the queue immediately\n * 4. 'success'/'failure' events are emitted instead of 'error'/'complete'\n */\nexport class Queue extends TypedEventEmitter {\n    concurrency;\n    maxSize;\n    queue;\n    pending;\n    sort;\n    autoStart;\n    constructor(init = {}) {\n        super();\n        this.concurrency = init.concurrency ?? Number.POSITIVE_INFINITY;\n        this.maxSize = init.maxSize ?? Number.POSITIVE_INFINITY;\n        this.pending = 0;\n        this.autoStart = init.autoStart ?? true;\n        this.sort = init.sort;\n        this.queue = [];\n        this.emitEmpty = debounce(this.emitEmpty.bind(this), 1);\n        this.emitIdle = debounce(this.emitIdle.bind(this), 1);\n    }\n    [Symbol.asyncIterator]() {\n        return this.toGenerator();\n    }\n    emitEmpty() {\n        if (this.size !== 0) {\n            return;\n        }\n        this.safeDispatchEvent('empty');\n    }\n    emitIdle() {\n        if (this.running !== 0) {\n            return;\n        }\n        this.safeDispatchEvent('idle');\n    }\n    tryToStartAnother() {\n        if (this.size === 0) {\n            this.emitEmpty();\n            if (this.running === 0) {\n                this.emitIdle();\n            }\n            return false;\n        }\n        if (this.pending < this.concurrency) {\n            let job;\n            for (const j of this.queue) {\n                if (j.status === 'queued') {\n                    job = j;\n                    break;\n                }\n            }\n            if (job == null) {\n                return false;\n            }\n            this.safeDispatchEvent('active');\n            this.pending++;\n            void job.run()\n                .finally(() => {\n                // remove the job from the queue\n                for (let i = 0; i < this.queue.length; i++) {\n                    if (this.queue[i] === job) {\n                        this.queue.splice(i, 1);\n                        break;\n                    }\n                }\n                this.pending--;\n                this.safeDispatchEvent('next');\n                if (this.autoStart) {\n                    this.tryToStartAnother();\n                }\n            });\n            return true;\n        }\n        return false;\n    }\n    enqueue(job) {\n        this.queue.push(job);\n        if (this.sort != null) {\n            this.queue.sort(this.sort);\n        }\n    }\n    /**\n     * Start the queue. If the `autoStart` parameter passed to the constructor was\n     * not `false` this is a no-op\n     */\n    start() {\n        if (this.autoStart !== false) {\n            return;\n        }\n        this.autoStart = true;\n        this.tryToStartAnother();\n    }\n    /**\n     * Prevent further jobs from running - call `.start` to start the queue again\n     */\n    pause() {\n        this.autoStart = false;\n    }\n    /**\n     * Adds a sync or async task to the queue. Always returns a promise.\n     */\n    async add(fn, options) {\n        options?.signal?.throwIfAborted();\n        if (this.size === this.maxSize) {\n            throw new QueueFullError();\n        }\n        const job = new Job(fn, options);\n        this.enqueue(job);\n        this.safeDispatchEvent('add');\n        if (this.autoStart) {\n            this.tryToStartAnother();\n        }\n        return job.join(options)\n            .then(result => {\n            this.safeDispatchEvent('success', { detail: { job, result } });\n            return result;\n        })\n            .catch(err => {\n            if (job.status === 'queued') {\n                // job was aborted before it started - remove the job from the queue\n                for (let i = 0; i < this.queue.length; i++) {\n                    if (this.queue[i] === job) {\n                        this.queue.splice(i, 1);\n                        break;\n                    }\n                }\n            }\n            this.safeDispatchEvent('failure', { detail: { job, error: err } });\n            throw err;\n        });\n    }\n    /**\n     * Clear the queue\n     */\n    clear() {\n        this.queue.splice(0, this.queue.length);\n    }\n    /**\n     * Abort all jobs in the queue and clear it\n     */\n    abort() {\n        this.queue.forEach(job => {\n            job.abort(new AbortError());\n        });\n        this.clear();\n    }\n    /**\n     * Can be called multiple times. Useful if you for example add additional items at a later time.\n     *\n     * @returns A promise that settles when the queue becomes empty.\n     */\n    async onEmpty(options) {\n        // Instantly resolve if the queue is empty\n        if (this.size === 0) {\n            return;\n        }\n        await raceEvent(this, 'empty', options?.signal);\n    }\n    /**\n     * @returns A promise that settles when the queue size is less than the given\n     * limit: `queue.size < limit`.\n     *\n     * If you want to avoid having the queue grow beyond a certain size you can\n     * `await queue.onSizeLessThan()` before adding a new item.\n     *\n     * Note that this only limits the number of items waiting to start. There\n     * could still be up to `concurrency` jobs already running that this call does\n     * not include in its calculation.\n     */\n    async onSizeLessThan(limit, options) {\n        // Instantly resolve if the queue is empty.\n        if (this.size < limit) {\n            return;\n        }\n        await raceEvent(this, 'next', options?.signal, {\n            filter: () => this.size < limit\n        });\n    }\n    /**\n     * The difference with `.onEmpty` is that `.onIdle` guarantees that all work\n     * from the queue has finished. `.onEmpty` merely signals that the queue is\n     * empty, but it could mean that some promises haven't completed yet.\n     *\n     * @returns A promise that settles when the queue becomes empty, and all\n     * promises have completed; `queue.size === 0 && queue.pending === 0`.\n     */\n    async onIdle(options) {\n        // Instantly resolve if none pending and if nothing else is queued\n        if (this.pending === 0 && this.size === 0) {\n            return;\n        }\n        await raceEvent(this, 'idle', options?.signal);\n    }\n    /**\n     * Size of the queue including running items\n     */\n    get size() {\n        return this.queue.length;\n    }\n    /**\n     * The number of queued items waiting to run.\n     */\n    get queued() {\n        return this.queue.length - this.pending;\n    }\n    /**\n     * The number of items currently running.\n     */\n    get running() {\n        return this.pending;\n    }\n    /**\n     * Returns an async generator that makes it easy to iterate over the results\n     * of jobs added to the queue.\n     *\n     * The generator will end when the queue becomes idle, that is there are no\n     * jobs running and no jobs that have yet to run.\n     *\n     * If you need to keep the queue open indefinitely, consider using it-pushable\n     * instead.\n     */\n    async *toGenerator(options) {\n        options?.signal?.throwIfAborted();\n        const stream = pushable({\n            objectMode: true\n        });\n        const cleanup = (err) => {\n            if (err != null) {\n                this.abort();\n            }\n            else {\n                this.clear();\n            }\n            stream.end(err);\n        };\n        const onQueueJobComplete = (evt) => {\n            if (evt.detail != null) {\n                stream.push(evt.detail.result);\n            }\n        };\n        const onQueueError = (evt) => {\n            cleanup(evt.detail.error);\n        };\n        const onQueueIdle = () => {\n            cleanup();\n        };\n        // clear the queue and throw if the query is aborted\n        const onSignalAbort = () => {\n            cleanup(new AbortError('Queue aborted'));\n        };\n        // add listeners\n        this.addEventListener('success', onQueueJobComplete);\n        this.addEventListener('failure', onQueueError);\n        this.addEventListener('idle', onQueueIdle);\n        options?.signal?.addEventListener('abort', onSignalAbort);\n        try {\n            yield* stream;\n        }\n        finally {\n            // remove listeners\n            this.removeEventListener('success', onQueueJobComplete);\n            this.removeEventListener('failure', onQueueError);\n            this.removeEventListener('idle', onQueueIdle);\n            options?.signal?.removeEventListener('abort', onSignalAbort);\n            // empty the queue for when the user has broken out of a loop early\n            cleanup();\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","export const WORKER_REQUEST_READ_LOCK = 'lock:worker:request-read';\nexport const WORKER_ABORT_READ_LOCK_REQUEST = 'lock:worker:abort-read-request';\nexport const WORKER_RELEASE_READ_LOCK = 'lock:worker:release-read';\nexport const MASTER_GRANT_READ_LOCK = 'lock:master:grant-read';\nexport const MASTER_READ_LOCK_ERROR = 'lock:master:error-read';\nexport const WORKER_REQUEST_WRITE_LOCK = 'lock:worker:request-write';\nexport const WORKER_ABORT_WRITE_LOCK_REQUEST = 'lock:worker:abort-write-request';\nexport const WORKER_RELEASE_WRITE_LOCK = 'lock:worker:release-write';\nexport const MASTER_GRANT_WRITE_LOCK = 'lock:master:grant-write';\nexport const MASTER_WRITE_LOCK_ERROR = 'lock:master:error-write';\nexport const WORKER_FINALIZE = 'lock:worker:finalize';\nexport const BROADCAST_CHANNEL_NAME = 'mortice';\nexport const defaultOptions = {\n    singleProcess: false\n};\n//# sourceMappingURL=constants.js.map","import { WORKER_FINALIZE } from '../constants.js';\nexport const handleChannelWorkerLockRequest = (emitter, channel, masterEvent, abortMasterEvent, requestType, abortType, errorType, releaseType, grantType) => {\n    return (event) => {\n        if (event.data == null) {\n            return;\n        }\n        const requestEvent = {\n            type: event.data.type,\n            name: event.data.name,\n            identifier: event.data.identifier\n        };\n        // worker is requesting lock\n        if (requestEvent.type === requestType) {\n            emitter.safeDispatchEvent(masterEvent, {\n                detail: {\n                    name: requestEvent.name,\n                    identifier: requestEvent.identifier,\n                    handler: async () => {\n                        // grant lock to worker\n                        channel.postMessage({\n                            type: grantType,\n                            name: requestEvent.name,\n                            identifier: requestEvent.identifier\n                        });\n                        // wait for worker to finish\n                        await new Promise((resolve) => {\n                            const releaseEventListener = (event) => {\n                                if (event?.data == null) {\n                                    return;\n                                }\n                                const releaseEvent = {\n                                    type: event.data.type,\n                                    name: event.data.name,\n                                    identifier: event.data.identifier\n                                };\n                                if (releaseEvent.type === releaseType && releaseEvent.identifier === requestEvent.identifier) {\n                                    channel.removeEventListener('message', releaseEventListener);\n                                    resolve();\n                                }\n                            };\n                            channel.addEventListener('message', releaseEventListener);\n                        });\n                    },\n                    onError: (err) => {\n                        // send error to worker\n                        channel.postMessage({\n                            type: errorType,\n                            name: requestEvent.name,\n                            identifier: requestEvent.identifier,\n                            error: {\n                                message: err.message,\n                                name: err.name,\n                                stack: err.stack\n                            }\n                        });\n                    }\n                }\n            });\n        }\n        // worker is no longer interested in requesting the lock\n        if (requestEvent.type === abortType) {\n            emitter.safeDispatchEvent(abortMasterEvent, {\n                detail: {\n                    name: requestEvent.name,\n                    identifier: requestEvent.identifier\n                }\n            });\n        }\n        // worker is done with lock\n        if (requestEvent.type === WORKER_FINALIZE) {\n            emitter.safeDispatchEvent('finalizeRequest', {\n                detail: {\n                    name: requestEvent.name\n                }\n            });\n        }\n    };\n};\n//# sourceMappingURL=channel.js.map","export const nanoid = (size = 10) => {\n    return Math.random().toString().substring(2, size + 2);\n};\n//# sourceMappingURL=utils.js.map","import { WORKER_REQUEST_READ_LOCK, WORKER_RELEASE_READ_LOCK, MASTER_GRANT_READ_LOCK, WORKER_REQUEST_WRITE_LOCK, WORKER_RELEASE_WRITE_LOCK, MASTER_GRANT_WRITE_LOCK, WORKER_ABORT_READ_LOCK_REQUEST, WORKER_ABORT_WRITE_LOCK_REQUEST, MASTER_READ_LOCK_ERROR, MASTER_WRITE_LOCK_ERROR, WORKER_FINALIZE, BROADCAST_CHANNEL_NAME } from '../constants.js';\nimport { nanoid } from '../utils.js';\nexport class MorticeChannelWorker {\n    name;\n    channel;\n    constructor(name) {\n        this.name = name;\n        this.channel = new BroadcastChannel(BROADCAST_CHANNEL_NAME);\n    }\n    readLock(options) {\n        return this.sendRequest(WORKER_REQUEST_READ_LOCK, WORKER_ABORT_READ_LOCK_REQUEST, MASTER_GRANT_READ_LOCK, MASTER_READ_LOCK_ERROR, WORKER_RELEASE_READ_LOCK, options);\n    }\n    writeLock(options) {\n        return this.sendRequest(WORKER_REQUEST_WRITE_LOCK, WORKER_ABORT_WRITE_LOCK_REQUEST, MASTER_GRANT_WRITE_LOCK, MASTER_WRITE_LOCK_ERROR, WORKER_RELEASE_WRITE_LOCK, options);\n    }\n    finalize() {\n        this.channel.postMessage({\n            type: WORKER_FINALIZE,\n            name: this.name\n        });\n        this.channel.close();\n    }\n    async sendRequest(requestType, abortType, grantType, errorType, releaseType, options) {\n        options?.signal?.throwIfAborted();\n        const id = nanoid();\n        this.channel.postMessage({\n            type: requestType,\n            identifier: id,\n            name: this.name\n        });\n        return new Promise((resolve, reject) => {\n            const abortListener = () => {\n                this.channel.postMessage({\n                    type: abortType,\n                    identifier: id,\n                    name: this.name\n                });\n            };\n            options?.signal?.addEventListener('abort', abortListener, {\n                once: true\n            });\n            const listener = (event) => {\n                if (event.data?.identifier !== id) {\n                    return;\n                }\n                if (event.data?.type === grantType) {\n                    this.channel.removeEventListener('message', listener);\n                    options?.signal?.removeEventListener('abort', abortListener);\n                    // lock granted\n                    resolve(() => {\n                        // release lock\n                        this.channel.postMessage({\n                            type: releaseType,\n                            identifier: id,\n                            name: this.name\n                        });\n                    });\n                }\n                if (event.data.type === errorType) {\n                    this.channel.removeEventListener('message', listener);\n                    options?.signal?.removeEventListener('abort', abortListener);\n                    // error while waiting for grant of lock\n                    const err = new Error();\n                    if (event.data.error != null) {\n                        err.message = event.data.error.message;\n                        err.name = event.data.error.name;\n                        err.stack = event.data.error.stack;\n                    }\n                    reject(err);\n                }\n            };\n            this.channel.addEventListener('message', listener);\n        });\n    }\n}\n//# sourceMappingURL=channel.js.map","import { TypedEventEmitter } from 'main-event';\nimport { WORKER_REQUEST_READ_LOCK, WORKER_RELEASE_READ_LOCK, MASTER_GRANT_READ_LOCK, WORKER_REQUEST_WRITE_LOCK, WORKER_RELEASE_WRITE_LOCK, MASTER_GRANT_WRITE_LOCK, WORKER_ABORT_READ_LOCK_REQUEST, WORKER_ABORT_WRITE_LOCK_REQUEST, MASTER_READ_LOCK_ERROR, MASTER_WRITE_LOCK_ERROR, BROADCAST_CHANNEL_NAME, defaultOptions } from './constants.js';\nimport { handleChannelWorkerLockRequest } from \"./main/channel.js\";\nimport { MorticeChannelWorker } from \"./workers/channel.js\";\nexport default (options) => {\n    options = Object.assign({}, defaultOptions, options);\n    const isPrimary = Boolean(globalThis.document) || options.singleProcess;\n    if (isPrimary) {\n        const channel = new BroadcastChannel(BROADCAST_CHANNEL_NAME);\n        const emitter = new TypedEventEmitter();\n        channel.addEventListener('message', handleChannelWorkerLockRequest(emitter, channel, 'requestReadLock', 'abortReadLockRequest', WORKER_REQUEST_READ_LOCK, WORKER_ABORT_READ_LOCK_REQUEST, MASTER_READ_LOCK_ERROR, WORKER_RELEASE_READ_LOCK, MASTER_GRANT_READ_LOCK));\n        channel.addEventListener('message', handleChannelWorkerLockRequest(emitter, channel, 'requestWriteLock', 'abortWriteLockRequest', WORKER_REQUEST_WRITE_LOCK, WORKER_ABORT_WRITE_LOCK_REQUEST, MASTER_WRITE_LOCK_ERROR, WORKER_RELEASE_WRITE_LOCK, MASTER_GRANT_WRITE_LOCK));\n        return emitter;\n    }\n    return new MorticeChannelWorker(options.name);\n};\n//# sourceMappingURL=browser.js.map","import { AbortError } from 'abort-error';\nimport { Queue } from 'it-queue';\nimport impl from './node.js';\nconst mutexes = new Map();\nlet implementation;\nexport function isMortice(obj) {\n    return typeof obj?.readLock === 'function' && typeof obj?.writeLock === 'function';\n}\nexport function getImplementation(opts) {\n    if (implementation == null) {\n        implementation = impl(opts);\n        if (!isMortice(implementation)) {\n            const emitter = implementation;\n            // we are master, set up worker requests\n            emitter.addEventListener('requestReadLock', (event) => {\n                const mutexName = event.detail.name;\n                const identifier = event.detail.identifier;\n                const mutex = mutexes.get(mutexName);\n                if (mutex == null) {\n                    return;\n                }\n                const abortController = new AbortController();\n                const abortListener = (event) => {\n                    if (event.detail.name !== mutexName || event.detail.identifier !== identifier) {\n                        return;\n                    }\n                    abortController.abort();\n                };\n                emitter.addEventListener('abortReadLockRequest', abortListener);\n                void mutex.readLock({\n                    signal: abortController.signal\n                })\n                    .then(async (release) => {\n                    await event.detail.handler()\n                        .finally(() => {\n                        release();\n                    });\n                })\n                    .catch(err => {\n                    event.detail.onError(err);\n                })\n                    .finally(() => {\n                    emitter.removeEventListener('abortReadLockRequest', abortListener);\n                });\n            });\n            emitter.addEventListener('requestWriteLock', (event) => {\n                const mutexName = event.detail.name;\n                const identifier = event.detail.identifier;\n                const mutex = mutexes.get(mutexName);\n                if (mutex == null) {\n                    return;\n                }\n                const abortController = new AbortController();\n                const abortListener = (event) => {\n                    if (event.detail.name !== mutexName || event.detail.identifier !== identifier) {\n                        return;\n                    }\n                    abortController.abort();\n                };\n                emitter.addEventListener('abortWriteLockRequest', abortListener);\n                void mutex.writeLock({\n                    signal: abortController.signal\n                })\n                    .then(async (release) => {\n                    await event.detail.handler()\n                        .finally(() => {\n                        release();\n                    });\n                })\n                    .catch(err => {\n                    event.detail.onError(err);\n                })\n                    .finally(() => {\n                    emitter.removeEventListener('abortWriteLockRequest', abortListener);\n                });\n            });\n            emitter.addEventListener('finalizeRequest', (event) => {\n                const mutexName = event.detail.name;\n                const mutex = mutexes.get(mutexName);\n                if (mutex == null) {\n                    return;\n                }\n                mutex.finalize();\n            });\n        }\n    }\n    return implementation;\n}\nasync function createReleasable(queue, options) {\n    let res;\n    let rej;\n    const p = new Promise((resolve, reject) => {\n        res = resolve;\n        rej = reject;\n    });\n    const listener = () => {\n        rej(new AbortError());\n    };\n    options?.signal?.addEventListener('abort', listener, {\n        once: true\n    });\n    queue.add(async () => {\n        await new Promise((resolve) => {\n            res(() => {\n                options?.signal?.removeEventListener('abort', listener);\n                resolve();\n            });\n        });\n    }, {\n        signal: options?.signal\n    })\n        .catch((err) => {\n        rej(err);\n    });\n    return p;\n}\nexport const createMutex = (name, options) => {\n    let mutex = mutexes.get(name);\n    if (mutex != null) {\n        return mutex;\n    }\n    const implementation = getImplementation(options);\n    // a Mortice instance will be returned if we are a worker, otherwise if we are\n    // primary an event target will be returned that fires events when workers\n    // request a lock\n    if (isMortice(implementation)) {\n        mutex = implementation;\n        mutexes.set(name, mutex);\n        return mutex;\n    }\n    const masterQueue = new Queue({\n        concurrency: 1\n    });\n    let readQueue;\n    mutex = {\n        async readLock(opts) {\n            // If there's already a read queue, just add the task to it\n            if (readQueue != null) {\n                return createReleasable(readQueue, opts);\n            }\n            // Create a new read queue\n            readQueue = new Queue({\n                concurrency: options.concurrency,\n                autoStart: false\n            });\n            const localReadQueue = readQueue;\n            // Add the task to the read queue\n            const readPromise = createReleasable(readQueue, opts);\n            void masterQueue.add(async () => {\n                // Start the task only once the master queue has completed processing\n                // any previous tasks\n                localReadQueue.start();\n                // Once all the tasks in the read queue have completed, remove it so\n                // that the next read lock will occur after any write locks that were\n                // started in the interim\n                await localReadQueue.onIdle()\n                    .then(() => {\n                    if (readQueue === localReadQueue) {\n                        readQueue = null;\n                    }\n                });\n            });\n            return readPromise;\n        },\n        async writeLock(opts) {\n            // Remove the read queue reference, so that any later read locks will be\n            // added to a new queue that starts after this write lock has been\n            // released\n            readQueue = null;\n            return createReleasable(masterQueue, opts);\n        },\n        finalize: () => {\n            mutexes.delete(name);\n        },\n        queue: masterQueue\n    };\n    mutexes.set(name, mutex);\n    // if requested, finalize the lock once the last lock holder has released it\n    if (options.autoFinalize === true) {\n        masterQueue.addEventListener('idle', () => {\n            mutex.finalize();\n        }, {\n            once: true\n        });\n    }\n    return mutex;\n};\n//# sourceMappingURL=mortice.js.map","/**\n * @packageDocumentation\n *\n * - Reads occur concurrently\n * - Writes occur one at a time\n * - No reads occur while a write operation is in progress\n * - Locks can be created with different names\n * - Reads/writes can time out\n *\n * @example\n *\n * ```ts\n * import mortice from 'mortice'\n * import delay from 'delay'\n *\n * // the lock name & options objects are both optional\n * const mutex = mortice()\n *\n * Promise.all([\n *   (async () => {\n *     const release = await mutex.readLock()\n *\n *     try {\n *       console.info('read 1')\n *     } finally {\n *       release()\n *     }\n *   })(),\n *   (async () => {\n *     const release = await mutex.readLock()\n *\n *     try {\n *       console.info('read 2')\n *     } finally {\n *       release()\n *     }\n *   })(),\n *   (async () => {\n *     const release = await mutex.writeLock()\n *\n *     try {\n *       await delay(1000)\n *\n *       console.info('write 1')\n *     } finally {\n *       release()\n *     }\n *   })(),\n *   (async () => {\n *     const release = await mutex.readLock()\n *\n *     try {\n *       console.info('read 3')\n *     } finally {\n *       release()\n *     }\n *   })()\n * ])\n * ```\n *\n *     read 1\n *     read 2\n *     <small pause>\n *     write 1\n *     read 3\n *\n * ## Clean up\n *\n * Mutexes are stored globally reference by name, this is so you can obtain the\n * same lock from different contexts, including workers.\n *\n * When a mutex is no longer required, the `.finalize` function should be called\n * to remove any internal references to it.\n *\n * ```ts\n * import mortice from 'mortice'\n *\n * const mutex = mortice()\n *\n * // ...some time later\n *\n * mutex.finalize()\n * ```\n *\n * ## Auto clean up\n *\n * If your app generates a lot of short-lived mutexes and you want to clean them\n * up after the last lock has been released, pass the `autoFinalize` option to\n * mortice in the owning context:\n *\n ```ts\n * import mortice from 'mortice'\n *\n * const mutex = mortice({\n *   autoFinalize: true\n * })\n *\n * const release = await mutex.readLock()\n * // ...some time later\n *\n * release()\n *\n * // mutex will be freed soon after\n * ```\n *\n * ## React native support\n *\n * This module should run on react native but it only supports single-process\n * concurrency as it's not clear to the author (disclaimer - not a react native\n * dev) what the officially supported process concurrency model is.\n *\n * Please open an issue if this is a feature you would like to see added.\n */\nimport { Queue } from 'it-queue';\nimport { createMutex } from \"./mortice.js\";\nconst defaultOptions = {\n    name: 'lock',\n    concurrency: Infinity,\n    singleProcess: false,\n    autoFinalize: false\n};\nexport default function createMortice(options) {\n    const opts = Object.assign({}, defaultOptions, options);\n    return createMutex(opts.name, opts);\n}\n//# sourceMappingURL=index.js.map","export const MAX_ADDRESS_AGE = 3_600_000;\nexport const MAX_PEER_AGE = 21_600_000;\n//# sourceMappingURL=constants.js.map","/* eslint-disable complexity */\nimport { decodeMessage, encodeMessage, MaxLengthError, MaxSizeError, message } from 'protons-runtime';\nimport { alloc as uint8ArrayAlloc } from 'uint8arrays/alloc';\nexport var Peer;\n(function (Peer) {\n    let Peer$metadataEntry;\n    (function (Peer$metadataEntry) {\n        let _codec;\n        Peer$metadataEntry.codec = () => {\n            if (_codec == null) {\n                _codec = message((obj, w, opts = {}) => {\n                    if (opts.lengthDelimited !== false) {\n                        w.fork();\n                    }\n                    if ((obj.key != null && obj.key !== '')) {\n                        w.uint32(10);\n                        w.string(obj.key);\n                    }\n                    if ((obj.value != null && obj.value.byteLength > 0)) {\n                        w.uint32(18);\n                        w.bytes(obj.value);\n                    }\n                    if (opts.lengthDelimited !== false) {\n                        w.ldelim();\n                    }\n                }, (reader, length, opts = {}) => {\n                    const obj = {\n                        key: '',\n                        value: uint8ArrayAlloc(0)\n                    };\n                    const end = length == null ? reader.len : reader.pos + length;\n                    while (reader.pos < end) {\n                        const tag = reader.uint32();\n                        switch (tag >>> 3) {\n                            case 1: {\n                                obj.key = reader.string();\n                                break;\n                            }\n                            case 2: {\n                                obj.value = reader.bytes();\n                                break;\n                            }\n                            default: {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                    }\n                    return obj;\n                });\n            }\n            return _codec;\n        };\n        Peer$metadataEntry.encode = (obj) => {\n            return encodeMessage(obj, Peer$metadataEntry.codec());\n        };\n        Peer$metadataEntry.decode = (buf, opts) => {\n            return decodeMessage(buf, Peer$metadataEntry.codec(), opts);\n        };\n    })(Peer$metadataEntry = Peer.Peer$metadataEntry || (Peer.Peer$metadataEntry = {}));\n    let Peer$tagsEntry;\n    (function (Peer$tagsEntry) {\n        let _codec;\n        Peer$tagsEntry.codec = () => {\n            if (_codec == null) {\n                _codec = message((obj, w, opts = {}) => {\n                    if (opts.lengthDelimited !== false) {\n                        w.fork();\n                    }\n                    if ((obj.key != null && obj.key !== '')) {\n                        w.uint32(10);\n                        w.string(obj.key);\n                    }\n                    if (obj.value != null) {\n                        w.uint32(18);\n                        Tag.codec().encode(obj.value, w);\n                    }\n                    if (opts.lengthDelimited !== false) {\n                        w.ldelim();\n                    }\n                }, (reader, length, opts = {}) => {\n                    const obj = {\n                        key: ''\n                    };\n                    const end = length == null ? reader.len : reader.pos + length;\n                    while (reader.pos < end) {\n                        const tag = reader.uint32();\n                        switch (tag >>> 3) {\n                            case 1: {\n                                obj.key = reader.string();\n                                break;\n                            }\n                            case 2: {\n                                obj.value = Tag.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.value\n                                });\n                                break;\n                            }\n                            default: {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                    }\n                    return obj;\n                });\n            }\n            return _codec;\n        };\n        Peer$tagsEntry.encode = (obj) => {\n            return encodeMessage(obj, Peer$tagsEntry.codec());\n        };\n        Peer$tagsEntry.decode = (buf, opts) => {\n            return decodeMessage(buf, Peer$tagsEntry.codec(), opts);\n        };\n    })(Peer$tagsEntry = Peer.Peer$tagsEntry || (Peer.Peer$tagsEntry = {}));\n    let _codec;\n    Peer.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.addresses != null) {\n                    for (const value of obj.addresses) {\n                        w.uint32(10);\n                        Address.codec().encode(value, w);\n                    }\n                }\n                if (obj.protocols != null) {\n                    for (const value of obj.protocols) {\n                        w.uint32(18);\n                        w.string(value);\n                    }\n                }\n                if (obj.publicKey != null) {\n                    w.uint32(34);\n                    w.bytes(obj.publicKey);\n                }\n                if (obj.peerRecordEnvelope != null) {\n                    w.uint32(42);\n                    w.bytes(obj.peerRecordEnvelope);\n                }\n                if (obj.metadata != null && obj.metadata.size !== 0) {\n                    for (const [key, value] of obj.metadata.entries()) {\n                        w.uint32(50);\n                        Peer.Peer$metadataEntry.codec().encode({ key, value }, w);\n                    }\n                }\n                if (obj.tags != null && obj.tags.size !== 0) {\n                    for (const [key, value] of obj.tags.entries()) {\n                        w.uint32(58);\n                        Peer.Peer$tagsEntry.codec().encode({ key, value }, w);\n                    }\n                }\n                if (obj.updated != null) {\n                    w.uint32(64);\n                    w.uint64Number(obj.updated);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    addresses: [],\n                    protocols: [],\n                    metadata: new Map(),\n                    tags: new Map()\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            if (opts.limits?.addresses != null && obj.addresses.length === opts.limits.addresses) {\n                                throw new MaxLengthError('Decode error - map field \"addresses\" had too many elements');\n                            }\n                            obj.addresses.push(Address.codec().decode(reader, reader.uint32(), {\n                                limits: opts.limits?.addresses$\n                            }));\n                            break;\n                        }\n                        case 2: {\n                            if (opts.limits?.protocols != null && obj.protocols.length === opts.limits.protocols) {\n                                throw new MaxLengthError('Decode error - map field \"protocols\" had too many elements');\n                            }\n                            obj.protocols.push(reader.string());\n                            break;\n                        }\n                        case 4: {\n                            obj.publicKey = reader.bytes();\n                            break;\n                        }\n                        case 5: {\n                            obj.peerRecordEnvelope = reader.bytes();\n                            break;\n                        }\n                        case 6: {\n                            if (opts.limits?.metadata != null && obj.metadata.size === opts.limits.metadata) {\n                                throw new MaxSizeError('Decode error - map field \"metadata\" had too many elements');\n                            }\n                            const entry = Peer.Peer$metadataEntry.codec().decode(reader, reader.uint32());\n                            obj.metadata.set(entry.key, entry.value);\n                            break;\n                        }\n                        case 7: {\n                            if (opts.limits?.tags != null && obj.tags.size === opts.limits.tags) {\n                                throw new MaxSizeError('Decode error - map field \"tags\" had too many elements');\n                            }\n                            const entry = Peer.Peer$tagsEntry.codec().decode(reader, reader.uint32(), {\n                                limits: {\n                                    value: opts.limits?.tags$value\n                                }\n                            });\n                            obj.tags.set(entry.key, entry.value);\n                            break;\n                        }\n                        case 8: {\n                            obj.updated = reader.uint64Number();\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    Peer.encode = (obj) => {\n        return encodeMessage(obj, Peer.codec());\n    };\n    Peer.decode = (buf, opts) => {\n        return decodeMessage(buf, Peer.codec(), opts);\n    };\n})(Peer || (Peer = {}));\nexport var Address;\n(function (Address) {\n    let _codec;\n    Address.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if ((obj.multiaddr != null && obj.multiaddr.byteLength > 0)) {\n                    w.uint32(10);\n                    w.bytes(obj.multiaddr);\n                }\n                if (obj.isCertified != null) {\n                    w.uint32(16);\n                    w.bool(obj.isCertified);\n                }\n                if (obj.observed != null) {\n                    w.uint32(24);\n                    w.uint64Number(obj.observed);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    multiaddr: uint8ArrayAlloc(0)\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.multiaddr = reader.bytes();\n                            break;\n                        }\n                        case 2: {\n                            obj.isCertified = reader.bool();\n                            break;\n                        }\n                        case 3: {\n                            obj.observed = reader.uint64Number();\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    Address.encode = (obj) => {\n        return encodeMessage(obj, Address.codec());\n    };\n    Address.decode = (buf, opts) => {\n        return decodeMessage(buf, Address.codec(), opts);\n    };\n})(Address || (Address = {}));\nexport var Tag;\n(function (Tag) {\n    let _codec;\n    Tag.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if ((obj.value != null && obj.value !== 0)) {\n                    w.uint32(8);\n                    w.uint32(obj.value);\n                }\n                if (obj.expiry != null) {\n                    w.uint32(16);\n                    w.uint64(obj.expiry);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    value: 0\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.value = reader.uint32();\n                            break;\n                        }\n                        case 2: {\n                            obj.expiry = reader.uint64();\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    Tag.encode = (obj) => {\n        return encodeMessage(obj, Tag.codec());\n    };\n    Tag.decode = (buf, opts) => {\n        return decodeMessage(buf, Tag.codec(), opts);\n    };\n})(Tag || (Tag = {}));\n//# sourceMappingURL=peer.js.map","import { publicKeyFromProtobuf } from '@libp2p/crypto/keys';\nimport { peerIdFromPublicKey } from '@libp2p/peer-id';\nimport { multiaddr } from '@multiformats/multiaddr';\nimport { Peer as PeerPB } from '../pb/peer.js';\nfunction populatePublicKey(peerId, protobuf) {\n    if (peerId.publicKey != null || protobuf.publicKey == null) {\n        return peerId;\n    }\n    let digest;\n    if (peerId.type === 'RSA') {\n        // avoid hashing public key\n        digest = peerId.toMultihash();\n    }\n    const publicKey = publicKeyFromProtobuf(protobuf.publicKey, digest);\n    return peerIdFromPublicKey(publicKey);\n}\nexport function bytesToPeer(peerId, buf, maxAddressAge) {\n    const peer = PeerPB.decode(buf);\n    return pbToPeer(peerId, peer, maxAddressAge);\n}\nexport function pbToPeer(peerId, peer, maxAddressAge) {\n    const tags = new Map();\n    // remove any expired tags\n    const now = BigInt(Date.now());\n    for (const [key, tag] of peer.tags.entries()) {\n        if (tag.expiry != null && tag.expiry < now) {\n            continue;\n        }\n        tags.set(key, tag);\n    }\n    return {\n        ...peer,\n        id: populatePublicKey(peerId, peer),\n        addresses: peer.addresses\n            // remove any expired multiaddrs\n            .filter(({ observed }) => observed != null && observed > (Date.now() - maxAddressAge))\n            .map(({ multiaddr: ma, isCertified }) => {\n            return {\n                multiaddr: multiaddr(ma),\n                isCertified: isCertified ?? false\n            };\n        }),\n        metadata: peer.metadata,\n        peerRecordEnvelope: peer.peerRecordEnvelope ?? undefined,\n        tags\n    };\n}\n//# sourceMappingURL=bytes-to-peer.js.map","import { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nexport function peerEquals(peerA, peerB) {\n    return addressesEqual(peerA.addresses, peerB.addresses) &&\n        protocolsEqual(peerA.protocols, peerB.protocols) &&\n        publicKeyEqual(peerA.publicKey, peerB.publicKey) &&\n        peerRecordEnvelope(peerA.peerRecordEnvelope, peerB.peerRecordEnvelope) &&\n        metadataEqual(peerA.metadata, peerB.metadata) &&\n        tagsEqual(peerA.tags, peerB.tags);\n}\nfunction addressesEqual(addressesA, addressesB) {\n    return compareArrays(addressesA, addressesB, (a, b) => {\n        if (a.isCertified !== b.isCertified) {\n            return false;\n        }\n        if (!uint8ArrayEquals(a.multiaddr, b.multiaddr)) {\n            return false;\n        }\n        return true;\n    });\n}\nfunction protocolsEqual(protocolsA, protocolsB) {\n    return compareArrays(protocolsA, protocolsB, (a, b) => a === b);\n}\nfunction publicKeyEqual(publicKeyA, publicKeyB) {\n    return compareOptionalUint8Arrays(publicKeyA, publicKeyB);\n}\nfunction peerRecordEnvelope(envelopeA, envelopeB) {\n    return compareOptionalUint8Arrays(envelopeA, envelopeB);\n}\nfunction metadataEqual(metadataA, metadataB) {\n    return compareMaps(metadataA, metadataB, (a, b) => uint8ArrayEquals(a, b));\n}\nfunction tagsEqual(metadataA, metadataB) {\n    return compareMaps(metadataA, metadataB, (a, b) => a.value === b.value && a.expiry === b.expiry);\n}\nfunction compareOptionalUint8Arrays(arrA, arrB) {\n    if (arrA == null && arrB == null) {\n        return true;\n    }\n    if (arrA != null && arrB != null) {\n        return uint8ArrayEquals(arrA, arrB);\n    }\n    return false;\n}\nfunction compareArrays(arrA, arrB, compare) {\n    if (arrA.length !== arrB.length) {\n        return false;\n    }\n    for (let i = 0; i < arrA.length; i++) {\n        if (!compare(arrA[i], arrB[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction compareMaps(mapA, mapB, compare) {\n    if (mapA.size !== mapB.size) {\n        return false;\n    }\n    for (const [key, value] of mapA.entries()) {\n        const valueB = mapB.get(key);\n        if (valueB == null) {\n            return false;\n        }\n        if (!compare(value, valueB)) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=peer-equals.js.map","import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nconst pathSepS = '/';\nconst pathSepB = new TextEncoder().encode(pathSepS);\nconst pathSep = pathSepB[0];\n/**\n * A Key represents the unique identifier of an object.\n * Our Key scheme is inspired by file systems and Google App Engine key model.\n * Keys are meant to be unique across a system. Keys are hierarchical,\n * incorporating more and more specific namespaces. Thus keys can be deemed\n * 'children' or 'ancestors' of other keys:\n * - `new Key('/Comedy')`\n * - `new Key('/Comedy/MontyPython')`\n * Also, every namespace can be parametrized to embed relevant object\n * information. For example, the Key `name` (most specific namespace) could\n * include the object type:\n * - `new Key('/Comedy/MontyPython/Actor:JohnCleese')`\n * - `new Key('/Comedy/MontyPython/Sketch:CheeseShop')`\n * - `new Key('/Comedy/MontyPython/Sketch:CheeseShop/Character:Mousebender')`\n *\n */\nexport class Key {\n    _buf;\n    /**\n     * @param {string | Uint8Array} s\n     * @param {boolean} [clean]\n     */\n    constructor(s, clean) {\n        if (typeof s === 'string') {\n            this._buf = uint8ArrayFromString(s);\n        }\n        else if (s instanceof Uint8Array) {\n            this._buf = s;\n        }\n        else {\n            throw new Error('Invalid key, should be String of Uint8Array');\n        }\n        if (clean == null) {\n            clean = true;\n        }\n        if (clean) {\n            this.clean();\n        }\n        if (this._buf.byteLength === 0 || this._buf[0] !== pathSep) {\n            throw new Error('Invalid key');\n        }\n    }\n    /**\n     * Convert to the string representation\n     *\n     * @param {import('uint8arrays/to-string').SupportedEncodings} [encoding] - The encoding to use.\n     * @returns {string}\n     */\n    toString(encoding = 'utf8') {\n        return uint8ArrayToString(this._buf, encoding);\n    }\n    /**\n     * Return the Uint8Array representation of the key\n     *\n     * @returns {Uint8Array}\n     */\n    uint8Array() {\n        return this._buf;\n    }\n    /**\n     * Return string representation of the key\n     *\n     * @returns {string}\n     */\n    get [Symbol.toStringTag]() {\n        return `Key(${this.toString()})`;\n    }\n    /**\n     * Constructs a key out of a namespace array.\n     *\n     * @param {Array<string>} list - The array of namespaces\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * Key.withNamespaces(['one', 'two'])\n     * // => Key('/one/two')\n     * ```\n     */\n    static withNamespaces(list) {\n        return new Key(list.join(pathSepS));\n    }\n    /**\n     * Returns a randomly (uuid) generated key.\n     *\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * Key.random()\n     * // => Key('/344502982398')\n     * ```\n     */\n    static random() {\n        return new Key(Math.random().toString().substring(2));\n    }\n    /**\n     * @param {*} other\n     */\n    static asKey(other) {\n        if (other instanceof Uint8Array || typeof other === 'string') {\n            // we can create a key from this\n            return new Key(other);\n        }\n        if (typeof other.uint8Array === 'function') {\n            // this is an older version or may have crossed the esm/cjs boundary\n            return new Key(other.uint8Array());\n        }\n        return null;\n    }\n    /**\n     * Cleanup the current key\n     *\n     * @returns {void}\n     */\n    clean() {\n        if (this._buf == null || this._buf.byteLength === 0) {\n            this._buf = pathSepB;\n        }\n        if (this._buf[0] !== pathSep) {\n            const bytes = new Uint8Array(this._buf.byteLength + 1);\n            bytes.fill(pathSep, 0, 1);\n            bytes.set(this._buf, 1);\n            this._buf = bytes;\n        }\n        // normalize does not remove trailing slashes\n        while (this._buf.byteLength > 1 && this._buf[this._buf.byteLength - 1] === pathSep) {\n            this._buf = this._buf.subarray(0, -1);\n        }\n    }\n    /**\n     * Check if the given key is sorted lower than ourself.\n     *\n     * @param {Key} key - The other Key to check against\n     * @returns {boolean}\n     */\n    less(key) {\n        const list1 = this.list();\n        const list2 = key.list();\n        for (let i = 0; i < list1.length; i++) {\n            if (list2.length < i + 1) {\n                return false;\n            }\n            const c1 = list1[i];\n            const c2 = list2[i];\n            if (c1 < c2) {\n                return true;\n            }\n            else if (c1 > c2) {\n                return false;\n            }\n        }\n        return list1.length < list2.length;\n    }\n    /**\n     * Returns the key with all parts in reversed order.\n     *\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').reverse()\n     * // => Key('/Actor:JohnCleese/MontyPython/Comedy')\n     * ```\n     */\n    reverse() {\n        return Key.withNamespaces(this.list().slice().reverse());\n    }\n    /**\n     * Returns the `namespaces` making up this Key.\n     *\n     * @returns {Array<string>}\n     */\n    namespaces() {\n        return this.list();\n    }\n    /**\n     * Returns the \"base\" namespace of this key.\n     *\n     * @returns {string}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').baseNamespace()\n     * // => 'Actor:JohnCleese'\n     * ```\n     */\n    baseNamespace() {\n        const ns = this.namespaces();\n        return ns[ns.length - 1];\n    }\n    /**\n     * Returns the `list` representation of this key.\n     *\n     * @returns {Array<string>}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').list()\n     * // => ['Comedy', 'MontyPythong', 'Actor:JohnCleese']\n     * ```\n     */\n    list() {\n        return this.toString().split(pathSepS).slice(1);\n    }\n    /**\n     * Returns the \"type\" of this key (value of last namespace).\n     *\n     * @returns {string}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').type()\n     * // => 'Actor'\n     * ```\n     */\n    type() {\n        return namespaceType(this.baseNamespace());\n    }\n    /**\n     * Returns the \"name\" of this key (field of last namespace).\n     *\n     * @returns {string}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').name()\n     * // => 'JohnCleese'\n     * ```\n     */\n    name() {\n        return namespaceValue(this.baseNamespace());\n    }\n    /**\n     * Returns an \"instance\" of this type key (appends value to namespace).\n     *\n     * @param {string} s - The string to append.\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor').instance('JohnClesse')\n     * // => Key('/Comedy/MontyPython/Actor:JohnCleese')\n     * ```\n     */\n    instance(s) {\n        return new Key(this.toString() + ':' + s);\n    }\n    /**\n     * Returns the \"path\" of this key (parent + type).\n     *\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').path()\n     * // => Key('/Comedy/MontyPython/Actor')\n     * ```\n     */\n    path() {\n        let p = this.parent().toString();\n        if (!p.endsWith(pathSepS)) {\n            p += pathSepS;\n        }\n        p += this.type();\n        return new Key(p);\n    }\n    /**\n     * Returns the `parent` Key of this Key.\n     *\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * new Key(\"/Comedy/MontyPython/Actor:JohnCleese\").parent()\n     * // => Key(\"/Comedy/MontyPython\")\n     * ```\n     */\n    parent() {\n        const list = this.list();\n        if (list.length === 1) {\n            return new Key(pathSepS);\n        }\n        return new Key(list.slice(0, -1).join(pathSepS));\n    }\n    /**\n     * Returns the `child` Key of this Key.\n     *\n     * @param {Key} key - The child Key to add\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython').child(new Key('Actor:JohnCleese'))\n     * // => Key('/Comedy/MontyPython/Actor:JohnCleese')\n     * ```\n     */\n    child(key) {\n        if (this.toString() === pathSepS) {\n            return key;\n        }\n        else if (key.toString() === pathSepS) {\n            return this;\n        }\n        return new Key(this.toString() + key.toString(), false);\n    }\n    /**\n     * Returns whether this key is a prefix of `other`\n     *\n     * @param {Key} other - The other key to test against\n     * @returns {boolean}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy').isAncestorOf('/Comedy/MontyPython')\n     * // => true\n     * ```\n     */\n    isAncestorOf(other) {\n        if (other.toString() === this.toString()) {\n            return false;\n        }\n        return other.toString().startsWith(this.toString());\n    }\n    /**\n     * Returns whether this key is a contains another as prefix.\n     *\n     * @param {Key} other - The other Key to test against\n     * @returns {boolean}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython').isDecendantOf('/Comedy')\n     * // => true\n     * ```\n     */\n    isDecendantOf(other) {\n        if (other.toString() === this.toString()) {\n            return false;\n        }\n        return this.toString().startsWith(other.toString());\n    }\n    /**\n     * Checks if this key has only one namespace.\n     *\n     * @returns {boolean}\n     */\n    isTopLevel() {\n        return this.list().length === 1;\n    }\n    /**\n     * Concats one or more Keys into one new Key.\n     *\n     * @param {Array<Key>} keys - The array of keys to concatenate\n     * @returns {Key}\n     */\n    concat(...keys) {\n        return Key.withNamespaces([...this.namespaces(), ...flatten(keys.map(key => key.namespaces()))]);\n    }\n}\n/**\n * The first component of a namespace. `foo` in `foo:bar`\n *\n * @param {string} ns\n * @returns {string}\n */\nfunction namespaceType(ns) {\n    const parts = ns.split(':');\n    if (parts.length < 2) {\n        return '';\n    }\n    return parts.slice(0, -1).join(':');\n}\n/**\n * The last component of a namespace, `baz` in `foo:bar:baz`.\n *\n * @param {string} ns\n * @returns {string}\n */\nfunction namespaceValue(ns) {\n    const parts = ns.split(':');\n    return parts[parts.length - 1];\n}\n/**\n * Flatten array of arrays (only one level)\n *\n * @template T\n * @param {Array<any>} arr\n * @returns {T[]}\n */\nfunction flatten(arr) {\n    return ([]).concat(...arr);\n}\n//# sourceMappingURL=key.js.map","import { InvalidParametersError, isPeerId } from '@libp2p/interface';\nimport { Key } from 'interface-datastore/key';\nexport const NAMESPACE_COMMON = '/peers/';\nexport function peerIdToDatastoreKey(peerId) {\n    if (!isPeerId(peerId) || peerId.type == null) {\n        throw new InvalidParametersError('Invalid PeerId');\n    }\n    const b32key = peerId.toCID().toString();\n    return new Key(`${NAMESPACE_COMMON}${b32key}`);\n}\n//# sourceMappingURL=peer-id-to-datastore-key.js.map","import { InvalidParametersError } from '@libp2p/interface';\nimport { CODE_P2P, isMultiaddr, multiaddr } from '@multiformats/multiaddr';\nexport async function dedupeFilterAndSortAddresses(peerId, filter, addresses, existingAddresses, options) {\n    const addressMap = new Map();\n    for (const addr of addresses) {\n        if (addr == null) {\n            continue;\n        }\n        if (addr.multiaddr instanceof Uint8Array) {\n            addr.multiaddr = multiaddr(addr.multiaddr);\n        }\n        if (!isMultiaddr(addr.multiaddr)) {\n            throw new InvalidParametersError('Multiaddr was invalid');\n        }\n        if (!(await filter(peerId, addr.multiaddr, options))) {\n            continue;\n        }\n        const isCertified = addr.isCertified ?? false;\n        const maStr = addr.multiaddr.toString();\n        const existingAddr = addressMap.get(maStr);\n        if (existingAddr != null) {\n            addr.isCertified = existingAddr.isCertified || isCertified;\n        }\n        else {\n            addressMap.set(maStr, {\n                multiaddr: addr.multiaddr,\n                isCertified\n            });\n        }\n    }\n    return [...addressMap.values()]\n        .sort((a, b) => {\n        return a.multiaddr.toString().localeCompare(b.multiaddr.toString());\n    })\n        .map(({ isCertified, multiaddr: ma }) => {\n        // strip the trailing peerId if it is present\n        const addrPeer = ma.getComponents().find(c => c.code === CODE_P2P)?.value;\n        if (peerId.equals(addrPeer)) {\n            ma = ma.decapsulate(multiaddr(`/p2p/${peerId}`));\n        }\n        return {\n            isCertified,\n            multiaddr: ma.bytes\n        };\n    });\n}\n//# sourceMappingURL=dedupe-addresses.js.map","/* eslint-disable complexity */\nimport { publicKeyToProtobuf } from '@libp2p/crypto/keys';\nimport { InvalidParametersError } from '@libp2p/interface';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport { dedupeFilterAndSortAddresses } from './dedupe-addresses.js';\nexport async function toPeerPB(peerId, data, strategy, options) {\n    if (data == null) {\n        throw new InvalidParametersError('Invalid PeerData');\n    }\n    if (data.publicKey != null && peerId.publicKey != null && !data.publicKey.equals(peerId.publicKey)) {\n        throw new InvalidParametersError('publicKey bytes do not match peer id publicKey bytes');\n    }\n    const existingPeer = options.existingPeer?.peer;\n    if (existingPeer != null && !peerId.equals(existingPeer.id)) {\n        throw new InvalidParametersError('peer id did not match existing peer id');\n    }\n    let addresses = existingPeer?.addresses ?? [];\n    let protocols = new Set(existingPeer?.protocols ?? []);\n    let metadata = existingPeer?.metadata ?? new Map();\n    let tags = existingPeer?.tags ?? new Map();\n    let peerRecordEnvelope = existingPeer?.peerRecordEnvelope;\n    // when patching, we replace the original fields with passed values\n    if (strategy === 'patch') {\n        if (data.multiaddrs != null || data.addresses != null) {\n            addresses = [];\n            if (data.multiaddrs != null) {\n                addresses.push(...data.multiaddrs.map(multiaddr => ({\n                    isCertified: false,\n                    multiaddr\n                })));\n            }\n            if (data.addresses != null) {\n                addresses.push(...data.addresses);\n            }\n        }\n        if (data.protocols != null) {\n            protocols = new Set(data.protocols);\n        }\n        if (data.metadata != null) {\n            const metadataEntries = data.metadata instanceof Map ? [...data.metadata.entries()] : Object.entries(data.metadata);\n            metadata = createSortedMap(metadataEntries, {\n                validate: validateMetadata\n            });\n        }\n        if (data.tags != null) {\n            const tagsEntries = data.tags instanceof Map ? [...data.tags.entries()] : Object.entries(data.tags);\n            tags = createSortedMap(tagsEntries, {\n                validate: validateTag,\n                map: mapTag\n            });\n        }\n        if (data.peerRecordEnvelope != null) {\n            peerRecordEnvelope = data.peerRecordEnvelope;\n        }\n    }\n    // when merging, we join the original fields with passed values\n    if (strategy === 'merge') {\n        if (data.multiaddrs != null) {\n            addresses.push(...data.multiaddrs.map(multiaddr => ({\n                isCertified: false,\n                multiaddr\n            })));\n        }\n        if (data.addresses != null) {\n            addresses.push(...data.addresses);\n        }\n        if (data.protocols != null) {\n            protocols = new Set([...protocols, ...data.protocols]);\n        }\n        if (data.metadata != null) {\n            const metadataEntries = data.metadata instanceof Map ? [...data.metadata.entries()] : Object.entries(data.metadata);\n            for (const [key, value] of metadataEntries) {\n                if (value == null) {\n                    metadata.delete(key);\n                }\n                else {\n                    metadata.set(key, value);\n                }\n            }\n            metadata = createSortedMap([...metadata.entries()], {\n                validate: validateMetadata\n            });\n        }\n        if (data.tags != null) {\n            const tagsEntries = data.tags instanceof Map ? [...data.tags.entries()] : Object.entries(data.tags);\n            const mergedTags = new Map(tags);\n            for (const [key, value] of tagsEntries) {\n                if (value == null) {\n                    mergedTags.delete(key);\n                }\n                else {\n                    mergedTags.set(key, value);\n                }\n            }\n            tags = createSortedMap([...mergedTags.entries()], {\n                validate: validateTag,\n                map: mapTag\n            });\n        }\n        if (data.peerRecordEnvelope != null) {\n            peerRecordEnvelope = data.peerRecordEnvelope;\n        }\n    }\n    let publicKey;\n    if (existingPeer?.id.publicKey != null) {\n        publicKey = publicKeyToProtobuf(existingPeer.id.publicKey);\n    }\n    else if (data.publicKey != null) {\n        publicKey = publicKeyToProtobuf(data.publicKey);\n    }\n    else if (peerId.publicKey != null) {\n        publicKey = publicKeyToProtobuf(peerId.publicKey);\n    }\n    const output = {\n        addresses: await dedupeFilterAndSortAddresses(peerId, options.addressFilter ?? (async () => true), addresses, options.existingPeer?.peerPB.addresses, options),\n        protocols: [...protocols.values()].sort((a, b) => {\n            return a.localeCompare(b);\n        }),\n        metadata,\n        tags,\n        publicKey,\n        peerRecordEnvelope\n    };\n    // add observed addresses to multiaddrs\n    output.addresses.forEach(addr => {\n        addr.observed = options.existingPeer?.peerPB.addresses?.find(addr => uint8ArrayEquals(addr.multiaddr, addr.multiaddr))?.observed ?? Date.now();\n    });\n    // Ed25519 and secp256k1 have their public key embedded in them so no need to duplicate it\n    if (peerId.type !== 'RSA') {\n        delete output.publicKey;\n    }\n    return output;\n}\n/**\n * In JS maps are ordered by insertion order so create a new map with the\n * keys inserted in alphabetical order.\n */\nfunction createSortedMap(entries, options) {\n    const output = new Map();\n    for (const [key, value] of entries) {\n        if (value == null) {\n            continue;\n        }\n        options.validate(key, value);\n    }\n    for (const [key, value] of entries.sort(([a], [b]) => {\n        return a.localeCompare(b);\n    })) {\n        if (value != null) {\n            output.set(key, options.map?.(key, value) ?? value);\n        }\n    }\n    return output;\n}\nfunction validateMetadata(key, value) {\n    if (typeof key !== 'string') {\n        throw new InvalidParametersError('Metadata key must be a string');\n    }\n    if (!(value instanceof Uint8Array)) {\n        throw new InvalidParametersError('Metadata value must be a Uint8Array');\n    }\n}\nfunction validateTag(key, tag) {\n    if (typeof key !== 'string') {\n        throw new InvalidParametersError('Tag name must be a string');\n    }\n    if (tag.value != null) {\n        if (parseInt(`${tag.value}`, 10) !== tag.value) {\n            throw new InvalidParametersError('Tag value must be an integer');\n        }\n        if (tag.value < 0 || tag.value > 100) {\n            throw new InvalidParametersError('Tag value must be between 0-100');\n        }\n    }\n    if (tag.ttl != null) {\n        if (parseInt(`${tag.ttl}`, 10) !== tag.ttl) {\n            throw new InvalidParametersError('Tag ttl must be an integer');\n        }\n        if (tag.ttl < 0) {\n            throw new InvalidParametersError('Tag ttl must be between greater than 0');\n        }\n    }\n}\nfunction mapTag(key, tag) {\n    let expiry;\n    if (tag.expiry != null) {\n        expiry = tag.expiry;\n    }\n    if (tag.ttl != null) {\n        expiry = BigInt(Date.now() + Number(tag.ttl));\n    }\n    const output = {\n        value: tag.value ?? 0\n    };\n    if (expiry != null) {\n        output.expiry = expiry;\n    }\n    return output;\n}\n//# sourceMappingURL=to-peer-pb.js.map","import { NotFoundError } from '@libp2p/interface';\nimport { PeerMap, trackedPeerMap } from '@libp2p/peer-collections';\nimport { peerIdFromCID } from '@libp2p/peer-id';\nimport mortice from 'mortice';\nimport { base32 } from 'multiformats/bases/base32';\nimport { CID } from 'multiformats/cid';\nimport { MAX_ADDRESS_AGE, MAX_PEER_AGE } from './constants.js';\nimport { Peer as PeerPB } from './pb/peer.js';\nimport { bytesToPeer, pbToPeer } from './utils/bytes-to-peer.js';\nimport { peerEquals } from './utils/peer-equals.js';\nimport { NAMESPACE_COMMON, peerIdToDatastoreKey } from './utils/peer-id-to-datastore-key.js';\nimport { toPeerPB } from './utils/to-peer-pb.js';\nfunction keyToPeerId(key) {\n    // /peers/${peer-id-as-libp2p-key-cid-string-in-base-32}\n    const base32Str = key.toString().split('/')[2];\n    const buf = CID.parse(base32Str, base32);\n    return peerIdFromCID(buf);\n}\nfunction decodePeer(key, value, maxAddressAge) {\n    const peerId = keyToPeerId(key);\n    return bytesToPeer(peerId, value, maxAddressAge);\n}\nfunction mapQuery(query, maxAddressAge) {\n    return {\n        prefix: NAMESPACE_COMMON,\n        filters: (query.filters ?? []).map(fn => ({ key, value }) => {\n            return fn(decodePeer(key, value, maxAddressAge));\n        }),\n        orders: (query.orders ?? []).map(fn => (a, b) => {\n            return fn(decodePeer(a.key, a.value, maxAddressAge), decodePeer(b.key, b.value, maxAddressAge));\n        })\n    };\n}\nexport class PersistentStore {\n    peerId;\n    datastore;\n    locks;\n    addressFilter;\n    log;\n    maxAddressAge;\n    maxPeerAge;\n    constructor(components, init = {}) {\n        this.log = components.logger.forComponent('libp2p:peer-store');\n        this.peerId = components.peerId;\n        this.datastore = components.datastore;\n        this.addressFilter = init.addressFilter;\n        this.locks = trackedPeerMap({\n            name: 'libp2p_peer_store_locks',\n            metrics: components.metrics\n        });\n        this.maxAddressAge = init.maxAddressAge ?? MAX_ADDRESS_AGE;\n        this.maxPeerAge = init.maxPeerAge ?? MAX_PEER_AGE;\n    }\n    getLock(peerId) {\n        let lock = this.locks.get(peerId);\n        if (lock == null) {\n            lock = {\n                refs: 0,\n                lock: mortice({\n                    name: peerId.toString(),\n                    singleProcess: true\n                })\n            };\n            this.locks.set(peerId, lock);\n        }\n        lock.refs++;\n        return lock;\n    }\n    maybeRemoveLock(peerId, lock) {\n        lock.refs--;\n        if (lock.refs === 0) {\n            lock.lock.finalize();\n            this.locks.delete(peerId);\n        }\n    }\n    async getReadLock(peerId, options) {\n        const lock = this.getLock(peerId);\n        try {\n            const release = await lock.lock.readLock(options);\n            return () => {\n                release();\n                this.maybeRemoveLock(peerId, lock);\n            };\n        }\n        catch (err) {\n            this.maybeRemoveLock(peerId, lock);\n            throw err;\n        }\n    }\n    async getWriteLock(peerId, options) {\n        const lock = this.getLock(peerId);\n        try {\n            const release = await lock.lock.writeLock(options);\n            return () => {\n                release();\n                this.maybeRemoveLock(peerId, lock);\n            };\n        }\n        catch (err) {\n            this.maybeRemoveLock(peerId, lock);\n            throw err;\n        }\n    }\n    async has(peerId, options) {\n        try {\n            await this.load(peerId, options);\n            return true;\n        }\n        catch (err) {\n            if (err.name !== 'NotFoundError') {\n                throw err;\n            }\n        }\n        return false;\n    }\n    async delete(peerId, options) {\n        if (this.peerId.equals(peerId)) {\n            return;\n        }\n        await this.datastore.delete(peerIdToDatastoreKey(peerId), options);\n    }\n    async load(peerId, options) {\n        const key = peerIdToDatastoreKey(peerId);\n        const buf = await this.datastore.get(key, options);\n        const peer = PeerPB.decode(buf);\n        if (this.#peerIsExpired(peerId, peer)) {\n            await this.datastore.delete(key, options);\n            throw new NotFoundError();\n        }\n        return pbToPeer(peerId, peer, this.peerId.equals(peerId) ? Infinity : this.maxAddressAge);\n    }\n    async save(peerId, data, options) {\n        const existingPeer = await this.#findExistingPeer(peerId, options);\n        const peerPb = await toPeerPB(peerId, data, 'patch', {\n            ...options,\n            addressFilter: this.addressFilter\n        });\n        return this.#saveIfDifferent(peerId, peerPb, existingPeer);\n    }\n    async patch(peerId, data, options) {\n        const existingPeer = await this.#findExistingPeer(peerId, options);\n        const peerPb = await toPeerPB(peerId, data, 'patch', {\n            ...options,\n            addressFilter: this.addressFilter,\n            existingPeer\n        });\n        return this.#saveIfDifferent(peerId, peerPb, existingPeer);\n    }\n    async merge(peerId, data, options) {\n        const existingPeer = await this.#findExistingPeer(peerId, options);\n        const peerPb = await toPeerPB(peerId, data, 'merge', {\n            addressFilter: this.addressFilter,\n            existingPeer\n        });\n        return this.#saveIfDifferent(peerId, peerPb, existingPeer);\n    }\n    async *all(options) {\n        for await (const { key, value } of this.datastore.query(mapQuery(options ?? {}, this.maxAddressAge), options)) {\n            const peerId = keyToPeerId(key);\n            // skip self peer if present\n            if (peerId.equals(this.peerId)) {\n                continue;\n            }\n            const peer = PeerPB.decode(value);\n            // remove expired peer\n            if (this.#peerIsExpired(peerId, peer)) {\n                await this.datastore.delete(key, options);\n                continue;\n            }\n            yield pbToPeer(peerId, peer, this.peerId.equals(peerId) ? Infinity : this.maxAddressAge);\n        }\n    }\n    async #findExistingPeer(peerId, options) {\n        try {\n            const key = peerIdToDatastoreKey(peerId);\n            const buf = await this.datastore.get(key, options);\n            const peerPB = PeerPB.decode(buf);\n            // remove expired peer\n            if (this.#peerIsExpired(peerId, peerPB)) {\n                await this.datastore.delete(key, options);\n                throw new NotFoundError();\n            }\n            return {\n                peerPB,\n                peer: pbToPeer(peerId, peerPB, this.maxAddressAge)\n            };\n        }\n        catch (err) {\n            if (err.name !== 'NotFoundError') {\n                this.log.error('invalid peer data found in peer store - %e', err);\n            }\n        }\n    }\n    async #saveIfDifferent(peerId, peer, existingPeer, options) {\n        // record last update\n        peer.updated = Date.now();\n        const buf = PeerPB.encode(peer);\n        await this.datastore.put(peerIdToDatastoreKey(peerId), buf, options);\n        return {\n            peer: pbToPeer(peerId, peer, this.maxAddressAge),\n            previous: existingPeer?.peer,\n            updated: existingPeer == null || !peerEquals(peer, existingPeer.peerPB)\n        };\n    }\n    #peerIsExpired(peerId, peer) {\n        if (peer.updated == null) {\n            return true;\n        }\n        if (this.peerId.equals(peerId)) {\n            return false;\n        }\n        const expired = peer.updated < (Date.now() - this.maxPeerAge);\n        const minAddressObserved = Date.now() - this.maxAddressAge;\n        const addrs = peer.addresses.filter(addr => {\n            return addr.observed != null && addr.observed > minAddressObserved;\n        });\n        return expired && addrs.length === 0;\n    }\n}\n//# sourceMappingURL=store.js.map","/**\n * @packageDocumentation\n *\n * The peer store is where libp2p stores data about the peers it has encountered on the network.\n */\nimport { isPeerId } from '@libp2p/interface';\nimport { peerIdFromCID } from '@libp2p/peer-id';\nimport { RecordEnvelope, PeerRecord } from '@libp2p/peer-record';\nimport all from 'it-all';\nimport { PersistentStore } from './store.js';\n/**\n * An implementation of PeerStore that stores data in a Datastore\n */\nclass PersistentPeerStore {\n    store;\n    events;\n    peerId;\n    log;\n    constructor(components, init = {}) {\n        this.log = components.logger.forComponent('libp2p:peer-store');\n        this.events = components.events;\n        this.peerId = components.peerId;\n        this.store = new PersistentStore(components, init);\n    }\n    [Symbol.toStringTag] = '@libp2p/peer-store';\n    async forEach(fn, query) {\n        for await (const peer of this.store.all(query)) {\n            fn(peer);\n        }\n    }\n    async all(query) {\n        return all(this.store.all(query));\n    }\n    async delete(peerId, options) {\n        const release = await this.store.getReadLock(peerId, options);\n        try {\n            await this.store.delete(peerId, options);\n        }\n        finally {\n            release();\n        }\n    }\n    async has(peerId, options) {\n        const release = await this.store.getReadLock(peerId, options);\n        try {\n            return await this.store.has(peerId, options);\n        }\n        finally {\n            this.log.trace('has release read lock');\n            release?.();\n        }\n    }\n    async get(peerId, options) {\n        const release = await this.store.getReadLock(peerId, options);\n        try {\n            return await this.store.load(peerId, options);\n        }\n        finally {\n            release?.();\n        }\n    }\n    async getInfo(peerId, options) {\n        const peer = await this.get(peerId, options);\n        return {\n            id: peer.id,\n            multiaddrs: peer.addresses.map(({ multiaddr }) => multiaddr)\n        };\n    }\n    async save(id, data, options) {\n        const release = await this.store.getWriteLock(id, options);\n        try {\n            const result = await this.store.save(id, data, options);\n            this.#emitIfUpdated(id, result);\n            return result.peer;\n        }\n        finally {\n            release?.();\n        }\n    }\n    async patch(id, data, options) {\n        const release = await this.store.getWriteLock(id, options);\n        try {\n            const result = await this.store.patch(id, data, options);\n            this.#emitIfUpdated(id, result);\n            return result.peer;\n        }\n        finally {\n            release?.();\n        }\n    }\n    async merge(id, data, options) {\n        const release = await this.store.getWriteLock(id, options);\n        try {\n            const result = await this.store.merge(id, data, options);\n            this.#emitIfUpdated(id, result);\n            return result.peer;\n        }\n        finally {\n            release?.();\n        }\n    }\n    async consumePeerRecord(buf, arg1, arg2) {\n        const expectedPeer = isPeerId(arg1) ? arg1 : isPeerId(arg1?.expectedPeer) ? arg1.expectedPeer : undefined;\n        const options = isPeerId(arg1) ? arg2 : arg1 === undefined ? arg2 : arg1;\n        const envelope = await RecordEnvelope.openAndCertify(buf, PeerRecord.DOMAIN, options);\n        const peerId = peerIdFromCID(envelope.publicKey.toCID());\n        if (expectedPeer?.equals(peerId) === false) {\n            this.log('envelope peer id was not the expected peer id - expected: %p received: %p', expectedPeer, peerId);\n            return false;\n        }\n        const peerRecord = PeerRecord.createFromProtobuf(envelope.payload);\n        let peer;\n        try {\n            peer = await this.get(peerId, options);\n        }\n        catch (err) {\n            if (err.name !== 'NotFoundError') {\n                throw err;\n            }\n        }\n        // ensure seq is greater than, or equal to, the last received\n        if (peer?.peerRecordEnvelope != null) {\n            const storedEnvelope = RecordEnvelope.createFromProtobuf(peer.peerRecordEnvelope);\n            const storedRecord = PeerRecord.createFromProtobuf(storedEnvelope.payload);\n            if (storedRecord.seqNumber >= peerRecord.seqNumber) {\n                this.log('sequence number was lower or equal to existing sequence number - stored: %d received: %d', storedRecord.seqNumber, peerRecord.seqNumber);\n                return false;\n            }\n        }\n        await this.patch(peerRecord.peerId, {\n            peerRecordEnvelope: buf,\n            addresses: peerRecord.multiaddrs.map(multiaddr => ({\n                isCertified: true,\n                multiaddr\n            }))\n        }, options);\n        return true;\n    }\n    #emitIfUpdated(id, result) {\n        if (!result.updated) {\n            return;\n        }\n        if (this.peerId.equals(id)) {\n            this.events.safeDispatchEvent('self:peer:update', { detail: result });\n        }\n        else {\n            this.events.safeDispatchEvent('peer:update', { detail: result });\n        }\n    }\n}\nexport function persistentPeerStore(components, init = {}) {\n    return new PersistentPeerStore(components, init);\n}\n//# sourceMappingURL=index.js.map","export class OpenFailedError extends Error {\n    static name = 'OpenFailedError';\n    static code = 'ERR_OPEN_FAILED';\n    name = OpenFailedError.name;\n    code = OpenFailedError.code;\n    constructor(message = 'Open failed') {\n        super(message);\n    }\n}\nexport class CloseFailedError extends Error {\n    static name = 'CloseFailedError';\n    static code = 'ERR_CLOSE_FAILED';\n    name = CloseFailedError.name;\n    code = CloseFailedError.code;\n    constructor(message = 'Close failed') {\n        super(message);\n    }\n}\nexport class PutFailedError extends Error {\n    static name = 'PutFailedError';\n    static code = 'ERR_PUT_FAILED';\n    name = PutFailedError.name;\n    code = PutFailedError.code;\n    constructor(message = 'Put failed') {\n        super(message);\n    }\n}\nexport class GetFailedError extends Error {\n    static name = 'GetFailedError';\n    static code = 'ERR_GET_FAILED';\n    name = GetFailedError.name;\n    code = GetFailedError.code;\n    constructor(message = 'Get failed') {\n        super(message);\n    }\n}\nexport class DeleteFailedError extends Error {\n    static name = 'DeleteFailedError';\n    static code = 'ERR_DELETE_FAILED';\n    name = DeleteFailedError.name;\n    code = DeleteFailedError.code;\n    constructor(message = 'Delete failed') {\n        super(message);\n    }\n}\nexport class HasFailedError extends Error {\n    static name = 'HasFailedError';\n    static code = 'ERR_HAS_FAILED';\n    name = HasFailedError.name;\n    code = HasFailedError.code;\n    constructor(message = 'Has failed') {\n        super(message);\n    }\n}\nexport class NotFoundError extends Error {\n    static name = 'NotFoundError';\n    static code = 'ERR_NOT_FOUND';\n    name = NotFoundError.name;\n    code = NotFoundError.code;\n    constructor(message = 'Not Found') {\n        super(message);\n    }\n}\nexport class AbortError extends Error {\n    static name = 'AbortError';\n    static code = 'ERR_ABORTED';\n    name = AbortError.name;\n    code = AbortError.code;\n    constructor(message = 'Aborted') {\n        super(message);\n    }\n}\n//# sourceMappingURL=errors.js.map","/**\n * @packageDocumentation\n *\n * Mostly useful for tests or when you want to be explicit about consuming an iterable without doing anything with any yielded values.\n *\n * @example\n *\n * ```javascript\n * import drain from 'it-drain'\n *\n * // This can also be an iterator, generator, etc\n * const values = [0, 1, 2, 3, 4]\n *\n * drain(values)\n * ```\n *\n * Async sources must be awaited:\n *\n * ```javascript\n * import drain from 'it-drain'\n *\n * const values = async function * {\n *   yield * [0, 1, 2, 3, 4]\n * }\n *\n * await drain(values())\n * ```\n */\nfunction isAsyncIterable(thing) {\n    return thing[Symbol.asyncIterator] != null;\n}\nfunction drain(source) {\n    if (isAsyncIterable(source)) {\n        return (async () => {\n            for await (const _ of source) { } // eslint-disable-line no-empty,@typescript-eslint/no-unused-vars\n        })();\n    }\n    else {\n        for (const _ of source) { } // eslint-disable-line no-empty,@typescript-eslint/no-unused-vars\n    }\n}\nexport default drain;\n//# sourceMappingURL=index.js.map","/**\n * @packageDocumentation\n *\n * Lets you look at the contents of an async iterator and decide what to do\n *\n * @example\n *\n * ```javascript\n * import peekable from 'it-peekable'\n *\n * // This can also be an iterator, generator, etc\n * const values = [0, 1, 2, 3, 4]\n *\n * const it = peekable(value)\n *\n * const first = it.peek()\n *\n * console.info(first) // 0\n *\n * it.push(first)\n *\n * console.info([...it])\n * // [ 0, 1, 2, 3, 4 ]\n * ```\n *\n * Async sources must be awaited:\n *\n * ```javascript\n * import peekable from 'it-peekable'\n *\n * const values = async function * () {\n *   yield * [0, 1, 2, 3, 4]\n * }\n *\n * const it = peekable(values())\n *\n * const first = await it.peek()\n *\n * console.info(first) // 0\n *\n * it.push(first)\n *\n * console.info(await all(it))\n * // [ 0, 1, 2, 3, 4 ]\n * ```\n */\nfunction peekable(iterable) {\n    // @ts-expect-error can't use Symbol.asyncIterator to index iterable since it might be Iterable\n    const [iterator, symbol] = iterable[Symbol.asyncIterator] != null\n        // @ts-expect-error can't use Symbol.asyncIterator to index iterable since it might be Iterable\n        ? [iterable[Symbol.asyncIterator](), Symbol.asyncIterator]\n        // @ts-expect-error can't use Symbol.iterator to index iterable since it might be AsyncIterable\n        : [iterable[Symbol.iterator](), Symbol.iterator];\n    const queue = [];\n    // @ts-expect-error can't use symbol to index peekable\n    return {\n        peek: () => {\n            return iterator.next();\n        },\n        push: (value) => {\n            queue.push(value);\n        },\n        next: () => {\n            if (queue.length > 0) {\n                return {\n                    done: false,\n                    value: queue.shift()\n                };\n            }\n            return iterator.next();\n        },\n        [symbol]() {\n            return this;\n        }\n    };\n}\nexport default peekable;\n//# sourceMappingURL=index.js.map","/**\n * @packageDocumentation\n *\n * Filter values out of an (async)iterable\n *\n * @example\n *\n * ```javascript\n * import all from 'it-all'\n * import filter from 'it-filter'\n *\n * // This can also be an iterator, generator, etc\n * const values = [0, 1, 2, 3, 4]\n *\n * const fn = (val, index) => val > 2 // Return boolean to keep item\n *\n * const arr = all(filter(values, fn))\n *\n * console.info(arr) // 3, 4\n * ```\n *\n * Async sources and filter functions must be awaited:\n *\n * ```javascript\n * import all from 'it-all'\n * import filter from 'it-filter'\n *\n * const values = async function * () {\n *   yield * [0, 1, 2, 3, 4]\n * }\n *\n * const fn = async val => (val, index) > 2 // Return boolean or promise of boolean to keep item\n *\n * const arr = await all(filter(values, fn))\n *\n * console.info(arr) // 3, 4\n * ```\n */\nimport peek from 'it-peekable';\nfunction isAsyncIterable(thing) {\n    return thing[Symbol.asyncIterator] != null;\n}\nfunction filter(source, fn) {\n    let index = 0;\n    if (isAsyncIterable(source)) {\n        return (async function* () {\n            for await (const entry of source) {\n                if (await fn(entry, index++)) {\n                    yield entry;\n                }\n            }\n        })();\n    }\n    // if mapping function returns a promise we have to return an async generator\n    const peekable = peek(source);\n    const { value, done } = peekable.next();\n    if (done === true) {\n        return (function* () { }());\n    }\n    const res = fn(value, index++);\n    // @ts-expect-error .then is not present on O\n    if (typeof res.then === 'function') {\n        return (async function* () {\n            if (await res) {\n                yield value;\n            }\n            for (const entry of peekable) {\n                if (await fn(entry, index++)) {\n                    yield entry;\n                }\n            }\n        })();\n    }\n    const func = fn;\n    return (function* () {\n        if (res === true) {\n            yield value;\n        }\n        for (const entry of peekable) {\n            if (func(entry, index++)) {\n                yield entry;\n            }\n        }\n    })();\n}\nexport default filter;\n//# sourceMappingURL=index.js.map","/**\n * @packageDocumentation\n *\n * Consumes all values from an (async)iterable and returns them sorted by the passed sort function.\n *\n * @example\n *\n * ```javascript\n * import sort from 'it-sort'\n * import all from 'it-all'\n *\n * const sorter = (a, b) => {\n *   return a.localeCompare(b)\n * }\n *\n * // This can also be an iterator, generator, etc\n * const values = ['foo', 'bar']\n *\n * const arr = all(sort(values, sorter))\n *\n * console.info(arr) // 'bar', 'foo'\n * ```\n *\n * Async sources must be awaited:\n *\n * ```javascript\n * import sort from 'it-sort'\n * import all from 'it-all'\n *\n * const sorter = (a, b) => {\n *   return a.localeCompare(b)\n * }\n *\n * const values = async function * () {\n *   yield * ['foo', 'bar']\n * }\n *\n * const arr = await all(sort(values, sorter))\n *\n * console.info(arr) // 'bar', 'foo'\n * ```\n */\nimport all from 'it-all';\nfunction isAsyncIterable(thing) {\n    return thing[Symbol.asyncIterator] != null;\n}\nfunction sort(source, sorter) {\n    if (isAsyncIterable(source)) {\n        return (async function* () {\n            const arr = await all(source);\n            yield* arr.sort(sorter);\n        })();\n    }\n    return (function* () {\n        const arr = all(source);\n        yield* arr.sort(sorter);\n    })();\n}\nexport default sort;\n//# sourceMappingURL=index.js.map","/**\n * @packageDocumentation\n *\n * For when you only want a few values out of an (async)iterable.\n *\n * @example\n *\n * ```javascript\n * import take from 'it-take'\n * import all from 'it-all'\n *\n * // This can also be an iterator, generator, etc\n * const values = [0, 1, 2, 3, 4]\n *\n * const arr = all(take(values, 2))\n *\n * console.info(arr) // 0, 1\n * ```\n *\n * Async sources must be awaited:\n *\n * ```javascript\n * import take from 'it-take'\n * import all from 'it-all'\n *\n * const values = async function * () {\n *   yield * [0, 1, 2, 3, 4]\n * }\n *\n * const arr = await all(take(values(), 2))\n *\n * console.info(arr) // 0, 1\n * ```\n */\nfunction isAsyncIterable(thing) {\n    return thing[Symbol.asyncIterator] != null;\n}\nfunction take(source, limit) {\n    if (isAsyncIterable(source)) {\n        return (async function* () {\n            let items = 0;\n            if (limit < 1) {\n                return;\n            }\n            for await (const entry of source) {\n                yield entry;\n                items++;\n                if (items === limit) {\n                    return;\n                }\n            }\n        })();\n    }\n    return (function* () {\n        let items = 0;\n        if (limit < 1) {\n            return;\n        }\n        for (const entry of source) {\n            yield entry;\n            items++;\n            if (items === limit) {\n                return;\n            }\n        }\n    })();\n}\nexport default take;\n//# sourceMappingURL=index.js.map","import drain from 'it-drain';\nimport filter from 'it-filter';\nimport sort from 'it-sort';\nimport take from 'it-take';\nexport class BaseDatastore {\n    put(key, val, options) {\n        return Promise.reject(new Error('.put is not implemented'));\n    }\n    get(key, options) {\n        return Promise.reject(new Error('.get is not implemented'));\n    }\n    has(key, options) {\n        return Promise.reject(new Error('.has is not implemented'));\n    }\n    delete(key, options) {\n        return Promise.reject(new Error('.delete is not implemented'));\n    }\n    async *putMany(source, options = {}) {\n        for await (const { key, value } of source) {\n            await this.put(key, value, options);\n            yield key;\n        }\n    }\n    async *getMany(source, options = {}) {\n        for await (const key of source) {\n            yield {\n                key,\n                value: await this.get(key, options)\n            };\n        }\n    }\n    async *deleteMany(source, options = {}) {\n        for await (const key of source) {\n            await this.delete(key, options);\n            yield key;\n        }\n    }\n    batch() {\n        let puts = [];\n        let dels = [];\n        return {\n            put(key, value) {\n                puts.push({ key, value });\n            },\n            delete(key) {\n                dels.push(key);\n            },\n            commit: async (options) => {\n                await drain(this.putMany(puts, options));\n                puts = [];\n                await drain(this.deleteMany(dels, options));\n                dels = [];\n            }\n        };\n    }\n    /**\n     * Extending classes should override `query` or implement this method\n     */\n    // eslint-disable-next-line require-yield\n    async *_all(q, options) {\n        throw new Error('._all is not implemented');\n    }\n    /**\n     * Extending classes should override `queryKeys` or implement this method\n     */\n    // eslint-disable-next-line require-yield\n    async *_allKeys(q, options) {\n        throw new Error('._allKeys is not implemented');\n    }\n    query(q, options) {\n        let it = this._all(q, options);\n        if (q.prefix != null) {\n            const prefix = q.prefix;\n            it = filter(it, (e) => e.key.toString().startsWith(prefix));\n        }\n        if (Array.isArray(q.filters)) {\n            it = q.filters.reduce((it, f) => filter(it, f), it);\n        }\n        if (Array.isArray(q.orders)) {\n            it = q.orders.reduce((it, f) => sort(it, f), it);\n        }\n        if (q.offset != null) {\n            let i = 0;\n            const offset = q.offset;\n            it = filter(it, () => i++ >= offset);\n        }\n        if (q.limit != null) {\n            it = take(it, q.limit);\n        }\n        return it;\n    }\n    queryKeys(q, options) {\n        let it = this._allKeys(q, options);\n        if (q.prefix != null) {\n            const prefix = q.prefix;\n            it = filter(it, (key) => key.toString().startsWith(prefix));\n        }\n        if (Array.isArray(q.filters)) {\n            it = q.filters.reduce((it, f) => filter(it, f), it);\n        }\n        if (Array.isArray(q.orders)) {\n            it = q.orders.reduce((it, f) => sort(it, f), it);\n        }\n        if (q.offset != null) {\n            const offset = q.offset;\n            let i = 0;\n            it = filter(it, () => i++ >= offset);\n        }\n        if (q.limit != null) {\n            it = take(it, q.limit);\n        }\n        return it;\n    }\n}\n//# sourceMappingURL=base.js.map","import { Key } from 'interface-datastore/key';\nimport { NotFoundError } from 'interface-store';\nimport { BaseDatastore } from './base.js';\nexport class MemoryDatastore extends BaseDatastore {\n    data;\n    constructor() {\n        super();\n        this.data = new Map();\n    }\n    put(key, val, options) {\n        options?.signal?.throwIfAborted();\n        this.data.set(key.toString(), val);\n        return key;\n    }\n    get(key, options) {\n        options?.signal?.throwIfAborted();\n        const result = this.data.get(key.toString());\n        if (result == null) {\n            throw new NotFoundError();\n        }\n        return result;\n    }\n    has(key, options) {\n        options?.signal?.throwIfAborted();\n        return this.data.has(key.toString());\n    }\n    delete(key, options) {\n        options?.signal?.throwIfAborted();\n        this.data.delete(key.toString());\n    }\n    *_all(q, options) {\n        options?.signal?.throwIfAborted();\n        for (const [key, value] of this.data.entries()) {\n            yield { key: new Key(key), value };\n            options?.signal?.throwIfAborted();\n        }\n    }\n    *_allKeys(q, options) {\n        options?.signal?.throwIfAborted();\n        for (const key of this.data.keys()) {\n            yield new Key(key);\n            options?.signal?.throwIfAborted();\n        }\n    }\n}\n//# sourceMappingURL=memory.js.map","/**\n * Matches a multiaddr component with the specified code but no value\n */\nexport const code = (code) => {\n    return {\n        match: (vals) => {\n            const component = vals[0];\n            if (component == null) {\n                return false;\n            }\n            if (component.code !== code) {\n                return false;\n            }\n            if (component.value != null) {\n                return false;\n            }\n            return vals.slice(1);\n        }\n    };\n};\n/**\n * Matches a multiaddr component with the specified code and value. If the value\n * is omitted any non-undefined value is matched.\n */\nexport const value = (code, value) => {\n    return {\n        match: (vals) => {\n            const component = vals[0];\n            if (component?.code !== code) {\n                return false;\n            }\n            if (component.value == null) {\n                return false;\n            }\n            if (value != null && component.value !== value) {\n                return false;\n            }\n            return vals.slice(1);\n        }\n    };\n};\n/**\n * Matches a multiaddr component with the specified code and value. If the value\n * is omitted any non-undefined value is matched.\n */\nexport const not = (matcher) => {\n    return {\n        match: (vals) => {\n            const result = matcher.match(vals);\n            if (result === false) {\n                return vals;\n            }\n            return false;\n        }\n    };\n};\n/**\n * An optional matcher\n */\nexport const optional = (matcher) => {\n    return {\n        match: (vals) => {\n            const result = matcher.match(vals);\n            if (result === false) {\n                return vals;\n            }\n            return result;\n        }\n    };\n};\n/**\n * Matches any one of the passed matches\n */\nexport const or = (...matchers) => {\n    return {\n        match: (vals) => {\n            let matches;\n            for (const matcher of matchers) {\n                const result = matcher.match(vals);\n                // no match\n                if (result === false) {\n                    continue;\n                }\n                // choose greediest matcher\n                if (matches == null || result.length < matches.length) {\n                    matches = result;\n                }\n            }\n            if (matches == null) {\n                return false;\n            }\n            return matches;\n        }\n    };\n};\n/**\n * Matches all of the passed matchers\n */\nexport const and = (...matchers) => {\n    return {\n        match: (vals) => {\n            for (const matcher of matchers) {\n                // pass what's left of the array\n                const result = matcher.match(vals);\n                // no match\n                if (result === false) {\n                    return false;\n                }\n                vals = result;\n            }\n            return vals;\n        }\n    };\n};\n/**\n * Create a multiaddr matcher from the passed component matchers\n */\nexport function fmt(...matchers) {\n    function match(ma) {\n        if (ma == null) {\n            return false;\n        }\n        let parts = ma.getComponents();\n        for (const matcher of matchers) {\n            const result = matcher.match(parts);\n            if (result === false) {\n                return false;\n            }\n            parts = result;\n        }\n        return parts;\n    }\n    function matches(ma) {\n        const result = match(ma);\n        return result !== false;\n    }\n    function exactMatch(ma) {\n        const result = match(ma);\n        if (result === false) {\n            return false;\n        }\n        return result.length === 0;\n    }\n    return {\n        matchers,\n        matches,\n        exactMatch\n    };\n}\n//# sourceMappingURL=utils.js.map","/**\n * @packageDocumentation\n *\n * This module exports various matchers that can be used to infer the type of a\n * passed multiaddr.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { DNS } from '@multiformats/multiaddr-matcher'\n *\n * const ma = multiaddr('/dnsaddr/example.org')\n *\n * DNS.matches(ma) // true - this is a multiaddr with a DNS address at the start\n * ```\n *\n * @example\n *\n * The default matching behaviour ignores any subsequent tuples in the multiaddr.\n * If you want stricter matching you can use `.exactMatch`:\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { DNS, Circuit } from '@multiformats/multiaddr-matcher'\n *\n * const ma = multiaddr('/dnsaddr/example.org/p2p/QmFoo/p2p-circuit/p2p/QmBar')\n *\n * DNS.exactMatch(ma) // false - this address has extra tuples after the DNS component\n * Circuit.matches(ma) // true\n * Circuit.exactMatch(ma) // true - the extra tuples are circuit relay related\n * ```\n */\nimport { CODE_P2P, CODE_DNS4, CODE_DNS6, CODE_DNSADDR, CODE_DNS, CODE_IP4, CODE_IP6, CODE_TCP, CODE_UDP, CODE_QUIC, CODE_QUIC_V1, CODE_WS, CODE_WSS, CODE_TLS, CODE_SNI, CODE_WEBRTC_DIRECT, CODE_CERTHASH, CODE_WEBTRANSPORT, CODE_P2P_CIRCUIT, CODE_WEBRTC, CODE_HTTP, CODE_UNIX, CODE_HTTPS, CODE_MEMORY, CODE_IP6ZONE, CODE_IPCIDR } from '@multiformats/multiaddr';\nimport { and, or, optional, fmt, code, value, not } from './utils.js';\n/**\n * Matches PeerId addresses\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { PEER_ID } from '@multiformats/multiaddr-matcher'\n *\n * PEER_ID.matches(multiaddr('/p2p/Qmfoo')) // true\n * PEER_ID.matches(multiaddr('/ipfs/Qmfoo')) // true\n * ```\n */\nconst _PEER_ID = value(CODE_P2P);\nexport const PEER_ID = fmt(_PEER_ID);\n/**\n * DNS matchers\n */\nconst _DNS4 = value(CODE_DNS4);\nconst _DNS6 = value(CODE_DNS6);\nconst _DNSADDR = value(CODE_DNSADDR);\nconst _DNS = value(CODE_DNS);\n/**\n * Matches dns4 addresses.\n *\n * Use {@link DNS DNS} instead to match any type of DNS address.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { DNS4 } from '@multiformats/multiaddr-matcher'\n *\n * DNS4.matches(multiaddr('/dns4/example.org')) // true\n * ```\n */\nexport const DNS4 = fmt(_DNS4, optional(value(CODE_P2P)));\n/**\n * Matches dns6 addresses.\n *\n * Use {@link DNS DNS} instead to match any type of DNS address.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { DNS6 } from '@multiformats/multiaddr-matcher'\n *\n * DNS6.matches(multiaddr('/dns6/example.org')) // true\n * ```\n */\nexport const DNS6 = fmt(_DNS6, optional(value(CODE_P2P)));\n/**\n * Matches dnsaddr addresses.\n *\n * Use {@link DNS DNS} instead to match any type of DNS address.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { DNSADDR } from '@multiformats/multiaddr-matcher'\n *\n * DNSADDR.matches(multiaddr('/dnsaddr/example.org')) // true\n * DNSADDR.matches(multiaddr('/dnsaddr/example.org/p2p/Qmfoo')) // true\n * ```\n */\nexport const DNSADDR = fmt(_DNSADDR, optional(value(CODE_P2P)));\n/**\n * Matches any dns address.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { DNS } from '@multiformats/multiaddr-matcher'\n *\n * DNS.matches(multiaddr('/dnsaddr/example.org')) // true\n * DNS.matches(multiaddr('/dns4/example.org')) // true\n * DNS.matches(multiaddr('/dns6/example.org')) // true\n * DNS.matches(multiaddr('/dns6/example.org/p2p/Qmfoo')) // true\n * ```\n */\nexport const DNS = fmt(or(_DNS, _DNSADDR, _DNS4, _DNS6), optional(value(CODE_P2P)));\nconst _IP4 = and(value(CODE_IP4), optional(value(CODE_IPCIDR)));\nconst _IP6 = and(optional(value(CODE_IP6ZONE)), value(CODE_IP6), optional(value(CODE_IPCIDR)));\nconst _IP = or(_IP4, _IP6);\nconst _IP_OR_DOMAIN = or(_IP, _DNS, _DNS4, _DNS6, _DNSADDR);\n/**\n * A matcher for addresses that start with IP or DNS tuples.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { IP_OR_DOMAIN } from '@multiformats/multiaddr-matcher'\n *\n * IP_OR_DOMAIN.matches(multiaddr('/ip4/123.123.123.123')) // true\n * IP_OR_DOMAIN.matches(multiaddr('/ip4/123.123.123.123/p2p/QmFoo')) // true\n * IP_OR_DOMAIN.matches(multiaddr('/dns/example.com/p2p/QmFoo')) // true\n * IP_OR_DOMAIN.matches(multiaddr('/p2p/QmFoo')) // false\n * ```\n */\nexport const IP_OR_DOMAIN = fmt(or(_IP, and(or(_DNS, _DNSADDR, _DNS4, _DNS6), optional(value(CODE_P2P)))));\n/**\n * Matches ip4 addresses.\n *\n * Use {@link IP IP} instead to match any ip4/ip6 address.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { IP4 } from '@multiformats/multiaddr-matcher'\n *\n * const ma = multiaddr('/ip4/123.123.123.123')\n *\n * IP4.matches(ma) // true\n * ```\n */\nexport const IP4 = fmt(_IP4);\n/**\n * Matches ip6 addresses.\n *\n * Use {@link IP IP} instead to match any ip4/ip6 address.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { IP6 } from '@multiformats/multiaddr-matcher'\n *\n * const ma = multiaddr('/ip6/fe80::1cc1:a3b8:322f:cf22')\n *\n * IP6.matches(ma) // true\n * ```\n */\nexport const IP6 = fmt(_IP6);\n/**\n * Matches ip4 or ip6 addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { IP } from '@multiformats/multiaddr-matcher'\n *\n * IP.matches(multiaddr('/ip4/123.123.123.123')) // true\n * IP.matches(multiaddr('/ip6/fe80::1cc1:a3b8:322f:cf22')) // true\n * ```\n */\nexport const IP = fmt(_IP);\nconst _TCP = and(_IP_OR_DOMAIN, value(CODE_TCP));\nconst _UDP = and(_IP_OR_DOMAIN, value(CODE_UDP));\n/**\n * Matches TCP addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { TCP } from '@multiformats/multiaddr-matcher'\n *\n * TCP.matches(multiaddr('/ip4/123.123.123.123/tcp/1234')) // true\n * ```\n */\nexport const TCP = fmt(and(_TCP, optional(value(CODE_P2P))));\n/**\n * Matches UDP addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { UDP } from '@multiformats/multiaddr-matcher'\n *\n * UDP.matches(multiaddr('/ip4/123.123.123.123/udp/1234')) // true\n * ```\n */\nexport const UDP = fmt(_UDP);\nconst _QUIC = and(_UDP, code(CODE_QUIC), optional(value(CODE_P2P)));\nconst _QUIC_V1 = and(_UDP, code(CODE_QUIC_V1), optional(value(CODE_P2P)));\nconst QUIC_V0_OR_V1 = or(_QUIC, _QUIC_V1);\n/**\n * Matches QUIC addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { QUIC } from '@multiformats/multiaddr-matcher'\n *\n * QUIC.matches(multiaddr('/ip4/123.123.123.123/udp/1234/quic')) // true\n * ```\n */\nexport const QUIC = fmt(_QUIC);\n/**\n * Matches QUICv1 addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { QUIC_V1 } from '@multiformats/multiaddr-matcher'\n *\n * QUIC_V1.matches(multiaddr('/ip4/123.123.123.123/udp/1234/quic-v1')) // true\n * ```\n */\nexport const QUIC_V1 = fmt(_QUIC_V1);\nconst _WEB = or(_IP_OR_DOMAIN, _TCP, _UDP, _QUIC, _QUIC_V1);\nconst _WebSockets = or(and(_WEB, code(CODE_WS), optional(value(CODE_P2P))));\n/**\n * Matches WebSocket addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { WebSockets } from '@multiformats/multiaddr-matcher'\n *\n * WebSockets.matches(multiaddr('/ip4/123.123.123.123/tcp/1234/ws')) // true\n * ```\n */\nexport const WebSockets = fmt(_WebSockets);\nconst _WebSocketsSecure = or(and(_WEB, code(CODE_WSS), optional(value(CODE_P2P))), and(_WEB, code(CODE_TLS), optional(value(CODE_SNI)), code(CODE_WS), optional(value(CODE_P2P))));\n/**\n * Matches secure WebSocket addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { WebSocketsSecure } from '@multiformats/multiaddr-matcher'\n *\n * WebSocketsSecure.matches(multiaddr('/ip4/123.123.123.123/tcp/1234/wss')) // true\n * ```\n */\nexport const WebSocketsSecure = fmt(_WebSocketsSecure);\nconst _WebRTCDirect = and(_UDP, code(CODE_WEBRTC_DIRECT), optional(value(CODE_CERTHASH)), optional(value(CODE_CERTHASH)), optional(value(CODE_P2P)));\n/**\n * Matches WebRTC-direct addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { WebRTCDirect } from '@multiformats/multiaddr-matcher'\n *\n * WebRTCDirect.matches(multiaddr('/ip4/123.123.123.123/tcp/1234/p2p/QmFoo/webrtc-direct/certhash/u....')) // true\n * ```\n */\nexport const WebRTCDirect = fmt(_WebRTCDirect);\nconst _WebTransport = and(_QUIC_V1, code(CODE_WEBTRANSPORT), optional(value(CODE_CERTHASH)), optional(value(CODE_CERTHASH)), optional(value(CODE_P2P)));\n/**\n * Matches WebTransport addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { WebRTCDirect } from '@multiformats/multiaddr-matcher'\n *\n * WebRTCDirect.matches(multiaddr('/ip4/123.123.123.123/udp/1234/quic-v1/webtransport/certhash/u..../certhash/u..../p2p/QmFoo')) // true\n * ```\n */\nexport const WebTransport = fmt(_WebTransport);\nconst _P2P = or(_WebSockets, _WebSocketsSecure, and(_TCP, optional(value(CODE_P2P))), and(QUIC_V0_OR_V1, optional(value(CODE_P2P))), and(_IP_OR_DOMAIN, optional(value(CODE_P2P))), _WebRTCDirect, _WebTransport, value(CODE_P2P));\n/**\n * Matches peer addresses\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { P2P } from '@multiformats/multiaddr-matcher'\n *\n * P2P.matches(multiaddr('/ip4/123.123.123.123/tcp/1234/p2p/QmFoo')) // true\n * ```\n */\nexport const P2P = fmt(_P2P);\nconst _Circuit = and(optional(_P2P), code(CODE_P2P_CIRCUIT), not(code(CODE_WEBRTC)), optional(value(CODE_P2P)));\n/**\n * Matches circuit relay addresses\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { Circuit } from '@multiformats/multiaddr-matcher'\n *\n * Circuit.matches(multiaddr('/ip4/123.123.123.123/tcp/1234/p2p/QmRelay/p2p-circuit/p2p/QmTarget')) // true\n * ```\n */\nexport const Circuit = fmt(_Circuit);\nconst _WebRTC = or(and(_P2P, code(CODE_P2P_CIRCUIT), code(CODE_WEBRTC), optional(value(CODE_P2P))), and(_P2P, code(CODE_WEBRTC), optional(value(CODE_P2P))), and(code(CODE_WEBRTC), optional(value(CODE_P2P))));\n/**\n * Matches WebRTC addresses\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { WebRTC } from '@multiformats/multiaddr-matcher'\n *\n * WebRTC.matches(multiaddr('/ip4/123.123.123.123/tcp/1234/p2p/QmRelay/p2p-circuit/webrtc/p2p/QmTarget')) // true\n * ```\n */\nexport const WebRTC = fmt(_WebRTC);\nconst _HTTP = or(and(_IP_OR_DOMAIN, value(CODE_TCP), code(CODE_HTTP), optional(value(CODE_P2P))), and(_IP_OR_DOMAIN, code(CODE_HTTP), optional(value(CODE_P2P))));\n/**\n * Matches HTTP addresses\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { HTTP } from '@multiformats/multiaddr-matcher'\n *\n * HTTP.matches(multiaddr('/dns/example.org/http')) // true\n * ```\n */\nexport const HTTP = fmt(_HTTP);\nconst _HTTPS = and(_IP_OR_DOMAIN, or(and(value(CODE_TCP, '443'), code(CODE_HTTP)), and(value(CODE_TCP), code(CODE_HTTPS)), and(value(CODE_TCP), code(CODE_TLS), code(CODE_HTTP)), and(code(CODE_TLS), code(CODE_HTTP)), code(CODE_TLS), code(CODE_HTTPS)), optional(value(CODE_P2P)));\n/**\n * Matches HTTPS addresses\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { HTTP } from '@multiformats/multiaddr-matcher'\n *\n * HTTP.matches(multiaddr('/dns/example.org/tls/http')) // true\n * ```\n */\nexport const HTTPS = fmt(_HTTPS);\nconst _Memory = or(and(value(CODE_MEMORY), optional(value(CODE_P2P))));\n/**\n * Matches Memory addresses\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { Memory } from '@multiformats/multiaddr-matcher'\n *\n * Memory.matches(multiaddr('/memory/0xDEADBEEF')) // true\n * ```\n */\nexport const Memory = fmt(_Memory);\nconst _Unix = or(and(value(CODE_UNIX), optional(value(CODE_P2P))));\n/**\n * Matches Unix addresses\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { Unix } from '@multiformats/multiaddr-matcher'\n *\n * Unix.matches(multiaddr('/unix/%2Fpath%2Fto%2Funix.socket')) // true\n * ```\n */\nexport const Unix = fmt(_Unix);\n//# sourceMappingURL=index.js.map","import { getNetConfig, isNetworkAddress, isPrivateIp, trackedMap } from '@libp2p/utils';\nimport { CODE_SNI, CODE_TLS, multiaddr } from '@multiformats/multiaddr';\nconst MAX_DATE = 8_640_000_000_000_000;\nexport const defaultValues = {\n    maxObservedAddresses: 10\n};\nexport class DNSMappings {\n    log;\n    mappings;\n    constructor(components, init = {}) {\n        this.log = components.logger.forComponent('libp2p:address-manager:dns-mappings');\n        this.mappings = trackedMap({\n            name: 'libp2p_address_manager_dns_mappings',\n            metrics: components.metrics\n        });\n    }\n    has(ma) {\n        const config = getNetConfig(ma);\n        let host = config.host;\n        if ((config.type === 'ip4' || config.type === 'ip6') && config.sni != null) {\n            host = config.sni;\n        }\n        for (const mapping of this.mappings.values()) {\n            if (mapping.domain === host) {\n                return true;\n            }\n        }\n        return false;\n    }\n    add(domain, addresses) {\n        addresses.forEach(ip => {\n            this.log('add DNS mapping %s to %s', ip, domain);\n            // we are only confident if this is an local domain mapping, otherwise\n            // we will require external validation\n            const verified = isPrivateIp(ip) === true;\n            this.mappings.set(ip, {\n                domain,\n                verified,\n                expires: verified ? MAX_DATE - Date.now() : 0,\n                lastVerified: verified ? MAX_DATE - Date.now() : undefined\n            });\n        });\n    }\n    remove(ma) {\n        const config = getNetConfig(ma);\n        if (config.type !== 'ip4' && config.type !== 'ip6') {\n            return false;\n        }\n        let wasConfident = false;\n        for (const [ip, mapping] of this.mappings.entries()) {\n            if (mapping.domain === config.sni) {\n                this.log('removing %s to %s DNS mapping %e', ip, mapping.domain);\n                this.mappings.delete(ip);\n                wasConfident = wasConfident || mapping.verified;\n            }\n        }\n        return wasConfident;\n    }\n    getAll(addresses) {\n        const dnsMappedAddresses = [];\n        for (let i = 0; i < addresses.length; i++) {\n            const address = addresses[i].multiaddr;\n            if (!isNetworkAddress(address)) {\n                continue;\n            }\n            const config = getNetConfig(address);\n            for (const [ip, mapping] of this.mappings.entries()) {\n                if (config.host !== ip) {\n                    continue;\n                }\n                // insert SNI tuple after TLS tuple, if one is present\n                const maWithSni = this.maybeAddSNIComponent(address, mapping.domain);\n                if (maWithSni != null) {\n                    // remove the address and replace it with the version that includes\n                    // the SNI tuple\n                    addresses.splice(i, 1);\n                    i--;\n                    dnsMappedAddresses.push({\n                        multiaddr: maWithSni,\n                        verified: mapping.verified,\n                        type: 'dns-mapping',\n                        expires: mapping.expires,\n                        lastVerified: mapping.lastVerified\n                    });\n                }\n            }\n        }\n        return dnsMappedAddresses;\n    }\n    maybeAddSNIComponent(ma, domain) {\n        const components = ma.getComponents();\n        for (let j = 0; j < components.length; j++) {\n            if (components[j].code === CODE_TLS && components[j + 1]?.code !== CODE_SNI) {\n                components.splice(j + 1, 0, {\n                    name: 'sni',\n                    code: CODE_SNI,\n                    value: domain\n                });\n                return multiaddr(components);\n            }\n        }\n    }\n    confirm(ma, ttl) {\n        const config = getNetConfig(ma);\n        let host = config.host;\n        if ((config.type === 'ip4' || config.type === 'ip6') && config.sni != null) {\n            host = config.sni;\n        }\n        let startingConfidence = false;\n        for (const [ip, mapping] of this.mappings.entries()) {\n            if (mapping.domain === host) {\n                this.log('marking %s to %s DNS mapping as verified', ip, mapping.domain);\n                startingConfidence = mapping.verified;\n                mapping.verified = true;\n                mapping.expires = Date.now() + ttl;\n                mapping.lastVerified = Date.now();\n            }\n        }\n        return startingConfidence;\n    }\n    unconfirm(ma, ttl) {\n        const config = getNetConfig(ma);\n        if (config.type !== 'ip4' && config.type !== 'ip6') {\n            return false;\n        }\n        const host = config.sni ?? config.host;\n        let wasConfident = false;\n        for (const [ip, mapping] of this.mappings.entries()) {\n            if (mapping.domain === host) {\n                this.log('removing verification of %s to %s DNS mapping', ip, mapping.domain);\n                wasConfident = wasConfident || mapping.verified;\n                mapping.verified = false;\n                mapping.expires = Date.now() + ttl;\n            }\n        }\n        return wasConfident;\n    }\n}\n//# sourceMappingURL=dns-mappings.js.map","import { isIPv4 } from '@chainsafe/is-ip';\nimport { getNetConfig, isNetworkAddress, trackedMap } from '@libp2p/utils';\nimport { CODE_IP4, CODE_IP6, multiaddr } from '@multiformats/multiaddr';\nexport const defaultValues = {\n    maxObservedAddresses: 10\n};\nexport class IPMappings {\n    log;\n    mappings;\n    constructor(components, init = {}) {\n        this.log = components.logger.forComponent('libp2p:address-manager:ip-mappings');\n        this.mappings = trackedMap({\n            name: 'libp2p_address_manager_ip_mappings',\n            metrics: components.metrics\n        });\n    }\n    has(ma) {\n        const config = getNetConfig(ma);\n        if (config.type !== 'ip4' && config.type !== 'ip6') {\n            return false;\n        }\n        for (const mappings of this.mappings.values()) {\n            for (const mapping of mappings) {\n                if (mapping.externalIp === config.host) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    add(internalIp, internalPort, externalIp, externalPort = internalPort, protocol = 'tcp') {\n        const key = `${internalIp}-${internalPort}-${protocol}`;\n        const mappings = this.mappings.get(key) ?? [];\n        const mapping = {\n            internalIp,\n            internalPort,\n            externalIp,\n            externalPort,\n            externalFamily: isIPv4(externalIp) ? 4 : 6,\n            protocol,\n            verified: false,\n            expires: 0\n        };\n        mappings.push(mapping);\n        this.mappings.set(key, mappings);\n    }\n    remove(ma) {\n        const config = getNetConfig(ma);\n        if (config.type !== 'ip4' && config.type !== 'ip6') {\n            return false;\n        }\n        let wasConfident = false;\n        for (const [key, mappings] of this.mappings.entries()) {\n            for (let i = 0; i < mappings.length; i++) {\n                const mapping = mappings[i];\n                if (mapping.externalIp === config.host && mapping.externalPort === config.port && mapping.protocol === config.protocol) {\n                    this.log('removing %s:%s to %s:%s %s IP mapping', mapping.externalIp, mapping.externalPort, config.host, config.port, config.protocol);\n                    wasConfident = wasConfident || mapping.verified;\n                    mappings.splice(i, 1);\n                    i--;\n                }\n            }\n            if (mappings.length === 0) {\n                this.mappings.delete(key);\n            }\n        }\n        return wasConfident;\n    }\n    getAll(addresses) {\n        const ipMappedAddresses = [];\n        for (const { multiaddr: ma } of addresses) {\n            if (!isNetworkAddress(ma)) {\n                continue;\n            }\n            const config = getNetConfig(ma);\n            if (config.type !== 'ip4' && config.type !== 'ip6') {\n                continue;\n            }\n            let key;\n            // see if the internal host/port/protocol tuple has been mapped externally\n            if (config.protocol === 'tcp') {\n                key = `${config.host}-${config.port}-tcp`;\n            }\n            else if (config.protocol === 'udp') {\n                key = `${config.host}-${config.port}-udp`;\n            }\n            if (key == null) {\n                continue;\n            }\n            const mappings = this.mappings.get(key);\n            if (mappings == null) {\n                continue;\n            }\n            for (const mapping of mappings) {\n                ipMappedAddresses.push({\n                    multiaddr: this.maybeOverrideIp(ma, mapping.externalIp, mapping.externalFamily, mapping.protocol, mapping.externalPort),\n                    verified: mapping.verified,\n                    type: 'ip-mapping',\n                    expires: mapping.expires,\n                    lastVerified: mapping.lastVerified\n                });\n            }\n        }\n        return ipMappedAddresses;\n    }\n    maybeOverrideIp(ma, externalIp, externalFamily, protocol, externalPort) {\n        const components = ma.getComponents();\n        const ipIndex = components.findIndex(c => c.code === CODE_IP4 || c.code === CODE_IP6);\n        const portIndex = components.findIndex(c => c.name === protocol);\n        if (ipIndex > -1 && portIndex > -1) {\n            components[ipIndex].value = externalIp;\n            components[ipIndex].code = externalFamily === 4 ? CODE_IP4 : CODE_IP6;\n            components[portIndex].value = `${externalPort}`;\n            return multiaddr(components);\n        }\n        return ma;\n    }\n    confirm(ma, ttl) {\n        if (!isNetworkAddress(ma)) {\n            return false;\n        }\n        const config = getNetConfig(ma);\n        let startingConfidence = false;\n        for (const mappings of this.mappings.values()) {\n            for (const mapping of mappings) {\n                if (mapping.externalIp === config.host) {\n                    this.log('marking %s to %s IP mapping as verified', mapping.internalIp, mapping.externalIp);\n                    startingConfidence = mapping.verified;\n                    mapping.verified = true;\n                    mapping.expires = Date.now() + ttl;\n                    mapping.lastVerified = Date.now();\n                }\n            }\n        }\n        return startingConfidence;\n    }\n    unconfirm(ma, ttl) {\n        if (!isNetworkAddress(ma)) {\n            return false;\n        }\n        const config = getNetConfig(ma);\n        let wasConfident = false;\n        for (const mappings of this.mappings.values()) {\n            for (let i = 0; i < mappings.length; i++) {\n                const mapping = mappings[i];\n                if (mapping.externalIp === config.host && mapping.externalPort === config.port && mapping.protocol === config.protocol) {\n                    this.log('removing verification of %s:%s to %s:%s %s IP mapping', mapping.externalIp, mapping.externalPort, config.host, config.port, config.protocol);\n                    wasConfident = wasConfident || mapping.verified;\n                    mapping.verified = false;\n                    mapping.expires = Date.now() + ttl;\n                }\n            }\n        }\n        return wasConfident;\n    }\n}\n//# sourceMappingURL=ip-mappings.js.map","import { isLinkLocal, isPrivate, trackedMap } from '@libp2p/utils';\nimport { multiaddr } from '@multiformats/multiaddr';\nexport const defaultValues = {\n    maxObservedAddresses: 10\n};\nexport class ObservedAddresses {\n    log;\n    addresses;\n    maxObservedAddresses;\n    constructor(components, init = {}) {\n        this.log = components.logger.forComponent('libp2p:address-manager:observed-addresses');\n        this.addresses = trackedMap({\n            name: 'libp2p_address_manager_observed_addresses',\n            metrics: components.metrics\n        });\n        this.maxObservedAddresses = init.maxObservedAddresses ?? defaultValues.maxObservedAddresses;\n    }\n    has(ma) {\n        return this.addresses.has(ma.toString());\n    }\n    removePrefixed(prefix) {\n        for (const key of this.addresses.keys()) {\n            if (key.toString().startsWith(prefix)) {\n                this.addresses.delete(key);\n            }\n        }\n    }\n    add(ma) {\n        if (this.addresses.size === this.maxObservedAddresses) {\n            return;\n        }\n        if (isPrivate(ma) || isLinkLocal(ma)) {\n            return;\n        }\n        this.log('adding observed address %a', ma);\n        this.addresses.set(ma.toString(), {\n            verified: false,\n            expires: 0\n        });\n    }\n    getAll() {\n        return Array.from(this.addresses)\n            .map(([ma, metadata]) => ({\n            multiaddr: multiaddr(ma),\n            verified: metadata.verified,\n            type: 'observed',\n            expires: metadata.expires,\n            lastVerified: metadata.lastVerified\n        }));\n    }\n    remove(ma) {\n        const startingConfidence = this.addresses.get(ma.toString())?.verified ?? false;\n        this.log('removing observed address %a', ma);\n        this.addresses.delete(ma.toString());\n        return startingConfidence;\n    }\n    confirm(ma, ttl) {\n        const addrString = ma.toString();\n        const metadata = this.addresses.get(addrString) ?? {\n            verified: false,\n            expires: Date.now() + ttl,\n            lastVerified: Date.now()\n        };\n        const startingConfidence = metadata.verified;\n        metadata.verified = true;\n        metadata.expires = Date.now() + ttl;\n        metadata.lastVerified = Date.now();\n        this.log('marking observed address %a as verified', addrString);\n        this.addresses.set(addrString, metadata);\n        return startingConfidence;\n    }\n}\n//# sourceMappingURL=observed-addresses.js.map","import { getNetConfig, isNetworkAddress, isPrivate, trackedMap } from '@libp2p/utils';\nexport const defaultValues = {\n    maxObservedAddresses: 10\n};\nexport class TransportAddresses {\n    log;\n    addresses;\n    maxObservedAddresses;\n    constructor(components, init = {}) {\n        this.log = components.logger.forComponent('libp2p:address-manager:observed-addresses');\n        this.addresses = trackedMap({\n            name: 'libp2p_address_manager_transport_addresses',\n            metrics: components.metrics\n        });\n        this.maxObservedAddresses = init.maxObservedAddresses ?? defaultValues.maxObservedAddresses;\n    }\n    get(multiaddr, ttl) {\n        if (isPrivate(multiaddr)) {\n            return {\n                multiaddr,\n                verified: true,\n                type: 'transport',\n                expires: Date.now() + ttl,\n                lastVerified: Date.now()\n            };\n        }\n        const key = this.toKey(multiaddr);\n        let metadata = this.addresses.get(key);\n        if (metadata == null) {\n            metadata = {\n                verified: !isNetworkAddress(multiaddr),\n                expires: 0\n            };\n            this.addresses.set(key, metadata);\n        }\n        return {\n            multiaddr,\n            verified: metadata.verified,\n            type: 'transport',\n            expires: metadata.expires,\n            lastVerified: metadata.lastVerified\n        };\n    }\n    has(ma) {\n        const key = this.toKey(ma);\n        return this.addresses.has(key);\n    }\n    remove(ma) {\n        const key = this.toKey(ma);\n        const startingConfidence = this.addresses.get(key)?.verified ?? false;\n        this.log('removing observed address %a', ma);\n        this.addresses.delete(key);\n        return startingConfidence;\n    }\n    confirm(ma, ttl) {\n        const key = this.toKey(ma);\n        const metadata = this.addresses.get(key) ?? {\n            verified: false,\n            expires: 0,\n            lastVerified: 0\n        };\n        const startingConfidence = metadata.verified;\n        metadata.verified = true;\n        metadata.expires = Date.now() + ttl;\n        metadata.lastVerified = Date.now();\n        this.addresses.set(key, metadata);\n        return startingConfidence;\n    }\n    unconfirm(ma, ttl) {\n        const key = this.toKey(ma);\n        const metadata = this.addresses.get(key) ?? {\n            verified: false,\n            expires: 0\n        };\n        const startingConfidence = metadata.verified;\n        metadata.verified = false;\n        metadata.expires = Date.now() + ttl;\n        this.addresses.set(key, metadata);\n        return startingConfidence;\n    }\n    toKey(ma) {\n        if (!isNetworkAddress(ma)) {\n            return ma.toString();\n        }\n        // only works for dns/ip based addresses\n        const config = getNetConfig(ma);\n        return `${config.host}-${config.port}-${config.protocol}`;\n    }\n}\n//# sourceMappingURL=transport-addresses.js.map","/* eslint-disable complexity */\nimport { isIPv4 } from '@chainsafe/is-ip';\nimport { peerIdFromString } from '@libp2p/peer-id';\nimport { debounce, createScalableCuckooFilter, isPrivateIp, getNetConfig, isNetworkAddress, isLoopback } from '@libp2p/utils';\nimport { CODE_P2P, multiaddr } from '@multiformats/multiaddr';\nimport { QUIC_V1, TCP, WebSockets, WebSocketsSecure } from '@multiformats/multiaddr-matcher';\nimport { DNSMappings } from './dns-mappings.js';\nimport { IPMappings } from './ip-mappings.js';\nimport { ObservedAddresses } from './observed-addresses.js';\nimport { TransportAddresses } from './transport-addresses.js';\nconst ONE_MINUTE = 60_000;\nexport const defaultValues = {\n    maxObservedAddresses: 10,\n    addressVerificationTTL: ONE_MINUTE * 10,\n    addressVerificationRetry: ONE_MINUTE * 5\n};\nconst defaultAddressFilter = (addrs) => addrs;\n/**\n * If the passed multiaddr contains the passed peer id, remove it\n */\nfunction stripPeerId(ma, peerId) {\n    const observedPeerIdStr = ma.getComponents().findLast(c => c.code === CODE_P2P)?.value;\n    // strip our peer id if it has been passed\n    if (observedPeerIdStr != null) {\n        const observedPeerId = peerIdFromString(observedPeerIdStr);\n        // use same encoding for comparison\n        if (observedPeerId.equals(peerId)) {\n            ma = ma.decapsulate(multiaddr(`/p2p/${peerId.toString()}`));\n        }\n    }\n    return ma;\n}\nexport class AddressManager {\n    log;\n    components;\n    // this is an array to allow for duplicates, e.g. multiples of `/ip4/0.0.0.0/tcp/0`\n    listen;\n    announce;\n    appendAnnounce;\n    announceFilter;\n    observed;\n    dnsMappings;\n    ipMappings;\n    transportAddresses;\n    observedAddressFilter;\n    addressVerificationTTL;\n    addressVerificationRetry;\n    /**\n     * Responsible for managing the peer addresses.\n     * Peers can specify their listen and announce addresses.\n     * The listen addresses will be used by the libp2p transports to listen for new connections,\n     * while the announce addresses will be used for the peer addresses' to other peers in the network.\n     */\n    constructor(components, init = {}) {\n        const { listen = [], announce = [], appendAnnounce = [] } = init;\n        this.components = components;\n        this.log = components.logger.forComponent('libp2p:address-manager');\n        this.listen = listen.map(ma => ma.toString());\n        this.announce = new Set(announce.map(ma => ma.toString()));\n        this.appendAnnounce = new Set(appendAnnounce.map(ma => ma.toString()));\n        this.observed = new ObservedAddresses(components, init);\n        this.dnsMappings = new DNSMappings(components, init);\n        this.ipMappings = new IPMappings(components, init);\n        this.transportAddresses = new TransportAddresses(components, init);\n        this.announceFilter = init.announceFilter ?? defaultAddressFilter;\n        this.observedAddressFilter = createScalableCuckooFilter(1024);\n        this.addressVerificationTTL = init.addressVerificationTTL ?? defaultValues.addressVerificationTTL;\n        this.addressVerificationRetry = init.addressVerificationRetry ?? defaultValues.addressVerificationRetry;\n        // this method gets called repeatedly on startup when transports start listening so\n        // debounce it so we don't cause multiple self:peer:update events to be emitted\n        this._updatePeerStoreAddresses = debounce(this._updatePeerStoreAddresses.bind(this), 1000);\n        // update our stored addresses when new transports listen\n        components.events.addEventListener('transport:listening', () => {\n            this._updatePeerStoreAddresses();\n        });\n        // update our stored addresses when existing transports stop listening\n        components.events.addEventListener('transport:close', () => {\n            this._updatePeerStoreAddresses();\n        });\n    }\n    [Symbol.toStringTag] = '@libp2p/address-manager';\n    _updatePeerStoreAddresses() {\n        // if announce addresses have been configured, ensure they make it into our peer\n        // record for things like identify\n        const addrs = this.getAddresses()\n            .map(ma => {\n            // strip our peer id if it is present\n            if (ma.getComponents().findLast(c => c.code === CODE_P2P)?.value === this.components.peerId.toString()) {\n                return ma.decapsulate(`/p2p/${this.components.peerId.toString()}`);\n            }\n            return ma;\n        });\n        this.components.peerStore.patch(this.components.peerId, {\n            multiaddrs: addrs\n        })\n            .catch(err => {\n            this.log.error('error updating addresses - %e', err);\n        });\n    }\n    /**\n     * Get peer listen multiaddrs\n     */\n    getListenAddrs() {\n        return Array.from(this.listen).map((a) => multiaddr(a));\n    }\n    /**\n     * Get peer announcing multiaddrs\n     */\n    getAnnounceAddrs() {\n        return Array.from(this.announce).map((a) => multiaddr(a));\n    }\n    /**\n     * Get peer announcing multiaddrs\n     */\n    getAppendAnnounceAddrs() {\n        return Array.from(this.appendAnnounce).map((a) => multiaddr(a));\n    }\n    /**\n     * Get observed multiaddrs\n     */\n    getObservedAddrs() {\n        return this.observed.getAll().map(addr => addr.multiaddr);\n    }\n    /**\n     * Add peer observed addresses\n     */\n    addObservedAddr(addr) {\n        const config = getNetConfig(addr);\n        let socketAddress;\n        switch (config.type) {\n            case 'ip4': {\n                socketAddress = `${config.host}:${config.port}`;\n                break;\n            }\n            case 'ip6': {\n                socketAddress = `[${config.host}]:${config.port}`;\n                break;\n            }\n            default: {\n                return;\n            }\n        }\n        // ignore if this address if it's been observed before\n        if (this.observedAddressFilter.has(socketAddress)) {\n            return;\n        }\n        this.observedAddressFilter.add(socketAddress);\n        addr = stripPeerId(addr, this.components.peerId);\n        // ignore observed address if it is an IP mapping\n        if (this.ipMappings.has(addr)) {\n            return;\n        }\n        // ignore observed address if it is a DNS mapping\n        if (this.dnsMappings.has(addr)) {\n            return;\n        }\n        this.observed.add(addr);\n    }\n    confirmObservedAddr(addr, options) {\n        addr = stripPeerId(addr, this.components.peerId);\n        let startingConfidence = true;\n        if (options?.type === 'transport' || this.transportAddresses.has(addr)) {\n            const transportStartingConfidence = this.transportAddresses.confirm(addr, options?.ttl ?? this.addressVerificationTTL);\n            if (!transportStartingConfidence && startingConfidence) {\n                startingConfidence = false;\n            }\n        }\n        if (options?.type === 'dns-mapping' || this.dnsMappings.has(addr)) {\n            const dnsMappingStartingConfidence = this.dnsMappings.confirm(addr, options?.ttl ?? this.addressVerificationTTL);\n            if (!dnsMappingStartingConfidence && startingConfidence) {\n                startingConfidence = false;\n            }\n        }\n        if (options?.type === 'ip-mapping' || this.ipMappings.has(addr)) {\n            const ipMappingStartingConfidence = this.ipMappings.confirm(addr, options?.ttl ?? this.addressVerificationTTL);\n            if (!ipMappingStartingConfidence && startingConfidence) {\n                startingConfidence = false;\n            }\n        }\n        if (options?.type === 'observed' || this.observed.has(addr)) {\n            // try to match up observed address with local transport listener\n            if (this.maybeUpgradeToIPMapping(addr)) {\n                this.ipMappings.confirm(addr, options?.ttl ?? this.addressVerificationTTL);\n                startingConfidence = false;\n            }\n            else {\n                const observedStartingConfidence = this.observed.confirm(addr, options?.ttl ?? this.addressVerificationTTL);\n                if (!observedStartingConfidence && startingConfidence) {\n                    startingConfidence = false;\n                }\n            }\n        }\n        // only trigger the 'self:peer:update' event if our confidence in an address has changed\n        if (!startingConfidence) {\n            this._updatePeerStoreAddresses();\n        }\n    }\n    removeObservedAddr(addr, options) {\n        addr = stripPeerId(addr, this.components.peerId);\n        let startingConfidence = false;\n        if (this.observed.has(addr)) {\n            const observedStartingConfidence = this.observed.remove(addr);\n            if (!observedStartingConfidence && startingConfidence) {\n                startingConfidence = false;\n            }\n        }\n        if (this.transportAddresses.has(addr)) {\n            const transportStartingConfidence = this.transportAddresses.unconfirm(addr, options?.ttl ?? this.addressVerificationRetry);\n            if (!transportStartingConfidence && startingConfidence) {\n                startingConfidence = false;\n            }\n        }\n        if (this.dnsMappings.has(addr)) {\n            const dnsMappingStartingConfidence = this.dnsMappings.unconfirm(addr, options?.ttl ?? this.addressVerificationRetry);\n            if (!dnsMappingStartingConfidence && startingConfidence) {\n                startingConfidence = false;\n            }\n        }\n        if (this.ipMappings.has(addr)) {\n            const ipMappingStartingConfidence = this.ipMappings.unconfirm(addr, options?.ttl ?? this.addressVerificationRetry);\n            if (!ipMappingStartingConfidence && startingConfidence) {\n                startingConfidence = false;\n            }\n        }\n        // only trigger the 'self:peer:update' event if our confidence in an address has changed\n        if (startingConfidence) {\n            this._updatePeerStoreAddresses();\n        }\n    }\n    getAddresses() {\n        const addresses = new Set();\n        const multiaddrs = this.getAddressesWithMetadata()\n            .filter(addr => {\n            if (!addr.verified) {\n                return false;\n            }\n            const maStr = addr.multiaddr.toString();\n            if (addresses.has(maStr)) {\n                return false;\n            }\n            addresses.add(maStr);\n            return true;\n        })\n            .map(address => address.multiaddr);\n        // filter addressees before returning\n        return this.announceFilter(multiaddrs.map(str => {\n            const ma = multiaddr(str);\n            const lastComponent = ma.getComponents().pop();\n            if (lastComponent?.value === this.components.peerId.toString()) {\n                return ma;\n            }\n            return ma.encapsulate(`/p2p/${this.components.peerId.toString()}`);\n        }));\n    }\n    getAddressesWithMetadata() {\n        const announceMultiaddrs = this.getAnnounceAddrs();\n        if (announceMultiaddrs.length > 0) {\n            // allow transports to add certhashes and other runtime information\n            this.components.transportManager.getListeners().forEach(listener => {\n                listener.updateAnnounceAddrs(announceMultiaddrs);\n            });\n            return announceMultiaddrs.map(multiaddr => ({\n                multiaddr,\n                verified: true,\n                type: 'announce',\n                expires: Date.now() + this.addressVerificationTTL,\n                lastVerified: Date.now()\n            }));\n        }\n        let addresses = [];\n        // add transport addresses\n        addresses = addresses.concat(this.components.transportManager.getAddrs()\n            .map(multiaddr => this.transportAddresses.get(multiaddr, this.addressVerificationTTL)));\n        const appendAnnounceMultiaddrs = this.getAppendAnnounceAddrs();\n        // add append announce addresses\n        if (appendAnnounceMultiaddrs.length > 0) {\n            // allow transports to add certhashes and other runtime information\n            this.components.transportManager.getListeners().forEach(listener => {\n                listener.updateAnnounceAddrs(appendAnnounceMultiaddrs);\n            });\n            addresses = addresses.concat(appendAnnounceMultiaddrs.map(multiaddr => ({\n                multiaddr,\n                verified: true,\n                type: 'announce',\n                expires: Date.now() + this.addressVerificationTTL,\n                lastVerified: Date.now()\n            })));\n        }\n        // add observed addresses\n        addresses = addresses.concat(this.observed.getAll());\n        // add ip mapped addresses\n        addresses = addresses.concat(this.ipMappings.getAll(addresses));\n        // add ip->domain mappings, must be done after IP mappings\n        addresses = addresses.concat(this.dnsMappings.getAll(addresses));\n        return addresses;\n    }\n    addDNSMapping(domain, addresses) {\n        this.dnsMappings.add(domain, addresses);\n    }\n    removeDNSMapping(domain) {\n        if (this.dnsMappings.remove(multiaddr(`/dns/${domain}`))) {\n            this._updatePeerStoreAddresses();\n        }\n    }\n    addPublicAddressMapping(internalIp, internalPort, externalIp, externalPort = internalPort, protocol = 'tcp') {\n        this.ipMappings.add(internalIp, internalPort, externalIp, externalPort, protocol);\n        // remove duplicate observed addresses\n        this.observed.removePrefixed(`/ip${isIPv4(externalIp) ? 4 : 6}/${externalIp}/${protocol}/${externalPort}`);\n    }\n    removePublicAddressMapping(internalIp, internalPort, externalIp, externalPort = internalPort, protocol = 'tcp') {\n        if (this.ipMappings.remove(multiaddr(`/ip${isIPv4(externalIp) ? 4 : 6}/${externalIp}/${protocol}/${externalPort}`))) {\n            this._updatePeerStoreAddresses();\n        }\n    }\n    /**\n     * Where an external service (router, gateway, etc) is forwarding traffic to\n     * us, attempt to add an IP mapping for the external address - this will\n     * include the observed mapping in the address list where we also have a DNS\n     * mapping for the external IP.\n     *\n     * Returns true if we added a new mapping\n     */\n    maybeUpgradeToIPMapping(ma) {\n        // this address is already mapped\n        if (this.ipMappings.has(ma)) {\n            return false;\n        }\n        if (!isNetworkAddress(ma)) {\n            return false;\n        }\n        const config = getNetConfig(ma);\n        // only public IPv4 addresses\n        if (config.type !== 'ip4' || isPrivateIp(config.host) === true) {\n            return false;\n        }\n        const listeners = this.components.transportManager.getListeners();\n        const transportMatchers = [\n            (ma) => WebSockets.exactMatch(ma) || WebSocketsSecure.exactMatch(ma),\n            (ma) => TCP.exactMatch(ma),\n            (ma) => QUIC_V1.exactMatch(ma)\n        ];\n        for (const matcher of transportMatchers) {\n            // is the incoming address the same type as the matcher\n            if (!matcher(ma)) {\n                continue;\n            }\n            // get the listeners for this transport\n            const transportListeners = listeners.filter(listener => {\n                return listener.getAddrs().filter(ma => {\n                    // only IPv4 addresses of the matcher type\n                    return getNetConfig(ma).type === 'ip4' && matcher(ma);\n                }).length > 0;\n            });\n            // because the NAT mapping could be forwarding different external ports to\n            // internal ones, we can only be sure enough to add a mapping if there is\n            // a single listener\n            if (transportListeners.length !== 1) {\n                continue;\n            }\n            // we have one listener which listens on one port so whatever the external\n            // NAT port mapping is, it should be for this listener\n            const linkLocalAddr = transportListeners[0].getAddrs().filter(ma => {\n                return !isLoopback(ma);\n            }).pop();\n            if (linkLocalAddr == null) {\n                continue;\n            }\n            const linkLocalOptions = getNetConfig(linkLocalAddr);\n            if (linkLocalOptions.port == null) {\n                return false;\n            }\n            // upgrade observed address to IP mapping\n            this.observed.remove(ma);\n            this.ipMappings.add(linkLocalOptions.host, linkLocalOptions.port, config.host, config.port, config.protocol);\n            return true;\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=index.js.map","export var messages;\n(function (messages) {\n    messages[\"NOT_STARTED_YET\"] = \"The libp2p node is not started yet\";\n    messages[\"NOT_FOUND\"] = \"Not found\";\n})(messages || (messages = {}));\nexport class MissingServiceError extends Error {\n    constructor(message = 'Missing service') {\n        super(message);\n        this.name = 'MissingServiceError';\n    }\n}\nexport class UnmetServiceDependenciesError extends Error {\n    constructor(message = 'Unmet service dependencies') {\n        super(message);\n        this.name = 'UnmetServiceDependenciesError';\n    }\n}\nexport class NoContentRoutersError extends Error {\n    constructor(message = 'No content routers available') {\n        super(message);\n        this.name = 'NoContentRoutersError';\n    }\n}\nexport class NoPeerRoutersError extends Error {\n    constructor(message = 'No peer routers available') {\n        super(message);\n        this.name = 'NoPeerRoutersError';\n    }\n}\nexport class QueriedForSelfError extends Error {\n    constructor(message = 'Should not try to find self') {\n        super(message);\n        this.name = 'QueriedForSelfError';\n    }\n}\nexport class UnhandledProtocolError extends Error {\n    constructor(message = 'Unhandled protocol error') {\n        super(message);\n        this.name = 'UnhandledProtocolError';\n    }\n}\nexport class DuplicateProtocolHandlerError extends Error {\n    constructor(message = 'Duplicate protocol handler error') {\n        super(message);\n        this.name = 'DuplicateProtocolHandlerError';\n    }\n}\nexport class DialDeniedError extends Error {\n    constructor(message = 'Dial denied error') {\n        super(message);\n        this.name = 'DialDeniedError';\n    }\n}\nexport class UnsupportedListenAddressError extends Error {\n    constructor(message = 'No transport was configured to listen on this address') {\n        super(message);\n        this.name = 'UnsupportedListenAddressError';\n    }\n}\nexport class UnsupportedListenAddressesError extends Error {\n    constructor(message = 'Configured listen addresses could not be listened on') {\n        super(message);\n        this.name = 'UnsupportedListenAddressesError';\n    }\n}\nexport class NoValidAddressesError extends Error {\n    constructor(message = 'No valid addresses') {\n        super(message);\n        this.name = 'NoValidAddressesError';\n    }\n}\nexport class ConnectionInterceptedError extends Error {\n    constructor(message = 'Connection intercepted') {\n        super(message);\n        this.name = 'ConnectionInterceptedError';\n    }\n}\nexport class ConnectionDeniedError extends Error {\n    constructor(message = 'Connection denied') {\n        super(message);\n        this.name = 'ConnectionDeniedError';\n    }\n}\nexport class MuxerUnavailableError extends Error {\n    constructor(message = 'Stream is not multiplexed') {\n        super(message);\n        this.name = 'MuxerUnavailableError';\n    }\n}\nexport class EncryptionFailedError extends Error {\n    constructor(message = 'Encryption failed') {\n        super(message);\n        this.name = 'EncryptionFailedError';\n    }\n}\nexport class TransportUnavailableError extends Error {\n    constructor(message = 'Transport unavailable') {\n        super(message);\n        this.name = 'TransportUnavailableError';\n    }\n}\nexport class RecursionLimitError extends Error {\n    constructor(message = 'Max recursive depth reached') {\n        super(message);\n        this.name = 'RecursionLimitError';\n    }\n}\n//# sourceMappingURL=errors.js.map","import { serviceCapabilities, serviceDependencies, isStartable } from '@libp2p/interface';\nimport { defaultLogger } from '@libp2p/logger';\nimport { MissingServiceError, UnmetServiceDependenciesError } from './errors.js';\nclass DefaultComponents {\n    components = {};\n    _started = false;\n    constructor(init = {}) {\n        this.components = {};\n        for (const [key, value] of Object.entries(init)) {\n            this.components[key] = value;\n        }\n        if (this.components.logger == null) {\n            this.components.logger = defaultLogger();\n        }\n    }\n    isStarted() {\n        return this._started;\n    }\n    async _invokeStartableMethod(methodName) {\n        await Promise.all(Object.values(this.components)\n            .filter(obj => isStartable(obj))\n            .map(async (startable) => {\n            await startable[methodName]?.();\n        }));\n    }\n    async beforeStart() {\n        await this._invokeStartableMethod('beforeStart');\n    }\n    async start() {\n        await this._invokeStartableMethod('start');\n        this._started = true;\n    }\n    async afterStart() {\n        await this._invokeStartableMethod('afterStart');\n    }\n    async beforeStop() {\n        await this._invokeStartableMethod('beforeStop');\n    }\n    async stop() {\n        await this._invokeStartableMethod('stop');\n        this._started = false;\n    }\n    async afterStop() {\n        await this._invokeStartableMethod('afterStop');\n    }\n}\nconst OPTIONAL_SERVICES = [\n    'metrics',\n    'connectionProtector',\n    'dns'\n];\nconst NON_SERVICE_PROPERTIES = [\n    'components',\n    'isStarted',\n    'beforeStart',\n    'start',\n    'afterStart',\n    'beforeStop',\n    'stop',\n    'afterStop',\n    'then',\n    '_invokeStartableMethod'\n];\nexport function defaultComponents(init = {}) {\n    const components = new DefaultComponents(init);\n    const proxy = new Proxy(components, {\n        get(target, prop, receiver) {\n            if (typeof prop === 'string' && !NON_SERVICE_PROPERTIES.includes(prop)) {\n                const service = components.components[prop];\n                if (service == null && !OPTIONAL_SERVICES.includes(prop)) {\n                    throw new MissingServiceError(`${prop} not set`);\n                }\n                return service;\n            }\n            return Reflect.get(target, prop, receiver);\n        },\n        set(target, prop, value) {\n            if (typeof prop === 'string') {\n                components.components[prop] = value;\n            }\n            else {\n                Reflect.set(target, prop, value);\n            }\n            return true;\n        }\n    });\n    // @ts-expect-error component keys are proxied\n    return proxy;\n}\nexport function checkServiceDependencies(components) {\n    const serviceCapabilities = {};\n    for (const service of Object.values(components.components)) {\n        for (const capability of getServiceCapabilities(service)) {\n            serviceCapabilities[capability] = true;\n        }\n    }\n    for (const service of Object.values(components.components)) {\n        for (const capability of getServiceDependencies(service)) {\n            if (serviceCapabilities[capability] !== true) {\n                throw new UnmetServiceDependenciesError(`Service \"${getServiceName(service)}\" required capability \"${capability}\" but it was not provided by any component, you may need to add additional configuration when creating your node.`);\n            }\n        }\n    }\n}\nfunction getServiceCapabilities(service) {\n    if (Array.isArray(service?.[serviceCapabilities])) {\n        return service[serviceCapabilities];\n    }\n    return [];\n}\nfunction getServiceDependencies(service) {\n    if (Array.isArray(service?.[serviceDependencies])) {\n        return service[serviceDependencies];\n    }\n    return [];\n}\nfunction getServiceName(service) {\n    return service?.[Symbol.toStringTag] ?? service?.toString() ?? 'unknown';\n}\n//# sourceMappingURL=components.js.map","import { isPrivate } from '@libp2p/utils';\nimport { WebSockets } from '@multiformats/multiaddr-matcher';\n/**\n * Returns a connection gater that disallows dialling private addresses or\n * insecure websockets by default.\n *\n * Browsers are severely limited in their resource usage so don't waste time\n * trying to dial undialable addresses, and they also print verbose error\n * messages when making connections over insecure transports which causes\n * confusion.\n */\nexport function connectionGater(gater = {}) {\n    if (gater.denyDialMultiaddr == null) {\n        gater.denyDialMultiaddr = (multiaddr) => {\n            // do not connect to insecure websockets by default\n            if (WebSockets.matches(multiaddr)) {\n                return true;\n            }\n            // do not connect to private addresses by default\n            return isPrivate(multiaddr);\n        };\n    }\n    return gater;\n}\n//# sourceMappingURL=connection-gater.browser.js.map","/**\n * An implementation of the ProgressEvent interface, this is essentially\n * a typed `CustomEvent` with a `type` property that lets us disambiguate\n * events passed to `progress` callbacks.\n */\nexport class CustomProgressEvent extends Event {\n    type;\n    detail;\n    constructor(type, detail) {\n        super(type);\n        this.type = type;\n        // @ts-expect-error detail may be undefined\n        this.detail = detail;\n    }\n}\n//# sourceMappingURL=index.js.map","import { InvalidMultiaddrError, InvalidParametersError, isPeerId } from '@libp2p/interface';\nimport { peerIdFromString } from '@libp2p/peer-id';\nimport { CODE_P2P, isMultiaddr } from '@multiformats/multiaddr';\nimport { PEER_ID } from '@multiformats/multiaddr-matcher';\n/**\n * Extracts a PeerId and/or multiaddr from the passed PeerId or Multiaddr or an\n * array of Multiaddrs\n */\nexport function getPeerAddress(peer) {\n    if (isPeerId(peer)) {\n        return { peerId: peer, multiaddrs: [] };\n    }\n    let multiaddrs = Array.isArray(peer) ? peer : [peer];\n    let peerId;\n    if (multiaddrs.length > 0) {\n        const peerIdStr = multiaddrs[0].getComponents().findLast(c => c.code === CODE_P2P)?.value;\n        peerId = peerIdStr == null ? undefined : peerIdFromString(peerIdStr);\n        // ensure PeerId is either not set or is consistent\n        multiaddrs.forEach(ma => {\n            if (!isMultiaddr(ma)) {\n                throw new InvalidMultiaddrError('Invalid multiaddr');\n            }\n            const maPeerIdStr = ma.getComponents().findLast(c => c.code === CODE_P2P)?.value;\n            if (maPeerIdStr == null) {\n                if (peerId != null) {\n                    throw new InvalidParametersError('Multiaddrs must all have the same peer id or have no peer id');\n                }\n            }\n            else {\n                const maPeerId = peerIdFromString(maPeerIdStr);\n                if (peerId?.equals(maPeerId) !== true) {\n                    throw new InvalidParametersError('Multiaddrs must all have the same peer id or have no peer id');\n                }\n            }\n        });\n    }\n    // ignore any `/p2p/Qmfoo`-style addresses as we will include the peer id in\n    // the returned value of this function\n    multiaddrs = multiaddrs.filter(ma => {\n        return !PEER_ID.exactMatch(ma);\n    });\n    return {\n        peerId,\n        multiaddrs\n    };\n}\n//# sourceMappingURL=get-peer.js.map","import { IpNet } from '@chainsafe/netmask';\nimport { InvalidParametersError } from '@libp2p/interface';\nimport { getNetConfig } from '@libp2p/utils';\nimport { Circuit } from '@multiformats/multiaddr-matcher';\n/**\n * These are speculative protocols that are run automatically on connection open\n * so are usually not the reason the connection was opened.\n *\n * Consequently when requested it should be safe to close connections that only\n * have these protocol streams open.\n */\nconst DEFAULT_CLOSABLE_PROTOCOLS = [\n    // identify\n    '/ipfs/id/1.0.0',\n    // identify-push\n    '/ipfs/id/push/1.0.0',\n    // autonat\n    '/libp2p/autonat/1.0.0',\n    // dcutr\n    '/libp2p/dcutr'\n];\n/**\n * Close the passed connection if it has no streams, or only closable protocol\n * streams, falling back to aborting the connection if closing it cleanly fails.\n */\nexport async function safelyCloseConnectionIfUnused(connection, options) {\n    const streamProtocols = connection?.streams?.map(stream => stream.protocol) ?? [];\n    const closableProtocols = options?.closableProtocols ?? DEFAULT_CLOSABLE_PROTOCOLS;\n    // if the connection has protocols not in the closable protocols list, do not\n    // close the connection\n    if (streamProtocols.filter(proto => proto != null && !closableProtocols.includes(proto)).length > 0) {\n        return;\n    }\n    try {\n        await connection?.close(options);\n    }\n    catch (err) {\n        connection?.abort(err);\n    }\n}\n/**\n * Converts a multiaddr string or object to an IpNet object.\n * If the multiaddr doesn't include /ipcidr, it will encapsulate with the appropriate CIDR:\n * - /ipcidr/32 for IPv4\n * - /ipcidr/128 for IPv6\n *\n * @param {string | Multiaddr} ma - The multiaddr object to convert.\n * @returns {IpNet} The converted IpNet object.\n * @throws {Error} Throws an error if the multiaddr is not valid.\n */\nexport function multiaddrToIpNet(ma) {\n    const config = getNetConfig(ma);\n    let mask = config.cidr;\n    if (config.type !== 'ip4' && config.type !== 'ip6') {\n        throw new InvalidParametersError(`Multiaddr ${ma} was not an IPv4 or IPv6 address`);\n    }\n    // Check if /ipcidr is already present\n    if (mask == null) {\n        switch (config.type) {\n            case 'ip4': {\n                mask = 32;\n                break;\n            }\n            case 'ip6': {\n                mask = 128;\n                break;\n            }\n            default: {\n                throw new InvalidParametersError(`Multiaddr ${ma} was not an IPv4 or IPv6 address`);\n            }\n        }\n    }\n    return new IpNet(config.host, mask);\n}\n/**\n * Returns true if the passed multiaddr would result in a direct connection to\n * the peer.\n *\n * Currently only circuit relay addresses are supported as indirect connections.\n */\nexport function isDirect(ma) {\n    return !Circuit.exactMatch(ma);\n}\n/**\n * If there is an existing non-limited connection to the remote peer return it,\n * unless it is indirect and at least one of the passed dial addresses would\n * result in a direct connection\n */\nexport function findExistingConnection(peerId, connections, dialAddresses) {\n    if (peerId == null || connections == null) {\n        return;\n    }\n    const existingConnection = connections\n        .sort((a, b) => {\n        if (a.direct) {\n            return -1;\n        }\n        if (b.direct) {\n            return 1;\n        }\n        return 0;\n    })\n        .find(con => con.limits == null);\n    if (existingConnection == null || existingConnection.direct || dialAddresses == null) {\n        return existingConnection;\n    }\n    // we have an indirect, but unlimited connection - test the dial addresses to\n    // see if any of them would result in a direct connection, in which case allow\n    // the attempt to upgrade to a direct connection\n    const wouldUpgradeToDirect = dialAddresses.some(ma => isDirect(ma));\n    if (wouldUpgradeToDirect) {\n        return;\n    }\n    return existingConnection;\n}\n//# sourceMappingURL=utils.js.map","import { PeerMap } from '@libp2p/peer-collections';\nimport { getNetConfig, isNetworkAddress } from '@libp2p/utils';\nimport { multiaddrToIpNet, safelyCloseConnectionIfUnused } from './utils.js';\n/**\n * If we go over the max connections limit, choose some connections to close\n */\nexport class ConnectionPruner {\n    connectionManager;\n    peerStore;\n    allow;\n    events;\n    log;\n    constructor(components, init = {}) {\n        this.allow = (init.allow ?? []).map(ma => multiaddrToIpNet(ma));\n        this.connectionManager = components.connectionManager;\n        this.peerStore = components.peerStore;\n        this.events = components.events;\n        this.log = components.logger.forComponent('libp2p:connection-manager:connection-pruner');\n        this.maybePruneConnections = this.maybePruneConnections.bind(this);\n    }\n    start() {\n        this.events.addEventListener('connection:open', this.maybePruneConnections);\n    }\n    stop() {\n        this.events.removeEventListener('connection:open', this.maybePruneConnections);\n    }\n    maybePruneConnections() {\n        this._maybePruneConnections()\n            .catch(err => {\n            this.log.error('error while pruning connections - %e', err);\n        });\n    }\n    /**\n     * If we have more connections than our maximum, select some excess connections\n     * to prune based on peer value\n     */\n    async _maybePruneConnections() {\n        const connections = this.connectionManager.getConnections();\n        const numConnections = connections.length;\n        const maxConnections = this.connectionManager.getMaxConnections();\n        this.log('checking max connections limit %d/%d', numConnections, maxConnections);\n        if (numConnections <= maxConnections) {\n            return;\n        }\n        const peerValues = new PeerMap();\n        // work out peer values\n        for (const connection of connections) {\n            const remotePeer = connection.remotePeer;\n            if (peerValues.has(remotePeer)) {\n                continue;\n            }\n            peerValues.set(remotePeer, 0);\n            try {\n                const peer = await this.peerStore.get(remotePeer);\n                // sum all tag values\n                peerValues.set(remotePeer, [...peer.tags.values()].reduce((acc, curr) => {\n                    return acc + curr.value;\n                }, 0));\n            }\n            catch (err) {\n                if (err.name !== 'NotFoundError') {\n                    this.log.error('error loading peer tags - %e', err);\n                }\n            }\n        }\n        const sortedConnections = this.sortConnections(connections, peerValues);\n        // close some connections\n        const toPrune = Math.max(numConnections - maxConnections, 0);\n        const toClose = [];\n        for (const connection of sortedConnections) {\n            this.log('too many connections open - closing a connection to %p', connection.remotePeer);\n            // check allow list\n            const connectionInAllowList = this.allow.some((ipNet) => {\n                if (isNetworkAddress(connection.remoteAddr)) {\n                    const config = getNetConfig(connection.remoteAddr);\n                    return ipNet.contains(config.host);\n                }\n                return true;\n            });\n            // Connections in the allow list should be excluded from pruning\n            if (!connectionInAllowList) {\n                toClose.push(connection);\n            }\n            if (toClose.length === toPrune) {\n                break;\n            }\n        }\n        // close connections\n        await Promise.all(toClose.map(async (connection) => {\n            await safelyCloseConnectionIfUnused(connection, {\n                signal: AbortSignal.timeout(1000)\n            });\n        }));\n        // despatch prune event\n        this.events.safeDispatchEvent('connection:prune', { detail: toClose });\n    }\n    sortConnections(connections, peerValues) {\n        return connections\n            // sort by connection age, newest to oldest\n            .sort((a, b) => {\n            const connectionALifespan = a.timeline.open;\n            const connectionBLifespan = b.timeline.open;\n            if (connectionALifespan < connectionBLifespan) {\n                return 1;\n            }\n            if (connectionALifespan > connectionBLifespan) {\n                return -1;\n            }\n            return 0;\n        })\n            // sort by direction, incoming first then outgoing\n            .sort((a, b) => {\n            if (a.direction === 'outbound' && b.direction === 'inbound') {\n                return 1;\n            }\n            if (a.direction === 'inbound' && b.direction === 'outbound') {\n                return -1;\n            }\n            return 0;\n        })\n            // sort by number of streams, lowest to highest\n            .sort((a, b) => {\n            if (a.streams.length > b.streams.length) {\n                return 1;\n            }\n            if (a.streams.length < b.streams.length) {\n                return -1;\n            }\n            return 0;\n        })\n            // sort by tag value, lowest to highest\n            .sort((a, b) => {\n            const peerAValue = peerValues.get(a.remotePeer) ?? 0;\n            const peerBValue = peerValues.get(b.remotePeer) ?? 0;\n            if (peerAValue > peerBValue) {\n                return 1;\n            }\n            if (peerAValue < peerBValue) {\n                return -1;\n            }\n            return 0;\n        });\n    }\n}\n//# sourceMappingURL=connection-pruner.js.map","/**\n * @see https://libp2p.github.io/js-libp2p/interfaces/index._internal_.ConnectionManagerConfig.html#dialTimeout\n */\nexport const DIAL_TIMEOUT = 10_000;\n/**\n * @see https://libp2p.github.io/js-libp2p/interfaces/index._internal_.ConnectionManagerConfig.html#connectionCloseTimeout\n */\nexport const CONNECTION_CLOSE_TIMEOUT = 1_000;\n/**\n * @see https://libp2p.github.io/js-libp2p/interfaces/index._internal_.ConnectionManagerConfig.html#inboundUpgradeTimeout\n */\nexport const INBOUND_UPGRADE_TIMEOUT = 10_000;\n/**\n * @see https://libp2p.github.io/js-libp2p/interfaces/index._internal_.ConnectionManagerConfig.html#protocolNegotiationTimeout\n */\nexport const PROTOCOL_NEGOTIATION_TIMEOUT = 10_000;\n/**\n * @see https://libp2p.github.io/js-libp2p/interfaces/index._internal_.ConnectionManagerConfig.html#maxPeerAddrsToDial\n */\nexport const MAX_PEER_ADDRS_TO_DIAL = 25;\n/**\n * @see https://libp2p.github.io/js-libp2p/interfaces/index._internal_.ConnectionManagerConfig.html#inboundConnectionThreshold\n */\nexport const INBOUND_CONNECTION_THRESHOLD = 5;\n/**\n * @see https://libp2p.github.io/js-libp2p/interfaces/index._internal_.ConnectionManagerConfig.html#maxIncomingPendingConnections\n */\nexport const MAX_INCOMING_PENDING_CONNECTIONS = 10;\n/**\n * @see https://libp2p.github.io/js-libp2p/interfaces/index._internal_.ConnectionManagerConfig.html#maxParallelReconnects\n */\nexport const MAX_PARALLEL_RECONNECTS = 5;\n/**\n * Store as part of the peer store metadata for a given peer, the value for this\n * key is a timestamp of the last time a dial attempt failed with the timestamp\n * stored as a string.\n *\n * Used to insure we do not endlessly try to auto dial peers we have recently\n * failed to dial.\n */\nexport const LAST_DIAL_FAILURE_KEY = 'last-dial-failure';\n/**\n * Store as part of the peer store metadata for a given peer, the value for this\n * key is a timestamp of the last time a dial attempt succeeded with the\n * timestamp stored as a string.\n */\nexport const LAST_DIAL_SUCCESS_KEY = 'last-dial-success';\n/**\n * @see https://libp2p.github.io/js-libp2p/interfaces/index._internal_.ConnectionManagerConfig.html#maxDialQueueLength\n */\nexport const MAX_DIAL_QUEUE_LENGTH = 500;\n/**\n * @see https://libp2p.github.io/js-libp2p/interfaces/index._internal_.ConnectionManagerConfig.html#maxRecursiveDepth\n */\nexport const MAX_RECURSIVE_DEPTH = 32;\n//# sourceMappingURL=constants.defaults.js.map","export * from './constants.defaults.js';\n/**\n * @see https://libp2p.github.io/js-libp2p/interfaces/index._internal_.ConnectionManagerConfig.html#maxConnections\n */\nexport const MAX_CONNECTIONS = 100;\n/**\n * @see https://libp2p.github.io/js-libp2p/interfaces/index._internal_.ConnectionManagerConfig.html#maxParallelDials\n */\nexport const MAX_PARALLEL_DIALS = 50;\n//# sourceMappingURL=constants.browser.js.map","import { isLoopback, isPrivate } from '@libp2p/utils';\nimport { Circuit, WebSockets, WebSocketsSecure, WebRTC, WebRTCDirect, WebTransport, TCP } from '@multiformats/multiaddr-matcher';\n/**\n * Sorts addresses by order of reliability, where they have presented the fewest\n * problems:\n *\n * TCP -> WebSockets/Secure -> WebRTC -> WebRTCDirect -> WebTransport\n */\n// eslint-disable-next-line complexity\nexport function reliableTransportsFirst(a, b) {\n    const isATcp = TCP.exactMatch(a.multiaddr);\n    const isBTcp = TCP.exactMatch(b.multiaddr);\n    if (isATcp && !isBTcp) {\n        return -1;\n    }\n    if (!isATcp && isBTcp) {\n        return 1;\n    }\n    const isAWebSocketSecure = WebSocketsSecure.exactMatch(a.multiaddr);\n    const isBWebSocketSecure = WebSocketsSecure.exactMatch(b.multiaddr);\n    if (isAWebSocketSecure && !isBWebSocketSecure) {\n        return -1;\n    }\n    if (!isAWebSocketSecure && isBWebSocketSecure) {\n        return 1;\n    }\n    const isAWebSocket = WebSockets.exactMatch(a.multiaddr);\n    const isBWebSocket = WebSockets.exactMatch(b.multiaddr);\n    if (isAWebSocket && !isBWebSocket) {\n        return -1;\n    }\n    if (!isAWebSocket && isBWebSocket) {\n        return 1;\n    }\n    const isAWebRTC = WebRTC.exactMatch(a.multiaddr);\n    const isBWebRTC = WebRTC.exactMatch(b.multiaddr);\n    if (isAWebRTC && !isBWebRTC) {\n        return -1;\n    }\n    if (!isAWebRTC && isBWebRTC) {\n        return 1;\n    }\n    const isAWebRTCDirect = WebRTCDirect.exactMatch(a.multiaddr);\n    const isBWebRTCDirect = WebRTCDirect.exactMatch(b.multiaddr);\n    if (isAWebRTCDirect && !isBWebRTCDirect) {\n        return -1;\n    }\n    if (!isAWebRTCDirect && isBWebRTCDirect) {\n        return 1;\n    }\n    const isAWebTransport = WebTransport.exactMatch(a.multiaddr);\n    const isBWebTransport = WebTransport.exactMatch(b.multiaddr);\n    if (isAWebTransport && !isBWebTransport) {\n        return -1;\n    }\n    if (!isAWebTransport && isBWebTransport) {\n        return 1;\n    }\n    // ... everything else\n    return 0;\n}\n/**\n * Compare function for array.sort() that moves loopback addresses to the end\n * of the array.\n */\nexport function loopbackAddressLast(a, b) {\n    const isALoopback = isLoopback(a.multiaddr);\n    const isBLoopback = isLoopback(b.multiaddr);\n    if (isALoopback && !isBLoopback) {\n        return 1;\n    }\n    else if (!isALoopback && isBLoopback) {\n        return -1;\n    }\n    return 0;\n}\n/**\n * Compare function for array.sort() that moves public addresses to the start\n * of the array.\n */\nexport function publicAddressesFirst(a, b) {\n    const isAPrivate = isPrivate(a.multiaddr);\n    const isBPrivate = isPrivate(b.multiaddr);\n    if (isAPrivate && !isBPrivate) {\n        return 1;\n    }\n    else if (!isAPrivate && isBPrivate) {\n        return -1;\n    }\n    return 0;\n}\n/**\n * Compare function for array.sort() that moves certified addresses to the start\n * of the array.\n */\nexport function certifiedAddressesFirst(a, b) {\n    if (a.isCertified && !b.isCertified) {\n        return -1;\n    }\n    else if (!a.isCertified && b.isCertified) {\n        return 1;\n    }\n    return 0;\n}\n/**\n * Compare function for array.sort() that moves circuit relay addresses to the\n * end of the array.\n */\nexport function circuitRelayAddressesLast(a, b) {\n    const isACircuit = Circuit.exactMatch(a.multiaddr);\n    const isBCircuit = Circuit.exactMatch(b.multiaddr);\n    if (isACircuit && !isBCircuit) {\n        return 1;\n    }\n    else if (!isACircuit && isBCircuit) {\n        return -1;\n    }\n    return 0;\n}\nexport function defaultAddressSorter(addresses) {\n    return addresses\n        .sort(reliableTransportsFirst)\n        .sort(certifiedAddressesFirst)\n        .sort(circuitRelayAddressesLast)\n        .sort(publicAddressesFirst)\n        .sort(loopbackAddressLast);\n}\n//# sourceMappingURL=address-sorter.js.map","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","export class TimeoutError extends Error {\n\tname = 'TimeoutError';\n\n\tconstructor(message, options) {\n\t\tsuper(message, options);\n\t\tError.captureStackTrace?.(this, TimeoutError);\n\t}\n}\n\nconst getAbortedReason = signal => signal.reason ?? new DOMException('This operation was aborted.', 'AbortError');\n\nexport default function pTimeout(promise, options) {\n\tconst {\n\t\tmilliseconds,\n\t\tfallback,\n\t\tmessage,\n\t\tcustomTimers = {setTimeout, clearTimeout},\n\t\tsignal,\n\t} = options;\n\n\tlet timer;\n\tlet abortHandler;\n\n\tconst wrappedPromise = new Promise((resolve, reject) => {\n\t\tif (typeof milliseconds !== 'number' || Math.sign(milliseconds) !== 1) {\n\t\t\tthrow new TypeError(`Expected \\`milliseconds\\` to be a positive number, got \\`${milliseconds}\\``);\n\t\t}\n\n\t\tif (signal?.aborted) {\n\t\t\treject(getAbortedReason(signal));\n\t\t\treturn;\n\t\t}\n\n\t\tif (signal) {\n\t\t\tabortHandler = () => {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t};\n\n\t\t\tsignal.addEventListener('abort', abortHandler, {once: true});\n\t\t}\n\n\t\t// Use .then() instead of async IIFE to preserve stack traces\n\t\t// eslint-disable-next-line promise/prefer-await-to-then, promise/prefer-catch\n\t\tpromise.then(resolve, reject);\n\n\t\tif (milliseconds === Number.POSITIVE_INFINITY) {\n\t\t\treturn;\n\t\t}\n\n\t\t// We create the error outside of `setTimeout` to preserve the stack trace.\n\t\tconst timeoutError = new TimeoutError();\n\n\t\t// `.call(undefined, ...)` is needed for custom timers to avoid context issues\n\t\ttimer = customTimers.setTimeout.call(undefined, () => {\n\t\t\tif (fallback) {\n\t\t\t\ttry {\n\t\t\t\t\tresolve(fallback());\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof promise.cancel === 'function') {\n\t\t\t\tpromise.cancel();\n\t\t\t}\n\n\t\t\tif (message === false) {\n\t\t\t\tresolve();\n\t\t\t} else if (message instanceof Error) {\n\t\t\t\treject(message);\n\t\t\t} else {\n\t\t\t\ttimeoutError.message = message ?? `Promise timed out after ${milliseconds} milliseconds`;\n\t\t\t\treject(timeoutError);\n\t\t\t}\n\t\t}, milliseconds);\n\t});\n\n\t// eslint-disable-next-line promise/prefer-await-to-then\n\tconst cancelablePromise = wrappedPromise.finally(() => {\n\t\tcancelablePromise.clear();\n\t\tif (abortHandler && signal) {\n\t\t\tsignal.removeEventListener('abort', abortHandler);\n\t\t}\n\t});\n\n\tcancelablePromise.clear = () => {\n\t\t// `.call(undefined, ...)` is needed for custom timers to avoid context issues\n\t\tcustomTimers.clearTimeout.call(undefined, timer);\n\t\ttimer = undefined;\n\t};\n\n\treturn cancelablePromise;\n}\n","// Port of lower_bound from https://en.cppreference.com/w/cpp/algorithm/lower_bound\n// Used to compute insertion index to keep queue sorted after insertion\nexport default function lowerBound(array, value, comparator) {\n    let first = 0;\n    let count = array.length;\n    while (count > 0) {\n        const step = Math.trunc(count / 2);\n        let it = first + step;\n        if (comparator(array[it], value) <= 0) {\n            first = ++it;\n            count -= step + 1;\n        }\n        else {\n            count = step;\n        }\n    }\n    return first;\n}\n","import lowerBound from './lower-bound.js';\nexport default class PriorityQueue {\n    #queue = [];\n    enqueue(run, options) {\n        const { priority = 0, id, } = options ?? {};\n        const element = {\n            priority,\n            id,\n            run,\n        };\n        if (this.size === 0 || this.#queue[this.size - 1].priority >= priority) {\n            this.#queue.push(element);\n            return;\n        }\n        const index = lowerBound(this.#queue, element, (a, b) => b.priority - a.priority);\n        this.#queue.splice(index, 0, element);\n    }\n    setPriority(id, priority) {\n        const index = this.#queue.findIndex((element) => element.id === id);\n        if (index === -1) {\n            throw new ReferenceError(`No promise function with the id \"${id}\" exists in the queue.`);\n        }\n        const [item] = this.#queue.splice(index, 1);\n        this.enqueue(item.run, { priority, id });\n    }\n    dequeue() {\n        const item = this.#queue.shift();\n        return item?.run;\n    }\n    filter(options) {\n        return this.#queue.filter((element) => element.priority === options.priority).map((element) => element.run);\n    }\n    get size() {\n        return this.#queue.length;\n    }\n}\n","import { EventEmitter } from 'eventemitter3';\nimport pTimeout from 'p-timeout';\nimport PriorityQueue from './priority-queue.js';\n/**\nPromise queue with concurrency control.\n*/\nexport default class PQueue extends EventEmitter {\n    #carryoverIntervalCount;\n    #isIntervalIgnored;\n    #intervalCount = 0;\n    #intervalCap;\n    #rateLimitedInInterval = false;\n    #rateLimitFlushScheduled = false;\n    #interval;\n    #intervalEnd = 0;\n    #lastExecutionTime = 0;\n    #intervalId;\n    #timeoutId;\n    #queue;\n    #queueClass;\n    #pending = 0;\n    // The `!` is needed because of https://github.com/microsoft/TypeScript/issues/32194\n    #concurrency;\n    #isPaused;\n    // Use to assign a unique identifier to a promise function, if not explicitly specified\n    #idAssigner = 1n;\n    // Track currently running tasks for debugging\n    #runningTasks = new Map();\n    /**\n    Get or set the default timeout for all tasks. Can be changed at runtime.\n\n    Operations will throw a `TimeoutError` if they don't complete within the specified time.\n\n    The timeout begins when the operation is dequeued and starts execution, not while it's waiting in the queue.\n\n    @example\n    ```\n    const queue = new PQueue({timeout: 5000});\n\n    // Change timeout for all future tasks\n    queue.timeout = 10000;\n    ```\n    */\n    timeout;\n    constructor(options) {\n        super();\n        // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n        options = {\n            carryoverIntervalCount: false,\n            intervalCap: Number.POSITIVE_INFINITY,\n            interval: 0,\n            concurrency: Number.POSITIVE_INFINITY,\n            autoStart: true,\n            queueClass: PriorityQueue,\n            ...options,\n        };\n        if (!(typeof options.intervalCap === 'number' && options.intervalCap >= 1)) {\n            throw new TypeError(`Expected \\`intervalCap\\` to be a number from 1 and up, got \\`${options.intervalCap?.toString() ?? ''}\\` (${typeof options.intervalCap})`);\n        }\n        if (options.interval === undefined || !(Number.isFinite(options.interval) && options.interval >= 0)) {\n            throw new TypeError(`Expected \\`interval\\` to be a finite number >= 0, got \\`${options.interval?.toString() ?? ''}\\` (${typeof options.interval})`);\n        }\n        // TODO: Remove this fallback in the next major version\n        // eslint-disable-next-line @typescript-eslint/no-deprecated\n        this.#carryoverIntervalCount = options.carryoverIntervalCount ?? options.carryoverConcurrencyCount ?? false;\n        this.#isIntervalIgnored = options.intervalCap === Number.POSITIVE_INFINITY || options.interval === 0;\n        this.#intervalCap = options.intervalCap;\n        this.#interval = options.interval;\n        this.#queue = new options.queueClass();\n        this.#queueClass = options.queueClass;\n        this.concurrency = options.concurrency;\n        if (options.timeout !== undefined && !(Number.isFinite(options.timeout) && options.timeout > 0)) {\n            throw new TypeError(`Expected \\`timeout\\` to be a positive finite number, got \\`${options.timeout}\\` (${typeof options.timeout})`);\n        }\n        this.timeout = options.timeout;\n        this.#isPaused = options.autoStart === false;\n        this.#setupRateLimitTracking();\n    }\n    get #doesIntervalAllowAnother() {\n        return this.#isIntervalIgnored || this.#intervalCount < this.#intervalCap;\n    }\n    get #doesConcurrentAllowAnother() {\n        return this.#pending < this.#concurrency;\n    }\n    #next() {\n        this.#pending--;\n        if (this.#pending === 0) {\n            this.emit('pendingZero');\n        }\n        this.#tryToStartAnother();\n        this.emit('next');\n    }\n    #onResumeInterval() {\n        this.#onInterval(); // Already schedules update\n        this.#initializeIntervalIfNeeded();\n        this.#timeoutId = undefined;\n    }\n    get #isIntervalPaused() {\n        const now = Date.now();\n        if (this.#intervalId === undefined) {\n            const delay = this.#intervalEnd - now;\n            if (delay < 0) {\n                // If the interval has expired while idle, check if we should enforce the interval\n                // from the last task execution. This ensures proper spacing between tasks even\n                // when the queue becomes empty and then new tasks are added.\n                if (this.#lastExecutionTime > 0) {\n                    const timeSinceLastExecution = now - this.#lastExecutionTime;\n                    if (timeSinceLastExecution < this.#interval) {\n                        // Not enough time has passed since the last task execution\n                        this.#createIntervalTimeout(this.#interval - timeSinceLastExecution);\n                        return true;\n                    }\n                }\n                // Enough time has passed or no previous execution, allow execution\n                this.#intervalCount = (this.#carryoverIntervalCount) ? this.#pending : 0;\n            }\n            else {\n                // Act as the interval is pending\n                this.#createIntervalTimeout(delay);\n                return true;\n            }\n        }\n        return false;\n    }\n    #createIntervalTimeout(delay) {\n        if (this.#timeoutId !== undefined) {\n            return;\n        }\n        this.#timeoutId = setTimeout(() => {\n            this.#onResumeInterval();\n        }, delay);\n    }\n    #clearIntervalTimer() {\n        if (this.#intervalId) {\n            clearInterval(this.#intervalId);\n            this.#intervalId = undefined;\n        }\n    }\n    #clearTimeoutTimer() {\n        if (this.#timeoutId) {\n            clearTimeout(this.#timeoutId);\n            this.#timeoutId = undefined;\n        }\n    }\n    #tryToStartAnother() {\n        if (this.#queue.size === 0) {\n            // We can clear the interval (\"pause\")\n            // Because we can redo it later (\"resume\")\n            this.#clearIntervalTimer();\n            this.emit('empty');\n            if (this.#pending === 0) {\n                // Clear timeout as well when completely idle\n                this.#clearTimeoutTimer();\n                this.emit('idle');\n            }\n            return false;\n        }\n        let taskStarted = false;\n        if (!this.#isPaused) {\n            const canInitializeInterval = !this.#isIntervalPaused;\n            if (this.#doesIntervalAllowAnother && this.#doesConcurrentAllowAnother) {\n                const job = this.#queue.dequeue();\n                // Increment interval count immediately to prevent race conditions\n                if (!this.#isIntervalIgnored) {\n                    this.#intervalCount++;\n                    this.#scheduleRateLimitUpdate();\n                }\n                this.emit('active');\n                this.#lastExecutionTime = Date.now();\n                job();\n                if (canInitializeInterval) {\n                    this.#initializeIntervalIfNeeded();\n                }\n                taskStarted = true;\n            }\n        }\n        return taskStarted;\n    }\n    #initializeIntervalIfNeeded() {\n        if (this.#isIntervalIgnored || this.#intervalId !== undefined) {\n            return;\n        }\n        this.#intervalId = setInterval(() => {\n            this.#onInterval();\n        }, this.#interval);\n        this.#intervalEnd = Date.now() + this.#interval;\n    }\n    #onInterval() {\n        if (this.#intervalCount === 0 && this.#pending === 0 && this.#intervalId) {\n            this.#clearIntervalTimer();\n        }\n        this.#intervalCount = this.#carryoverIntervalCount ? this.#pending : 0;\n        this.#processQueue();\n        this.#scheduleRateLimitUpdate();\n    }\n    /**\n    Executes all queued functions until it reaches the limit.\n    */\n    #processQueue() {\n        // eslint-disable-next-line no-empty\n        while (this.#tryToStartAnother()) { }\n    }\n    get concurrency() {\n        return this.#concurrency;\n    }\n    set concurrency(newConcurrency) {\n        if (!(typeof newConcurrency === 'number' && newConcurrency >= 1)) {\n            throw new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${newConcurrency}\\` (${typeof newConcurrency})`);\n        }\n        this.#concurrency = newConcurrency;\n        this.#processQueue();\n    }\n    async #throwOnAbort(signal) {\n        return new Promise((_resolve, reject) => {\n            signal.addEventListener('abort', () => {\n                reject(signal.reason);\n            }, { once: true });\n        });\n    }\n    /**\n    Updates the priority of a promise function by its id, affecting its execution order. Requires a defined concurrency limit to take effect.\n\n    For example, this can be used to prioritize a promise function to run earlier.\n\n    ```js\n    import PQueue from 'p-queue';\n\n    const queue = new PQueue({concurrency: 1});\n\n    queue.add(async () => '🦄', {priority: 1});\n    queue.add(async () => '🦀', {priority: 0, id: '🦀'});\n    queue.add(async () => '🦄', {priority: 1});\n    queue.add(async () => '🦄', {priority: 1});\n\n    queue.setPriority('🦀', 2);\n    ```\n\n    In this case, the promise function with `id: '🦀'` runs second.\n\n    You can also deprioritize a promise function to delay its execution:\n\n    ```js\n    import PQueue from 'p-queue';\n\n    const queue = new PQueue({concurrency: 1});\n\n    queue.add(async () => '🦄', {priority: 1});\n    queue.add(async () => '🦀', {priority: 1, id: '🦀'});\n    queue.add(async () => '🦄');\n    queue.add(async () => '🦄', {priority: 0});\n\n    queue.setPriority('🦀', -1);\n    ```\n    Here, the promise function with `id: '🦀'` executes last.\n    */\n    setPriority(id, priority) {\n        if (typeof priority !== 'number' || !Number.isFinite(priority)) {\n            throw new TypeError(`Expected \\`priority\\` to be a finite number, got \\`${priority}\\` (${typeof priority})`);\n        }\n        this.#queue.setPriority(id, priority);\n    }\n    async add(function_, options = {}) {\n        // In case `id` is not defined.\n        options.id ??= (this.#idAssigner++).toString();\n        options = {\n            timeout: this.timeout,\n            ...options,\n        };\n        return new Promise((resolve, reject) => {\n            // Create a unique symbol for tracking this task\n            const taskSymbol = Symbol(`task-${options.id}`);\n            this.#queue.enqueue(async () => {\n                this.#pending++;\n                // Track this running task\n                this.#runningTasks.set(taskSymbol, {\n                    id: options.id,\n                    priority: options.priority ?? 0, // Match priority-queue default\n                    startTime: Date.now(),\n                    timeout: options.timeout,\n                });\n                try {\n                    // Check abort signal - if aborted, need to decrement the counter\n                    // that was incremented in tryToStartAnother\n                    try {\n                        options.signal?.throwIfAborted();\n                    }\n                    catch (error) {\n                        // Decrement the counter that was already incremented\n                        if (!this.#isIntervalIgnored) {\n                            this.#intervalCount--;\n                        }\n                        // Clean up tracking before throwing\n                        this.#runningTasks.delete(taskSymbol);\n                        throw error;\n                    }\n                    let operation = function_({ signal: options.signal });\n                    if (options.timeout) {\n                        operation = pTimeout(Promise.resolve(operation), {\n                            milliseconds: options.timeout,\n                            message: `Task timed out after ${options.timeout}ms (queue has ${this.#pending} running, ${this.#queue.size} waiting)`,\n                        });\n                    }\n                    if (options.signal) {\n                        operation = Promise.race([operation, this.#throwOnAbort(options.signal)]);\n                    }\n                    const result = await operation;\n                    resolve(result);\n                    this.emit('completed', result);\n                }\n                catch (error) {\n                    reject(error);\n                    this.emit('error', error);\n                }\n                finally {\n                    // Remove from running tasks\n                    this.#runningTasks.delete(taskSymbol);\n                    // Use queueMicrotask to prevent deep recursion while maintaining timing\n                    queueMicrotask(() => {\n                        this.#next();\n                    });\n                }\n            }, options);\n            this.emit('add');\n            this.#tryToStartAnother();\n        });\n    }\n    async addAll(functions, options) {\n        return Promise.all(functions.map(async (function_) => this.add(function_, options)));\n    }\n    /**\n    Start (or resume) executing enqueued tasks within concurrency limit. No need to call this if queue is not paused (via `options.autoStart = false` or by `.pause()` method.)\n    */\n    start() {\n        if (!this.#isPaused) {\n            return this;\n        }\n        this.#isPaused = false;\n        this.#processQueue();\n        return this;\n    }\n    /**\n    Put queue execution on hold.\n    */\n    pause() {\n        this.#isPaused = true;\n    }\n    /**\n    Clear the queue.\n    */\n    clear() {\n        this.#queue = new this.#queueClass();\n        // Note: We don't clear #runningTasks as those tasks are still running\n        // They will be removed when they complete in the finally block\n        // Force synchronous update since clear() should have immediate effect\n        this.#updateRateLimitState();\n    }\n    /**\n    Can be called multiple times. Useful if you for example add additional items at a later time.\n\n    @returns A promise that settles when the queue becomes empty.\n    */\n    async onEmpty() {\n        // Instantly resolve if the queue is empty\n        if (this.#queue.size === 0) {\n            return;\n        }\n        await this.#onEvent('empty');\n    }\n    /**\n    @returns A promise that settles when the queue size is less than the given limit: `queue.size < limit`.\n\n    If you want to avoid having the queue grow beyond a certain size you can `await queue.onSizeLessThan()` before adding a new item.\n\n    Note that this only limits the number of items waiting to start. There could still be up to `concurrency` jobs already running that this call does not include in its calculation.\n    */\n    async onSizeLessThan(limit) {\n        // Instantly resolve if the queue is empty.\n        if (this.#queue.size < limit) {\n            return;\n        }\n        await this.#onEvent('next', () => this.#queue.size < limit);\n    }\n    /**\n    The difference with `.onEmpty` is that `.onIdle` guarantees that all work from the queue has finished. `.onEmpty` merely signals that the queue is empty, but it could mean that some promises haven't completed yet.\n\n    @returns A promise that settles when the queue becomes empty, and all promises have completed; `queue.size === 0 && queue.pending === 0`.\n    */\n    async onIdle() {\n        // Instantly resolve if none pending and if nothing else is queued\n        if (this.#pending === 0 && this.#queue.size === 0) {\n            return;\n        }\n        await this.#onEvent('idle');\n    }\n    /**\n    The difference with `.onIdle` is that `.onPendingZero` only waits for currently running tasks to finish, ignoring queued tasks.\n\n    @returns A promise that settles when all currently running tasks have completed; `queue.pending === 0`.\n    */\n    async onPendingZero() {\n        if (this.#pending === 0) {\n            return;\n        }\n        await this.#onEvent('pendingZero');\n    }\n    /**\n    @returns A promise that settles when the queue becomes rate-limited due to intervalCap.\n    */\n    async onRateLimit() {\n        if (this.isRateLimited) {\n            return;\n        }\n        await this.#onEvent('rateLimit');\n    }\n    /**\n    @returns A promise that settles when the queue is no longer rate-limited.\n    */\n    async onRateLimitCleared() {\n        if (!this.isRateLimited) {\n            return;\n        }\n        await this.#onEvent('rateLimitCleared');\n    }\n    /**\n    @returns A promise that rejects when any task in the queue errors.\n\n    Use with `Promise.race([queue.onError(), queue.onIdle()])` to fail fast on the first error while still resolving normally when the queue goes idle.\n\n    Important: The promise returned by `add()` still rejects. You must handle each `add()` promise (for example, `.catch(() => {})`) to avoid unhandled rejections.\n\n    @example\n    ```\n    import PQueue from 'p-queue';\n\n    const queue = new PQueue({concurrency: 2});\n\n    queue.add(() => fetchData(1)).catch(() => {});\n    queue.add(() => fetchData(2)).catch(() => {});\n    queue.add(() => fetchData(3)).catch(() => {});\n\n    // Stop processing on first error\n    try {\n        await Promise.race([\n            queue.onError(),\n            queue.onIdle()\n        ]);\n    } catch (error) {\n        queue.pause(); // Stop processing remaining tasks\n        console.error('Queue failed:', error);\n    }\n    ```\n    */\n    // eslint-disable-next-line @typescript-eslint/promise-function-async\n    async onError() {\n        return new Promise((_resolve, reject) => {\n            const handleError = (error) => {\n                this.off('error', handleError);\n                reject(error);\n            };\n            this.on('error', handleError);\n        });\n    }\n    async #onEvent(event, filter) {\n        return new Promise(resolve => {\n            const listener = () => {\n                if (filter && !filter()) {\n                    return;\n                }\n                this.off(event, listener);\n                resolve();\n            };\n            this.on(event, listener);\n        });\n    }\n    /**\n    Size of the queue, the number of queued items waiting to run.\n    */\n    get size() {\n        return this.#queue.size;\n    }\n    /**\n    Size of the queue, filtered by the given options.\n\n    For example, this can be used to find the number of items remaining in the queue with a specific priority level.\n    */\n    sizeBy(options) {\n        // eslint-disable-next-line unicorn/no-array-callback-reference\n        return this.#queue.filter(options).length;\n    }\n    /**\n    Number of running items (no longer in the queue).\n    */\n    get pending() {\n        return this.#pending;\n    }\n    /**\n    Whether the queue is currently paused.\n    */\n    get isPaused() {\n        return this.#isPaused;\n    }\n    #setupRateLimitTracking() {\n        // Only schedule updates when rate limiting is enabled\n        if (this.#isIntervalIgnored) {\n            return;\n        }\n        // Wire up to lifecycle events that affect rate limit state\n        // Only 'add' and 'next' can actually change rate limit state\n        this.on('add', () => {\n            if (this.#queue.size > 0) {\n                this.#scheduleRateLimitUpdate();\n            }\n        });\n        this.on('next', () => {\n            this.#scheduleRateLimitUpdate();\n        });\n    }\n    #scheduleRateLimitUpdate() {\n        // Skip if rate limiting is not enabled or already scheduled\n        if (this.#isIntervalIgnored || this.#rateLimitFlushScheduled) {\n            return;\n        }\n        this.#rateLimitFlushScheduled = true;\n        queueMicrotask(() => {\n            this.#rateLimitFlushScheduled = false;\n            this.#updateRateLimitState();\n        });\n    }\n    #updateRateLimitState() {\n        const previous = this.#rateLimitedInInterval;\n        const shouldBeRateLimited = !this.#isIntervalIgnored\n            && this.#intervalCount >= this.#intervalCap\n            && this.#queue.size > 0;\n        if (shouldBeRateLimited !== previous) {\n            this.#rateLimitedInInterval = shouldBeRateLimited;\n            this.emit(shouldBeRateLimited ? 'rateLimit' : 'rateLimitCleared');\n        }\n    }\n    /**\n    Whether the queue is currently rate-limited due to intervalCap.\n    */\n    get isRateLimited() {\n        return this.#rateLimitedInInterval;\n    }\n    /**\n    Whether the queue is saturated. Returns `true` when:\n    - All concurrency slots are occupied and tasks are waiting, OR\n    - The queue is rate-limited and tasks are waiting\n\n    Useful for detecting backpressure and potential hanging tasks.\n\n    ```js\n    import PQueue from 'p-queue';\n\n    const queue = new PQueue({concurrency: 2});\n\n    // Backpressure handling\n    if (queue.isSaturated) {\n        console.log('Queue is saturated, waiting for capacity...');\n        await queue.onSizeLessThan(queue.concurrency);\n    }\n\n    // Monitoring for stuck tasks\n    setInterval(() => {\n        if (queue.isSaturated) {\n            console.warn(`Queue saturated: ${queue.pending} running, ${queue.size} waiting`);\n        }\n    }, 60000);\n    ```\n    */\n    get isSaturated() {\n        return (this.#pending === this.#concurrency && this.#queue.size > 0)\n            || (this.isRateLimited && this.#queue.size > 0);\n    }\n    /**\n    The tasks currently being executed. Each task includes its `id`, `priority`, `startTime`, and `timeout` (if set).\n\n    Returns an array of task info objects.\n\n    ```js\n    import PQueue from 'p-queue';\n\n    const queue = new PQueue({concurrency: 2});\n\n    // Add tasks with IDs for better debugging\n    queue.add(() => fetchUser(123), {id: 'user-123'});\n    queue.add(() => fetchPosts(456), {id: 'posts-456', priority: 1});\n\n    // Check what's running\n    console.log(queue.runningTasks);\n    // => [{\n    //   id: 'user-123',\n    //   priority: 0,\n    //   startTime: 1759253001716,\n    //   timeout: undefined\n    // }, {\n    //   id: 'posts-456',\n    //   priority: 1,\n    //   startTime: 1759253001916,\n    //   timeout: undefined\n    // }]\n    ```\n    */\n    get runningTasks() {\n        // Return fresh array with fresh objects to prevent mutations\n        return [...this.#runningTasks.values()].map(task => ({ ...task }));\n    }\n}\n/**\nError thrown when a task times out.\n\n@example\n```\nimport PQueue, {TimeoutError} from 'p-queue';\n\nconst queue = new PQueue({timeout: 1000});\n\ntry {\n    await queue.add(() => someTask());\n} catch (error) {\n    if (error instanceof TimeoutError) {\n        console.log('Task timed out');\n    }\n}\n```\n*/\nexport { TimeoutError } from 'p-timeout';\n","import { RecordType } from '../index.js';\nexport function getTypes(types) {\n    const DEFAULT_TYPES = [\n        RecordType.A\n    ];\n    if (types == null) {\n        return DEFAULT_TYPES;\n    }\n    if (Array.isArray(types)) {\n        if (types.length === 0) {\n            return DEFAULT_TYPES;\n        }\n        return types;\n    }\n    return [\n        types\n    ];\n}\n//# sourceMappingURL=get-types.js.map","import { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { RecordType } from '../index.js';\n/**\n * This TTL will be used if the remote service does not return one\n */\nexport const DEFAULT_TTL = 60;\nexport function toDNSResponse(obj) {\n    return {\n        Status: obj.Status ?? 0,\n        TC: obj.TC ?? obj.flag_tc ?? false,\n        RD: obj.RD ?? obj.flag_rd ?? false,\n        RA: obj.RA ?? obj.flag_ra ?? false,\n        AD: obj.AD ?? obj.flag_ad ?? false,\n        CD: obj.CD ?? obj.flag_cd ?? false,\n        Question: (obj.Question ?? obj.questions ?? []).map((question) => {\n            return {\n                name: question.name,\n                type: RecordType[question.type]\n            };\n        }),\n        Answer: (obj.Answer ?? obj.answers ?? []).map((answer) => {\n            return {\n                name: answer.name,\n                type: RecordType[answer.type],\n                TTL: (answer.TTL ?? answer.ttl ?? DEFAULT_TTL),\n                data: answer.data instanceof Uint8Array ? uint8ArrayToString(answer.data) : answer.data\n            };\n        })\n    };\n}\n//# sourceMappingURL=to-dns-response.js.map","/* eslint-env browser */\nimport PQueue from 'p-queue';\nimport { CustomProgressEvent } from 'progress-events';\nimport { RecordType } from '../index.js';\nimport { getTypes } from '../utils/get-types.js';\nimport { toDNSResponse } from '../utils/to-dns-response.js';\n/**\n * Browsers limit concurrent connections per host (~6), we don't want to exhaust\n * the limit so this value controls how many DNS queries can be in flight at\n * once.\n */\nexport const DEFAULT_QUERY_CONCURRENCY = 4;\n/**\n * Uses the RFC 8427 'application/dns-json' content-type to resolve DNS queries.\n *\n * Supports and server that uses the same schema as Google's DNS over HTTPS\n * resolver.\n *\n * This resolver needs fewer dependencies than the regular DNS-over-HTTPS\n * resolver so can result in a smaller bundle size and consequently is preferred\n * for browser use.\n *\n * @see https://developers.cloudflare.com/1.1.1.1/encryption/dns-over-https/make-api-requests/dns-json/\n * @see https://github.com/curl/curl/wiki/DNS-over-HTTPS#publicly-available-servers\n * @see https://dnsprivacy.org/public_resolvers/\n * @see https://datatracker.ietf.org/doc/html/rfc8427\n */\nexport function dnsJsonOverHttps(url, init = {}) {\n    const httpQueue = new PQueue({\n        concurrency: init.queryConcurrency ?? DEFAULT_QUERY_CONCURRENCY\n    });\n    return async (fqdn, options = {}) => {\n        const searchParams = new URLSearchParams();\n        searchParams.set('name', fqdn);\n        getTypes(options.types).forEach(type => {\n            // We pass record type as a string to the server because cloudflare DNS bug. see https://github.com/ipfs/helia/issues/474\n            searchParams.append('type', RecordType[type]);\n        });\n        options.onProgress?.(new CustomProgressEvent('dns:query', fqdn));\n        // query DNS-JSON over HTTPS server\n        const response = await httpQueue.add(async () => {\n            const res = await fetch(`${url}?${searchParams}`, {\n                headers: {\n                    accept: 'application/dns-json'\n                },\n                signal: options?.signal\n            });\n            if (res.status !== 200) {\n                throw new Error(`Unexpected HTTP status: ${res.status} - ${res.statusText}`);\n            }\n            const response = toDNSResponse(await res.json());\n            options.onProgress?.(new CustomProgressEvent('dns:response', response));\n            return response;\n        }, {\n            signal: options.signal\n        });\n        if (response == null) {\n            throw new Error('No DNS response received');\n        }\n        return response;\n    };\n}\n//# sourceMappingURL=dns-json-over-https.js.map","import { dnsJsonOverHttps } from './dns-json-over-https.js';\nexport function defaultResolver() {\n    return [\n        dnsJsonOverHttps('https://cloudflare-dns.com/dns-query'),\n        dnsJsonOverHttps('https://dns.google/resolve')\n    ];\n}\n//# sourceMappingURL=default.browser.js.map","module.exports = function (max) {\n\n  if (!max) throw Error('hashlru must have a max value, of type number, greater than 0')\n\n  var size = 0, cache = Object.create(null), _cache = Object.create(null)\n\n  function update (key, value) {\n    cache[key] = value\n    size ++\n    if(size >= max) {\n      size = 0\n      _cache = cache\n      cache = Object.create(null)\n    }\n  }\n\n  return {\n    has: function (key) {\n      return cache[key] !== undefined || _cache[key] !== undefined\n    },\n    remove: function (key) {\n      if(cache[key] !== undefined)\n        cache[key] = undefined\n      if(_cache[key] !== undefined)\n        _cache[key] = undefined\n    },\n    get: function (key) {\n      var v = cache[key]\n      if(v !== undefined) return v\n      if((v = _cache[key]) !== undefined) {\n        update(key, v)\n        return v\n      }\n    },\n    set: function (key, value) {\n      if(cache[key] !== undefined) cache[key] = value\n      else update(key, value)\n    },\n    clear: function () {\n      cache = Object.create(null)\n      _cache = Object.create(null)\n    }\n  }\n}\n\n\n\n\n\n\n\n","import hashlru from 'hashlru';\nimport { RecordType } from '../index.js';\nimport { DEFAULT_TTL, toDNSResponse } from './to-dns-response.js';\n/**\n * Time Aware Least Recent Used Cache\n *\n * @see https://arxiv.org/pdf/1801.00390\n */\nclass CachedAnswers {\n    lru;\n    constructor(maxSize) {\n        // @ts-expect-error types are broken - https://github.com/dominictarr/hashlru/pull/24\n        this.lru = hashlru(maxSize);\n    }\n    get(fqdn, types) {\n        let foundAllAnswers = true;\n        const answers = [];\n        for (const type of types) {\n            const cached = this.getAnswers(fqdn, type);\n            if (cached.length === 0) {\n                foundAllAnswers = false;\n                break;\n            }\n            answers.push(...cached);\n        }\n        if (foundAllAnswers) {\n            return toDNSResponse({ answers });\n        }\n    }\n    getAnswers(domain, type) {\n        const key = `${domain.toLowerCase()}-${type}`;\n        const answers = this.lru.get(key);\n        if (answers != null) {\n            const cachedAnswers = answers\n                .filter((entry) => {\n                return entry.expires > Date.now();\n            })\n                .map(({ expires, value }) => ({\n                ...value,\n                TTL: Math.round((expires - Date.now()) / 1000),\n                type: RecordType[value.type]\n            }));\n            if (cachedAnswers.length === 0) {\n                this.lru.remove(key);\n            }\n            // @ts-expect-error hashlru stringifies stored types which turns enums\n            // into strings, we convert back into enums above but tsc doesn't know\n            return cachedAnswers;\n        }\n        return [];\n    }\n    add(domain, answer) {\n        const key = `${domain.toLowerCase()}-${answer.type}`;\n        const answers = this.lru.get(key) ?? [];\n        answers.push({\n            expires: Date.now() + ((answer.TTL ?? DEFAULT_TTL) * 1000),\n            value: answer\n        });\n        this.lru.set(key, answers);\n    }\n    remove(domain, type) {\n        const key = `${domain.toLowerCase()}-${type}`;\n        this.lru.remove(key);\n    }\n    clear() {\n        this.lru.clear();\n    }\n}\n/**\n * Avoid sending multiple queries for the same hostname by caching results\n */\nexport function cache(size) {\n    return new CachedAnswers(size);\n}\n//# sourceMappingURL=cache.js.map","import { CustomProgressEvent } from 'progress-events';\nimport { defaultResolver } from './resolvers/default.js';\nimport { cache } from './utils/cache.js';\nimport { getTypes } from './utils/get-types.js';\nconst DEFAULT_ANSWER_CACHE_SIZE = 1000;\nexport class DNS {\n    resolvers;\n    cache;\n    constructor(init) {\n        this.resolvers = {};\n        this.cache = cache(init.cacheSize ?? DEFAULT_ANSWER_CACHE_SIZE);\n        Object.entries(init.resolvers ?? {}).forEach(([tld, resolver]) => {\n            if (!Array.isArray(resolver)) {\n                resolver = [resolver];\n            }\n            // convert `com` -> `com.`\n            if (!tld.endsWith('.')) {\n                tld = `${tld}.`;\n            }\n            this.resolvers[tld] = resolver;\n        });\n        // configure default resolver if none specified\n        if (this.resolvers['.'] == null) {\n            this.resolvers['.'] = defaultResolver();\n        }\n    }\n    /**\n     * Queries DNS resolvers for the passed record types for the passed domain.\n     *\n     * If cached records exist for all desired types they will be returned\n     * instead.\n     *\n     * Any new responses will be added to the cache for subsequent requests.\n     */\n    async query(domain, options = {}) {\n        const types = getTypes(options.types);\n        const cached = options.cached !== false ? this.cache.get(domain, types) : undefined;\n        if (cached != null) {\n            options.onProgress?.(new CustomProgressEvent('dns:cache', cached));\n            return cached;\n        }\n        const tld = `${domain.split('.').pop()}.`;\n        const resolvers = (this.resolvers[tld] ?? this.resolvers['.']).sort(() => {\n            return (Math.random() > 0.5) ? -1 : 1;\n        });\n        const errors = [];\n        for (const resolver of resolvers) {\n            // skip further resolutions if the user aborted the signal\n            if (options.signal?.aborted === true) {\n                break;\n            }\n            try {\n                const result = await resolver(domain, {\n                    ...options,\n                    types\n                });\n                for (const answer of result.Answer) {\n                    this.cache.add(domain, answer);\n                }\n                return result;\n            }\n            catch (err) {\n                errors.push(err);\n                options.onProgress?.(new CustomProgressEvent('dns:error', err));\n            }\n        }\n        if (errors.length === 1) {\n            throw errors[0];\n        }\n        throw new AggregateError(errors, `DNS lookup of ${domain} ${types} failed`);\n    }\n}\n//# sourceMappingURL=dns.js.map","/**\n * @packageDocumentation\n *\n * Query DNS records using `node:dns`, DNS over HTTP and/or DNSJSON over HTTP.\n *\n * A list of publicly accessible servers can be found [here](https://github.com/curl/curl/wiki/DNS-over-HTTPS#publicly-available-servers).\n *\n * @example Using the default resolver\n *\n * ```TypeScript\n * import { dns } from '@multiformats/dns'\n *\n * const resolver = dns()\n *\n * // resolve A records with a 5s timeout\n * const result = await dns.query('google.com', {\n *   signal: AbortSignal.timeout(5000)\n * })\n * ```\n *\n * @example Using per-TLD resolvers\n *\n * ```TypeScript\n * import { dns } from '@multiformats/dns'\n * import { dnsJsonOverHttps } from '@multiformats/dns/resolvers'\n *\n * const resolver = dns({\n *   resolvers: {\n *     // will only be used to resolve `.com` addresses\n *     'com.': dnsJsonOverHttps('https://cloudflare-dns.com/dns-query'),\n *\n *     // this can also be an array, resolvers will be shuffled and tried in\n *     // series\n *     'net.': [\n *       dnsJsonOverHttps('https://dns.google/resolve'),\n *       dnsJsonOverHttps('https://dns.pub/dns-query')\n *     ],\n *\n *     // will only be used to resolve all other addresses\n *     '.': dnsJsonOverHttps('https://dnsforge.de/dns-query'),\n *   }\n * })\n * ```\n *\n * @example Query for specific record types\n *\n * ```TypeScript\n * import { dns, RecordType } from '@multiformats/dns'\n *\n * const resolver = dns()\n *\n * // resolve only TXT records\n * const result = await dns.query('google.com', {\n *   types: [\n *     RecordType.TXT\n *   ]\n * })\n * ```\n *\n * ## Caching\n *\n * Individual Aanswers are cached so. If you make a request, for which all\n * record types are cached, all values will be pulled from the cache.\n *\n * If any of the record types are not cached, a new request will be resolved as\n * if none of the records were cached, and the cache will be updated to include\n * the new results.\n *\n * @example Ignoring the cache\n *\n * ```TypeScript\n * import { dns, RecordType } from '@multiformats/dns'\n *\n * const resolver = dns()\n *\n * // do not used cached results, always resolve a new query\n * const result = await dns.query('google.com', {\n *   cached: false\n * })\n * ```\n */\nimport { DNS as DNSClass } from './dns.js';\n/**\n * A subset of DNS Record Types\n *\n * @see https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4.\n */\nexport var RecordType;\n(function (RecordType) {\n    RecordType[RecordType[\"A\"] = 1] = \"A\";\n    RecordType[RecordType[\"CNAME\"] = 5] = \"CNAME\";\n    RecordType[RecordType[\"TXT\"] = 16] = \"TXT\";\n    RecordType[RecordType[\"AAAA\"] = 28] = \"AAAA\";\n})(RecordType || (RecordType = {}));\n/**\n * The default maximum amount of recursion allowed during a query\n */\nexport const MAX_RECURSIVE_DEPTH = 32;\nexport function dns(init = {}) {\n    return new DNSClass(init);\n}\n//# sourceMappingURL=index.js.map","import { dns, RecordType } from '@multiformats/dns';\nimport { multiaddr } from '@multiformats/multiaddr';\nclass DNSAddrResolver {\n    dns;\n    canResolve(ma) {\n        return ma.getComponents().some(({ name }) => name === 'dnsaddr');\n    }\n    async resolve(ma, options) {\n        const hostname = ma.getComponents()\n            .find(component => component.name === 'dnsaddr')\n            ?.value;\n        if (hostname == null) {\n            return [ma];\n        }\n        const resolver = this.getDNS(options);\n        const result = await resolver.query(`_dnsaddr.${hostname}`, {\n            signal: options?.signal,\n            types: [\n                RecordType.TXT\n            ]\n        });\n        const peerId = ma.getComponents()\n            .find(component => component.name === 'p2p')\n            ?.value;\n        const output = [];\n        for (const answer of result.Answer) {\n            const addr = answer.data\n                .replace(/[\"']/g, '')\n                .trim()\n                .split('=')[1];\n            if (addr == null) {\n                continue;\n            }\n            if (peerId != null && !addr.includes(peerId)) {\n                continue;\n            }\n            output.push(multiaddr(addr));\n        }\n        return output;\n    }\n    getDNS(options) {\n        if (options.dns != null) {\n            return options.dns;\n        }\n        if (this.dns == null) {\n            this.dns = dns();\n        }\n        return this.dns;\n    }\n}\nexport const dnsaddrResolver = new DNSAddrResolver();\n//# sourceMappingURL=dnsaddr.js.map","import { RecursionLimitError } from \"../../errors.js\";\nimport { MAX_RECURSIVE_DEPTH } from \"../constants.defaults.js\";\n/**\n * Recursively resolve multiaddrs\n */\nexport async function resolveMultiaddr(address, resolvers, options) {\n    const depth = options.depth ?? 0;\n    if (depth > (options.maxRecursiveDepth ?? MAX_RECURSIVE_DEPTH)) {\n        throw new RecursionLimitError('Max recursive depth reached');\n    }\n    let resolved = false;\n    const output = [];\n    for (const resolver of Object.values(resolvers)) {\n        if (resolver.canResolve(address)) {\n            resolved = true;\n            const addresses = await resolver.resolve(address, options);\n            for (const address of addresses) {\n                output.push(...(await resolveMultiaddr(address, resolvers, {\n                    ...options,\n                    depth: depth + 1\n                })));\n            }\n        }\n    }\n    if (resolved === false) {\n        output.push(address);\n    }\n    return output;\n}\nexport { dnsaddrResolver } from './dnsaddr.js';\n//# sourceMappingURL=index.js.map","/* eslint-disable max-depth */\nimport { TimeoutError, DialError, AbortError } from '@libp2p/interface';\nimport { PeerMap } from '@libp2p/peer-collections';\nimport { PriorityQueue } from '@libp2p/utils';\nimport { CODE_P2P, multiaddr } from '@multiformats/multiaddr';\nimport { Circuit } from '@multiformats/multiaddr-matcher';\nimport { anySignal } from 'any-signal';\nimport { setMaxListeners } from 'main-event';\nimport { CustomProgressEvent } from 'progress-events';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { DialDeniedError, NoValidAddressesError } from '../errors.js';\nimport { getPeerAddress } from '../get-peer.js';\nimport { defaultAddressSorter } from './address-sorter.js';\nimport { DIAL_TIMEOUT, MAX_PARALLEL_DIALS, MAX_PEER_ADDRS_TO_DIAL, LAST_DIAL_FAILURE_KEY, MAX_DIAL_QUEUE_LENGTH, LAST_DIAL_SUCCESS_KEY } from './constants.js';\nimport { resolveMultiaddr, dnsaddrResolver } from './resolvers/index.js';\nimport { findExistingConnection } from \"./utils.js\";\nimport { DEFAULT_DIAL_PRIORITY } from './index.js';\nconst defaultOptions = {\n    maxParallelDials: MAX_PARALLEL_DIALS,\n    maxDialQueueLength: MAX_DIAL_QUEUE_LENGTH,\n    maxPeerAddrsToDial: MAX_PEER_ADDRS_TO_DIAL,\n    dialTimeout: DIAL_TIMEOUT,\n    resolvers: {\n        dnsaddr: dnsaddrResolver\n    }\n};\nexport class DialQueue {\n    queue;\n    components;\n    addressSorter;\n    maxPeerAddrsToDial;\n    maxDialQueueLength;\n    dialTimeout;\n    shutDownController;\n    connections;\n    log;\n    resolvers;\n    constructor(components, init = {}) {\n        this.addressSorter = init.addressSorter;\n        this.maxPeerAddrsToDial = init.maxPeerAddrsToDial ?? defaultOptions.maxPeerAddrsToDial;\n        this.maxDialQueueLength = init.maxDialQueueLength ?? defaultOptions.maxDialQueueLength;\n        this.dialTimeout = init.dialTimeout ?? defaultOptions.dialTimeout;\n        this.connections = init.connections ?? new PeerMap();\n        this.log = components.logger.forComponent('libp2p:connection-manager:dial-queue');\n        this.components = components;\n        this.resolvers = init.resolvers ?? defaultOptions.resolvers;\n        this.shutDownController = new AbortController();\n        setMaxListeners(Infinity, this.shutDownController.signal);\n        // controls dial concurrency\n        this.queue = new PriorityQueue({\n            concurrency: init.maxParallelDials ?? defaultOptions.maxParallelDials,\n            metricName: 'libp2p_dial_queue',\n            metrics: components.metrics\n        });\n        // a started job errored\n        this.queue.addEventListener('failure', (event) => {\n            if (event.detail?.error.name !== AbortError.name) {\n                this.log.error('error in dial queue - %e', event.detail.error);\n            }\n        });\n    }\n    start() {\n        this.shutDownController = new AbortController();\n        setMaxListeners(Infinity, this.shutDownController.signal);\n    }\n    /**\n     * Clears any pending dials\n     */\n    stop() {\n        this.shutDownController.abort();\n        this.queue.abort();\n    }\n    /**\n     * Connects to a given peer, multiaddr or list of multiaddrs.\n     *\n     * If a peer is passed, all known multiaddrs will be tried. If a multiaddr or\n     * multiaddrs are passed only those will be dialled.\n     *\n     * Where a list of multiaddrs is passed, if any contain a peer id then all\n     * multiaddrs in the list must contain the same peer id.\n     *\n     * The dial to the first address that is successfully able to upgrade a\n     * connection will be used, all other dials will be aborted when that happens.\n     */\n    async dial(peerIdOrMultiaddr, options = {}) {\n        const { peerId, multiaddrs } = getPeerAddress(peerIdOrMultiaddr);\n        if (peerId != null && options.force !== true) {\n            const existingConnection = findExistingConnection(peerId, this.connections.get(peerId), multiaddrs);\n            if (existingConnection != null) {\n                this.log('already connected to %a', existingConnection.remoteAddr);\n                options.onProgress?.(new CustomProgressEvent('dial-queue:already-connected'));\n                return existingConnection;\n            }\n        }\n        // ready to dial, all async work finished - make sure we don't have any\n        // pending dials in progress for this peer or set of multiaddrs\n        const existingDial = this.queue.queue.find(job => {\n            if (peerId?.equals(job.options.peerId) === true) {\n                return true;\n            }\n            // does the dial contain any of the target multiaddrs?\n            const addresses = job.options.multiaddrs;\n            if (addresses == null) {\n                return false;\n            }\n            for (const multiaddr of multiaddrs) {\n                if (addresses.has(multiaddr.toString())) {\n                    return true;\n                }\n            }\n            return false;\n        });\n        if (existingDial != null) {\n            this.log('joining existing dial target for %p', peerId);\n            // add all multiaddrs to the dial target\n            for (const multiaddr of multiaddrs) {\n                existingDial.options.multiaddrs.add(multiaddr.toString());\n            }\n            options.onProgress?.(new CustomProgressEvent('dial-queue:already-in-dial-queue'));\n            return existingDial.join(options);\n        }\n        if (this.queue.size >= this.maxDialQueueLength) {\n            throw new DialError('Dial queue is full');\n        }\n        this.log('creating dial target for %p', peerId, multiaddrs.map(ma => ma.toString()));\n        options.onProgress?.(new CustomProgressEvent('dial-queue:add-to-dial-queue'));\n        return this.queue.add(async (options) => {\n            options.onProgress?.(new CustomProgressEvent('dial-queue:start-dial'));\n            // create abort conditions - need to do this before `calculateMultiaddrs` as\n            // we may be about to resolve a dns addr which can time out\n            const signal = anySignal([\n                this.shutDownController.signal,\n                options.signal\n            ]);\n            setMaxListeners(Infinity, signal);\n            try {\n                return await this.dialPeer(options, signal);\n            }\n            finally {\n                // clean up abort signals/controllers\n                signal.clear();\n            }\n        }, {\n            peerId,\n            priority: options.priority ?? DEFAULT_DIAL_PRIORITY,\n            multiaddrs: new Set(multiaddrs.map(ma => ma.toString())),\n            signal: options.signal ?? AbortSignal.timeout(this.dialTimeout),\n            onProgress: options.onProgress\n        });\n    }\n    async dialPeer(options, signal) {\n        const peerId = options.peerId;\n        const multiaddrs = options.multiaddrs;\n        const failedMultiaddrs = new Set();\n        // if we have no multiaddrs, only a peer id, set a flag so we will look the\n        // peer up in the peer routing to obtain multiaddrs\n        let forcePeerLookup = options.multiaddrs.size === 0;\n        let dialed = 0;\n        let dialIteration = 0;\n        const errors = [];\n        this.log('starting dial to %p', peerId);\n        // repeat this operation in case addresses are added to the dial while we\n        // resolve multiaddrs, etc\n        while (forcePeerLookup || multiaddrs.size > 0) {\n            dialIteration++;\n            // only perform peer lookup once\n            forcePeerLookup = false;\n            // the addresses we will dial\n            const addrsToDial = [];\n            // copy the addresses into a new set\n            const addrs = new Set(options.multiaddrs);\n            // empty the old set - subsequent dial attempts for the same peer id may\n            // add more addresses to try\n            multiaddrs.clear();\n            this.log('calculating addrs to dial %p from %s', peerId, [...addrs]);\n            // load addresses from address book, resolve and dnsaddrs, filter\n            // undialables, add peer IDs, etc\n            const calculatedAddrs = await this.calculateMultiaddrs(peerId, addrs, {\n                ...options,\n                signal\n            });\n            for (const addr of calculatedAddrs) {\n                // skip any addresses we have previously failed to dial\n                if (failedMultiaddrs.has(addr.multiaddr.toString())) {\n                    this.log.trace('skipping previously failed multiaddr %a while dialing %p', addr.multiaddr, peerId);\n                    continue;\n                }\n                addrsToDial.push(addr);\n            }\n            this.log('%s dial to %p with %s', dialIteration === 1 ? 'starting' : 'continuing', peerId, addrsToDial.map(ma => ma.multiaddr.toString()));\n            options?.onProgress?.(new CustomProgressEvent('dial-queue:calculated-addresses', addrsToDial));\n            for (const address of addrsToDial) {\n                if (dialed === this.maxPeerAddrsToDial) {\n                    this.log('dialed maxPeerAddrsToDial (%d) addresses for %p, not trying any others', dialed, options.peerId);\n                    throw new DialError('Peer had more than maxPeerAddrsToDial');\n                }\n                dialed++;\n                try {\n                    // try to dial the address\n                    const conn = await this.components.transportManager.dial(address.multiaddr, {\n                        ...options,\n                        signal\n                    });\n                    this.log('dial to %a succeeded', address.multiaddr);\n                    // record the successful dial and the address\n                    try {\n                        await this.components.peerStore.merge(conn.remotePeer, {\n                            multiaddrs: [\n                                conn.remoteAddr\n                            ],\n                            metadata: {\n                                [LAST_DIAL_SUCCESS_KEY]: uint8ArrayFromString(Date.now().toString())\n                            }\n                        });\n                    }\n                    catch (err) {\n                        this.log.error('could not update last dial failure key for %p - %e', peerId, err);\n                    }\n                    // dial successful, return the connection\n                    return conn;\n                }\n                catch (err) {\n                    this.log.error('dial failed to %a - %e', address.multiaddr, err);\n                    // ensure we don't dial it again in this attempt\n                    failedMultiaddrs.add(address.multiaddr.toString());\n                    if (peerId != null) {\n                        // record the failed dial\n                        try {\n                            await this.components.peerStore.merge(peerId, {\n                                metadata: {\n                                    [LAST_DIAL_FAILURE_KEY]: uint8ArrayFromString(Date.now().toString())\n                                }\n                            });\n                        }\n                        catch (err) {\n                            this.log.error('could not update last dial failure key for %p - %e', peerId, err);\n                        }\n                    }\n                    // the user/dial timeout/shutdown controller signal aborted\n                    if (signal.aborted) {\n                        throw new TimeoutError(err.message);\n                    }\n                    errors.push(err);\n                }\n            }\n        }\n        if (errors.length === 1) {\n            throw errors[0];\n        }\n        throw new AggregateError(errors, 'All multiaddr dials failed');\n    }\n    // eslint-disable-next-line complexity\n    async calculateMultiaddrs(peerId, multiaddrs = new Set(), options = {}) {\n        const addrs = [...multiaddrs].map(ma => ({\n            multiaddr: multiaddr(ma),\n            isCertified: false\n        }));\n        // if a peer id or multiaddr(s) with a peer id, make sure it isn't our peer id and that we are allowed to dial it\n        if (peerId != null) {\n            if (this.components.peerId.equals(peerId)) {\n                throw new DialError('Tried to dial self');\n            }\n            if ((await this.components.connectionGater.denyDialPeer?.(peerId)) === true) {\n                throw new DialDeniedError('The dial request is blocked by gater.allowDialPeer');\n            }\n            // if just a peer id was passed, load available multiaddrs for this peer\n            // from the peer store\n            if (addrs.length === 0) {\n                this.log('loading multiaddrs for %p', peerId);\n                try {\n                    const peer = await this.components.peerStore.get(peerId);\n                    addrs.push(...peer.addresses);\n                    this.log('loaded multiaddrs for %p', peerId, addrs.map(({ multiaddr }) => multiaddr.toString()));\n                }\n                catch (err) {\n                    if (err.name !== 'NotFoundError') {\n                        throw err;\n                    }\n                }\n            }\n            // if we still don't have any addresses for this peer, or the only\n            // addresses we have are without any routing information (e.g.\n            // `/p2p/Qmfoo`), try a lookup using the peer routing\n            if (addrs.length === 0) {\n                this.log('looking up multiaddrs for %p in the peer routing', peerId);\n                try {\n                    const peerInfo = await this.components.peerRouting.findPeer(peerId, options);\n                    this.log('found multiaddrs for %p in the peer routing', peerId, addrs.map(({ multiaddr }) => multiaddr.toString()));\n                    addrs.push(...peerInfo.multiaddrs.map(multiaddr => ({\n                        multiaddr,\n                        isCertified: false\n                    })));\n                }\n                catch (err) {\n                    if (err.name === 'NoPeerRoutersError') {\n                        this.log('no peer routers configured', peerId);\n                    }\n                    else {\n                        this.log.error('looking up multiaddrs for %p in the peer routing failed - %e', peerId, err);\n                    }\n                }\n            }\n        }\n        // resolve addresses - this can result in a one-to-many translation when\n        // dnsaddrs are resolved\n        let resolvedAddresses = (await Promise.all(addrs.map(async (addr) => {\n            const result = await resolveMultiaddr(addr.multiaddr, this.resolvers, {\n                dns: this.components.dns,\n                log: this.log,\n                ...options\n            });\n            if (result.length === 1 && result[0].equals(addr.multiaddr)) {\n                return addr;\n            }\n            return result.map(multiaddr => ({\n                multiaddr,\n                isCertified: false\n            }));\n        })))\n            .flat();\n        // ensure the peer id is appended to the multiaddr\n        if (peerId != null) {\n            const peerIdMultiaddr = `/p2p/${peerId.toString()}`;\n            resolvedAddresses = resolvedAddresses.map(addr => {\n                const lastComponent = addr.multiaddr.getComponents().pop();\n                // append peer id to multiaddr if it is not already present\n                if (lastComponent?.name !== 'p2p') {\n                    return {\n                        multiaddr: addr.multiaddr.encapsulate(peerIdMultiaddr),\n                        isCertified: addr.isCertified\n                    };\n                }\n                return addr;\n            });\n        }\n        const filteredAddrs = resolvedAddresses.filter(addr => {\n            // filter out any multiaddrs that we do not have transports for\n            if (this.components.transportManager.dialTransportForMultiaddr(addr.multiaddr) == null) {\n                return false;\n            }\n            // if the resolved multiaddr has a PeerID but it's the wrong one, ignore it\n            // - this can happen with addresses like bootstrap.libp2p.io that resolve\n            // to multiple different peers\n            const addrPeerId = addr.multiaddr.getComponents().findLast(c => c.code === CODE_P2P)?.value;\n            if (peerId != null && addrPeerId != null) {\n                return peerId.equals(addrPeerId);\n            }\n            return true;\n        });\n        // deduplicate addresses\n        const dedupedAddrs = new Map();\n        for (const addr of filteredAddrs) {\n            const maStr = addr.multiaddr.toString();\n            const existing = dedupedAddrs.get(maStr);\n            if (existing != null) {\n                existing.isCertified = existing.isCertified || addr.isCertified || false;\n                continue;\n            }\n            dedupedAddrs.set(maStr, addr);\n        }\n        const dedupedMultiaddrs = [...dedupedAddrs.values()];\n        // make sure we actually have some addresses to dial\n        if (dedupedMultiaddrs.length === 0) {\n            throw new NoValidAddressesError('The dial request has no valid addresses');\n        }\n        const gatedAddrs = [];\n        for (const addr of dedupedMultiaddrs) {\n            if (this.components.connectionGater.denyDialMultiaddr != null && await this.components.connectionGater.denyDialMultiaddr(addr.multiaddr)) {\n                continue;\n            }\n            gatedAddrs.push(addr);\n        }\n        const sortedGatedAddrs = this.addressSorter == null ? defaultAddressSorter(gatedAddrs) : gatedAddrs.sort(this.addressSorter);\n        // make sure we actually have some addresses to dial\n        if (sortedGatedAddrs.length === 0) {\n            throw new DialDeniedError('The connection gater denied all addresses in the dial request');\n        }\n        this.log.trace('addresses for %p before filtering', peerId ?? 'unknown peer', resolvedAddresses.map(({ multiaddr }) => multiaddr.toString()));\n        this.log.trace('addresses for %p after filtering', peerId ?? 'unknown peer', sortedGatedAddrs.map(({ multiaddr }) => multiaddr.toString()));\n        return sortedGatedAddrs;\n    }\n    async isDialable(multiaddr, options = {}) {\n        if (!Array.isArray(multiaddr)) {\n            multiaddr = [multiaddr];\n        }\n        try {\n            const addresses = await this.calculateMultiaddrs(undefined, new Set(multiaddr.map(ma => ma.toString())), options);\n            if (options.runOnLimitedConnection === false) {\n                // return true if any resolved multiaddrs are not relay addresses\n                return addresses.find(addr => {\n                    return !Circuit.matches(addr.multiaddr);\n                }) != null;\n            }\n            return true;\n        }\n        catch (err) {\n            this.log.trace('error calculating if multiaddr(s) were dialable', err);\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=dial-queue.js.map","const objectToString = Object.prototype.toString;\n\nconst isError = value => objectToString.call(value) === '[object Error]';\n\nconst errorMessages = new Set([\n\t'network error', // Chrome\n\t'Failed to fetch', // Chrome\n\t'NetworkError when attempting to fetch resource.', // Firefox\n\t'The Internet connection appears to be offline.', // Safari 16\n\t'Network request failed', // `cross-fetch`\n\t'fetch failed', // Undici (Node.js)\n\t'terminated', // Undici (Node.js)\n\t' A network error occurred.', // Bun (WebKit)\n\t'Network connection lost', // Cloudflare Workers (fetch)\n]);\n\nexport default function isNetworkError(error) {\n\tconst isValid = error\n\t\t&& isError(error)\n\t\t&& error.name === 'TypeError'\n\t\t&& typeof error.message === 'string';\n\n\tif (!isValid) {\n\t\treturn false;\n\t}\n\n\tconst {message, stack} = error;\n\n\t// Safari 17+ has generic message but no stack for network errors\n\tif (message === 'Load failed') {\n\t\treturn stack === undefined\n\t\t\t// Sentry adds its own stack trace to the fetch error, so also check for that\n\t\t\t|| '__sentry_captured__' in error;\n\t}\n\n\t// Deno network errors start with specific text\n\tif (message.startsWith('error sending request for url')) {\n\t\treturn true;\n\t}\n\n\t// Standard network error messages\n\treturn errorMessages.has(message);\n}\n","import isNetworkError from 'is-network-error';\n\nfunction validateRetries(retries) {\n\tif (typeof retries === 'number') {\n\t\tif (retries < 0) {\n\t\t\tthrow new TypeError('Expected `retries` to be a non-negative number.');\n\t\t}\n\n\t\tif (Number.isNaN(retries)) {\n\t\t\tthrow new TypeError('Expected `retries` to be a valid number or Infinity, got NaN.');\n\t\t}\n\t} else if (retries !== undefined) {\n\t\tthrow new TypeError('Expected `retries` to be a number or Infinity.');\n\t}\n}\n\nfunction validateNumberOption(name, value, {min = 0, allowInfinity = false} = {}) {\n\tif (value === undefined) {\n\t\treturn;\n\t}\n\n\tif (typeof value !== 'number' || Number.isNaN(value)) {\n\t\tthrow new TypeError(`Expected \\`${name}\\` to be a number${allowInfinity ? ' or Infinity' : ''}.`);\n\t}\n\n\tif (!allowInfinity && !Number.isFinite(value)) {\n\t\tthrow new TypeError(`Expected \\`${name}\\` to be a finite number.`);\n\t}\n\n\tif (value < min) {\n\t\tthrow new TypeError(`Expected \\`${name}\\` to be \\u2265 ${min}.`);\n\t}\n}\n\nexport class AbortError extends Error {\n\tconstructor(message) {\n\t\tsuper();\n\n\t\tif (message instanceof Error) {\n\t\t\tthis.originalError = message;\n\t\t\t({message} = message);\n\t\t} else {\n\t\t\tthis.originalError = new Error(message);\n\t\t\tthis.originalError.stack = this.stack;\n\t\t}\n\n\t\tthis.name = 'AbortError';\n\t\tthis.message = message;\n\t}\n}\n\nfunction calculateDelay(retriesConsumed, options) {\n\tconst attempt = Math.max(1, retriesConsumed + 1);\n\tconst random = options.randomize ? (Math.random() + 1) : 1;\n\n\tlet timeout = Math.round(random * options.minTimeout * (options.factor ** (attempt - 1)));\n\ttimeout = Math.min(timeout, options.maxTimeout);\n\n\treturn timeout;\n}\n\nfunction calculateRemainingTime(start, max) {\n\tif (!Number.isFinite(max)) {\n\t\treturn max;\n\t}\n\n\treturn max - (performance.now() - start);\n}\n\nasync function onAttemptFailure({error, attemptNumber, retriesConsumed, startTime, options}) {\n\tconst normalizedError = error instanceof Error\n\t\t? error\n\t\t: new TypeError(`Non-error was thrown: \"${error}\". You should only throw errors.`);\n\n\tif (normalizedError instanceof AbortError) {\n\t\tthrow normalizedError.originalError;\n\t}\n\n\tconst retriesLeft = Number.isFinite(options.retries)\n\t\t? Math.max(0, options.retries - retriesConsumed)\n\t\t: options.retries;\n\n\tconst maxRetryTime = options.maxRetryTime ?? Number.POSITIVE_INFINITY;\n\n\tconst context = Object.freeze({\n\t\terror: normalizedError,\n\t\tattemptNumber,\n\t\tretriesLeft,\n\t\tretriesConsumed,\n\t});\n\n\tawait options.onFailedAttempt(context);\n\n\tif (calculateRemainingTime(startTime, maxRetryTime) <= 0) {\n\t\tthrow normalizedError;\n\t}\n\n\tconst consumeRetry = await options.shouldConsumeRetry(context);\n\n\tconst remainingTime = calculateRemainingTime(startTime, maxRetryTime);\n\n\tif (remainingTime <= 0 || retriesLeft <= 0) {\n\t\tthrow normalizedError;\n\t}\n\n\tif (normalizedError instanceof TypeError && !isNetworkError(normalizedError)) {\n\t\tif (consumeRetry) {\n\t\t\tthrow normalizedError;\n\t\t}\n\n\t\toptions.signal?.throwIfAborted();\n\t\treturn false;\n\t}\n\n\tif (!await options.shouldRetry(context)) {\n\t\tthrow normalizedError;\n\t}\n\n\tif (!consumeRetry) {\n\t\toptions.signal?.throwIfAborted();\n\t\treturn false;\n\t}\n\n\tconst delayTime = calculateDelay(retriesConsumed, options);\n\tconst finalDelay = Math.min(delayTime, remainingTime);\n\n\tif (finalDelay > 0) {\n\t\tawait new Promise((resolve, reject) => {\n\t\t\tconst onAbort = () => {\n\t\t\t\tclearTimeout(timeoutToken);\n\t\t\t\toptions.signal?.removeEventListener('abort', onAbort);\n\t\t\t\treject(options.signal.reason);\n\t\t\t};\n\n\t\t\tconst timeoutToken = setTimeout(() => {\n\t\t\t\toptions.signal?.removeEventListener('abort', onAbort);\n\t\t\t\tresolve();\n\t\t\t}, finalDelay);\n\n\t\t\tif (options.unref) {\n\t\t\t\ttimeoutToken.unref?.();\n\t\t\t}\n\n\t\t\toptions.signal?.addEventListener('abort', onAbort, {once: true});\n\t\t});\n\t}\n\n\toptions.signal?.throwIfAborted();\n\n\treturn true;\n}\n\nexport default async function pRetry(input, options = {}) {\n\toptions = {...options};\n\n\tvalidateRetries(options.retries);\n\n\tif (Object.hasOwn(options, 'forever')) {\n\t\tthrow new Error('The `forever` option is no longer supported. For many use-cases, you can set `retries: Infinity` instead.');\n\t}\n\n\toptions.retries ??= 10;\n\toptions.factor ??= 2;\n\toptions.minTimeout ??= 1000;\n\toptions.maxTimeout ??= Number.POSITIVE_INFINITY;\n\toptions.maxRetryTime ??= Number.POSITIVE_INFINITY;\n\toptions.randomize ??= false;\n\toptions.onFailedAttempt ??= () => {};\n\toptions.shouldRetry ??= () => true;\n\toptions.shouldConsumeRetry ??= () => true;\n\n\t// Validate numeric options and normalize edge cases\n\tvalidateNumberOption('factor', options.factor, {min: 0, allowInfinity: false});\n\tvalidateNumberOption('minTimeout', options.minTimeout, {min: 0, allowInfinity: false});\n\tvalidateNumberOption('maxTimeout', options.maxTimeout, {min: 0, allowInfinity: true});\n\tvalidateNumberOption('maxRetryTime', options.maxRetryTime, {min: 0, allowInfinity: true});\n\n\t// Treat non-positive factor as 1 to avoid zero backoff or negative behavior\n\tif (!(options.factor > 0)) {\n\t\toptions.factor = 1;\n\t}\n\n\toptions.signal?.throwIfAborted();\n\n\tlet attemptNumber = 0;\n\tlet retriesConsumed = 0;\n\tconst startTime = performance.now();\n\n\twhile (Number.isFinite(options.retries) ? retriesConsumed <= options.retries : true) {\n\t\tattemptNumber++;\n\n\t\ttry {\n\t\t\toptions.signal?.throwIfAborted();\n\n\t\t\tconst result = await input(attemptNumber);\n\n\t\t\toptions.signal?.throwIfAborted();\n\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\tif (await onAttemptFailure({\n\t\t\t\terror,\n\t\t\t\tattemptNumber,\n\t\t\t\tretriesConsumed,\n\t\t\t\tstartTime,\n\t\t\t\toptions,\n\t\t\t})) {\n\t\t\t\tretriesConsumed++;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Should not reach here, but in case it does, throw an error\n\tthrow new Error('Retry attempts exhausted without throwing an error.');\n}\n\nexport function makeRetriable(function_, options) {\n\treturn function (...arguments_) {\n\t\treturn pRetry(() => function_.apply(this, arguments_), options);\n\t};\n}\n","import { KEEP_ALIVE } from '@libp2p/interface';\nimport { PeerQueue } from '@libp2p/utils';\nimport pRetry from 'p-retry';\nimport { MAX_PARALLEL_RECONNECTS } from './constants.js';\n/**\n * When peers tagged with `KEEP_ALIVE` disconnect, this component attempts to\n * redial them\n */\nexport class ReconnectQueue {\n    log;\n    queue;\n    started;\n    peerStore;\n    retries;\n    retryInterval;\n    backoffFactor;\n    connectionManager;\n    events;\n    constructor(components, init = {}) {\n        this.log = components.logger.forComponent('libp2p:reconnect-queue');\n        this.peerStore = components.peerStore;\n        this.connectionManager = components.connectionManager;\n        this.queue = new PeerQueue({\n            concurrency: init.maxParallelReconnects ?? MAX_PARALLEL_RECONNECTS,\n            metricName: 'libp2p_reconnect_queue',\n            metrics: components.metrics\n        });\n        this.started = false;\n        this.retries = init.retries ?? 5;\n        this.backoffFactor = init.backoffFactor;\n        this.retryInterval = init.retryInterval;\n        this.events = components.events;\n        components.events.addEventListener('peer:disconnect', (evt) => {\n            this.maybeReconnect(evt.detail)\n                .catch(err => {\n                this.log.error('failed to maybe reconnect to %p - %e', evt.detail, err);\n            });\n        });\n    }\n    async maybeReconnect(peerId) {\n        if (!this.started) {\n            return;\n        }\n        const peer = await this.peerStore.get(peerId);\n        if (!hasKeepAliveTag(peer)) {\n            return;\n        }\n        if (this.queue.has(peerId)) {\n            return;\n        }\n        this.queue.add(async (options) => {\n            await pRetry(async (attempt) => {\n                if (!this.started) {\n                    return;\n                }\n                try {\n                    await this.connectionManager.openConnection(peerId, {\n                        signal: options?.signal\n                    });\n                }\n                catch (err) {\n                    this.log('reconnecting to %p attempt %d of %d failed - %e', peerId, attempt, this.retries, err);\n                    throw err;\n                }\n            }, {\n                signal: options?.signal,\n                retries: this.retries,\n                factor: this.backoffFactor,\n                minTimeout: this.retryInterval\n            });\n        }, {\n            peerId\n        })\n            .catch(async (err) => {\n            this.log.error('failed to reconnect to %p - %e', peerId, err);\n            const tags = {};\n            [...peer.tags.keys()].forEach(key => {\n                if (key.startsWith(KEEP_ALIVE)) {\n                    tags[key] = undefined;\n                }\n            });\n            await this.peerStore.merge(peerId, {\n                tags\n            });\n            this.events.safeDispatchEvent('peer:reconnect-failure', {\n                detail: peerId\n            });\n        })\n            .catch(async (err) => {\n            this.log.error('failed to remove keep-alive tag from %p - %e', peerId, err);\n        });\n    }\n    start() {\n        this.started = true;\n    }\n    async afterStart() {\n        // re-connect to any peers with the KEEP_ALIVE tag\n        void Promise.resolve()\n            .then(async () => {\n            const keepAlivePeers = await this.peerStore.all({\n                filters: [\n                    (peer) => hasKeepAliveTag(peer)\n                ]\n            });\n            await Promise.all(keepAlivePeers.map(async (peer) => {\n                await this.connectionManager.openConnection(peer.id)\n                    .catch(err => {\n                    this.log.error('could not open connection to keepalive peer - %e', err);\n                });\n            }));\n        })\n            .catch(err => {\n            this.log.error('error reconnect to peers after start - %e', err);\n        });\n    }\n    stop() {\n        this.started = false;\n        this.queue.abort();\n    }\n}\nfunction hasKeepAliveTag(peer) {\n    for (const tag of peer.tags.keys()) {\n        if (tag.startsWith(KEEP_ALIVE)) {\n            return true;\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=reconnect-queue.js.map","import { ConnectionClosedError, InvalidMultiaddrError, InvalidParametersError, InvalidPeerIdError, NotStartedError, start, stop } from '@libp2p/interface';\nimport { PeerMap } from '@libp2p/peer-collections';\nimport { getNetConfig, isNetworkAddress, RateLimiter } from '@libp2p/utils';\nimport { multiaddr } from '@multiformats/multiaddr';\nimport { pEvent } from 'p-event';\nimport { CustomProgressEvent } from 'progress-events';\nimport { getPeerAddress } from '../get-peer.js';\nimport { ConnectionPruner } from './connection-pruner.js';\nimport { DIAL_TIMEOUT, INBOUND_CONNECTION_THRESHOLD, MAX_CONNECTIONS, MAX_DIAL_QUEUE_LENGTH, MAX_INCOMING_PENDING_CONNECTIONS, MAX_PARALLEL_DIALS, MAX_PEER_ADDRS_TO_DIAL } from './constants.js';\nimport { DialQueue } from './dial-queue.js';\nimport { ReconnectQueue } from './reconnect-queue.js';\nimport { dnsaddrResolver } from \"./resolvers/index.js\";\nimport { findExistingConnection, multiaddrToIpNet } from './utils.js';\nexport const DEFAULT_DIAL_PRIORITY = 50;\nconst defaultOptions = {\n    maxConnections: MAX_CONNECTIONS,\n    inboundConnectionThreshold: INBOUND_CONNECTION_THRESHOLD,\n    maxIncomingPendingConnections: MAX_INCOMING_PENDING_CONNECTIONS\n};\n/**\n * Responsible for managing known connections.\n */\nexport class DefaultConnectionManager {\n    started;\n    connections;\n    allow;\n    deny;\n    maxIncomingPendingConnections;\n    incomingPendingConnections;\n    outboundPendingConnections;\n    maxConnections;\n    dialQueue;\n    reconnectQueue;\n    connectionPruner;\n    inboundConnectionRateLimiter;\n    peerStore;\n    metrics;\n    events;\n    log;\n    peerId;\n    constructor(components, init = {}) {\n        this.maxConnections = init.maxConnections ?? defaultOptions.maxConnections;\n        if (this.maxConnections < 1) {\n            throw new InvalidParametersError('Connection Manager maxConnections must be greater than 0');\n        }\n        /**\n         * Map of connections per peer\n         */\n        this.connections = new PeerMap();\n        this.started = false;\n        this.peerId = components.peerId;\n        this.peerStore = components.peerStore;\n        this.metrics = components.metrics;\n        this.events = components.events;\n        this.log = components.logger.forComponent('libp2p:connection-manager');\n        this.onConnect = this.onConnect.bind(this);\n        this.onDisconnect = this.onDisconnect.bind(this);\n        // allow/deny lists\n        this.allow = (init.allow ?? []).map(str => multiaddrToIpNet(multiaddr(str)));\n        this.deny = (init.deny ?? []).map(str => multiaddrToIpNet(multiaddr(str)));\n        this.incomingPendingConnections = 0;\n        this.maxIncomingPendingConnections = init.maxIncomingPendingConnections ?? defaultOptions.maxIncomingPendingConnections;\n        this.outboundPendingConnections = 0;\n        // controls individual peers trying to dial us too quickly\n        this.inboundConnectionRateLimiter = new RateLimiter({\n            points: init.inboundConnectionThreshold ?? defaultOptions.inboundConnectionThreshold,\n            duration: 1\n        });\n        // controls what happens when we have too many connections\n        this.connectionPruner = new ConnectionPruner({\n            connectionManager: this,\n            peerStore: components.peerStore,\n            events: components.events,\n            logger: components.logger\n        }, {\n            allow: init.allow?.map(a => multiaddr(a))\n        });\n        this.dialQueue = new DialQueue(components, {\n            addressSorter: init.addressSorter,\n            maxParallelDials: init.maxParallelDials ?? MAX_PARALLEL_DIALS,\n            maxDialQueueLength: init.maxDialQueueLength ?? MAX_DIAL_QUEUE_LENGTH,\n            maxPeerAddrsToDial: init.maxPeerAddrsToDial ?? MAX_PEER_ADDRS_TO_DIAL,\n            dialTimeout: init.dialTimeout ?? DIAL_TIMEOUT,\n            resolvers: init.resolvers ?? {\n                dnsaddr: dnsaddrResolver\n            },\n            connections: this.connections\n        });\n        this.reconnectQueue = new ReconnectQueue({\n            events: components.events,\n            peerStore: components.peerStore,\n            logger: components.logger,\n            connectionManager: this\n        }, {\n            retries: init.reconnectRetries,\n            retryInterval: init.reconnectRetryInterval,\n            backoffFactor: init.reconnectBackoffFactor,\n            maxParallelReconnects: init.maxParallelReconnects\n        });\n    }\n    [Symbol.toStringTag] = '@libp2p/connection-manager';\n    /**\n     * Starts the Connection Manager. If Metrics are not enabled on libp2p\n     * only event loop and connection limits will be monitored.\n     */\n    async start() {\n        // track inbound/outbound connections\n        this.metrics?.registerMetricGroup('libp2p_connection_manager_connections', {\n            calculate: () => {\n                const metric = {\n                    inbound: 0,\n                    'inbound pending': this.incomingPendingConnections,\n                    outbound: 0,\n                    'outbound pending': this.outboundPendingConnections\n                };\n                for (const conns of this.connections.values()) {\n                    for (const conn of conns) {\n                        metric[conn.direction]++;\n                    }\n                }\n                return metric;\n            }\n        });\n        // track total number of streams per protocol\n        this.metrics?.registerMetricGroup('libp2p_protocol_streams_total', {\n            label: 'protocol',\n            calculate: () => {\n                const metric = {};\n                for (const conns of this.connections.values()) {\n                    for (const conn of conns) {\n                        for (const stream of conn.streams) {\n                            const key = `${stream.direction} ${stream.protocol ?? 'unnegotiated'}`;\n                            metric[key] = (metric[key] ?? 0) + 1;\n                        }\n                    }\n                }\n                return metric;\n            }\n        });\n        // track 90th percentile of streams per protocol\n        this.metrics?.registerMetricGroup('libp2p_connection_manager_protocol_streams_per_connection_90th_percentile', {\n            label: 'protocol',\n            calculate: () => {\n                const allStreams = {};\n                for (const conns of this.connections.values()) {\n                    for (const conn of conns) {\n                        const streams = {};\n                        for (const stream of conn.streams) {\n                            const key = `${stream.direction} ${stream.protocol ?? 'unnegotiated'}`;\n                            streams[key] = (streams[key] ?? 0) + 1;\n                        }\n                        for (const [protocol, count] of Object.entries(streams)) {\n                            allStreams[protocol] = allStreams[protocol] ?? [];\n                            allStreams[protocol].push(count);\n                        }\n                    }\n                }\n                const metric = {};\n                for (let [protocol, counts] of Object.entries(allStreams)) {\n                    counts = counts.sort((a, b) => a - b);\n                    const index = Math.floor(counts.length * 0.9);\n                    metric[protocol] = counts[index];\n                }\n                return metric;\n            }\n        });\n        this.events.addEventListener('connection:open', this.onConnect);\n        this.events.addEventListener('connection:close', this.onDisconnect);\n        await start(this.dialQueue, this.reconnectQueue, this.connectionPruner);\n        this.started = true;\n        this.log('started');\n    }\n    /**\n     * Stops the Connection Manager\n     */\n    async stop() {\n        this.events.removeEventListener('connection:open', this.onConnect);\n        this.events.removeEventListener('connection:close', this.onDisconnect);\n        await stop(this.reconnectQueue, this.dialQueue, this.connectionPruner);\n        // Close all connections we're tracking\n        const tasks = [];\n        for (const connectionList of this.connections.values()) {\n            for (const connection of connectionList) {\n                tasks.push(Promise.all([\n                    pEvent(connection, 'close', {\n                        signal: AbortSignal.timeout(500)\n                    }),\n                    connection.close({\n                        signal: AbortSignal.timeout(500)\n                    })\n                ])\n                    .catch(err => {\n                    connection.abort(err);\n                }));\n            }\n        }\n        this.log('closing %d connections', tasks.length);\n        await Promise.all(tasks);\n        this.connections.clear();\n        this.log('stopped');\n    }\n    getMaxConnections() {\n        return this.maxConnections;\n    }\n    setMaxConnections(maxConnections) {\n        if (this.maxConnections < 1) {\n            throw new InvalidParametersError('Connection Manager maxConnections must be greater than 0');\n        }\n        let needsPrune = false;\n        if (maxConnections < this.maxConnections) {\n            needsPrune = true;\n        }\n        this.maxConnections = maxConnections;\n        if (needsPrune) {\n            this.connectionPruner.maybePruneConnections();\n        }\n    }\n    onConnect(evt) {\n        void this._onConnect(evt).catch(err => {\n            this.log.error('could not connect - %e', err);\n        });\n    }\n    /**\n     * Tracks the incoming connection and check the connection limit\n     */\n    async _onConnect(evt) {\n        const { detail: connection } = evt;\n        if (!this.started) {\n            // This can happen when we are in the process of shutting down the node\n            await connection.close();\n            return;\n        }\n        if (connection.status !== 'open') {\n            // this can happen when the remote closes the connection immediately after\n            // opening\n            return;\n        }\n        const peerId = connection.remotePeer;\n        const isNewPeer = !this.connections.has(peerId);\n        const storedConns = this.connections.get(peerId) ?? [];\n        storedConns.push(connection);\n        this.connections.set(peerId, storedConns);\n        // only need to store RSA public keys, all other types are embedded in the peer id\n        if (peerId.publicKey != null && peerId.type === 'RSA') {\n            await this.peerStore.patch(peerId, {\n                publicKey: peerId.publicKey\n            });\n        }\n        if (isNewPeer) {\n            this.events.safeDispatchEvent('peer:connect', { detail: connection.remotePeer });\n        }\n    }\n    /**\n     * Removes the connection from tracking\n     */\n    onDisconnect(evt) {\n        const { detail: connection } = evt;\n        const peerId = connection.remotePeer;\n        const peerConns = this.connections.get(peerId) ?? [];\n        // remove closed connection\n        const filteredPeerConns = peerConns.filter(conn => conn.id !== connection.id);\n        // update peer connections\n        this.connections.set(peerId, filteredPeerConns);\n        if (filteredPeerConns.length === 0) {\n            // trigger disconnect event if no connections remain\n            this.log.trace('peer %p disconnected, removing connection map entry', peerId);\n            this.connections.delete(peerId);\n            // broadcast disconnect event\n            this.events.safeDispatchEvent('peer:disconnect', { detail: peerId });\n        }\n    }\n    getConnections(peerId) {\n        if (peerId != null) {\n            return this.connections.get(peerId) ?? [];\n        }\n        let conns = [];\n        for (const c of this.connections.values()) {\n            conns = conns.concat(c);\n        }\n        return conns;\n    }\n    getConnectionsMap() {\n        return this.connections;\n    }\n    async openConnection(peerIdOrMultiaddr, options = {}) {\n        if (!this.started) {\n            throw new NotStartedError('Not started');\n        }\n        this.outboundPendingConnections++;\n        try {\n            options.signal?.throwIfAborted();\n            const { peerId, multiaddrs } = getPeerAddress(peerIdOrMultiaddr);\n            if (this.peerId.equals(peerId)) {\n                throw new InvalidPeerIdError('Can not dial self');\n            }\n            if (peerId != null && options.force !== true) {\n                this.log('dial %p', peerId);\n                const existingConnection = findExistingConnection(peerId, this.getConnections(peerId), multiaddrs);\n                if (existingConnection != null) {\n                    this.log('had an existing connection to %p as %a', peerId, existingConnection.remoteAddr);\n                    options.onProgress?.(new CustomProgressEvent('dial-queue:already-connected'));\n                    return existingConnection;\n                }\n            }\n            const connection = await this.dialQueue.dial(peerIdOrMultiaddr, {\n                ...options,\n                priority: options.priority ?? DEFAULT_DIAL_PRIORITY\n            });\n            if (connection.status !== 'open') {\n                throw new ConnectionClosedError('Remote closed connection during opening');\n            }\n            let peerConnections = this.connections.get(connection.remotePeer);\n            if (peerConnections == null) {\n                peerConnections = [];\n                this.connections.set(connection.remotePeer, peerConnections);\n            }\n            // we get notified of connections via the Upgrader emitting \"connection\"\n            // events, double check we aren't already tracking this connection before\n            // storing it\n            let trackedConnection = false;\n            for (const conn of peerConnections) {\n                if (conn.id === connection.id) {\n                    trackedConnection = true;\n                }\n                // make sure we don't already have a connection to this multiaddr\n                if (options.force !== true && conn.id !== connection.id && conn.remoteAddr.equals(connection.remoteAddr)) {\n                    connection.abort(new InvalidMultiaddrError('Duplicate multiaddr connection'));\n                    // return the existing connection\n                    return conn;\n                }\n            }\n            if (!trackedConnection) {\n                peerConnections.push(connection);\n            }\n            return connection;\n        }\n        finally {\n            this.outboundPendingConnections--;\n        }\n    }\n    async openStream(peerIdOrMultiaddr, protocol, options = {}) {\n        const connection = await this.openConnection(peerIdOrMultiaddr, options);\n        return connection.newStream(protocol, options);\n    }\n    async closeConnections(peerId, options = {}) {\n        const connections = this.connections.get(peerId) ?? [];\n        await Promise.all(connections.map(async (connection) => {\n            try {\n                await Promise.all([\n                    pEvent(connection, 'close', options),\n                    connection.close(options)\n                ]);\n            }\n            catch (err) {\n                connection.abort(err);\n            }\n        }));\n    }\n    acceptIncomingConnection(maConn) {\n        // check deny list\n        const denyConnection = this.deny.some(ipNet => {\n            if (isNetworkAddress(maConn.remoteAddr)) {\n                const config = getNetConfig(maConn.remoteAddr);\n                return ipNet.contains(config.host);\n            }\n            return false;\n        });\n        if (denyConnection) {\n            this.log('connection from %a refused - connection remote address was in deny list', maConn.remoteAddr);\n            return false;\n        }\n        // check allow list\n        const allowConnection = this.allow.some(ipNet => {\n            if (isNetworkAddress(maConn.remoteAddr)) {\n                const config = getNetConfig(maConn.remoteAddr);\n                return ipNet.contains(config.host);\n            }\n            return true;\n        });\n        if (allowConnection) {\n            this.incomingPendingConnections++;\n            return true;\n        }\n        // check pending connections\n        if (this.incomingPendingConnections === this.maxIncomingPendingConnections) {\n            this.log('connection from %a refused - incomingPendingConnections exceeded by host', maConn.remoteAddr);\n            return false;\n        }\n        if (isNetworkAddress(maConn.remoteAddr)) {\n            const config = getNetConfig(maConn.remoteAddr);\n            try {\n                this.inboundConnectionRateLimiter.consume(config.host, 1);\n            }\n            catch {\n                this.log('connection from %a refused - inboundConnectionThreshold exceeded by host %s', maConn.remoteAddr, config.host);\n                return false;\n            }\n        }\n        if (this.getConnections().length < this.maxConnections) {\n            this.incomingPendingConnections++;\n            return true;\n        }\n        this.log('connection from %a refused - maxConnections exceeded', maConn.remoteAddr);\n        return false;\n    }\n    afterUpgradeInbound() {\n        this.incomingPendingConnections--;\n    }\n    getDialQueue() {\n        const statusMap = {\n            queued: 'queued',\n            running: 'active',\n            errored: 'error',\n            complete: 'success'\n        };\n        return this.dialQueue.queue.queue.map(job => {\n            return {\n                id: job.id,\n                status: statusMap[job.status],\n                peerId: job.options.peerId,\n                multiaddrs: [...job.options.multiaddrs].map(ma => multiaddr(ma))\n            };\n        });\n    }\n    async isDialable(multiaddr, options = {}) {\n        return this.dialQueue.isDialable(multiaddr, options);\n    }\n}\n//# sourceMappingURL=index.js.map","import { randomBytes } from '@libp2p/crypto';\nimport { serviceCapabilities } from '@libp2p/interface';\nimport { AdaptiveTimeout, byteStream } from '@libp2p/utils';\nimport { setMaxListeners } from 'main-event';\nconst DEFAULT_PING_INTERVAL_MS = 10000;\nconst PROTOCOL_VERSION = '1.0.0';\nconst PROTOCOL_NAME = 'ping';\nconst PROTOCOL_PREFIX = 'ipfs';\nconst PING_LENGTH = 32;\nconst DEFAULT_ABORT_CONNECTION_ON_PING_FAILURE = true;\nexport class ConnectionMonitor {\n    protocol;\n    components;\n    log;\n    heartbeatInterval;\n    pingIntervalMs;\n    abortController;\n    timeout;\n    abortConnectionOnPingFailure;\n    constructor(components, init = {}) {\n        this.components = components;\n        this.protocol = `/${init.protocolPrefix ?? PROTOCOL_PREFIX}/${PROTOCOL_NAME}/${PROTOCOL_VERSION}`;\n        this.log = components.logger.forComponent('libp2p:connection-monitor');\n        this.pingIntervalMs = init.pingInterval ?? DEFAULT_PING_INTERVAL_MS;\n        this.abortConnectionOnPingFailure = init.abortConnectionOnPingFailure ?? DEFAULT_ABORT_CONNECTION_ON_PING_FAILURE;\n        this.timeout = new AdaptiveTimeout({\n            ...(init.pingTimeout ?? {}),\n            metrics: components.metrics,\n            metricName: 'libp2p_connection_monitor_ping_time_milliseconds'\n        });\n    }\n    [Symbol.toStringTag] = '@libp2p/connection-monitor';\n    [serviceCapabilities] = [\n        '@libp2p/connection-monitor'\n    ];\n    start() {\n        this.abortController = new AbortController();\n        setMaxListeners(Infinity, this.abortController.signal);\n        this.heartbeatInterval = setInterval(() => {\n            this.components.connectionManager.getConnections().forEach(conn => {\n                Promise.resolve().then(async () => {\n                    let start = Date.now();\n                    try {\n                        const signal = this.timeout.getTimeoutSignal({\n                            signal: this.abortController?.signal\n                        });\n                        const stream = await conn.newStream(this.protocol, {\n                            signal,\n                            runOnLimitedConnection: true\n                        });\n                        const bs = byteStream(stream);\n                        start = Date.now();\n                        await Promise.all([\n                            bs.write(randomBytes(PING_LENGTH), {\n                                signal\n                            }),\n                            bs.read({\n                                bytes: PING_LENGTH,\n                                signal\n                            })\n                        ]);\n                        conn.rtt = Date.now() - start;\n                        await stream.close({\n                            signal\n                        });\n                    }\n                    catch (err) {\n                        if (err.name !== 'UnsupportedProtocolError') {\n                            throw err;\n                        }\n                        // protocol was unsupported, but that's ok as it means the remote\n                        // peer was still alive. We ran multistream-select which means two\n                        // round trips (e.g. 1x for the mss header, then another for the\n                        // protocol) so divide the time it took by two\n                        conn.rtt = (Date.now() - start) / 2;\n                    }\n                })\n                    .catch(err => {\n                    this.log.error('error during heartbeat - %e', err);\n                    if (this.abortConnectionOnPingFailure) {\n                        this.log.error('aborting connection due to ping failure');\n                        conn.abort(err);\n                    }\n                    else {\n                        this.log('connection ping failed, but not aborting due to abortConnectionOnPingFailure flag');\n                    }\n                });\n            });\n        }, this.pingIntervalMs);\n    }\n    stop() {\n        this.abortController?.abort();\n        if (this.heartbeatInterval != null) {\n            clearInterval(this.heartbeatInterval);\n        }\n    }\n}\n//# sourceMappingURL=connection-monitor.js.map","import { NotStartedError } from '@libp2p/interface';\nimport { PeerSet } from '@libp2p/peer-collections';\nimport merge from 'it-merge';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { NoContentRoutersError } from './errors.js';\nexport class CompoundContentRouting {\n    routers;\n    started;\n    components;\n    constructor(components, init) {\n        this.routers = init.routers ?? [];\n        this.started = false;\n        this.components = components;\n        this.findProviders = components.metrics?.traceFunction('libp2p.contentRouting.findProviders', this.findProviders.bind(this), {\n            optionsIndex: 1,\n            getAttributesFromArgs: ([cid], attrs) => {\n                return {\n                    ...attrs,\n                    cid: cid.toString()\n                };\n            },\n            getAttributesFromYieldedValue: (value, attrs) => {\n                return {\n                    ...attrs,\n                    providers: [...(Array.isArray(attrs.providers) ? attrs.providers : []), value.id.toString()]\n                };\n            }\n        }) ?? this.findProviders;\n        this.provide = components.metrics?.traceFunction('libp2p.contentRouting.provide', this.provide.bind(this), {\n            optionsIndex: 1,\n            getAttributesFromArgs: ([cid], attrs) => {\n                return {\n                    ...attrs,\n                    cid: cid.toString()\n                };\n            }\n        }) ?? this.provide;\n        this.cancelReprovide = components.metrics?.traceFunction('libp2p.contentRouting.cancelReprovide', this.cancelReprovide.bind(this), {\n            optionsIndex: 1,\n            getAttributesFromArgs: ([cid], attrs) => {\n                return {\n                    ...attrs,\n                    cid: cid.toString()\n                };\n            }\n        }) ?? this.cancelReprovide;\n        this.put = components.metrics?.traceFunction('libp2p.contentRouting.put', this.put.bind(this), {\n            optionsIndex: 2,\n            getAttributesFromArgs: ([key]) => {\n                return {\n                    key: uint8ArrayToString(key, 'base36')\n                };\n            }\n        }) ?? this.put;\n        this.get = components.metrics?.traceFunction('libp2p.contentRouting.get', this.get.bind(this), {\n            optionsIndex: 1,\n            getAttributesFromArgs: ([key]) => {\n                return {\n                    key: uint8ArrayToString(key, 'base36')\n                };\n            }\n        }) ?? this.get;\n    }\n    [Symbol.toStringTag] = '@libp2p/content-routing';\n    isStarted() {\n        return this.started;\n    }\n    async start() {\n        this.started = true;\n    }\n    async stop() {\n        this.started = false;\n    }\n    /**\n     * Iterates over all content routers in parallel to find providers of the given key\n     */\n    async *findProviders(key, options = {}) {\n        if (this.routers.length === 0) {\n            throw new NoContentRoutersError('No content routers available');\n        }\n        const self = this;\n        const seen = new PeerSet();\n        for await (const peer of merge(...self.routers\n            .filter(router => router.findProviders instanceof Function)\n            .map(router => router.findProviders(key, options)))) {\n            // the peer was yielded by a content router without multiaddrs and we\n            // failed to load them\n            if (peer == null) {\n                continue;\n            }\n            // store the addresses for the peer if found\n            if (peer.multiaddrs.length > 0) {\n                await this.components.peerStore.merge(peer.id, {\n                    multiaddrs: peer.multiaddrs\n                }, options);\n            }\n            // deduplicate peers\n            if (seen.has(peer.id)) {\n                continue;\n            }\n            seen.add(peer.id);\n            yield peer;\n        }\n    }\n    /**\n     * Iterates over all content routers in parallel to notify it is\n     * a provider of the given key\n     */\n    async provide(key, options = {}) {\n        if (this.routers.length === 0) {\n            throw new NoContentRoutersError('No content routers available');\n        }\n        await Promise.all(this.routers\n            .filter(router => router.provide instanceof Function)\n            .map(async (router) => {\n            await router.provide(key, options);\n        }));\n    }\n    async cancelReprovide(key, options = {}) {\n        if (this.routers.length === 0) {\n            throw new NoContentRoutersError('No content routers available');\n        }\n        await Promise.all(this.routers\n            .filter(router => router.cancelReprovide instanceof Function)\n            .map(async (router) => {\n            await router.cancelReprovide(key, options);\n        }));\n    }\n    /**\n     * Store the given key/value pair in the available content routings\n     */\n    async put(key, value, options) {\n        if (!this.isStarted()) {\n            throw new NotStartedError();\n        }\n        await Promise.all(this.routers\n            .filter(router => router.put instanceof Function)\n            .map(async (router) => {\n            await router.put(key, value, options);\n        }));\n    }\n    /**\n     * Get the value to the given key.\n     * Times out after 1 minute by default.\n     */\n    async get(key, options) {\n        if (!this.isStarted()) {\n            throw new NotStartedError();\n        }\n        return Promise.any(this.routers\n            .filter(router => router.get instanceof Function)\n            .map(async (router) => {\n            return router.get(key, options);\n        }));\n    }\n}\n//# sourceMappingURL=content-routing.js.map","/**\n * @packageDocumentation\n *\n * Takes an (async) iterable that emits promise-returning functions, invokes them in parallel up to the concurrency limit and emits the results as they become available, optionally in the same order as the input\n *\n * @example\n *\n * ```javascript\n * import parallel from 'it-parallel'\n * import all from 'it-all'\n * import delay from 'delay'\n *\n * // This can also be an iterator, async iterator, generator, etc\n * const input = [\n *   async () => {\n *     console.info('start 1')\n *     await delay(500)\n *\n *     console.info('end 1')\n *     return 1\n *   },\n *   async () => {\n *     console.info('start 2')\n *     await delay(200)\n *\n *     console.info('end 2')\n *     return 2\n *   },\n *   async () => {\n *     console.info('start 3')\n *     await delay(100)\n *\n *     console.info('end 3')\n *     return 3\n *   }\n * ]\n *\n * const result = await all(parallel(input, {\n *   concurrency: 2\n * }))\n *\n * // output:\n * // start 1\n * // start 2\n * // end 2\n * // start 3\n * // end 3\n * // end 1\n *\n * console.info(result) // [2, 3, 1]\n * ```\n *\n * If order is important, pass `ordered: true` as an option:\n *\n * ```javascript\n * const result = await all(parallel(input, {\n *   concurrency: 2,\n *   ordered: true\n * }))\n *\n * // output:\n * // start 1\n * // start 2\n * // end 2\n * // start 3\n * // end 3\n * // end 1\n *\n * console.info(result) // [1, 2, 3]\n * ```\n */\nimport defer from 'p-defer';\nconst CustomEvent = globalThis.CustomEvent ?? Event;\n/**\n * Takes an (async) iterator that emits promise-returning functions,\n * invokes them in parallel and emits the results as they become available but\n * in the same order as the input\n */\nexport default async function* parallel(source, options = {}) {\n    let concurrency = options.concurrency ?? Infinity;\n    if (concurrency < 1) {\n        concurrency = Infinity;\n    }\n    const ordered = options.ordered ?? false;\n    const emitter = new EventTarget();\n    const ops = [];\n    let slotAvailable = defer();\n    let resultAvailable = defer();\n    let sourceFinished = false;\n    let sourceErr;\n    let opErred = false;\n    emitter.addEventListener('task-complete', () => {\n        resultAvailable.resolve();\n    });\n    void Promise.resolve().then(async () => {\n        try {\n            for await (const task of source) {\n                if (ops.length === concurrency) {\n                    slotAvailable = defer();\n                    await slotAvailable.promise;\n                }\n                if (opErred) {\n                    break;\n                }\n                const op = {\n                    done: false\n                };\n                ops.push(op);\n                task()\n                    .then(result => {\n                    op.done = true;\n                    op.ok = true;\n                    op.value = result;\n                    emitter.dispatchEvent(new CustomEvent('task-complete'));\n                }, err => {\n                    op.done = true;\n                    op.err = err;\n                    emitter.dispatchEvent(new CustomEvent('task-complete'));\n                });\n            }\n            sourceFinished = true;\n            emitter.dispatchEvent(new CustomEvent('task-complete'));\n        }\n        catch (err) {\n            sourceErr = err;\n            emitter.dispatchEvent(new CustomEvent('task-complete'));\n        }\n    });\n    function valuesAvailable() {\n        if (ordered) {\n            return ops[0]?.done;\n        }\n        return Boolean(ops.find(op => op.done));\n    }\n    function* yieldOrderedValues() {\n        while ((ops.length > 0) && ops[0].done) {\n            const op = ops[0];\n            ops.shift();\n            if (op.ok) {\n                yield op.value;\n            }\n            else {\n                // allow the source to exit\n                opErred = true;\n                slotAvailable.resolve();\n                throw op.err;\n            }\n            slotAvailable.resolve();\n        }\n    }\n    function* yieldUnOrderedValues() {\n        // more values can become available while we wait for `yield`\n        // to return control to this function\n        while (valuesAvailable()) {\n            for (let i = 0; i < ops.length; i++) {\n                if (ops[i].done) {\n                    const op = ops[i];\n                    ops.splice(i, 1);\n                    i--;\n                    if (op.ok) {\n                        yield op.value;\n                    }\n                    else {\n                        opErred = true;\n                        slotAvailable.resolve();\n                        throw op.err;\n                    }\n                    slotAvailable.resolve();\n                }\n            }\n        }\n    }\n    while (true) {\n        if (!valuesAvailable()) {\n            resultAvailable = defer();\n            await resultAvailable.promise;\n        }\n        if (sourceErr != null) {\n            // the source threw an error, propagate it\n            throw sourceErr;\n        }\n        if (ordered) {\n            yield* yieldOrderedValues();\n        }\n        else {\n            yield* yieldUnOrderedValues();\n        }\n        if (sourceErr != null) {\n            // if the source yields an array that is `yield *`, it can throw while the\n            // onward consumer is processing the array contents - make sure we\n            // propagate the error\n            // eslint-disable-next-line @typescript-eslint/only-throw-error\n            throw sourceErr;\n        }\n        if (sourceFinished && ops.length === 0) {\n            // not waiting for any results and no more tasks so we are done\n            break;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","import { NotFoundError } from '@libp2p/interface';\nimport { createScalableCuckooFilter } from '@libp2p/utils';\nimport merge from 'it-merge';\nimport parallel from 'it-parallel';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { NoPeerRoutersError, QueriedForSelfError } from './errors.js';\nexport class DefaultPeerRouting {\n    log;\n    peerId;\n    peerStore;\n    routers;\n    constructor(components, init = {}) {\n        this.log = components.logger.forComponent('libp2p:peer-routing');\n        this.peerId = components.peerId;\n        this.peerStore = components.peerStore;\n        this.routers = init.routers ?? [];\n        this.findPeer = components.metrics?.traceFunction('libp2p.peerRouting.findPeer', this.findPeer.bind(this), {\n            optionsIndex: 1,\n            getAttributesFromArgs: ([peer], attrs) => {\n                return {\n                    ...attrs,\n                    peer: peer.toString()\n                };\n            }\n        }) ?? this.findPeer;\n        this.getClosestPeers = components.metrics?.traceFunction('libp2p.peerRouting.getClosestPeers', this.getClosestPeers.bind(this), {\n            optionsIndex: 1,\n            getAttributesFromArgs: ([key], attrs) => {\n                return {\n                    ...attrs,\n                    key: uint8ArrayToString(key, 'base36')\n                };\n            },\n            getAttributesFromYieldedValue: (value, attrs) => {\n                return {\n                    ...attrs,\n                    peers: [...(Array.isArray(attrs.peers) ? attrs.peers : []), value.id.toString()]\n                };\n            }\n        }) ?? this.getClosestPeers;\n    }\n    [Symbol.toStringTag] = '@libp2p/peer-routing';\n    /**\n     * Iterates over all peer routers in parallel to find the given peer\n     */\n    async findPeer(id, options) {\n        if (this.routers.length === 0) {\n            throw new NoPeerRoutersError('No peer routers available');\n        }\n        if (id.toString() === this.peerId.toString()) {\n            throw new QueriedForSelfError('Should not try to find self');\n        }\n        const self = this;\n        const source = merge(...this.routers\n            .filter(router => router.findPeer instanceof Function)\n            .map(router => (async function* () {\n            try {\n                yield await router.findPeer(id, options);\n            }\n            catch (err) {\n                self.log.error('router failed to find peer - %e', err);\n            }\n        })()));\n        for await (const peer of source) {\n            if (peer == null) {\n                continue;\n            }\n            // store the addresses for the peer if found\n            if (peer.multiaddrs.length > 0) {\n                await this.peerStore.merge(peer.id, {\n                    multiaddrs: peer.multiaddrs\n                }, options);\n            }\n            return peer;\n        }\n        throw new NotFoundError();\n    }\n    /**\n     * Attempt to find the closest peers on the network to the given key\n     */\n    async *getClosestPeers(key, options = {}) {\n        if (this.routers.length === 0) {\n            throw new NoPeerRoutersError('No peer routers available');\n        }\n        const self = this;\n        const seen = createScalableCuckooFilter(1024);\n        for await (const peer of parallel(async function* () {\n            const source = merge(...self.routers\n                .filter(router => router.getClosestPeers instanceof Function)\n                .map(router => router.getClosestPeers(key, options)));\n            for await (let peer of source) {\n                yield async () => {\n                    // find multiaddrs if they are missing\n                    if (peer.multiaddrs.length === 0) {\n                        try {\n                            peer = await self.findPeer(peer.id, {\n                                ...options,\n                                useCache: false\n                            });\n                        }\n                        catch (err) {\n                            self.log.error('could not find peer multiaddrs - %e', err);\n                            return;\n                        }\n                    }\n                    return peer;\n                };\n            }\n        }())) {\n            if (peer == null) {\n                continue;\n            }\n            // store the addresses for the peer if found\n            if (peer.multiaddrs.length > 0) {\n                await this.peerStore.merge(peer.id, {\n                    multiaddrs: peer.multiaddrs\n                }, options);\n            }\n            // deduplicate peers\n            if (seen.has(peer.id.toMultihash().bytes)) {\n                continue;\n            }\n            seen.add(peer.id.toMultihash().bytes);\n            yield peer;\n        }\n    }\n}\n//# sourceMappingURL=peer-routing.js.map","import { randomBytes } from '@libp2p/crypto';\nimport { anySignal } from 'any-signal';\nimport { TypedEventEmitter, setMaxListeners } from 'main-event';\nimport pDefer from 'p-defer';\nimport { pEvent } from 'p-event';\nimport { raceSignal } from 'race-signal';\nexport class RandomWalk extends TypedEventEmitter {\n    peerRouting;\n    log;\n    walking;\n    walkers;\n    shutdownController;\n    walkController;\n    needNext;\n    constructor(components) {\n        super();\n        this.log = components.logger.forComponent('libp2p:random-walk');\n        this.peerRouting = components.peerRouting;\n        this.walkers = 0;\n        this.walking = false;\n        // stops any in-progress walks when the node is shut down\n        this.shutdownController = new AbortController();\n        setMaxListeners(Infinity, this.shutdownController.signal);\n    }\n    [Symbol.toStringTag] = '@libp2p/random-walk';\n    start() {\n        this.shutdownController = new AbortController();\n        setMaxListeners(Infinity, this.shutdownController.signal);\n    }\n    stop() {\n        this.shutdownController.abort();\n    }\n    async *walk(options) {\n        if (!this.walking) {\n            // start the query that causes walk:peer events to be emitted\n            this.startWalk();\n        }\n        this.walkers++;\n        const signal = anySignal([this.shutdownController.signal, options?.signal]);\n        setMaxListeners(Infinity, signal);\n        try {\n            while (true) {\n                // if another consumer has paused the query, start it again\n                this.needNext?.resolve();\n                this.needNext = pDefer();\n                // wait for a walk:peer or walk:error event\n                const event = await pEvent(this, 'walk:peer', {\n                    signal,\n                    rejectionEvents: [\n                        'walk:error'\n                    ]\n                });\n                yield event.detail;\n            }\n        }\n        catch (err) {\n            // test for walk:error event\n            if (err.detail != null) {\n                throw err.detail;\n            }\n            throw err;\n        }\n        finally {\n            signal.clear();\n            this.walkers--;\n            // stop the walk if no more consumers are interested\n            if (this.walkers === 0) {\n                this.walkController?.abort();\n                this.walkController = undefined;\n            }\n        }\n    }\n    startWalk() {\n        this.walking = true;\n        // the signal for this controller will be aborted if no more random peers\n        // are required\n        this.walkController = new AbortController();\n        setMaxListeners(Infinity, this.walkController.signal);\n        const signal = anySignal([this.walkController.signal, this.shutdownController.signal]);\n        setMaxListeners(Infinity, signal);\n        const start = Date.now();\n        let found = 0;\n        Promise.resolve().then(async () => {\n            this.log('start walk');\n            // find peers until no more consumers are interested\n            while (this.walkers > 0) {\n                try {\n                    const data = randomBytes(32);\n                    let s = Date.now();\n                    for await (const peer of this.peerRouting.getClosestPeers(data, { signal })) {\n                        if (signal.aborted) {\n                            this.log('aborting walk');\n                        }\n                        signal.throwIfAborted();\n                        this.log('found peer %p after %dms for %d walkers', peer.id, Date.now() - s, this.walkers);\n                        found++;\n                        this.safeDispatchEvent('walk:peer', {\n                            detail: peer\n                        });\n                        // if we only have one consumer, pause the query until they request\n                        // another random peer or they signal they are no longer interested\n                        if (this.walkers === 1 && this.needNext != null) {\n                            this.log('wait for need next');\n                            await raceSignal(this.needNext.promise, signal);\n                        }\n                        s = Date.now();\n                    }\n                    this.log('walk iteration for %b and %d walkers finished, found %d peers', data, this.walkers, found);\n                }\n                catch (err) {\n                    this.log.error('random walk errored - %e', err);\n                    this.safeDispatchEvent('walk:error', {\n                        detail: err\n                    });\n                }\n            }\n            this.log('no walkers left, ended walk');\n        })\n            .catch(err => {\n            this.log.error('random walk errored - %e', err);\n        })\n            .finally(() => {\n            this.log('finished walk, found %d peers after %dms', found, Date.now() - start);\n            this.walking = false;\n        });\n    }\n}\n//# sourceMappingURL=random-walk.js.map","import { InvalidParametersError } from '@libp2p/interface';\nimport { trackedMap } from '@libp2p/utils';\nimport { DuplicateProtocolHandlerError, UnhandledProtocolError } from './errors.js';\nexport const DEFAULT_MAX_INBOUND_STREAMS = 32;\nexport const DEFAULT_MAX_OUTBOUND_STREAMS = 64;\n/**\n * Responsible for notifying registered protocols of events in the network.\n */\nexport class Registrar {\n    log;\n    topologies;\n    handlers;\n    components;\n    middleware;\n    constructor(components) {\n        this.components = components;\n        this.log = components.logger.forComponent('libp2p:registrar');\n        this.middleware = new Map();\n        this.topologies = new Map();\n        components.metrics?.registerMetricGroup('libp2p_registrar_topologies', {\n            calculate: () => {\n                const output = {};\n                for (const [key, value] of this.topologies) {\n                    output[key] = value.size;\n                }\n                return output;\n            }\n        });\n        this.handlers = trackedMap({\n            name: 'libp2p_registrar_protocol_handlers',\n            metrics: components.metrics\n        });\n        this._onDisconnect = this._onDisconnect.bind(this);\n        this._onPeerUpdate = this._onPeerUpdate.bind(this);\n        this._onPeerIdentify = this._onPeerIdentify.bind(this);\n        this.components.events.addEventListener('peer:disconnect', this._onDisconnect);\n        this.components.events.addEventListener('peer:update', this._onPeerUpdate);\n        this.components.events.addEventListener('peer:identify', this._onPeerIdentify);\n    }\n    [Symbol.toStringTag] = '@libp2p/registrar';\n    getProtocols() {\n        return Array.from(new Set([\n            ...this.handlers.keys()\n        ])).sort();\n    }\n    getHandler(protocol) {\n        const handler = this.handlers.get(protocol);\n        if (handler == null) {\n            throw new UnhandledProtocolError(`No handler registered for protocol ${protocol}`);\n        }\n        return handler;\n    }\n    getTopologies(protocol) {\n        const topologies = this.topologies.get(protocol);\n        if (topologies == null) {\n            return [];\n        }\n        return [\n            ...topologies.values()\n        ];\n    }\n    /**\n     * Registers the `handler` for each protocol\n     */\n    async handle(protocol, handler, opts) {\n        if (this.handlers.has(protocol) && opts?.force !== true) {\n            throw new DuplicateProtocolHandlerError(`Handler already registered for protocol ${protocol}`);\n        }\n        this.handlers.set(protocol, {\n            handler,\n            options: {\n                maxInboundStreams: DEFAULT_MAX_INBOUND_STREAMS,\n                maxOutboundStreams: DEFAULT_MAX_OUTBOUND_STREAMS,\n                ...opts\n            }\n        });\n        // Add new protocol to self protocols in the peer store\n        await this.components.peerStore.merge(this.components.peerId, {\n            protocols: [protocol]\n        }, opts);\n    }\n    /**\n     * Removes the handler for each protocol. The protocol\n     * will no longer be supported on streams.\n     */\n    async unhandle(protocols, options) {\n        const protocolList = Array.isArray(protocols) ? protocols : [protocols];\n        protocolList.forEach(protocol => {\n            this.handlers.delete(protocol);\n        });\n        // Update self protocols in the peer store\n        await this.components.peerStore.patch(this.components.peerId, {\n            protocols: this.getProtocols()\n        }, options);\n    }\n    /**\n     * Register handlers for a set of multicodecs given\n     */\n    async register(protocol, topology) {\n        if (topology == null) {\n            throw new InvalidParametersError('invalid topology');\n        }\n        // Create topology\n        const id = `${(Math.random() * 1e9).toString(36)}${Date.now()}`;\n        let topologies = this.topologies.get(protocol);\n        if (topologies == null) {\n            topologies = new Map();\n            this.topologies.set(protocol, topologies);\n        }\n        topologies.set(id, topology);\n        return id;\n    }\n    /**\n     * Unregister topology\n     */\n    unregister(id) {\n        for (const [protocol, topologies] of this.topologies.entries()) {\n            if (topologies.has(id)) {\n                topologies.delete(id);\n                if (topologies.size === 0) {\n                    this.topologies.delete(protocol);\n                }\n            }\n        }\n    }\n    use(protocol, middleware) {\n        this.middleware.set(protocol, middleware);\n    }\n    unuse(protocol) {\n        this.middleware.delete(protocol);\n    }\n    getMiddleware(protocol) {\n        return this.middleware.get(protocol) ?? [];\n    }\n    /**\n     * Remove a disconnected peer from the record\n     */\n    async _onDisconnect(evt) {\n        const remotePeer = evt.detail;\n        const options = {\n            signal: AbortSignal.timeout(5_000)\n        };\n        try {\n            const peer = await this.components.peerStore.get(remotePeer, options);\n            for (const protocol of peer.protocols) {\n                const topologies = this.topologies.get(protocol);\n                if (topologies == null) {\n                    // no topologies are interested in this protocol\n                    continue;\n                }\n                await Promise.all([...topologies.values()].map(async (topology) => {\n                    if (topology.filter?.has(remotePeer) === false) {\n                        return;\n                    }\n                    topology.filter?.remove(remotePeer);\n                    await topology.onDisconnect?.(remotePeer);\n                }));\n            }\n        }\n        catch (err) {\n            if (err.name === 'NotFoundError') {\n                // peer has not completed identify so they are not in the peer store\n                return;\n            }\n            this.log.error('could not inform topologies of disconnecting peer %p - %e', remotePeer, err);\n        }\n    }\n    /**\n     * When a peer is updated, if they have removed supported protocols notify any\n     * topologies interested in the removed protocols.\n     */\n    async _onPeerUpdate(evt) {\n        const { peer, previous } = evt.detail;\n        const removed = (previous?.protocols ?? []).filter(protocol => !peer.protocols.includes(protocol));\n        try {\n            for (const protocol of removed) {\n                const topologies = this.topologies.get(protocol);\n                if (topologies == null) {\n                    // no topologies are interested in this protocol\n                    continue;\n                }\n                await Promise.all([...topologies.values()].map(async (topology) => {\n                    if (topology.filter?.has(peer.id) === false) {\n                        return;\n                    }\n                    topology.filter?.remove(peer.id);\n                    await topology.onDisconnect?.(peer.id);\n                }));\n            }\n        }\n        catch (err) {\n            this.log.error('could not inform topologies of updated peer %p - %e', peer.id, err);\n        }\n    }\n    /**\n     * After identify has completed and we have received the list of supported\n     * protocols, notify any topologies interested in those protocols.\n     */\n    async _onPeerIdentify(evt) {\n        const protocols = evt.detail.protocols;\n        const connection = evt.detail.connection;\n        const peerId = evt.detail.peerId;\n        try {\n            for (const protocol of protocols) {\n                const topologies = this.topologies.get(protocol);\n                if (topologies == null) {\n                    // no topologies are interested in this protocol\n                    continue;\n                }\n                await Promise.all([...topologies.values()].map(async (topology) => {\n                    if (connection.limits != null && topology.notifyOnLimitedConnection !== true) {\n                        return;\n                    }\n                    if (topology.filter?.has(peerId) === true) {\n                        return;\n                    }\n                    topology.filter?.add(peerId);\n                    await topology.onConnect?.(peerId, connection);\n                }));\n            }\n        }\n        catch (err) {\n            this.log.error('could not inform topologies of updated peer after identify %p - %e', peerId, err);\n        }\n    }\n}\n//# sourceMappingURL=registrar.js.map","import { FaultTolerance, InvalidParametersError, NotStartedError } from '@libp2p/interface';\nimport { trackedMap } from '@libp2p/utils';\nimport { IP4, IP6 } from '@multiformats/multiaddr-matcher';\nimport { CustomProgressEvent } from 'progress-events';\nimport { TransportUnavailableError, UnsupportedListenAddressError, UnsupportedListenAddressesError } from './errors.js';\nexport class DefaultTransportManager {\n    log;\n    components;\n    transports;\n    listeners;\n    faultTolerance;\n    started;\n    constructor(components, init = {}) {\n        this.log = components.logger.forComponent('libp2p:transports');\n        this.components = components;\n        this.started = false;\n        this.transports = trackedMap({\n            name: 'libp2p_transport_manager_transports',\n            metrics: this.components.metrics\n        });\n        this.listeners = trackedMap({\n            name: 'libp2p_transport_manager_listeners',\n            metrics: this.components.metrics\n        });\n        this.faultTolerance = init.faultTolerance ?? FaultTolerance.FATAL_ALL;\n    }\n    [Symbol.toStringTag] = '@libp2p/transport-manager';\n    /**\n     * Adds a `Transport` to the manager\n     */\n    add(transport) {\n        const tag = transport[Symbol.toStringTag];\n        if (tag == null) {\n            throw new InvalidParametersError('Transport must have a valid tag');\n        }\n        if (this.transports.has(tag)) {\n            throw new InvalidParametersError(`There is already a transport with the tag ${tag}`);\n        }\n        this.log('adding transport %s', tag);\n        this.transports.set(tag, transport);\n        if (!this.listeners.has(tag)) {\n            this.listeners.set(tag, []);\n        }\n    }\n    isStarted() {\n        return this.started;\n    }\n    start() {\n        this.started = true;\n    }\n    async afterStart() {\n        // Listen on the provided transports for the provided addresses\n        const addrs = this.components.addressManager.getListenAddrs();\n        await this.listen(addrs);\n    }\n    /**\n     * Stops all listeners\n     */\n    async stop() {\n        const tasks = [];\n        for (const [key, listeners] of this.listeners) {\n            this.log('closing listeners for %s', key);\n            while (listeners.length > 0) {\n                const listener = listeners.pop();\n                if (listener == null) {\n                    continue;\n                }\n                tasks.push(listener.close());\n            }\n        }\n        await Promise.all(tasks);\n        this.log('all listeners closed');\n        for (const key of this.listeners.keys()) {\n            this.listeners.set(key, []);\n        }\n        this.started = false;\n    }\n    /**\n     * Dials the given Multiaddr over it's supported transport\n     */\n    async dial(ma, options) {\n        const transport = this.dialTransportForMultiaddr(ma);\n        if (transport == null) {\n            throw new TransportUnavailableError(`No transport available for address ${String(ma)}`);\n        }\n        options?.onProgress?.(new CustomProgressEvent('transport-manager:selected-transport', transport[Symbol.toStringTag]));\n        // @ts-expect-error the transport has a typed onProgress option but we\n        // can't predict what transport implementation we selected so all we can\n        // do is pass the onProgress handler in and hope for the best\n        return transport.dial(ma, {\n            ...options,\n            upgrader: this.components.upgrader\n        });\n    }\n    /**\n     * Returns all Multiaddr's the listeners are using\n     */\n    getAddrs() {\n        let addrs = [];\n        for (const listeners of this.listeners.values()) {\n            for (const listener of listeners) {\n                addrs = [...addrs, ...listener.getAddrs()];\n            }\n        }\n        return addrs;\n    }\n    /**\n     * Returns all the transports instances\n     */\n    getTransports() {\n        return Array.of(...this.transports.values());\n    }\n    /**\n     * Returns all the listener instances\n     */\n    getListeners() {\n        return Array.of(...this.listeners.values()).flat();\n    }\n    /**\n     * Finds a transport that matches the given Multiaddr\n     */\n    dialTransportForMultiaddr(ma) {\n        for (const transport of this.transports.values()) {\n            const addrs = transport.dialFilter([ma]);\n            if (addrs.length > 0) {\n                return transport;\n            }\n        }\n    }\n    /**\n     * Finds a transport that matches the given Multiaddr\n     */\n    listenTransportForMultiaddr(ma) {\n        for (const transport of this.transports.values()) {\n            const addrs = transport.listenFilter([ma]);\n            if (addrs.length > 0) {\n                return transport;\n            }\n        }\n    }\n    /**\n     * Starts listeners for each listen Multiaddr\n     */\n    async listen(addrs) {\n        if (!this.isStarted()) {\n            throw new NotStartedError('Not started');\n        }\n        if (addrs == null || addrs.length === 0) {\n            this.log('no addresses were provided for listening, this node is dial only');\n            return;\n        }\n        // track IPv4/IPv6 results - if we succeed on IPv4 but all IPv6 attempts\n        // fail then we are probably on a network without IPv6 support\n        const listenStats = {\n            errors: new Map(),\n            ipv4: {\n                success: 0,\n                attempts: 0\n            },\n            ipv6: {\n                success: 0,\n                attempts: 0\n            }\n        };\n        addrs.forEach(ma => {\n            listenStats.errors.set(ma.toString(), new UnsupportedListenAddressError());\n        });\n        const tasks = [];\n        for (const [key, transport] of this.transports.entries()) {\n            const supportedAddrs = transport.listenFilter(addrs);\n            // For each supported multiaddr, create a listener\n            for (const addr of supportedAddrs) {\n                this.log('creating listener for %s on %a', key, addr);\n                const listener = transport.createListener({\n                    upgrader: this.components.upgrader\n                });\n                let listeners = this.listeners.get(key) ?? [];\n                if (listeners == null) {\n                    listeners = [];\n                    this.listeners.set(key, listeners);\n                }\n                listeners.push(listener);\n                // Track listen/close events\n                listener.addEventListener('listening', () => {\n                    this.components.events.safeDispatchEvent('transport:listening', {\n                        detail: listener\n                    });\n                });\n                listener.addEventListener('close', () => {\n                    const index = listeners.findIndex(l => l === listener);\n                    // remove the listener\n                    listeners.splice(index, 1);\n                    this.components.events.safeDispatchEvent('transport:close', {\n                        detail: listener\n                    });\n                });\n                // track IPv4/IPv6 support\n                if (IP4.matches(addr)) {\n                    listenStats.ipv4.attempts++;\n                }\n                else if (IP6.matches(addr)) {\n                    listenStats.ipv6.attempts++;\n                }\n                // We need to attempt to listen on everything\n                tasks.push(listener.listen(addr)\n                    .then(() => {\n                    listenStats.errors.delete(addr.toString());\n                    if (IP4.matches(addr)) {\n                        listenStats.ipv4.success++;\n                    }\n                    if (IP6.matches(addr)) {\n                        listenStats.ipv6.success++;\n                    }\n                }, (err) => {\n                    this.log.error('transport %s could not listen on address %a - %e', key, addr, err);\n                    listenStats.errors.set(addr.toString(), err);\n                    throw err;\n                }));\n            }\n        }\n        const results = await Promise.allSettled(tasks);\n        // listening on all addresses, all good\n        if (results.length > 0 && results.every(res => res.status === 'fulfilled')) {\n            return;\n        }\n        // detect lack of IPv6 support on the current network - if we tried to\n        // listen on IPv4 and IPv6 addresses, and all IPv4 addresses succeeded but\n        // all IPv6 addresses fail, then we can assume there's no IPv6 here\n        if (this.ipv6Unsupported(listenStats)) {\n            this.log('all IPv4 addresses succeed but all IPv6 failed');\n            return;\n        }\n        if (this.faultTolerance === FaultTolerance.NO_FATAL) {\n            // ok to be dial-only\n            this.log('failed to listen on any address but fault tolerance allows this');\n            return;\n        }\n        // if a configured address was not able to be listened on, throw an error\n        throw new UnsupportedListenAddressesError(`Some configured addresses failed to be listened on, you may need to remove one or more listen addresses from your configuration or set \\`transportManager.faultTolerance\\` to NO_FATAL:\\n${[...listenStats.errors.entries()].map(([addr, err]) => {\n            return `\n  ${addr}: ${`${getErrorMessage(err)}`.split('\\n').join('\\n  ')}\n`;\n        }).join('')}`);\n    }\n    ipv6Unsupported(listenStats) {\n        if (listenStats.ipv4.attempts === 0 || listenStats.ipv6.attempts === 0) {\n            return false;\n        }\n        const allIpv4Succeeded = listenStats.ipv4.attempts === listenStats.ipv4.success;\n        const allIpv6Failed = listenStats.ipv6.success === 0;\n        return allIpv4Succeeded && allIpv6Failed;\n    }\n    /**\n     * Removes the given transport from the manager.\n     * If a transport has any running listeners, they will be closed.\n     */\n    async remove(key) {\n        const listeners = this.listeners.get(key) ?? [];\n        this.log.trace('removing transport %s', key);\n        // Close any running listeners\n        const tasks = [];\n        this.log.trace('closing listeners for %s', key);\n        while (listeners.length > 0) {\n            const listener = listeners.pop();\n            if (listener == null) {\n                continue;\n            }\n            tasks.push(listener.close());\n        }\n        await Promise.all(tasks);\n        this.transports.delete(key);\n        this.listeners.delete(key);\n    }\n    /**\n     * Removes all transports from the manager.\n     * If any listeners are running, they will be closed.\n     *\n     * @async\n     */\n    async removeAll() {\n        const tasks = [];\n        for (const key of this.transports.keys()) {\n            tasks.push(this.remove(key));\n        }\n        await Promise.all(tasks);\n    }\n}\n/**\n * Not every error has useful fields, browsers particularly often have an empty\n * string for the \"stack\" so try a few different fields here.\n */\nfunction getErrorMessage(err) {\n    if (err.stack != null && err.stack.trim() !== '') {\n        return err.stack;\n    }\n    if (err.message != null) {\n        return err.message;\n    }\n    return err.toString();\n}\n//# sourceMappingURL=transport-manager.js.map","export const PROTOCOL_ID = '/multistream/1.0.0';\n// Conforming to go-libp2p\n// See https://github.com/multiformats/go-multistream/blob/master/multistream.go#L297\nexport const MAX_PROTOCOL_LENGTH = 1024;\n//# sourceMappingURL=constants.js.map","import { InvalidMessageError } from '@libp2p/interface';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nconst NewLine = uint8ArrayFromString('\\n');\n/**\n * Read a length-prefixed string from the passed stream, stripping the final newline character\n */\nexport async function readString(reader, options) {\n    const buf = await reader.read(options);\n    const arr = buf.subarray();\n    if (arr.byteLength === 0 || arr[arr.length - 1] !== NewLine[0]) {\n        throw new InvalidMessageError('Missing newline');\n    }\n    return uint8ArrayToString(arr).trimEnd();\n}\n//# sourceMappingURL=multistream.js.map","import { UnsupportedProtocolError } from '@libp2p/interface';\nimport { lpStream } from '@libp2p/utils';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { MAX_PROTOCOL_LENGTH } from './constants.js';\nimport { readString } from './multistream.js';\nimport { PROTOCOL_ID } from './index.js';\n/**\n * Negotiate a protocol to use from a list of protocols.\n *\n * @param stream - A duplex iterable stream to dial on\n * @param protocols - A list of protocols (or single protocol) to negotiate with. Protocols are attempted in order until a match is made.\n * @param options - An options object containing an AbortSignal and an optional boolean `writeBytes` - if this is true, `Uint8Array`s will be written into `duplex`, otherwise `Uint8ArrayList`s will\n * @returns A stream for the selected protocol and the protocol that was selected from the list of protocols provided to `select`.\n * @example\n *\n * ```TypeScript\n * import { pipe } from 'it-pipe'\n * import * as mss from '@libp2p/multistream-select'\n * import { Mplex } from '@libp2p/mplex'\n *\n * const muxer = new Mplex()\n * const muxedStream = muxer.newStream()\n *\n * // mss.select(protocol(s))\n * // Select from one of the passed protocols (in priority order)\n * // Returns selected stream and protocol\n * const { stream: dhtStream, protocol } = await mss.select(muxedStream, [\n *   // This might just be different versions of DHT, but could be different implementations\n *   '/ipfs-dht/2.0.0', // Most of the time this will probably just be one item.\n *   '/ipfs-dht/1.0.0'\n * ])\n *\n * // Typically this stream will be passed back to the caller of libp2p.dialProtocol\n * //\n * // ...it might then do something like this:\n * // try {\n * //   await pipe(\n * //     [uint8ArrayFromString('Some DHT data')]\n * //     dhtStream,\n * //     async source => {\n * //       for await (const chunk of source)\n * //         // DHT response data\n * //     }\n * //   )\n * // } catch (err) {\n * //   // Error in stream\n * // }\n * ```\n */\nexport async function select(stream, protocols, options = {}) {\n    protocols = Array.isArray(protocols) ? [...protocols] : [protocols];\n    if (protocols.length === 0) {\n        throw new Error('At least one protocol must be specified');\n    }\n    const log = stream.log.newScope('mss:select');\n    const lp = lpStream(stream, {\n        ...options,\n        maxDataLength: MAX_PROTOCOL_LENGTH\n    });\n    for (let i = 0; i < protocols.length; i++) {\n        const protocol = protocols[i];\n        let response;\n        if (i === 0) {\n            // Write the multistream-select header along with the first protocol\n            log.trace('write [\"%s\", \"%s\"]', PROTOCOL_ID, protocol);\n            const p1 = uint8ArrayFromString(`${PROTOCOL_ID}\\n`);\n            const p2 = uint8ArrayFromString(`${protocol}\\n`);\n            await lp.writeV([p1, p2], options);\n            log.trace('reading multistream-select header');\n            response = await readString(lp, options);\n            log.trace('read \"%s\"', response);\n            // Read the protocol response if we got the protocolId in return\n            if (response !== PROTOCOL_ID) {\n                log.error('did not read multistream-select header from response');\n                break;\n            }\n        }\n        else {\n            // We haven't gotten a valid ack, try the other protocols\n            log.trace('write \"%s\"', protocol);\n            await lp.write(uint8ArrayFromString(`${protocol}\\n`), options);\n        }\n        log.trace('reading protocol response');\n        response = await readString(lp, options);\n        log.trace('read \"%s\"', response);\n        if (response === protocol) {\n            log.trace('selected \"%s\" after negotiation', response);\n            lp.unwrap();\n            return protocol;\n        }\n    }\n    throw new UnsupportedProtocolError(`Protocol selection failed - could not negotiate ${protocols}`);\n}\n//# sourceMappingURL=select.js.map","import { lpStream } from '@libp2p/utils';\nimport { encode } from 'it-length-prefixed';\nimport { Uint8ArrayList } from 'uint8arraylist';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { MAX_PROTOCOL_LENGTH, PROTOCOL_ID } from './constants.js';\nimport { readString } from './multistream.js';\n/**\n * Handle multistream protocol selections for the given list of protocols.\n *\n * Note that after a protocol is handled `listener` can no longer be used.\n *\n * @param stream - A duplex iterable stream to listen on\n * @param protocols - A list of protocols (or single protocol) that this listener is able to speak.\n * @param options - an options object containing an AbortSignal and an optional boolean `writeBytes` - if this is true, `Uint8Array`s will be written into `duplex`, otherwise `Uint8ArrayList`s will\n * @returns A stream for the selected protocol and the protocol that was selected from the list of protocols provided to `select`\n * @example\n *\n * ```TypeScript\n * import { pipe } from 'it-pipe'\n * import * as mss from '@libp2p/multistream-select'\n * import { Mplex } from '@libp2p/mplex'\n *\n * const muxer = new Mplex({\n *   async onStream (muxedStream) {\n *   // mss.handle(handledProtocols)\n *   // Returns selected stream and protocol\n *   const { stream, protocol } = await mss.handle(muxedStream, [\n *     '/ipfs-dht/1.0.0',\n *     '/ipfs-bitswap/1.0.0'\n *   ])\n *\n *   // Typically here we'd call the handler function that was registered in\n *   // libp2p for the given protocol:\n *   // e.g. handlers[protocol].handler(stream)\n *   //\n *   // If protocol was /ipfs-dht/1.0.0 it might do something like this:\n *   // try {\n *   //   await pipe(\n *   //     dhtStream,\n *   //     source => (async function * () {\n *   //       for await (const chunk of source)\n *   //         // Incoming DHT data -> process and yield to respond\n *   //     })(),\n *   //     dhtStream\n *   //   )\n *   // } catch (err) {\n *   //   // Error in stream\n *   // }\n *   }\n * })\n * ```\n */\nexport async function handle(stream, protocols, options = {}) {\n    protocols = Array.isArray(protocols) ? protocols : [protocols];\n    const log = stream.log.newScope('mss:handle');\n    const lp = lpStream(stream, {\n        ...options,\n        maxDataLength: MAX_PROTOCOL_LENGTH,\n        maxLengthLength: 2 // 2 bytes is enough to length-prefix MAX_PROTOCOL_LENGTH\n    });\n    while (true) {\n        log.trace('reading incoming string');\n        const protocol = await readString(lp, options);\n        log.trace('read \"%s\"', protocol);\n        if (protocol === PROTOCOL_ID) {\n            log.trace('respond with \"%s\" for \"%s\"', PROTOCOL_ID, protocol);\n            await lp.write(uint8ArrayFromString(`${PROTOCOL_ID}\\n`), options);\n            log.trace('responded with \"%s\" for \"%s\"', PROTOCOL_ID, protocol);\n            continue;\n        }\n        if (protocols.includes(protocol)) {\n            log.trace('respond with \"%s\" for \"%s\"', protocol, protocol);\n            await lp.write(uint8ArrayFromString(`${protocol}\\n`), options);\n            log.trace('responded with \"%s\" for \"%s\"', protocol, protocol);\n            lp.unwrap();\n            return protocol;\n        }\n        if (protocol === 'ls') {\n            // <varint-msg-len><varint-proto-name-len><proto-name>\\n<varint-proto-name-len><proto-name>\\n\\n\n            const protos = new Uint8ArrayList(...protocols.map(p => encode.single(uint8ArrayFromString(`${p}\\n`))), uint8ArrayFromString('\\n'));\n            log.trace('respond with \"%s\" for %s', protocols, protocol);\n            await lp.write(protos, options);\n            log.trace('responded with \"%s\" for %s', protocols, protocol);\n            continue;\n        }\n        log.trace('respond with \"na\" for \"%s\"', protocol);\n        await lp.write(uint8ArrayFromString('na\\n'), options);\n        log('responded with \"na\" for \"%s\"', protocol);\n    }\n}\n//# sourceMappingURL=handle.js.map","import { connectionSymbol, LimitedConnectionError, ConnectionClosedError, TooManyOutboundProtocolStreamsError, TooManyInboundProtocolStreamsError, StreamCloseEvent } from '@libp2p/interface';\nimport * as mss from '@libp2p/multistream-select';\nimport { CODE_P2P } from '@multiformats/multiaddr';\nimport { setMaxListeners, TypedEventEmitter } from 'main-event';\nimport { CONNECTION_CLOSE_TIMEOUT, PROTOCOL_NEGOTIATION_TIMEOUT } from \"./connection-manager/constants.defaults.js\";\nimport { isDirect } from \"./connection-manager/utils.js\";\nimport { MuxerUnavailableError } from \"./errors.js\";\nimport { DEFAULT_MAX_INBOUND_STREAMS, DEFAULT_MAX_OUTBOUND_STREAMS } from \"./registrar.js\";\n/**\n * An implementation of the js-libp2p connection.\n * Any libp2p transport should use an upgrader to return this connection.\n */\nexport class Connection extends TypedEventEmitter {\n    id;\n    remoteAddr;\n    remotePeer;\n    direction;\n    timeline;\n    direct;\n    multiplexer;\n    encryption;\n    limits;\n    log;\n    maConn;\n    muxer;\n    components;\n    outboundStreamProtocolNegotiationTimeout;\n    inboundStreamProtocolNegotiationTimeout;\n    closeTimeout;\n    constructor(components, init) {\n        super();\n        this.components = components;\n        this.id = init.id;\n        this.remoteAddr = init.maConn.remoteAddr;\n        this.remotePeer = init.remotePeer;\n        this.direction = init.direction ?? 'outbound';\n        this.timeline = init.maConn.timeline;\n        this.encryption = init.cryptoProtocol;\n        this.limits = init.limits;\n        this.maConn = init.maConn;\n        this.log = init.maConn.log;\n        this.outboundStreamProtocolNegotiationTimeout = init.outboundStreamProtocolNegotiationTimeout ?? PROTOCOL_NEGOTIATION_TIMEOUT;\n        this.inboundStreamProtocolNegotiationTimeout = init.inboundStreamProtocolNegotiationTimeout ?? PROTOCOL_NEGOTIATION_TIMEOUT;\n        this.closeTimeout = init.closeTimeout ?? CONNECTION_CLOSE_TIMEOUT;\n        this.direct = isDirect(init.maConn.remoteAddr);\n        this.onIncomingStream = this.onIncomingStream.bind(this);\n        if (this.remoteAddr.getComponents().find(component => component.code === CODE_P2P) == null) {\n            this.remoteAddr = this.remoteAddr.encapsulate(`/p2p/${this.remotePeer}`);\n        }\n        if (init.muxer != null) {\n            this.multiplexer = init.muxer.protocol;\n            this.muxer = init.muxer;\n            this.muxer.addEventListener('stream', this.onIncomingStream);\n        }\n        this.maConn.addEventListener('close', (evt) => {\n            this.dispatchEvent(new StreamCloseEvent(evt.local, evt.error));\n        });\n    }\n    [Symbol.toStringTag] = 'Connection';\n    [connectionSymbol] = true;\n    get streams() {\n        return this.muxer?.streams ?? [];\n    }\n    get status() {\n        return this.maConn.status;\n    }\n    /**\n     * Create a new stream over this connection\n     */\n    newStream = async (protocols, options = {}) => {\n        if (this.muxer == null) {\n            throw new MuxerUnavailableError('Connection is not multiplexed');\n        }\n        if (this.muxer.status !== 'open') {\n            throw new ConnectionClosedError(`The connection muxer is \"${this.muxer.status}\" and not \"open\"`);\n        }\n        if (this.maConn.status !== 'open') {\n            throw new ConnectionClosedError(`The connection is \"${this.status}\" and not \"open\"`);\n        }\n        if (this.limits != null && options?.runOnLimitedConnection !== true) {\n            throw new LimitedConnectionError('Cannot open protocol stream on limited connection');\n        }\n        if (!Array.isArray(protocols)) {\n            protocols = [protocols];\n        }\n        this.log.trace('starting new stream for protocols %s', protocols);\n        const muxedStream = await this.muxer.createStream({\n            ...options,\n            // most underlying transports only support negotiating a single protocol\n            // so only pass the early protocol if a single protocol has been requested\n            // otherwise fall back to mss\n            protocol: protocols.length === 1 ? protocols[0] : undefined\n        });\n        this.log.trace('started new stream %s for protocols %s', muxedStream.id, protocols);\n        try {\n            if (options.signal == null) {\n                muxedStream.log('no abort signal was passed while trying to negotiate protocols %s falling back to default timeout', protocols);\n                const signal = AbortSignal.timeout(this.outboundStreamProtocolNegotiationTimeout);\n                setMaxListeners(Infinity, signal);\n                options = {\n                    ...options,\n                    signal\n                };\n            }\n            if (muxedStream.protocol === '') {\n                muxedStream.log.trace('selecting protocol from protocols %s', protocols);\n                muxedStream.protocol = await mss.select(muxedStream, protocols, options);\n                muxedStream.log('negotiated protocol %s', muxedStream.protocol);\n            }\n            else {\n                muxedStream.log('pre-negotiated protocol %s', muxedStream.protocol);\n            }\n            const outgoingLimit = findOutgoingStreamLimit(muxedStream.protocol, this.components.registrar, options);\n            const streamCount = countStreams(muxedStream.protocol, 'outbound', this);\n            if (streamCount > outgoingLimit) {\n                const err = new TooManyOutboundProtocolStreamsError(`Too many outbound protocol streams for protocol \"${muxedStream.protocol}\" - ${streamCount}/${outgoingLimit}`);\n                muxedStream.abort(err);\n                throw err;\n            }\n            // If a protocol stream has been successfully negotiated and is to be passed to the application,\n            // the peer store should ensure that the peer is registered with that protocol\n            await this.components.peerStore.merge(this.remotePeer, {\n                protocols: [muxedStream.protocol]\n            });\n            this.components.metrics?.trackProtocolStream(muxedStream);\n            const middleware = this.components.registrar.getMiddleware(muxedStream.protocol);\n            return await this.runMiddlewareChain(muxedStream, this, middleware);\n        }\n        catch (err) {\n            if (muxedStream.status === 'open') {\n                muxedStream.abort(err);\n            }\n            else {\n                this.log.error('could not create new outbound stream on connection %s %a for protocols %s - %e', this.direction === 'inbound' ? 'from' : 'to', this.remoteAddr, protocols, err);\n            }\n            throw err;\n        }\n    };\n    async onIncomingStream(evt) {\n        const muxedStream = evt.detail;\n        const signal = AbortSignal.timeout(this.inboundStreamProtocolNegotiationTimeout);\n        setMaxListeners(Infinity, signal);\n        muxedStream.log('start protocol negotiation, timing out after %dms', this.inboundStreamProtocolNegotiationTimeout);\n        try {\n            if (muxedStream.protocol === '') {\n                const protocols = this.components.registrar.getProtocols();\n                muxedStream.log.trace('selecting protocol from protocols %s', protocols);\n                muxedStream.protocol = await mss.handle(muxedStream, protocols, {\n                    signal\n                });\n                muxedStream.log('negotiated protocol %s', muxedStream.protocol);\n            }\n            else {\n                muxedStream.log('pre-negotiated protocol %s', muxedStream.protocol);\n            }\n            const incomingLimit = findIncomingStreamLimit(muxedStream.protocol, this.components.registrar);\n            const streamCount = countStreams(muxedStream.protocol, 'inbound', this);\n            if (streamCount > incomingLimit) {\n                throw new TooManyInboundProtocolStreamsError(`Too many inbound protocol streams for protocol \"${muxedStream.protocol}\" - limit ${incomingLimit}`);\n            }\n            // If a protocol stream has been successfully negotiated and is to be passed to the application,\n            // the peer store should ensure that the peer is registered with that protocol\n            await this.components.peerStore.merge(this.remotePeer, {\n                protocols: [muxedStream.protocol]\n            }, {\n                signal\n            });\n            this.components.metrics?.trackProtocolStream(muxedStream);\n            const { handler, options } = this.components.registrar.getHandler(muxedStream.protocol);\n            if (this.limits != null && options.runOnLimitedConnection !== true) {\n                throw new LimitedConnectionError('Cannot open protocol stream on limited connection');\n            }\n            const middleware = this.components.registrar.getMiddleware(muxedStream.protocol);\n            middleware.push(async (stream, connection, next) => {\n                await handler(stream, connection);\n                next(stream, connection);\n            });\n            await this.runMiddlewareChain(muxedStream, this, middleware);\n        }\n        catch (err) {\n            muxedStream.abort(err);\n        }\n    }\n    async runMiddlewareChain(stream, connection, middleware) {\n        for (let i = 0; i < middleware.length; i++) {\n            const mw = middleware[i];\n            stream.log.trace('running middleware', i, mw);\n            // eslint-disable-next-line no-loop-func\n            await new Promise((resolve, reject) => {\n                try {\n                    const result = mw(stream, connection, (s, c) => {\n                        stream = s;\n                        connection = c;\n                        resolve();\n                    });\n                    if (result instanceof Promise) {\n                        result.catch(reject);\n                    }\n                }\n                catch (err) {\n                    reject(err);\n                }\n            });\n            stream.log.trace('ran middleware', i, mw);\n        }\n        return stream;\n    }\n    /**\n     * Close the connection\n     */\n    async close(options = {}) {\n        this.log('closing connection to %a', this.remoteAddr);\n        if (options.signal == null) {\n            const signal = AbortSignal.timeout(this.closeTimeout);\n            setMaxListeners(Infinity, signal);\n            options = {\n                ...options,\n                signal\n            };\n        }\n        await this.muxer?.close(options);\n        await this.maConn.close(options);\n    }\n    abort(err) {\n        this.muxer?.abort(err);\n        this.maConn.abort(err);\n    }\n}\nexport function createConnection(components, init) {\n    return new Connection(components, init);\n}\nfunction findIncomingStreamLimit(protocol, registrar) {\n    try {\n        const { options } = registrar.getHandler(protocol);\n        if (options.maxInboundStreams != null) {\n            return options.maxInboundStreams;\n        }\n    }\n    catch (err) {\n        if (err.name !== 'UnhandledProtocolError') {\n            throw err;\n        }\n    }\n    return DEFAULT_MAX_INBOUND_STREAMS;\n}\nfunction findOutgoingStreamLimit(protocol, registrar, options = {}) {\n    try {\n        const { options } = registrar.getHandler(protocol);\n        if (options.maxOutboundStreams != null) {\n            return options.maxOutboundStreams;\n        }\n    }\n    catch (err) {\n        if (err.name !== 'UnhandledProtocolError') {\n            throw err;\n        }\n    }\n    return options.maxOutboundStreams ?? DEFAULT_MAX_OUTBOUND_STREAMS;\n}\nfunction countStreams(protocol, direction, connection) {\n    let streamCount = 0;\n    connection.streams.forEach(stream => {\n        if (stream.direction === direction && stream.protocol === protocol) {\n            streamCount++;\n        }\n    });\n    return streamCount;\n}\n//# sourceMappingURL=connection.js.map","import { InvalidMultiaddrError, InvalidPeerIdError } from '@libp2p/interface';\nimport * as mss from '@libp2p/multistream-select';\nimport { peerIdFromString } from '@libp2p/peer-id';\nimport { trackedMap } from '@libp2p/utils';\nimport { CODE_P2P } from '@multiformats/multiaddr';\nimport { anySignal } from 'any-signal';\nimport { setMaxListeners } from 'main-event';\nimport { CustomProgressEvent } from 'progress-events';\nimport { raceSignal } from 'race-signal';\nimport { PROTOCOL_NEGOTIATION_TIMEOUT, INBOUND_UPGRADE_TIMEOUT, CONNECTION_CLOSE_TIMEOUT } from './connection-manager/constants.js';\nimport { createConnection } from './connection.js';\nimport { ConnectionDeniedError, ConnectionInterceptedError, EncryptionFailedError, MuxerUnavailableError } from './errors.js';\nexport class Upgrader {\n    components;\n    connectionEncrypters;\n    streamMuxers;\n    inboundUpgradeTimeout;\n    inboundStreamProtocolNegotiationTimeout;\n    outboundStreamProtocolNegotiationTimeout;\n    events;\n    metrics;\n    connectionCloseTimeout;\n    constructor(components, init) {\n        this.components = components;\n        this.connectionEncrypters = trackedMap({\n            name: 'libp2p_upgrader_connection_encrypters',\n            metrics: this.components.metrics\n        });\n        init.connectionEncrypters.forEach(encrypter => {\n            this.connectionEncrypters.set(encrypter.protocol, encrypter);\n        });\n        this.streamMuxers = trackedMap({\n            name: 'libp2p_upgrader_stream_multiplexers',\n            metrics: this.components.metrics\n        });\n        init.streamMuxers.forEach(muxer => {\n            this.streamMuxers.set(muxer.protocol, muxer);\n        });\n        this.inboundUpgradeTimeout = init.inboundUpgradeTimeout ?? INBOUND_UPGRADE_TIMEOUT;\n        this.inboundStreamProtocolNegotiationTimeout = init.inboundStreamProtocolNegotiationTimeout ?? PROTOCOL_NEGOTIATION_TIMEOUT;\n        this.outboundStreamProtocolNegotiationTimeout = init.outboundStreamProtocolNegotiationTimeout ?? PROTOCOL_NEGOTIATION_TIMEOUT;\n        this.connectionCloseTimeout = init.connectionCloseTimeout ?? CONNECTION_CLOSE_TIMEOUT;\n        this.events = components.events;\n        this.metrics = {\n            dials: components.metrics?.registerCounterGroup('libp2p_connection_manager_dials_total'),\n            errors: components.metrics?.registerCounterGroup('libp2p_connection_manager_dial_errors_total'),\n            inboundErrors: components.metrics?.registerCounterGroup('libp2p_connection_manager_dials_inbound_errors_total'),\n            outboundErrors: components.metrics?.registerCounterGroup('libp2p_connection_manager_dials_outbound_errors_total')\n        };\n    }\n    [Symbol.toStringTag] = '@libp2p/upgrader';\n    async shouldBlockConnection(method, ...args) {\n        const denyOperation = this.components.connectionGater[method];\n        if (denyOperation == null) {\n            return;\n        }\n        const result = await denyOperation.apply(this.components.connectionGater, args);\n        if (result === true) {\n            throw new ConnectionInterceptedError(`The multiaddr connection is blocked by gater.${method}`);\n        }\n    }\n    createInboundAbortSignal(signal) {\n        const output = anySignal([\n            AbortSignal.timeout(this.inboundUpgradeTimeout),\n            signal\n        ]);\n        setMaxListeners(Infinity, output);\n        return output;\n    }\n    async upgradeInbound(maConn, opts) {\n        let accepted = false;\n        // always apply upgrade timeout for incoming upgrades\n        const signal = this.createInboundAbortSignal(opts.signal);\n        try {\n            this.metrics.dials?.increment({\n                inbound: true\n            });\n            accepted = this.components.connectionManager.acceptIncomingConnection(maConn);\n            if (!accepted) {\n                throw new ConnectionDeniedError('Connection denied');\n            }\n            await raceSignal(this.shouldBlockConnection('denyInboundConnection', maConn), signal);\n            await this._performUpgrade(maConn, 'inbound', {\n                ...opts,\n                signal\n            });\n        }\n        catch (err) {\n            this.metrics.errors?.increment({\n                inbound: true\n            });\n            this.metrics.inboundErrors?.increment({\n                [err.name ?? 'Error']: true\n            });\n            throw err;\n        }\n        finally {\n            signal.clear();\n            if (accepted) {\n                this.components.connectionManager.afterUpgradeInbound();\n            }\n        }\n    }\n    async upgradeOutbound(maConn, opts) {\n        try {\n            this.metrics.dials?.increment({\n                outbound: true\n            });\n            const idStr = maConn.remoteAddr.getComponents().findLast(c => c.code === CODE_P2P)?.value;\n            let remotePeerId;\n            if (idStr != null) {\n                remotePeerId = peerIdFromString(idStr);\n                await raceSignal(this.shouldBlockConnection('denyOutboundConnection', remotePeerId, maConn), opts.signal);\n            }\n            let direction = 'outbound';\n            // act as the multistream-select server if we are not to be the initiator\n            if (opts.initiator === false) {\n                direction = 'inbound';\n            }\n            return await this._performUpgrade(maConn, direction, opts);\n        }\n        catch (err) {\n            this.metrics.errors?.increment({\n                outbound: true\n            });\n            this.metrics.outboundErrors?.increment({\n                [err.name ?? 'Error']: true\n            });\n            throw err;\n        }\n    }\n    async _performUpgrade(maConn, direction, opts) {\n        let stream = maConn;\n        let remotePeer;\n        let muxerFactory;\n        let muxer;\n        let cryptoProtocol;\n        const id = `${(parseInt(String(Math.random() * 1e9))).toString(36)}${Date.now()}`;\n        maConn.log = maConn.log.newScope(`${direction}:${id}`);\n        this.components.metrics?.trackMultiaddrConnection(maConn);\n        maConn.log.trace('starting the %s connection upgrade', direction);\n        // Protect\n        if (opts?.skipProtection !== true) {\n            const protector = this.components.connectionProtector;\n            if (protector != null) {\n                maConn.log('protecting the %s connection', direction);\n                stream = await protector.protect(stream, opts);\n            }\n        }\n        try {\n            // Encrypt the connection\n            if (isEncryptionSkipped(opts)) {\n                if (opts.remotePeer == null) {\n                    throw new InvalidMultiaddrError(`${direction} connection that skipped encryption must have a peer id`);\n                }\n                cryptoProtocol = 'native';\n                remotePeer = opts.remotePeer;\n            }\n            else {\n                const peerIdString = maConn.remoteAddr.getComponents().findLast(c => c.code === CODE_P2P)?.value;\n                let remotePeerFromMultiaddr;\n                if (peerIdString != null) {\n                    remotePeerFromMultiaddr = peerIdFromString(peerIdString);\n                }\n                opts?.onProgress?.(new CustomProgressEvent(`upgrader:encrypt-${direction}-connection`));\n                ({\n                    connection: stream,\n                    remotePeer,\n                    protocol: cryptoProtocol,\n                    streamMuxer: muxerFactory\n                } = await (direction === 'inbound'\n                    ? this._encryptInbound(stream, {\n                        ...opts,\n                        remotePeer: remotePeerFromMultiaddr\n                    })\n                    : this._encryptOutbound(stream, {\n                        ...opts,\n                        remotePeer: remotePeerFromMultiaddr\n                    })));\n            }\n            // this can happen if we dial a multiaddr without a peer id, we only find\n            // out the identity of the remote after the connection is encrypted\n            if (remotePeer.equals(this.components.peerId)) {\n                const err = new InvalidPeerIdError('Can not dial self');\n                maConn.abort(err);\n                throw err;\n            }\n            // stream.pause()\n            await this.shouldBlockConnection(direction === 'inbound' ? 'denyInboundEncryptedConnection' : 'denyOutboundEncryptedConnection', remotePeer, maConn);\n            // stream.resume()\n            if (opts?.muxerFactory != null) {\n                muxerFactory = opts.muxerFactory;\n            }\n            else if (muxerFactory == null && this.streamMuxers.size > 0) {\n                opts?.onProgress?.(new CustomProgressEvent(`upgrader:multiplex-${direction}-connection`));\n                // Multiplex the connection\n                muxerFactory = await (direction === 'inbound'\n                    ? this._multiplexInbound(stream, this.streamMuxers, opts)\n                    : this._multiplexOutbound(stream, this.streamMuxers, opts));\n            }\n        }\n        catch (err) {\n            maConn.log.error('failed to upgrade %s connection %s %a - %e', direction, direction === 'inbound' ? 'from' : 'to', maConn.remoteAddr, err);\n            throw err;\n        }\n        // create the connection muxer if one is configured\n        if (muxerFactory != null) {\n            maConn.log('create muxer %s', muxerFactory.protocol);\n            muxer = muxerFactory.createStreamMuxer(stream);\n        }\n        // stream.pause()\n        await this.shouldBlockConnection(direction === 'inbound' ? 'denyInboundUpgradedConnection' : 'denyOutboundUpgradedConnection', remotePeer, maConn);\n        const conn = this._createConnection({\n            id,\n            cryptoProtocol,\n            direction,\n            maConn,\n            stream,\n            muxer,\n            remotePeer,\n            limits: opts?.limits,\n            closeTimeout: this.connectionCloseTimeout\n        });\n        conn.log('successfully upgraded connection');\n        // stream.resume()\n        return conn;\n    }\n    /**\n     * A convenience method for generating a new `Connection`\n     */\n    _createConnection(opts) {\n        // Create the connection\n        const connection = createConnection(this.components, {\n            ...opts,\n            outboundStreamProtocolNegotiationTimeout: this.outboundStreamProtocolNegotiationTimeout,\n            inboundStreamProtocolNegotiationTimeout: this.inboundStreamProtocolNegotiationTimeout\n        });\n        connection.addEventListener('close', () => {\n            this.events.safeDispatchEvent('connection:close', {\n                detail: connection\n            });\n        });\n        this.events.safeDispatchEvent('connection:open', {\n            detail: connection\n        });\n        return connection;\n    }\n    /**\n     * Attempts to encrypt the incoming `connection` with the provided `cryptos`\n     */\n    async _encryptInbound(connection, options) {\n        const protocols = Array.from(this.connectionEncrypters.keys());\n        try {\n            const protocol = await mss.handle(connection, protocols, options);\n            const encrypter = this.connectionEncrypters.get(protocol);\n            if (encrypter == null) {\n                throw new EncryptionFailedError(`no crypto module found for ${protocol}`);\n            }\n            connection.log('encrypting inbound connection using %s', protocol);\n            return {\n                ...await encrypter.secureInbound(connection, options),\n                protocol\n            };\n        }\n        catch (err) {\n            throw new EncryptionFailedError(err.message);\n        }\n    }\n    /**\n     * Attempts to encrypt the given `connection` with the provided connection encrypters.\n     * The first `ConnectionEncrypter` module to succeed will be used\n     */\n    async _encryptOutbound(connection, options) {\n        const protocols = Array.from(this.connectionEncrypters.keys());\n        try {\n            connection.log.trace('selecting encrypter from %s', protocols);\n            const protocol = await mss.select(connection, protocols, options);\n            const encrypter = this.connectionEncrypters.get(protocol);\n            if (encrypter == null) {\n                throw new EncryptionFailedError(`no crypto module found for ${protocol}`);\n            }\n            connection.log('encrypting outbound connection using %s', protocol);\n            return {\n                ...await encrypter.secureOutbound(connection, options),\n                protocol\n            };\n        }\n        catch (err) {\n            throw new EncryptionFailedError(err.message);\n        }\n    }\n    /**\n     * Selects one of the given muxers via multistream-select. That\n     * muxer will be used for all future streams on the connection.\n     */\n    async _multiplexOutbound(maConn, muxers, options) {\n        const protocols = Array.from(muxers.keys());\n        maConn.log('outbound selecting muxer %s', protocols);\n        try {\n            maConn.log.trace('selecting stream muxer from %s', protocols);\n            const protocol = await mss.select(maConn, protocols, options);\n            const muxerFactory = muxers.get(protocol);\n            if (muxerFactory == null) {\n                throw new MuxerUnavailableError(`No muxer configured for protocol \"${protocol}\"`);\n            }\n            maConn.log('selected %s as muxer protocol', protocol);\n            return muxerFactory;\n        }\n        catch (err) {\n            maConn.log.error('error multiplexing outbound connection - %e', err);\n            throw new MuxerUnavailableError(String(err));\n        }\n    }\n    /**\n     * Registers support for one of the given muxers via multistream-select. The\n     * selected muxer will be used for all future streams on the connection.\n     */\n    async _multiplexInbound(maConn, muxers, options) {\n        const protocols = Array.from(muxers.keys());\n        maConn.log('inbound handling muxers %s', protocols);\n        try {\n            maConn.log.trace('selecting stream muxer from %s', protocols);\n            const protocol = await mss.handle(maConn, protocols, options);\n            const muxerFactory = muxers.get(protocol);\n            if (muxerFactory == null) {\n                throw new MuxerUnavailableError(`No muxer configured for protocol \"${protocol}\"`);\n            }\n            maConn.log('selected %s as muxer protocol', protocol);\n            return muxerFactory;\n        }\n        catch (err) {\n            maConn.log.error('error multiplexing inbound connection - %e', err);\n            throw err;\n        }\n    }\n    getConnectionEncrypters() {\n        return this.connectionEncrypters;\n    }\n    getStreamMuxers() {\n        return this.streamMuxers;\n    }\n}\nfunction isEncryptionSkipped(opts) {\n    return opts.skipEncryption === true;\n}\n//# sourceMappingURL=upgrader.js.map","export const version = '3.0.6';\nexport const name = 'js-libp2p';\n//# sourceMappingURL=version.js.map","import * as pkg from './version.js';\nexport function userAgent(name, version) {\n    return `${name ?? pkg.name}/${version ?? pkg.version} browser/${globalThis.navigator.userAgent}`;\n}\n//# sourceMappingURL=user-agent.browser.js.map","import { publicKeyFromProtobuf } from '@libp2p/crypto/keys';\nimport { contentRoutingSymbol, peerDiscoverySymbol, peerRoutingSymbol, InvalidParametersError } from '@libp2p/interface';\nimport { defaultLogger } from '@libp2p/logger';\nimport { PeerSet } from '@libp2p/peer-collections';\nimport { peerIdFromString } from '@libp2p/peer-id';\nimport { persistentPeerStore } from '@libp2p/peer-store';\nimport { CODE_P2P, isMultiaddr } from '@multiformats/multiaddr';\nimport { MemoryDatastore } from 'datastore-core/memory';\nimport { TypedEventEmitter, setMaxListeners } from 'main-event';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { AddressManager } from './address-manager/index.js';\nimport { checkServiceDependencies, defaultComponents } from './components.js';\nimport { connectionGater } from './config/connection-gater.js';\nimport { DefaultConnectionManager } from './connection-manager/index.js';\nimport { ConnectionMonitor } from './connection-monitor.js';\nimport { CompoundContentRouting } from './content-routing.js';\nimport { DefaultPeerRouting } from './peer-routing.js';\nimport { RandomWalk } from './random-walk.js';\nimport { Registrar } from './registrar.js';\nimport { DefaultTransportManager } from './transport-manager.js';\nimport { Upgrader } from './upgrader.js';\nimport { userAgent } from './user-agent.js';\nimport * as pkg from './version.js';\nexport class Libp2p extends TypedEventEmitter {\n    peerId;\n    peerStore;\n    contentRouting;\n    peerRouting;\n    metrics;\n    services;\n    logger;\n    status;\n    components;\n    log;\n    // eslint-disable-next-line complexity\n    constructor(init) {\n        super();\n        this.status = 'stopped';\n        // event bus - components can listen to this emitter to be notified of system events\n        // and also cause them to be emitted\n        const events = new TypedEventEmitter();\n        const originalDispatch = events.dispatchEvent.bind(events);\n        events.dispatchEvent = (evt) => {\n            const internalResult = originalDispatch(evt);\n            const externalResult = this.dispatchEvent(new CustomEvent(evt.type, { detail: evt.detail }));\n            return internalResult || externalResult;\n        };\n        // This emitter gets listened to a lot\n        setMaxListeners(Infinity, events);\n        this.peerId = init.peerId;\n        this.logger = init.logger ?? defaultLogger();\n        this.log = this.logger.forComponent('libp2p');\n        // @ts-expect-error {} may not be of type T\n        this.services = {};\n        const nodeInfoName = init.nodeInfo?.name ?? pkg.name;\n        const nodeInfoVersion = init.nodeInfo?.version ?? pkg.version;\n        // @ts-expect-error defaultComponents is missing component types added later\n        const components = this.components = defaultComponents({\n            peerId: init.peerId,\n            privateKey: init.privateKey,\n            nodeInfo: {\n                name: nodeInfoName,\n                version: nodeInfoVersion,\n                userAgent: init.nodeInfo?.userAgent ?? userAgent(nodeInfoName, nodeInfoVersion)\n            },\n            logger: this.logger,\n            events,\n            datastore: init.datastore ?? new MemoryDatastore(),\n            connectionGater: connectionGater(init.connectionGater),\n            dns: init.dns\n        });\n        // Create Metrics\n        if (init.metrics != null) {\n            this.metrics = this.configureComponent('metrics', init.metrics(this.components));\n        }\n        this.peerStore = this.configureComponent('peerStore', persistentPeerStore(components, {\n            addressFilter: this.components.connectionGater.filterMultiaddrForPeer,\n            ...init.peerStore\n        }));\n        components.events.addEventListener('peer:update', evt => {\n            // if there was no peer previously in the peer store this is a new peer\n            if (evt.detail.previous == null) {\n                const peerInfo = {\n                    id: evt.detail.peer.id,\n                    multiaddrs: evt.detail.peer.addresses.map(a => a.multiaddr)\n                };\n                components.events.safeDispatchEvent('peer:discovery', { detail: peerInfo });\n            }\n        });\n        // Set up connection protector if configured\n        if (init.connectionProtector != null) {\n            this.configureComponent('connectionProtector', init.connectionProtector(components));\n        }\n        // Set up the Upgrader\n        this.components.upgrader = new Upgrader(this.components, {\n            connectionEncrypters: (init.connectionEncrypters ?? []).map((fn, index) => this.configureComponent(`connection-encryption-${index}`, fn(this.components))),\n            streamMuxers: (init.streamMuxers ?? []).map((fn, index) => this.configureComponent(`stream-muxers-${index}`, fn(this.components))),\n            inboundUpgradeTimeout: init.connectionManager?.inboundUpgradeTimeout,\n            inboundStreamProtocolNegotiationTimeout: init.connectionManager?.inboundStreamProtocolNegotiationTimeout,\n            outboundStreamProtocolNegotiationTimeout: init.connectionManager?.outboundStreamProtocolNegotiationTimeout,\n            connectionCloseTimeout: init.connectionManager?.connectionCloseTimeout\n        });\n        // Setup the transport manager\n        this.configureComponent('transportManager', new DefaultTransportManager(this.components, init.transportManager));\n        // Create the Connection Manager\n        this.configureComponent('connectionManager', new DefaultConnectionManager(this.components, init.connectionManager));\n        if (init.connectionMonitor?.enabled !== false) {\n            // Create the Connection Monitor if not disabled\n            this.configureComponent('connectionMonitor', new ConnectionMonitor(this.components, init.connectionMonitor));\n        }\n        // Create the Registrar\n        this.configureComponent('registrar', new Registrar(this.components));\n        // Addresses {listen, announce, noAnnounce}\n        this.configureComponent('addressManager', new AddressManager(this.components, init.addresses));\n        // Peer routers\n        const peerRouters = (init.peerRouters ?? []).map((fn, index) => this.configureComponent(`peer-router-${index}`, fn(this.components)));\n        this.peerRouting = this.components.peerRouting = this.configureComponent('peerRouting', new DefaultPeerRouting(this.components, {\n            routers: peerRouters\n        }));\n        // Content routers\n        const contentRouters = (init.contentRouters ?? []).map((fn, index) => this.configureComponent(`content-router-${index}`, fn(this.components)));\n        this.contentRouting = this.components.contentRouting = this.configureComponent('contentRouting', new CompoundContentRouting(this.components, {\n            routers: contentRouters\n        }));\n        // Random walk\n        this.configureComponent('randomWalk', new RandomWalk(this.components));\n        (init.peerDiscovery ?? []).forEach((fn, index) => {\n            const service = this.configureComponent(`peer-discovery-${index}`, fn(this.components));\n            service.addEventListener('peer', (evt) => {\n                this.#onDiscoveryPeer(evt);\n            });\n        });\n        // Transport modules\n        init.transports?.forEach((fn, index) => {\n            this.components.transportManager.add(this.configureComponent(`transport-${index}`, fn(this.components)));\n        });\n        // User defined modules\n        if (init.services != null) {\n            for (const name of Object.keys(init.services)) {\n                const createService = init.services[name];\n                const service = createService(this.components);\n                if (service == null) {\n                    this.log.error('service factory %s returned null or undefined instance', name);\n                    continue;\n                }\n                this.services[name] = service;\n                this.configureComponent(name, service);\n                if (service[contentRoutingSymbol] != null) {\n                    this.log('registering service %s for content routing', name);\n                    contentRouters.push(service[contentRoutingSymbol]);\n                }\n                if (service[peerRoutingSymbol] != null) {\n                    this.log('registering service %s for peer routing', name);\n                    peerRouters.push(service[peerRoutingSymbol]);\n                }\n                if (service[peerDiscoverySymbol] != null) {\n                    this.log('registering service %s for peer discovery', name);\n                    service[peerDiscoverySymbol].addEventListener?.('peer', (evt) => {\n                        this.#onDiscoveryPeer(evt);\n                    });\n                }\n            }\n        }\n        // Ensure all services have their required dependencies\n        checkServiceDependencies(components);\n    }\n    configureComponent(name, component) {\n        if (component == null) {\n            this.log.error('component %s was null or undefined', name);\n        }\n        // @ts-expect-error cannot assign props\n        this.components[name] = component;\n        return component;\n    }\n    /**\n     * Starts the libp2p node and all its subsystems\n     */\n    async start() {\n        if (this.status !== 'stopped') {\n            return;\n        }\n        this.status = 'starting';\n        this.log('libp2p is starting');\n        try {\n            await this.components.beforeStart?.();\n            await this.components.start();\n            await this.components.afterStart?.();\n            this.status = 'started';\n            this.safeDispatchEvent('start', { detail: this });\n            this.log('libp2p has started with peer id %p', this.peerId);\n        }\n        catch (err) {\n            this.log.error('an error occurred starting libp2p - %e', err);\n            // set status to 'started' so this.stop() will stop any running components\n            this.status = 'started';\n            await this.stop();\n            throw err;\n        }\n    }\n    /**\n     * Stop the libp2p node by closing its listeners and open connections\n     */\n    async stop() {\n        if (this.status !== 'started') {\n            return;\n        }\n        this.log('libp2p is stopping');\n        this.status = 'stopping';\n        await this.components.beforeStop?.();\n        await this.components.stop();\n        await this.components.afterStop?.();\n        this.status = 'stopped';\n        this.safeDispatchEvent('stop', { detail: this });\n        this.log('libp2p has stopped');\n    }\n    getConnections(peerId) {\n        return this.components.connectionManager.getConnections(peerId);\n    }\n    getDialQueue() {\n        return this.components.connectionManager.getDialQueue();\n    }\n    getPeers() {\n        const peerSet = new PeerSet();\n        for (const conn of this.components.connectionManager.getConnections()) {\n            peerSet.add(conn.remotePeer);\n        }\n        return Array.from(peerSet);\n    }\n    async dial(peer, options = {}) {\n        return this.components.connectionManager.openConnection(peer, {\n            // ensure any userland dials take top priority in the queue\n            priority: 75,\n            ...options\n        });\n    }\n    async dialProtocol(peer, protocols, options = {}) {\n        if (protocols == null) {\n            throw new InvalidParametersError('no protocols were provided to open a stream');\n        }\n        protocols = Array.isArray(protocols) ? protocols : [protocols];\n        if (protocols.length === 0) {\n            throw new InvalidParametersError('no protocols were provided to open a stream');\n        }\n        return this.components.connectionManager.openStream(peer, protocols, options);\n    }\n    getMultiaddrs() {\n        return this.components.addressManager.getAddresses();\n    }\n    getProtocols() {\n        return this.components.registrar.getProtocols();\n    }\n    async hangUp(peer, options = {}) {\n        if (isMultiaddr(peer)) {\n            peer = peerIdFromString(peer.getComponents().findLast(c => c.code === CODE_P2P)?.value ?? '');\n        }\n        await this.components.connectionManager.closeConnections(peer, options);\n    }\n    async getPublicKey(peer, options = {}) {\n        this.log('getPublicKey %p', peer);\n        if (peer.publicKey != null) {\n            return peer.publicKey;\n        }\n        try {\n            const peerInfo = await this.peerStore.get(peer, options);\n            if (peerInfo.id.publicKey != null) {\n                return peerInfo.id.publicKey;\n            }\n        }\n        catch (err) {\n            if (err.name !== 'NotFoundError') {\n                throw err;\n            }\n        }\n        const peerKey = uint8ArrayConcat([\n            uint8ArrayFromString('/pk/'),\n            peer.toMultihash().bytes\n        ]);\n        // search any available content routing methods\n        const bytes = await this.contentRouting.get(peerKey, options);\n        // ensure the returned key is valid\n        const publicKey = publicKeyFromProtobuf(bytes);\n        await this.peerStore.patch(peer, {\n            publicKey\n        }, options);\n        return publicKey;\n    }\n    async handle(protocols, handler, options) {\n        if (!Array.isArray(protocols)) {\n            protocols = [protocols];\n        }\n        await Promise.all(protocols.map(async (protocol) => {\n            await this.components.registrar.handle(protocol, handler, options);\n        }));\n    }\n    async unhandle(protocols, options) {\n        if (!Array.isArray(protocols)) {\n            protocols = [protocols];\n        }\n        await Promise.all(protocols.map(async (protocol) => {\n            await this.components.registrar.unhandle(protocol, options);\n        }));\n    }\n    async register(protocol, topology, options) {\n        return this.components.registrar.register(protocol, topology, options);\n    }\n    unregister(id) {\n        this.components.registrar.unregister(id);\n    }\n    use(protocol, middleware) {\n        this.components.registrar.use(protocol, Array.isArray(middleware) ? middleware : [middleware]);\n    }\n    unuse(protocol) {\n        this.components.registrar.unuse(protocol);\n    }\n    async isDialable(multiaddr, options = {}) {\n        return this.components.connectionManager.isDialable(multiaddr, options);\n    }\n    /**\n     * Called whenever peer discovery services emit `peer` events and adds peers\n     * to the peer store.\n     */\n    #onDiscoveryPeer(evt) {\n        const { detail: peer } = evt;\n        if (peer.id.toString() === this.peerId.toString()) {\n            this.log.error('peer discovery mechanism discovered self');\n            return;\n        }\n        void this.components.peerStore.merge(peer.id, {\n            multiaddrs: peer.multiaddrs\n        })\n            .catch(err => { this.log.error('could not update multiaddrs of discovered peer - %e', err); });\n    }\n}\n//# sourceMappingURL=libp2p.js.map","/**\n * @packageDocumentation\n *\n * Use the `createLibp2p` function to create a libp2p node.\n *\n * @example\n *\n * ```typescript\n * import { createLibp2p } from 'libp2p'\n *\n * const node = await createLibp2p({\n *   // ...other options\n * })\n * ```\n */\nimport { generateKeyPair } from '@libp2p/crypto/keys';\nimport { peerIdFromPrivateKey } from '@libp2p/peer-id';\nimport { validateConfig } from './config.js';\nimport { Libp2p as Libp2pClass } from './libp2p.js';\nexport { dnsaddrResolver } from \"./connection-manager/resolvers/index.js\";\n/**\n * Returns a new instance of the Libp2p interface, generating a new PeerId\n * if one is not passed as part of the options.\n *\n * The node will be started unless `start: false` is passed as an option.\n *\n * @example\n *\n * ```TypeScript\n * import { createLibp2p } from 'libp2p'\n * import { tcp } from '@libp2p/tcp'\n * import { mplex } from '@libp2p/mplex'\n * import { noise } from '@chainsafe/libp2p-noise'\n * import { yamux } from '@chainsafe/libp2p-yamux'\n *\n * // specify options\n * const options = {\n *   transports: [tcp()],\n *   streamMuxers: [yamux(), mplex()],\n *   connectionEncrypters: [noise()]\n * }\n *\n * // create libp2p\n * const libp2p = await createLibp2p(options)\n * ```\n */\nexport async function createLibp2p(options = {}) {\n    options.privateKey ??= await generateKeyPair('Ed25519');\n    const node = new Libp2pClass({\n        ...await validateConfig(options),\n        peerId: peerIdFromPrivateKey(options.privateKey)\n    });\n    if (options.start !== false) {\n        await node.start();\n    }\n    return node;\n}\n// a non-exhaustive list of methods found on the libp2p object\nconst LIBP2P_METHODS = ['dial', 'dialProtocol', 'hangUp', 'handle', 'unhandle', 'getMultiaddrs', 'getProtocols'];\n/**\n * Returns true if the passed object is a libp2p node - this can be used for\n * type guarding in TypeScript.\n */\nexport function isLibp2p(obj) {\n    if (obj == null) {\n        return false;\n    }\n    if (obj instanceof Libp2pClass) {\n        return true;\n    }\n    // if these are all functions it's probably a libp2p object\n    return LIBP2P_METHODS.every(m => typeof obj[m] === 'function');\n}\n//# sourceMappingURL=index.js.map","import { decodeMessage, encodeMessage, enumeration, message } from 'protons-runtime';\nexport var Message;\n(function (Message) {\n    let Flag;\n    (function (Flag) {\n        Flag[\"FIN\"] = \"FIN\";\n        Flag[\"STOP_SENDING\"] = \"STOP_SENDING\";\n        Flag[\"RESET\"] = \"RESET\";\n        Flag[\"FIN_ACK\"] = \"FIN_ACK\";\n    })(Flag = Message.Flag || (Message.Flag = {}));\n    let __FlagValues;\n    (function (__FlagValues) {\n        __FlagValues[__FlagValues[\"FIN\"] = 0] = \"FIN\";\n        __FlagValues[__FlagValues[\"STOP_SENDING\"] = 1] = \"STOP_SENDING\";\n        __FlagValues[__FlagValues[\"RESET\"] = 2] = \"RESET\";\n        __FlagValues[__FlagValues[\"FIN_ACK\"] = 3] = \"FIN_ACK\";\n    })(__FlagValues || (__FlagValues = {}));\n    (function (Flag) {\n        Flag.codec = () => {\n            return enumeration(__FlagValues);\n        };\n    })(Flag = Message.Flag || (Message.Flag = {}));\n    let _codec;\n    Message.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.flag != null) {\n                    w.uint32(8);\n                    Message.Flag.codec().encode(obj.flag, w);\n                }\n                if (obj.message != null) {\n                    w.uint32(18);\n                    w.bytes(obj.message);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.flag = Message.Flag.codec().decode(reader);\n                            break;\n                        }\n                        case 2: {\n                            obj.message = reader.bytes();\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    Message.encode = (obj) => {\n        return encodeMessage(obj, Message.codec());\n    };\n    Message.decode = (buf, opts) => {\n        return decodeMessage(buf, Message.codec(), opts);\n    };\n})(Message || (Message = {}));\n//# sourceMappingURL=message.js.map","import { encodingLength } from 'uint8-varint';\nimport { Message } from './private-to-public/pb/message.js';\n/**\n * STUN servers help clients discover their own public IPs.\n *\n * Using five or more servers causes warnings to be printed so\n * ensure we limit it to max x4\n *\n * @see https://gist.github.com/mondain/b0ec1cf5f60ae726202e\n */\nexport const DEFAULT_ICE_SERVERS = [\n    'stun:stun.l.google.com:19302',\n    'stun:global.stun.twilio.com:3478',\n    'stun:stun.cloudflare.com:3478',\n    'stun:stun.services.mozilla.com:3478'\n];\n/**\n * Characters that can be present in a ufrag\n */\nexport const UFRAG_ALPHABET = Array.from('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890');\n/**\n * Used to detect the version of the WebRTC Direct connection protocol in use\n */\nexport const UFRAG_PREFIX = 'libp2p+webrtc+v1/';\n/**\n * How much can be buffered to the DataChannel at once\n */\nexport const MAX_BUFFERED_AMOUNT = 2 * 1024 * 1024;\n/**\n * Max message size that can be sent to the DataChannel. In browsers this is\n * 256KiB but go-libp2p and rust-libp2p only support 16KiB at the time of\n * writing.\n *\n * @see https://blog.mozilla.org/webrtc/large-data-channel-messages/\n * @see https://issues.webrtc.org/issues/40644524\n */\nexport const MAX_MESSAGE_SIZE = 16 * 1024;\n/**\n * max protobuf overhead:\n *\n * ```\n * [message-length][flag-field-id+type][flag-field-length][flag-field][message-field-id+type][message-field-length][message-field]\n * ```\n */\nfunction calculateProtobufOverhead(maxMessageSize = MAX_MESSAGE_SIZE) {\n    // these have a fixed size\n    const messageLength = encodingLength(maxMessageSize - encodingLength(maxMessageSize));\n    const flagField = 1 + encodingLength(Object.keys(Message.Flag).length - 1); // id+type/value\n    const messageFieldIdType = 1; // id+type\n    const available = maxMessageSize - messageLength - flagField - messageFieldIdType;\n    // let message-length/message-data fill the rest of the message\n    const messageFieldLengthLength = encodingLength(available);\n    return messageLength + flagField + messageFieldIdType + messageFieldLengthLength;\n}\n/**\n * The protobuf message overhead includes the maximum amount of all bytes in the\n * protobuf that aren't message field bytes\n */\nexport const PROTOBUF_OVERHEAD = calculateProtobufOverhead();\n/**\n * When closing a stream, we wait for `bufferedAmount` to become 0 before\n * closing the underlying RTCDataChannel - this controls how long we wait in ms\n */\nexport const DATA_CHANNEL_DRAIN_TIMEOUT = 30_000;\n/**\n * Wait for the remote to acknowledge our FIN for this long\n */\nexport const DEFAULT_FIN_ACK_TIMEOUT = 10_000;\n/**\n * Set as the 'negotiated' muxer protocol name\n */\nexport const MUXER_PROTOCOL = '/webrtc';\n/**\n * The protocol used for the signalling stream protocol\n */\nexport const SIGNALING_PROTOCOL = '/webrtc-signaling/0.0.1';\n/**\n * Used to store generated certificates in the datastore\n */\nexport const DEFAULT_CERTIFICATE_DATASTORE_KEY = '/libp2p/webrtc-direct/certificate';\n/**\n * Used to store the certificate private key in the keychain\n */\nexport const DEFAULT_CERTIFICATE_PRIVATE_KEY_NAME = 'webrtc-direct-certificate-private-key';\n/**\n * The default type of certificate private key\n */\nexport const DEFAULT_CERTIFICATE_PRIVATE_KEY_TYPE = 'ECDSA';\n/**\n * How long the certificate is valid for\n */\nexport const DEFAULT_CERTIFICATE_LIFESPAN = 1_209_600_000;\n/**\n * Renew the certificate this long before it expires\n */\nexport const DEFAULT_CERTIFICATE_RENEWAL_THRESHOLD = 86_400_000;\n//# sourceMappingURL=constants.js.map","var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar BrowserInfo = /** @class */ (function () {\n    function BrowserInfo(name, version, os) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.type = 'browser';\n    }\n    return BrowserInfo;\n}());\nexport { BrowserInfo };\nvar NodeInfo = /** @class */ (function () {\n    function NodeInfo(version) {\n        this.version = version;\n        this.type = 'node';\n        this.name = 'node';\n        this.os = process.platform;\n    }\n    return NodeInfo;\n}());\nexport { NodeInfo };\nvar SearchBotDeviceInfo = /** @class */ (function () {\n    function SearchBotDeviceInfo(name, version, os, bot) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.bot = bot;\n        this.type = 'bot-device';\n    }\n    return SearchBotDeviceInfo;\n}());\nexport { SearchBotDeviceInfo };\nvar BotInfo = /** @class */ (function () {\n    function BotInfo() {\n        this.type = 'bot';\n        this.bot = true; // NOTE: deprecated test name instead\n        this.name = 'bot';\n        this.version = null;\n        this.os = null;\n    }\n    return BotInfo;\n}());\nexport { BotInfo };\nvar ReactNativeInfo = /** @class */ (function () {\n    function ReactNativeInfo() {\n        this.type = 'react-native';\n        this.name = 'react-native';\n        this.version = null;\n        this.os = null;\n    }\n    return ReactNativeInfo;\n}());\nexport { ReactNativeInfo };\n// tslint:disable-next-line:max-line-length\nvar SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\nvar SEARCHBOT_OS_REGEX = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\\ Jeeves\\/Teoma|ia_archiver)/;\nvar REQUIRED_VERSION_PARTS = 3;\nvar userAgentRules = [\n    ['aol', /AOLShield\\/([0-9\\._]+)/],\n    ['edge', /Edge\\/([0-9\\._]+)/],\n    ['edge-ios', /EdgiOS\\/([0-9\\._]+)/],\n    ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/],\n    ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/],\n    ['samsung', /SamsungBrowser\\/([0-9\\.]+)/],\n    ['silk', /\\bSilk\\/([0-9._-]+)\\b/],\n    ['miui', /MiuiBrowser\\/([0-9\\.]+)$/],\n    ['beaker', /BeakerBrowser\\/([0-9\\.]+)/],\n    ['edge-chromium', /EdgA?\\/([0-9\\.]+)/],\n    [\n        'chromium-webview',\n        /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/,\n    ],\n    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\n    ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/],\n    ['fxios', /FxiOS\\/([0-9\\.]+)/],\n    ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/],\n    ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/],\n    ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/],\n    ['pie', /^Microsoft Pocket Internet Explorer\\/(\\d+\\.\\d+)$/],\n    ['pie', /^Mozilla\\/\\d\\.\\d+\\s\\(compatible;\\s(?:MSP?IE|MSInternet Explorer) (\\d+\\.\\d+);.*Windows CE.*\\)$/],\n    ['netfront', /^Mozilla\\/\\d\\.\\d+.*NetFront\\/(\\d.\\d)/],\n    ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/],\n    ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],\n    ['ie', /MSIE\\s(7\\.0)/],\n    ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/],\n    ['android', /Android\\s([0-9\\.]+)/],\n    ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/],\n    ['safari', /Version\\/([0-9\\._]+).*Safari/],\n    ['facebook', /FB[AS]V\\/([0-9\\.]+)/],\n    ['instagram', /Instagram\\s([0-9\\.]+)/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/],\n    ['curl', /^curl\\/([0-9\\.]+)$/],\n    ['searchbot', SEARCHBOX_UA_REGEX],\n];\nvar operatingSystemRules = [\n    ['iOS', /iP(hone|od|ad)/],\n    ['Android OS', /Android/],\n    ['BlackBerry OS', /BlackBerry|BB10/],\n    ['Windows Mobile', /IEMobile/],\n    ['Amazon OS', /Kindle/],\n    ['Windows 3.11', /Win16/],\n    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],\n    ['Windows 98', /(Windows 98)|(Win98)/],\n    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],\n    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],\n    ['Windows Server 2003', /(Windows NT 5.2)/],\n    ['Windows Vista', /(Windows NT 6.0)/],\n    ['Windows 7', /(Windows NT 6.1)/],\n    ['Windows 8', /(Windows NT 6.2)/],\n    ['Windows 8.1', /(Windows NT 6.3)/],\n    ['Windows 10', /(Windows NT 10.0)/],\n    ['Windows ME', /Windows ME/],\n    ['Windows CE', /Windows CE|WinCE|Microsoft Pocket Internet Explorer/],\n    ['Open BSD', /OpenBSD/],\n    ['Sun OS', /SunOS/],\n    ['Chrome OS', /CrOS/],\n    ['Linux', /(Linux)|(X11)/],\n    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],\n    ['QNX', /QNX/],\n    ['BeOS', /BeOS/],\n    ['OS/2', /OS\\/2/],\n];\nexport function detect(userAgent) {\n    if (!!userAgent) {\n        return parseUserAgent(userAgent);\n    }\n    if (typeof document === 'undefined' &&\n        typeof navigator !== 'undefined' &&\n        navigator.product === 'ReactNative') {\n        return new ReactNativeInfo();\n    }\n    if (typeof navigator !== 'undefined') {\n        return parseUserAgent(navigator.userAgent);\n    }\n    return getNodeVersion();\n}\nfunction matchUserAgent(ua) {\n    // opted for using reduce here rather than Array#first with a regex.test call\n    // this is primarily because using the reduce we only perform the regex\n    // execution once rather than once for the test and for the exec again below\n    // probably something that needs to be benchmarked though\n    return (ua !== '' &&\n        userAgentRules.reduce(function (matched, _a) {\n            var browser = _a[0], regex = _a[1];\n            if (matched) {\n                return matched;\n            }\n            var uaMatch = regex.exec(ua);\n            return !!uaMatch && [browser, uaMatch];\n        }, false));\n}\nexport function browserName(ua) {\n    var data = matchUserAgent(ua);\n    return data ? data[0] : null;\n}\nexport function parseUserAgent(ua) {\n    var matchedRule = matchUserAgent(ua);\n    if (!matchedRule) {\n        return null;\n    }\n    var name = matchedRule[0], match = matchedRule[1];\n    if (name === 'searchbot') {\n        return new BotInfo();\n    }\n    // Do not use RegExp for split operation as some browser do not support it (See: http://blog.stevenlevithan.com/archives/cross-browser-split)\n    var versionParts = match[1] && match[1].split('.').join('_').split('_').slice(0, 3);\n    if (versionParts) {\n        if (versionParts.length < REQUIRED_VERSION_PARTS) {\n            versionParts = __spreadArray(__spreadArray([], versionParts, true), createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length), true);\n        }\n    }\n    else {\n        versionParts = [];\n    }\n    var version = versionParts.join('.');\n    var os = detectOS(ua);\n    var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);\n    if (searchBotMatch && searchBotMatch[1]) {\n        return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);\n    }\n    return new BrowserInfo(name, version, os);\n}\nexport function detectOS(ua) {\n    for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];\n        var match = regex.exec(ua);\n        if (match) {\n            return os;\n        }\n    }\n    return null;\n}\nexport function getNodeVersion() {\n    var isNode = typeof process !== 'undefined' && process.version;\n    return isNode ? new NodeInfo(process.version.slice(1)) : null;\n}\nfunction createVersionParts(count) {\n    var output = [];\n    for (var ii = 0; ii < count; ii++) {\n        output.push('0');\n    }\n    return output;\n}\n","import { detect } from 'detect-browser';\nimport pDefer from 'p-defer';\nimport pTimeout from 'p-timeout';\nimport { DATA_CHANNEL_DRAIN_TIMEOUT, DEFAULT_ICE_SERVERS, UFRAG_ALPHABET, UFRAG_PREFIX } from './constants.js';\nconst browser = detect();\nexport const isFirefox = ((browser != null) && browser.name === 'firefox');\nexport const nopSource = async function* nop() { };\nexport const nopSink = async (_) => { };\n// Duplex that does nothing. Needed to fulfill the interface\nexport function inertDuplex() {\n    return {\n        source: {\n            [Symbol.asyncIterator]() {\n                return {\n                    async next() {\n                        // This will never resolve\n                        return new Promise(() => { });\n                    }\n                };\n            }\n        },\n        sink: async (source) => {\n            // This will never resolve\n            return new Promise(() => { });\n        }\n    };\n}\nexport function drainAndClose(channel, direction, drainTimeout = DATA_CHANNEL_DRAIN_TIMEOUT, options) {\n    if (channel.readyState !== 'open') {\n        return;\n    }\n    void Promise.resolve()\n        .then(async () => {\n        // wait for bufferedAmount to become zero\n        if (channel.bufferedAmount > 0) {\n            options.log('%s drain channel with %d buffered bytes', direction, channel.bufferedAmount);\n            const deferred = pDefer();\n            let drained = false;\n            channel.bufferedAmountLowThreshold = 0;\n            const closeListener = () => {\n                if (!drained) {\n                    options.log('%s drain channel closed before drain', direction);\n                    deferred.resolve();\n                }\n            };\n            channel.addEventListener('close', closeListener, {\n                once: true\n            });\n            channel.addEventListener('bufferedamountlow', () => {\n                drained = true;\n                channel.removeEventListener('close', closeListener);\n                deferred.resolve();\n            });\n            await pTimeout(deferred.promise, {\n                milliseconds: drainTimeout\n            });\n        }\n    })\n        .then(async () => {\n        // only close if the channel is still open\n        if (channel.readyState === 'open') {\n            channel.close();\n        }\n    })\n        .catch(err => {\n        options.log.error('error closing outbound stream - %e', err);\n    });\n}\nexport function isPeerConnection(obj) {\n    return typeof obj.state === 'function';\n}\nexport async function getRtcConfiguration(config) {\n    config = config ?? {};\n    if (typeof config === 'function') {\n        config = await config();\n    }\n    config.iceServers = config.iceServers ?? DEFAULT_ICE_SERVERS.map(url => ({\n        urls: [\n            url\n        ]\n    }));\n    return config;\n}\nexport const genUfrag = (len = 32) => {\n    return UFRAG_PREFIX + [...Array(len)].map(() => UFRAG_ALPHABET.at(Math.floor(Math.random() * UFRAG_ALPHABET.length))).join('');\n};\n//# sourceMappingURL=util.js.map","import { StreamResetError, StreamStateError } from '@libp2p/interface';\nimport { AbstractStream } from '@libp2p/utils';\nimport * as lengthPrefixed from 'it-length-prefixed';\nimport { pushable } from 'it-pushable';\nimport { pEvent } from 'p-event';\nimport { raceSignal } from 'race-signal';\nimport { Uint8ArrayList } from 'uint8arraylist';\nimport { DEFAULT_FIN_ACK_TIMEOUT, MAX_BUFFERED_AMOUNT, MAX_MESSAGE_SIZE, PROTOBUF_OVERHEAD } from './constants.js';\nimport { Message } from './private-to-public/pb/message.js';\nimport { isFirefox } from './util.js';\nexport class WebRTCStream extends AbstractStream {\n    /**\n     * The data channel used to send and receive data\n     */\n    channel;\n    /**\n     * push data from the underlying datachannel to the length prefix decoder\n     * and then the protobuf decoder.\n     */\n    incomingData;\n    maxBufferedAmount;\n    receivedFinAck;\n    finAckTimeout;\n    constructor(init) {\n        super({\n            ...init,\n            maxMessageSize: (init.maxMessageSize ?? MAX_MESSAGE_SIZE) - PROTOBUF_OVERHEAD\n        });\n        this.channel = init.channel;\n        this.channel.binaryType = 'arraybuffer';\n        this.incomingData = pushable();\n        this.maxBufferedAmount = init.maxBufferedAmount ?? MAX_BUFFERED_AMOUNT;\n        this.finAckTimeout = init.finAckTimeout ?? DEFAULT_FIN_ACK_TIMEOUT;\n        // handle RTCDataChannel events\n        this.channel.onclose = () => {\n            this.log.trace('received datachannel close event');\n            this.onRemoteCloseWrite();\n            this.onTransportClosed();\n        };\n        this.channel.onerror = (evt) => {\n            const err = evt.error;\n            this.log.trace('received datachannel error event - %e', err);\n            this.abort(err);\n        };\n        this.channel.onmessage = async (event) => {\n            this.log('incoming message %d bytes', event.data.byteLength);\n            const { data } = event;\n            if (data === null || data.byteLength === 0) {\n                return;\n            }\n            this.incomingData.push(new Uint8Array(data, 0, data.byteLength));\n        };\n        // dispatch drain event when the buffered amount drops to zero\n        this.channel.bufferedAmountLowThreshold = 0;\n        this.channel.onbufferedamountlow = () => {\n            if (this.writableNeedsDrain) {\n                this.safeDispatchEvent('drain');\n            }\n        };\n        // pipe framed protobuf messages through a length prefixed decoder, and\n        // surface data from the `Message.message` field through a source.\n        Promise.resolve().then(async () => {\n            for await (const buf of lengthPrefixed.decode(this.incomingData)) {\n                this.processIncomingProtobuf(buf);\n            }\n        })\n            .catch(err => {\n            this.log.error('error processing incoming data channel messages - %e', err);\n        });\n        // close when both writable ends are closed or an error occurs\n        const cleanUpDatachannelOnClose = () => {\n            if (this.channel.readyState === 'open') {\n                this.log.trace('stream closed, closing underlying datachannel');\n                this.channel.close();\n            }\n        };\n        this.addEventListener('close', cleanUpDatachannelOnClose);\n        // chrome can receive message events before the open even is fired - calling\n        // code needs to attach message event listeners before these events occur\n        // but we need to wait before sending any data so this has to be done async\n        if (this.channel.readyState !== 'open') {\n            this.log('channel ready state is \"%s\" and not \"open\", waiting for \"open\" event before sending data', this.channel.readyState);\n            pEvent(this.channel, 'open', {\n                rejectionEvents: [\n                    'close',\n                    'error'\n                ]\n            })\n                .then(() => {\n                this.log('channel ready state is now \"%s\", dispatching drain', this.channel.readyState);\n                this.safeDispatchEvent('drain');\n            })\n                .catch(err => {\n                this.abort(err.error ?? err);\n            });\n        }\n    }\n    sendNewStream() {\n        // opening new streams is handled by WebRTC so this is a noop\n    }\n    _sendMessage(data) {\n        if (this.channel.readyState !== 'open') {\n            throw new StreamStateError(`Invalid datachannel state - ${this.channel.readyState}`);\n        }\n        this.log.trace('sending message, channel state \"%s\"', this.channel.readyState);\n        if (isFirefox) {\n            // TODO: firefox can deliver small messages out of order - remove once a\n            // browser with https://bugzilla.mozilla.org/show_bug.cgi?id=1983831 is\n            // available in playwright-test\n            this.channel.send(data.subarray());\n            return;\n        }\n        // send message without copying data\n        for (const buf of data) {\n            this.channel.send(buf);\n        }\n    }\n    sendData(data) {\n        if (this.channel.readyState !== 'open') {\n            return {\n                sentBytes: 0,\n                canSendMore: false\n            };\n        }\n        // TODO: firefox can deliver small messages out of order - remove once a\n        // browser with https://bugzilla.mozilla.org/show_bug.cgi?id=1983831 is\n        // available in playwright-test\n        // ----\n        // this is also necessary to work with rust-libp2p 0.54 though 0.53 seems ok\n        this._sendMessage(lengthPrefixed.encode.single(Message.encode({\n            message: data.subarray()\n        })));\n        /*\n        // TODO: enable this when FF and rust-libp2p are not broken\n        // send message without copying data\n          for (const message of data) {\n            this._sendMessage(\n              lengthPrefixed.encode.single(Message.encode({\n                message\n              }))\n            )\n          }\n        }\n        */\n        return {\n            sentBytes: data.byteLength,\n            canSendMore: this.channel.bufferedAmount < this.maxBufferedAmount\n        };\n    }\n    sendReset(err) {\n        try {\n            this.log.error('sending reset - %e', err);\n            this._sendFlag(Message.Flag.RESET);\n            this.receivedFinAck?.reject(err);\n        }\n        catch (err) {\n            this.log.error('failed to send reset - %e', err);\n        }\n    }\n    async sendCloseWrite(options) {\n        this._sendFlag(Message.Flag.FIN);\n        options?.signal?.throwIfAborted();\n        this.receivedFinAck = Promise.withResolvers();\n        // don't wait for FIN_ACK forever\n        const signal = options?.signal ?? AbortSignal.timeout(this.finAckTimeout);\n        // allow cleaning up event promises\n        const eventPromises = [\n            pEvent(this.channel, 'close', {\n                signal\n            }),\n            pEvent(this.channel, 'error', {\n                signal\n            })\n        ];\n        // wait for either:\n        // 1. the FIN_ACK to be received\n        // 2. the datachannel to close\n        // 3. timeout\n        await Promise.any([\n            raceSignal(this.receivedFinAck.promise, signal),\n            ...eventPromises\n        ])\n            .finally(() => {\n            eventPromises.forEach(p => p.cancel());\n        });\n    }\n    async sendCloseRead(options) {\n        this._sendFlag(Message.Flag.STOP_SENDING);\n        options?.signal?.throwIfAborted();\n    }\n    /**\n     * Handle incoming\n     */\n    processIncomingProtobuf(buffer) {\n        const message = Message.decode(buffer);\n        // ignore data messages if we've closed the readable end already\n        if (message.message != null && (this.readStatus === 'readable' || this.readStatus === 'paused')) {\n            this.onData(new Uint8ArrayList(message.message));\n        }\n        if (message.flag !== undefined) {\n            this.log.trace('incoming flag %s, write status \"%s\", read status \"%s\"', message.flag, this.writeStatus, this.readStatus);\n            if (message.flag === Message.Flag.FIN) {\n                // we should expect no more data from the remote, stop reading\n                this._sendFlag(Message.Flag.FIN_ACK);\n                this.onRemoteCloseWrite();\n            }\n            if (message.flag === Message.Flag.RESET) {\n                // stop reading and writing to the stream immediately\n                this.receivedFinAck?.reject(new StreamResetError('The stream was reset'));\n                this.onRemoteReset();\n            }\n            if (message.flag === Message.Flag.STOP_SENDING) {\n                // the remote has stopped reading\n                this.onRemoteCloseRead();\n            }\n            if (message.flag === Message.Flag.FIN_ACK) {\n                // remote received our FIN\n                this.receivedFinAck?.resolve();\n            }\n        }\n    }\n    _sendFlag(flag) {\n        if (this.channel.readyState !== 'open') {\n            // flags can be sent while we or the remote are closing the datachannel so\n            // if the channel isn't open, don't try to send it but return false to let\n            // the caller know and act if they need to\n            this.log.trace('not sending flag %s because channel is \"%s\" and not \"open\"', flag.toString(), this.channel.readyState);\n            return false;\n        }\n        this.log.trace('sending flag %s', flag.toString());\n        const messageBuf = Message.encode({ flag });\n        const prefixedBuf = lengthPrefixed.encode.single(messageBuf);\n        try {\n            this._sendMessage(prefixedBuf);\n            return true;\n        }\n        catch (err) {\n            this.log.error('could not send flag %s - %e', flag.toString(), err);\n        }\n        return false;\n    }\n    sendPause() {\n        // TODO: read backpressure?\n    }\n    sendResume() {\n        // TODO: read backpressure?\n    }\n}\nexport function createStream(options) {\n    const { channel, direction, isHandshake } = options;\n    return new WebRTCStream({\n        ...options,\n        id: `${channel.id}`,\n        log: options.log.newScope(`${isHandshake === true ? 'handshake' : direction}:${channel.id}`),\n        protocol: ''\n    });\n}\n//# sourceMappingURL=stream.js.map","import { AbstractStreamMuxer } from '@libp2p/utils';\nimport { MUXER_PROTOCOL } from './constants.js';\nimport { createStream, WebRTCStream } from './stream.js';\nexport class DataChannelMuxerFactory {\n    protocol;\n    /**\n     * WebRTC Peer Connection\n     */\n    peerConnection;\n    metrics;\n    dataChannelOptions;\n    earlyDataChannels;\n    constructor(init) {\n        this.onEarlyDataChannel = this.onEarlyDataChannel.bind(this);\n        this.peerConnection = init.peerConnection;\n        this.metrics = init.metrics;\n        this.protocol = init.protocol ?? MUXER_PROTOCOL;\n        this.dataChannelOptions = init.dataChannelOptions ?? {};\n        this.peerConnection.addEventListener('datachannel', this.onEarlyDataChannel);\n        this.earlyDataChannels = [];\n    }\n    onEarlyDataChannel(evt) {\n        this.earlyDataChannels.push(evt.channel);\n    }\n    createStreamMuxer(maConn) {\n        this.peerConnection.removeEventListener('datachannel', this.onEarlyDataChannel);\n        return new DataChannelMuxer(maConn, {\n            peerConnection: this.peerConnection,\n            dataChannelOptions: this.dataChannelOptions,\n            metrics: this.metrics,\n            protocol: this.protocol,\n            earlyDataChannels: this.earlyDataChannels\n        });\n    }\n}\n/**\n * A libp2p data channel stream muxer\n */\nexport class DataChannelMuxer extends AbstractStreamMuxer {\n    peerConnection;\n    dataChannelOptions;\n    constructor(maConn, init) {\n        super(maConn, {\n            ...init,\n            name: 'muxer'\n        });\n        this.peerConnection = init.peerConnection;\n        this.protocol = init.protocol ?? MUXER_PROTOCOL;\n        this.dataChannelOptions = init.dataChannelOptions ?? {};\n        /**\n         * Fired when a data channel has been added to the connection has been\n         * added by the remote peer.\n         *\n         * {@link https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/datachannel_event}\n         */\n        this.peerConnection.ondatachannel = ({ channel }) => {\n            this.onDataChannel(channel);\n        };\n        queueMicrotask(() => {\n            if (this.status !== 'open') {\n                init.earlyDataChannels.forEach(channel => {\n                    channel.close();\n                });\n                return;\n            }\n            init.earlyDataChannels.forEach(channel => {\n                this.onDataChannel(channel);\n            });\n        });\n    }\n    onDataChannel(channel) {\n        this.log('incoming datachannel with channel id %d, protocol %s and status %s', channel.id, channel.protocol, channel.readyState);\n        // 'init' channel is only used during connection establishment, it is\n        // closed by the initiator\n        if (channel.label === 'init') {\n            this.log.trace('closing init channel %d', channel.id);\n            channel.close();\n            return;\n        }\n        const stream = createStream({\n            ...this.streamOptions,\n            ...this.dataChannelOptions,\n            channel,\n            direction: 'inbound',\n            log: this.log\n        });\n        this.onRemoteStream(stream);\n    }\n    async onCreateStream(options) {\n        // The spec says the label MUST be an empty string: https://github.com/libp2p/specs/blob/master/webrtc/README.md#rtcdatachannel-label\n        const channel = this.peerConnection.createDataChannel('', {\n        // TODO: pre-negotiate stream protocol\n        // protocol: options?.protocol\n        });\n        this.log('open channel %d for protocol %s', channel.id, options?.protocol);\n        const stream = createStream({\n            ...options,\n            ...this.dataChannelOptions,\n            channel,\n            direction: 'outbound',\n            log: this.log\n        });\n        return stream;\n    }\n    onData() {\n    }\n}\n//# sourceMappingURL=muxer.js.map","import { AbstractMultiaddrConnection } from '@libp2p/utils';\nclass RTCPeerConnectionMultiaddrConnection extends AbstractMultiaddrConnection {\n    peerConnection;\n    constructor(init) {\n        super(init);\n        this.peerConnection = init.peerConnection;\n        const initialState = init.peerConnection.connectionState;\n        this.peerConnection.onconnectionstatechange = () => {\n            this.log.trace('peer connection state change %s initial state %s', this.peerConnection.connectionState, initialState);\n            if (this.peerConnection.connectionState === 'disconnected' || this.peerConnection.connectionState === 'failed' || this.peerConnection.connectionState === 'closed') {\n                // nothing else to do but close the connection\n                this.onTransportClosed();\n                // only necessary with node-datachannel\n                // https://github.com/murat-dogan/node-datachannel/issues/366#issuecomment-3228453155\n                this.peerConnection.close();\n            }\n        };\n    }\n    sendData(data) {\n        return {\n            sentBytes: data.byteLength,\n            canSendMore: true\n        };\n    }\n    async sendClose(options) {\n        this.peerConnection.close();\n        options?.signal?.throwIfAborted();\n    }\n    sendReset() {\n        this.peerConnection.close();\n    }\n    sendPause() {\n        // TODO: readable backpressure?\n    }\n    sendResume() {\n        // TODO: readable backpressure?\n    }\n}\n/**\n * Convert a RTCPeerConnection into a MultiaddrConnection\n * https://github.com/libp2p/interface-transport#multiaddrconnection\n */\nexport const toMultiaddrConnection = (init) => {\n    return new RTCPeerConnectionMultiaddrConnection(init);\n};\n//# sourceMappingURL=rtcpeerconnection-to-conn.js.map","export const RTCPeerConnection = globalThis.RTCPeerConnection;\nexport const RTCSessionDescription = globalThis.RTCSessionDescription;\nexport const RTCIceCandidate = globalThis.RTCIceCandidate;\n//# sourceMappingURL=index.browser.js.map","export class WebRTCTransportError extends Error {\n    constructor(msg) {\n        super(`WebRTC transport error: ${msg}`);\n        this.name = 'WebRTCTransportError';\n    }\n}\nexport class SDPHandshakeFailedError extends WebRTCTransportError {\n    constructor(message = 'SDP handshake failed') {\n        super(message);\n        this.name = 'SDPHandshakeFailedError';\n    }\n}\nexport class ConnectionClosedError extends WebRTCTransportError {\n    constructor(state, msg) {\n        super(`peerconnection moved to state: ${state}: ${msg}`);\n        this.name = 'WebRTC/ConnectionClosed';\n    }\n}\nexport class DataChannelError extends WebRTCTransportError {\n    constructor(streamLabel, msg) {\n        super(`[stream: ${streamLabel}] data channel error: ${msg}`);\n        this.name = 'WebRTC/DataChannelError';\n    }\n}\nexport class InappropriateMultiaddrError extends WebRTCTransportError {\n    constructor(msg) {\n        super(`There was a problem with the Multiaddr which was passed in: ${msg}`);\n        this.name = 'WebRTC/InappropriateMultiaddrError';\n    }\n}\nexport class InvalidArgumentError extends WebRTCTransportError {\n    constructor(msg) {\n        super(`There was a problem with a provided argument: ${msg}`);\n        this.name = 'WebRTC/InvalidArgumentError';\n    }\n}\nexport class InvalidFingerprintError extends WebRTCTransportError {\n    constructor(fingerprint, source) {\n        super(`Invalid fingerprint \"${fingerprint}\" within ${source}`);\n        this.name = 'WebRTC/InvalidFingerprintError';\n    }\n}\nexport class OperationAbortedError extends WebRTCTransportError {\n    constructor(context, abortReason) {\n        super(`Signalled to abort because (${abortReason}}) ${context}`);\n        this.name = 'WebRTC/OperationAbortedError';\n    }\n}\nexport class OverStreamLimitError extends WebRTCTransportError {\n    constructor(msg) {\n        super(msg);\n        this.name = 'WebRTC/OverStreamLimitError';\n    }\n}\nexport class UnimplementedError extends WebRTCTransportError {\n    constructor(methodName) {\n        super(`A method (${methodName}) was called though it has been intentionally left unimplemented.`);\n        this.name = 'WebRTC/UnimplementedError';\n    }\n}\nexport class UnsupportedHashAlgorithmError extends WebRTCTransportError {\n    constructor(algo) {\n        super(`unsupported hash algorithm code: ${algo} please see the codes at https://github.com/multiformats/multicodec/blob/master/table.csv `);\n        this.name = 'WebRTC/UnsupportedHashAlgorithmError';\n    }\n}\n//# sourceMappingURL=error.js.map","import { decodeMessage, encodeMessage, enumeration, message } from 'protons-runtime';\nexport var Message;\n(function (Message) {\n    let Type;\n    (function (Type) {\n        Type[\"SDP_OFFER\"] = \"SDP_OFFER\";\n        Type[\"SDP_ANSWER\"] = \"SDP_ANSWER\";\n        Type[\"ICE_CANDIDATE\"] = \"ICE_CANDIDATE\";\n    })(Type = Message.Type || (Message.Type = {}));\n    let __TypeValues;\n    (function (__TypeValues) {\n        __TypeValues[__TypeValues[\"SDP_OFFER\"] = 0] = \"SDP_OFFER\";\n        __TypeValues[__TypeValues[\"SDP_ANSWER\"] = 1] = \"SDP_ANSWER\";\n        __TypeValues[__TypeValues[\"ICE_CANDIDATE\"] = 2] = \"ICE_CANDIDATE\";\n    })(__TypeValues || (__TypeValues = {}));\n    (function (Type) {\n        Type.codec = () => {\n            return enumeration(__TypeValues);\n        };\n    })(Type = Message.Type || (Message.Type = {}));\n    let _codec;\n    Message.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.type != null) {\n                    w.uint32(8);\n                    Message.Type.codec().encode(obj.type, w);\n                }\n                if (obj.data != null) {\n                    w.uint32(18);\n                    w.string(obj.data);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.type = Message.Type.codec().decode(reader);\n                            break;\n                        }\n                        case 2: {\n                            obj.data = reader.string();\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    Message.encode = (obj) => {\n        return encodeMessage(obj, Message.codec());\n    };\n    Message.decode = (buf, opts) => {\n        return decodeMessage(buf, Message.codec(), opts);\n    };\n})(Message || (Message = {}));\n//# sourceMappingURL=message.js.map","import { ConnectionFailedError, InvalidMessageError, InvalidMultiaddrError } from '@libp2p/interface';\nimport { peerIdFromString } from '@libp2p/peer-id';\nimport { CustomProgressEvent } from 'progress-events';\nimport { RTCIceCandidate } from '../webrtc/index.js';\nimport { Message } from './pb/message.js';\nexport const readCandidatesUntilConnected = async (pc, stream, options) => {\n    try {\n        const connectedPromise = Promise.withResolvers();\n        resolveOnConnected(pc, connectedPromise);\n        // read candidates until we are connected or we reach the end of the stream\n        while (true) {\n            // if we connect, stop trying to read from the stream\n            const message = await Promise.race([\n                connectedPromise.promise,\n                stream.read({\n                    signal: options.signal\n                })\n            ]);\n            // stream ended or we became connected\n            if (message == null) {\n                // throw if we timed out\n                options.signal?.throwIfAborted();\n                break;\n            }\n            if (message.type !== Message.Type.ICE_CANDIDATE) {\n                throw new InvalidMessageError('ICE candidate message expected');\n            }\n            const candidateInit = JSON.parse(message.data ?? 'null');\n            // an empty string means this generation of candidates is complete, a null\n            // candidate means candidate gathering has finished\n            // see - https://www.w3.org/TR/webrtc/#rtcpeerconnectioniceevent\n            if (candidateInit === '' || candidateInit === null) {\n                options.onProgress?.(new CustomProgressEvent('webrtc:end-of-ice-candidates'));\n                options.log.trace('end-of-candidates received');\n                continue;\n            }\n            const candidate = new RTCIceCandidate(candidateInit);\n            options.log.trace('%s received new ICE candidate %o', options.direction, candidateInit);\n            try {\n                options.onProgress?.(new CustomProgressEvent('webrtc:add-ice-candidate', candidate.candidate));\n                await pc.addIceCandidate(candidate);\n            }\n            catch (err) {\n                options.log.error('%s bad candidate received %o - %e', options.direction, candidateInit, err);\n            }\n        }\n    }\n    catch (err) {\n        options.log.error('%s error parsing ICE candidate - %e', options.direction, err);\n        if (options.signal?.aborted === true && pc.connectionState !== 'connected') {\n            throw err;\n        }\n    }\n};\nfunction resolveOnConnected(pc, promise) {\n    if (pc.connectionState === 'connected') {\n        promise.resolve();\n        return;\n    }\n    pc.onconnectionstatechange = (_) => {\n        switch (pc.connectionState) {\n            case 'connected':\n                promise.resolve();\n                break;\n            case 'failed':\n            case 'disconnected':\n            case 'closed':\n                promise.reject(new ConnectionFailedError(`RTCPeerConnection connection state became \"${pc.connectionState}\"`));\n                break;\n            default:\n                break;\n        }\n    };\n}\nexport function getRemotePeer(ma) {\n    let remotePeer;\n    for (const component of ma.getComponents()) {\n        if (component.name === 'p2p') {\n            remotePeer = peerIdFromString(component.value ?? '');\n        }\n    }\n    if (remotePeer == null) {\n        throw new InvalidMultiaddrError('Remote peerId must be present in multiaddr');\n    }\n    return remotePeer;\n}\n//# sourceMappingURL=util.js.map","import { pbStream } from '@libp2p/utils';\nimport { pEvent } from 'p-event';\nimport { CustomProgressEvent } from 'progress-events';\nimport { SIGNALING_PROTOCOL } from '../constants.js';\nimport { SDPHandshakeFailedError } from '../error.js';\nimport { DataChannelMuxerFactory } from '../muxer.js';\nimport { RTCPeerConnection, RTCSessionDescription } from '../webrtc/index.js';\nimport { Message } from './pb/message.js';\nimport { splitAddr } from './transport.js';\nimport { readCandidatesUntilConnected } from './util.js';\nexport async function initiateConnection({ rtcConfiguration, dataChannel, signal, metrics, multiaddr: ma, connectionManager, transportManager, log, logger, onProgress }) {\n    const { circuitAddress, targetPeer } = splitAddr(ma);\n    metrics?.dialerEvents.increment({ open: true });\n    log.trace('dialing circuit address: %a', circuitAddress);\n    const connections = connectionManager.getConnections(targetPeer);\n    let connection;\n    if (connections.length === 0) {\n        onProgress?.(new CustomProgressEvent('webrtc:dial-relay'));\n        // use the transport manager to open a connection. Initiating a WebRTC\n        // connection takes place in the context of a dial - if we use the\n        // connection manager instead we can end up joining our own dial context\n        connection = await transportManager.dial(circuitAddress, {\n            signal,\n            onProgress\n        });\n    }\n    else {\n        onProgress?.(new CustomProgressEvent('webrtc:reuse-relay-connection'));\n        connection = connections[0];\n    }\n    onProgress?.(new CustomProgressEvent('webrtc:open-signaling-stream'));\n    const stream = await connection.newStream(SIGNALING_PROTOCOL, {\n        signal,\n        runOnLimitedConnection: true\n    });\n    const messageStream = pbStream(stream).pb(Message);\n    const peerConnection = new RTCPeerConnection(rtcConfiguration);\n    // make sure C++ peer connection is garbage collected\n    // https://github.com/murat-dogan/node-datachannel/issues/366#issuecomment-3228453155\n    peerConnection.addEventListener('connectionstatechange', () => {\n        switch (peerConnection.connectionState) {\n            case 'closed':\n                peerConnection.close();\n                break;\n            default:\n                break;\n        }\n    });\n    const muxerFactory = new DataChannelMuxerFactory({\n        // @ts-expect-error https://github.com/murat-dogan/node-datachannel/pull/370\n        peerConnection,\n        dataChannelOptions: dataChannel\n    });\n    try {\n        // we create the channel so that the RTCPeerConnection has a component for\n        // which to collect candidates. The label is not relevant to connection\n        // initiation but can be useful for debugging\n        const channel = peerConnection.createDataChannel('init');\n        // setup callback to write ICE candidates to the remote peer\n        peerConnection.onicecandidate = ({ candidate }) => {\n            if (peerConnection.connectionState === 'connected') {\n                log.trace('ignore new ice candidate as peer connection is already connected');\n                return;\n            }\n            // a null candidate means end-of-candidates, an empty string candidate\n            // means end-of-candidates for this generation, otherwise this should\n            // be a valid candidate object\n            // see - https://www.w3.org/TR/webrtc/#rtcpeerconnectioniceevent\n            if (candidate == null || candidate?.candidate === '') {\n                log.trace('initiator detected end of ICE candidates');\n                return;\n            }\n            const data = JSON.stringify(candidate?.toJSON() ?? null);\n            log.trace('initiator sending ICE candidate %o', candidate);\n            void messageStream.write({\n                type: Message.Type.ICE_CANDIDATE,\n                data\n            }, {\n                signal\n            })\n                .catch(err => {\n                log.error('error sending ICE candidate - %e', err);\n            });\n        };\n        peerConnection.onicecandidateerror = (event) => {\n            log.error('initiator ICE candidate error', event);\n        };\n        // create an offer\n        const offerSdp = await peerConnection.createOffer().catch(err => {\n            log.error('could not execute createOffer - %e', err);\n            throw new SDPHandshakeFailedError('Failed to set createOffer');\n        });\n        log.trace('initiator send SDP offer %s', offerSdp.sdp);\n        onProgress?.(new CustomProgressEvent('webrtc:send-sdp-offer'));\n        // write the offer to the stream\n        await messageStream.write({ type: Message.Type.SDP_OFFER, data: offerSdp.sdp }, {\n            signal\n        });\n        // set offer as local description\n        await peerConnection.setLocalDescription(offerSdp).catch(err => {\n            log.error('could not execute setLocalDescription - %e', err);\n            throw new SDPHandshakeFailedError('Failed to set localDescription');\n        });\n        onProgress?.(new CustomProgressEvent('webrtc:read-sdp-answer'));\n        log.trace('initiator read SDP answer');\n        // read answer\n        const answerMessage = await messageStream.read({\n            signal\n        });\n        if (answerMessage.type !== Message.Type.SDP_ANSWER) {\n            throw new SDPHandshakeFailedError('Remote should send an SDP answer');\n        }\n        log.trace('initiator received SDP answer %s', answerMessage.data);\n        const answerSdp = new RTCSessionDescription({ type: 'answer', sdp: answerMessage.data });\n        await peerConnection.setRemoteDescription(answerSdp).catch(err => {\n            log.error('could not execute setRemoteDescription - %e', err);\n            throw new SDPHandshakeFailedError('Failed to set remoteDescription');\n        });\n        log.trace('initiator read candidates until connected');\n        onProgress?.(new CustomProgressEvent('webrtc:read-ice-candidates'));\n        await readCandidatesUntilConnected(peerConnection, messageStream, {\n            direction: 'initiator',\n            signal,\n            log,\n            onProgress\n        });\n        log.trace('initiator connected');\n        if (channel.readyState !== 'open') {\n            log.trace('wait for init channel to open');\n            await pEvent(channel, 'open', {\n                signal\n            });\n        }\n        log.trace('closing init channel');\n        channel.close();\n        // wait for init channel to close before proceeding, otherwise the channel\n        // id can be reused before both sides have seen the channel close\n        log.trace('waiting for init channel to close');\n        await pEvent(channel, 'close', {\n            signal\n        });\n        onProgress?.(new CustomProgressEvent('webrtc:close-signaling-stream'));\n        log.trace('closing signaling channel');\n        await stream.close({\n            signal\n        });\n        log.trace('initiator connected to remote address %s', ma);\n        return {\n            remoteAddress: ma,\n            // @ts-expect-error https://github.com/murat-dogan/node-datachannel/pull/370\n            peerConnection,\n            muxerFactory\n        };\n    }\n    catch (err) {\n        log.error('outgoing signaling error - %e', err);\n        peerConnection.close();\n        stream.abort(err);\n        throw err;\n    }\n    finally {\n        peerConnection.onicecandidate = null;\n        peerConnection.onicecandidateerror = null;\n    }\n}\n//# sourceMappingURL=initiate-connection.js.map","import { CODE_P2P_CIRCUIT } from '@multiformats/multiaddr';\nimport { P2P } from '@multiformats/multiaddr-matcher';\nimport { fmt, code } from '@multiformats/multiaddr-matcher/utils';\nimport { TypedEventEmitter } from 'main-event';\nconst Circuit = fmt(P2P.matchers[0], code(CODE_P2P_CIRCUIT));\nexport class WebRTCPeerListener extends TypedEventEmitter {\n    transportManager;\n    shutdownController;\n    events;\n    constructor(components, init) {\n        super();\n        this.transportManager = components.transportManager;\n        this.events = components.events;\n        this.shutdownController = init.shutdownController;\n        this.onTransportListening = this.onTransportListening.bind(this);\n    }\n    async listen() {\n        this.events.addEventListener('transport:listening', this.onTransportListening);\n    }\n    onTransportListening(event) {\n        const circuitAddresses = event.detail.getAddrs()\n            .filter(ma => Circuit.exactMatch(ma))\n            .map(ma => {\n            return ma.encapsulate('/webrtc');\n        });\n        if (circuitAddresses.length > 0) {\n            this.safeDispatchEvent('listening');\n        }\n    }\n    getAddrs() {\n        return this.transportManager\n            .getListeners()\n            .filter(l => !(l instanceof WebRTCPeerListener))\n            .map(l => l.getAddrs()\n            .filter(ma => Circuit.exactMatch(ma))\n            .map(ma => {\n            return ma.encapsulate('/webrtc');\n        }))\n            .flat();\n    }\n    updateAnnounceAddrs() {\n    }\n    async close() {\n        this.events.removeEventListener('transport:listening', this.onTransportListening);\n        this.shutdownController.abort();\n        queueMicrotask(() => {\n            this.safeDispatchEvent('close');\n        });\n    }\n}\n//# sourceMappingURL=listener.js.map","import { pbStream } from '@libp2p/utils';\nimport { multiaddr } from '@multiformats/multiaddr';\nimport { SDPHandshakeFailedError } from '../error.js';\nimport { RTCSessionDescription } from '../webrtc/index.js';\nimport { Message } from './pb/message.js';\nimport { getRemotePeer, readCandidatesUntilConnected } from './util.js';\nexport async function handleIncomingStream(stream, connection, { peerConnection, signal, log }) {\n    log.trace('new inbound signaling stream');\n    const messageStream = pbStream(stream).pb(Message);\n    try {\n        // candidate callbacks\n        peerConnection.onicecandidate = ({ candidate }) => {\n            if (peerConnection.connectionState === 'connected') {\n                log.trace('ignore new ice candidate as peer connection is already connected');\n                return;\n            }\n            // a null candidate means end-of-candidates, an empty string candidate\n            // means end-of-candidates for this generation, otherwise this should\n            // be a valid candidate object\n            // see - https://www.w3.org/TR/webrtc/#rtcpeerconnectioniceevent\n            if (candidate == null || candidate?.candidate === '') {\n                log.trace('recipient detected end of ICE candidates');\n                return;\n            }\n            const data = JSON.stringify(candidate?.toJSON() ?? null);\n            log.trace('recipient sending ICE candidate %s', data);\n            messageStream.write({\n                type: Message.Type.ICE_CANDIDATE,\n                data\n            }, {\n                signal\n            })\n                .catch(err => {\n                log.error('error sending ICE candidate - %e', err);\n            });\n        };\n        log.trace('recipient read SDP offer');\n        // read an SDP offer\n        const pbOffer = await messageStream.read({\n            signal\n        });\n        if (pbOffer.type !== Message.Type.SDP_OFFER) {\n            throw new SDPHandshakeFailedError(`expected message type SDP_OFFER, received: ${pbOffer.type ?? 'undefined'} `);\n        }\n        log.trace('recipient received SDP offer %s', pbOffer.data);\n        const offer = new RTCSessionDescription({\n            type: 'offer',\n            sdp: pbOffer.data\n        });\n        await peerConnection.setRemoteDescription(offer).catch(err => {\n            log.error('could not execute setRemoteDescription - %e', err);\n            throw new SDPHandshakeFailedError('Failed to set remoteDescription');\n        });\n        // create and write an SDP answer\n        const answer = await peerConnection.createAnswer().catch(err => {\n            log.error('could not execute createAnswer - %e', err);\n            throw new SDPHandshakeFailedError('Failed to create answer');\n        });\n        log.trace('recipient send SDP answer %s', answer.sdp);\n        // write the answer to the remote\n        await messageStream.write({ type: Message.Type.SDP_ANSWER, data: answer.sdp }, {\n            signal\n        });\n        await peerConnection.setLocalDescription(answer).catch(err => {\n            log.error('could not execute setLocalDescription - %e', err);\n            throw new SDPHandshakeFailedError('Failed to set localDescription');\n        });\n        log.trace('recipient read candidates until connected');\n        // wait until candidates are connected\n        await readCandidatesUntilConnected(peerConnection, messageStream, {\n            direction: 'recipient',\n            signal,\n            log\n        });\n    }\n    catch (err) {\n        if (peerConnection.connectionState !== 'connected') {\n            log.error('error while handling signaling stream from peer %a - %e', connection.remoteAddr, err);\n            peerConnection.close();\n            throw err;\n        }\n        else {\n            log('error while handling signaling stream from peer %a, ignoring as the RTCPeerConnection is already connected', connection.remoteAddr, err);\n        }\n    }\n    const remotePeer = getRemotePeer(connection.remoteAddr);\n    const remoteAddress = multiaddr(`/webrtc/p2p/${remotePeer}`);\n    log.trace('recipient connected to remote address %s', remoteAddress);\n    return {\n        remoteAddress,\n        remotePeer\n    };\n}\n//# sourceMappingURL=signaling-stream-handler.js.map","import { InvalidParametersError, serviceCapabilities, serviceDependencies, transportSymbol } from '@libp2p/interface';\nimport { peerIdFromString } from '@libp2p/peer-id';\nimport { multiaddr } from '@multiformats/multiaddr';\nimport { WebRTC } from '@multiformats/multiaddr-matcher';\nimport { setMaxListeners } from 'main-event';\nimport { SIGNALING_PROTOCOL } from '../constants.js';\nimport { DataChannelMuxerFactory } from '../muxer.js';\nimport { toMultiaddrConnection } from \"../rtcpeerconnection-to-conn.js\";\nimport { getRtcConfiguration } from '../util.js';\nimport { RTCPeerConnection } from '../webrtc/index.js';\nimport { initiateConnection } from './initiate-connection.js';\nimport { WebRTCPeerListener } from './listener.js';\nimport { handleIncomingStream } from './signaling-stream-handler.js';\nimport { getRemotePeer } from \"./util.js\";\nexport class WebRTCTransport {\n    components;\n    init;\n    log;\n    _started = false;\n    metrics;\n    shutdownController;\n    constructor(components, init = {}) {\n        this.components = components;\n        this.init = init;\n        this.log = components.logger.forComponent('libp2p:webrtc');\n        this.shutdownController = new AbortController();\n        setMaxListeners(Infinity, this.shutdownController.signal);\n        if (components.metrics != null) {\n            this.metrics = {\n                dialerEvents: components.metrics.registerCounterGroup('libp2p_webrtc_dialer_events_total', {\n                    label: 'event',\n                    help: 'Total count of WebRTC dialer events by type'\n                }),\n                listenerEvents: components.metrics.registerCounterGroup('libp2p_webrtc_listener_events_total', {\n                    label: 'event',\n                    help: 'Total count of WebRTC listener events by type'\n                })\n            };\n        }\n    }\n    [transportSymbol] = true;\n    [Symbol.toStringTag] = '@libp2p/webrtc';\n    [serviceCapabilities] = [\n        '@libp2p/transport'\n    ];\n    [serviceDependencies] = [\n        '@libp2p/identify',\n        '@libp2p/circuit-relay-v2-transport'\n    ];\n    isStarted() {\n        return this._started;\n    }\n    async start() {\n        await this.components.registrar.handle(SIGNALING_PROTOCOL, (stream, connection) => {\n            // ensure we don't try to upgrade forever\n            const signal = this.components.upgrader.createInboundAbortSignal(this.shutdownController.signal);\n            this._onProtocol(stream, connection, signal)\n                .catch(err => {\n                this.log.error('failed to handle incoming connect from %p - %e', connection.remotePeer, err);\n            })\n                .finally(() => {\n                signal.clear();\n            });\n        }, {\n            runOnLimitedConnection: true\n        });\n        this._started = true;\n    }\n    async stop() {\n        await this.components.registrar.unhandle(SIGNALING_PROTOCOL);\n        this._started = false;\n    }\n    createListener(options) {\n        return new WebRTCPeerListener(this.components, {\n            shutdownController: this.shutdownController\n        });\n    }\n    /**\n     * Filter check for all Multiaddrs that this transport can listen on\n     */\n    listenFilter(multiaddrs) {\n        return multiaddrs.filter(WebRTC.exactMatch);\n    }\n    /**\n     * Filter check for all Multiaddrs that this transport can dial\n     */\n    dialFilter(multiaddrs) {\n        return this.listenFilter(multiaddrs);\n    }\n    /*\n     * dial connects to a remote via the circuit relay or any other protocol\n     * and proceeds to upgrade to a webrtc connection.\n     * multiaddr of the form: <multiaddr>/webrtc/p2p/<destination-peer>\n     * For a circuit relay, this will be of the form\n     * <relay address>/p2p/<relay-peer>/p2p-circuit/webrtc/p2p/<destination-peer>\n    */\n    async dial(ma, options) {\n        this.log.trace('dialing address: %a', ma);\n        const { remoteAddress, peerConnection, muxerFactory } = await initiateConnection({\n            rtcConfiguration: await getRtcConfiguration(this.init.rtcConfiguration),\n            dataChannel: this.init.dataChannel,\n            multiaddr: ma,\n            dataChannelOptions: this.init.dataChannel,\n            signal: options.signal,\n            connectionManager: this.components.connectionManager,\n            transportManager: this.components.transportManager,\n            log: this.log,\n            logger: this.components.logger,\n            onProgress: options.onProgress\n        });\n        const webRTCConn = toMultiaddrConnection({\n            peerConnection,\n            remoteAddr: remoteAddress,\n            metrics: this.metrics?.dialerEvents,\n            direction: 'outbound',\n            log: this.components.logger.forComponent('libp2p:webrtc:connection')\n        });\n        const connection = await options.upgrader.upgradeOutbound(webRTCConn, {\n            skipProtection: true,\n            skipEncryption: true,\n            remotePeer: getRemotePeer(ma),\n            muxerFactory,\n            onProgress: options.onProgress,\n            signal: options.signal\n        });\n        // close the connection on shut down\n        this._closeOnShutdown(peerConnection, webRTCConn);\n        return connection;\n    }\n    async _onProtocol(stream, connection, signal) {\n        const peerConnection = new RTCPeerConnection(await getRtcConfiguration(this.init.rtcConfiguration));\n        // make sure C++ peer connection is garbage collected\n        // https://github.com/murat-dogan/node-datachannel/issues/366#issuecomment-3228453155\n        peerConnection.addEventListener('connectionstatechange', () => {\n            switch (peerConnection.connectionState) {\n                case 'closed':\n                    peerConnection.close();\n                    break;\n                default:\n                    break;\n            }\n        });\n        const muxerFactory = new DataChannelMuxerFactory({\n            // @ts-expect-error https://github.com/murat-dogan/node-datachannel/pull/370\n            peerConnection,\n            dataChannelOptions: this.init.dataChannel\n        });\n        try {\n            const { remoteAddress, remotePeer } = await handleIncomingStream(stream, connection, {\n                peerConnection,\n                signal,\n                log: this.log\n            });\n            // close the stream if SDP messages have been exchanged successfully\n            await stream.close({\n                signal\n            });\n            const webRTCConn = toMultiaddrConnection({\n                // @ts-expect-error https://github.com/murat-dogan/node-datachannel/pull/370\n                peerConnection,\n                remoteAddr: remoteAddress,\n                metrics: this.metrics?.listenerEvents,\n                direction: 'inbound',\n                log: this.components.logger.forComponent('libp2p:webrtc:connection')\n            });\n            await this.components.upgrader.upgradeInbound(webRTCConn, {\n                skipEncryption: true,\n                skipProtection: true,\n                remotePeer,\n                muxerFactory,\n                signal\n            });\n            // close the connection on shut down\n            // @ts-expect-error https://github.com/murat-dogan/node-datachannel/pull/370\n            this._closeOnShutdown(peerConnection, webRTCConn);\n        }\n        catch (err) {\n            this.log.error('incoming signaling error - %e', err);\n            peerConnection.close();\n            stream.abort(err);\n            throw err;\n        }\n    }\n    _closeOnShutdown(pc, webRTCConn) {\n        // close the connection on shut down\n        const shutDownListener = () => {\n            webRTCConn.close()\n                .catch(err => {\n                this.log.error('could not close WebRTCMultiaddrConnection - %e', err);\n            });\n        };\n        this.shutdownController.signal.addEventListener('abort', shutDownListener);\n        pc.addEventListener('close', () => {\n            this.shutdownController.signal.removeEventListener('abort', shutDownListener);\n        });\n    }\n}\nexport function splitAddr(ma) {\n    const target = ma.getComponents()\n        .filter(({ name }) => name === 'p2p')\n        .map(({ value }) => value)\n        .pop();\n    if (target == null) {\n        throw new InvalidParametersError('Destination peer id was missing');\n    }\n    const circuitAddress = multiaddr(ma.getComponents()\n        .filter(({ name }) => name !== 'webrtc'));\n    return { circuitAddress, targetPeer: peerIdFromString(target) };\n}\n//# sourceMappingURL=transport.js.map","export const NOISE_MSG_MAX_LENGTH_BYTES = 65535;\nexport const NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG = NOISE_MSG_MAX_LENGTH_BYTES - 16;\nexport const DUMP_SESSION_KEYS = Boolean(globalThis.process?.env?.DUMP_SESSION_KEYS);\nexport const CHACHA_TAG_LENGTH = 16;\n//# sourceMappingURL=constants.js.map","/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-ciphers - MIT License (c) 2023 Paul Miller (paulmillr.com) */\n/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */\nexport function isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n/** Asserts something is boolean. */\nexport function abool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`boolean expected, not ${b}`);\n}\n/** Asserts something is positive integer. */\nexport function anumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error('positive integer expected, got ' + n);\n}\n/** Asserts something is Uint8Array. */\nexport function abytes(value, length, title = '') {\n    const bytes = isBytes(value);\n    const len = value?.length;\n    const needsLen = length !== undefined;\n    if (!bytes || (needsLen && len !== length)) {\n        const prefix = title && `\"${title}\" `;\n        const ofLen = needsLen ? ` of length ${length}` : '';\n        const got = bytes ? `length=${len}` : `type=${typeof value}`;\n        throw new Error(prefix + 'expected Uint8Array' + ofLen + ', got ' + got);\n    }\n    return value;\n}\n/** Asserts a hash instance has not been destroyed / finished */\nexport function aexists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\n/** Asserts output is properly-sized byte array */\nexport function aoutput(out, instance) {\n    abytes(out, undefined, 'output');\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error('digestInto() expects output buffer of length at least ' + min);\n    }\n}\n/** Cast u8 / u16 / u32 to u8. */\nexport function u8(arr) {\n    return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** Cast u8 / u16 / u32 to u32. */\nexport function u32(arr) {\n    return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n/** Zeroize a byte array. Warning: JS provides no guarantees. */\nexport function clean(...arrays) {\n    for (let i = 0; i < arrays.length; i++) {\n        arrays[i].fill(0);\n    }\n}\n/** Create DataView of an array for easy byte-level manipulation. */\nexport function createView(arr) {\n    return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE = /* @__PURE__ */ (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin = /* @__PURE__ */ (() => \n// @ts-ignore\ntypeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function')();\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // @ts-ignore\n    if (hasHexBuiltin)\n        return bytes.toHex();\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // @ts-ignore\n    if (hasHexBuiltin)\n        return Uint8Array.fromHex(hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n// Used in micro\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    return BigInt(hex === '' ? '0' : '0x' + hex); // Big Endian\n}\n// Used in ff1\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\n// Used in micro, ff1\nexport function numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\n/**\n * Converts string to bytes using UTF8 encoding.\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('string expected');\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(new Uint8Array([97, 98, 99])) // 'abc'\n */\nexport function bytesToUtf8(bytes) {\n    return new TextDecoder().decode(bytes);\n}\n/**\n * Checks if two U8A use same underlying buffer and overlaps.\n * This is invalid and can corrupt data.\n */\nexport function overlapBytes(a, b) {\n    return (a.buffer === b.buffer && // best we can do, may fail with an obscure Proxy\n        a.byteOffset < b.byteOffset + b.byteLength && // a starts before b end\n        b.byteOffset < a.byteOffset + a.byteLength // b starts before a end\n    );\n}\n/**\n * If input and output overlap and input starts before output, we will overwrite end of input before\n * we start processing it, so this is not supported for most ciphers (except chacha/salse, which designed with this)\n */\nexport function complexOverlapBytes(input, output) {\n    // This is very cursed. It works somehow, but I'm completely unsure,\n    // reasoning about overlapping aligned windows is very hard.\n    if (overlapBytes(input, output) && input.byteOffset < output.byteOffset)\n        throw new Error('complex overlap of input and output is not supported');\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\nexport function checkOpts(defaults, opts) {\n    if (opts == null || typeof opts !== 'object')\n        throw new Error('options must be defined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\n/** Compares 2 uint8array-s in kinda constant time. */\nexport function equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n/**\n * Wraps a cipher: validates args, ensures encrypt() can only be called once.\n * @__NO_SIDE_EFFECTS__\n */\nexport const wrapCipher = (params, constructor) => {\n    function wrappedCipher(key, ...args) {\n        // Validate key\n        abytes(key, undefined, 'key');\n        // Big-Endian hardware is rare. Just in case someone still decides to run ciphers:\n        if (!isLE)\n            throw new Error('Non little-endian hardware is not yet supported');\n        // Validate nonce if nonceLength is present\n        if (params.nonceLength !== undefined) {\n            const nonce = args[0];\n            abytes(nonce, params.varSizeNonce ? undefined : params.nonceLength, 'nonce');\n        }\n        // Validate AAD if tagLength present\n        const tagl = params.tagLength;\n        if (tagl && args[1] !== undefined)\n            abytes(args[1], undefined, 'AAD');\n        const cipher = constructor(key, ...args);\n        const checkOutput = (fnLength, output) => {\n            if (output !== undefined) {\n                if (fnLength !== 2)\n                    throw new Error('cipher output not supported');\n                abytes(output, undefined, 'output');\n            }\n        };\n        // Create wrapped cipher with validation and single-use encryption\n        let called = false;\n        const wrCipher = {\n            encrypt(data, output) {\n                if (called)\n                    throw new Error('cannot encrypt() twice with same key + nonce');\n                called = true;\n                abytes(data);\n                checkOutput(cipher.encrypt.length, output);\n                return cipher.encrypt(data, output);\n            },\n            decrypt(data, output) {\n                abytes(data);\n                if (tagl && data.length < tagl)\n                    throw new Error('\"ciphertext\" expected length bigger than tagLength=' + tagl);\n                checkOutput(cipher.decrypt.length, output);\n                return cipher.decrypt(data, output);\n            },\n        };\n        return wrCipher;\n    }\n    Object.assign(wrappedCipher, params);\n    return wrappedCipher;\n};\n/**\n * By default, returns u8a of length.\n * When out is available, it checks it for validity and uses it.\n */\nexport function getOutput(expectedLength, out, onlyAligned = true) {\n    if (out === undefined)\n        return new Uint8Array(expectedLength);\n    if (out.length !== expectedLength)\n        throw new Error('\"output\" expected Uint8Array of length ' + expectedLength + ', got: ' + out.length);\n    if (onlyAligned && !isAligned32(out))\n        throw new Error('invalid output, must be aligned');\n    return out;\n}\nexport function u64Lengths(dataLength, aadLength, isLE) {\n    abool(isLE);\n    const num = new Uint8Array(16);\n    const view = createView(num);\n    view.setBigUint64(0, BigInt(aadLength), isLE);\n    view.setBigUint64(8, BigInt(dataLength), isLE);\n    return num;\n}\n// Is byte array aligned to 4 byte offset (u32)?\nexport function isAligned32(bytes) {\n    return bytes.byteOffset % 4 === 0;\n}\n// copy bytes to new u8a (aligned). Because Buffer.slice is broken.\nexport function copyBytes(bytes) {\n    return Uint8Array.from(bytes);\n}\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32) {\n    const cr = typeof globalThis === 'object' ? globalThis.crypto : null;\n    if (typeof cr?.getRandomValues !== 'function')\n        throw new Error('crypto.getRandomValues must be defined');\n    return cr.getRandomValues(new Uint8Array(bytesLength));\n}\n/**\n * Uses CSPRG for nonce, nonce injected in ciphertext.\n * For `encrypt`, a `nonceBytes`-length buffer is fetched from CSPRNG and\n * prepended to encrypted ciphertext. For `decrypt`, first `nonceBytes` of ciphertext\n * are treated as nonce.\n *\n * NOTE: Under the same key, using random nonces (e.g. `managedNonce`) with AES-GCM and ChaCha\n * should be limited to `2**23` (8M) messages to get a collision chance of `2**-50`. Stretching to  * `2**32` (4B) messages, chance would become `2**-33` - still negligible, but creeping up.\n * @example\n * const gcm = managedNonce(aes.gcm);\n * const ciphr = gcm(key).encrypt(data);\n * const plain = gcm(key).decrypt(ciph);\n */\nexport function managedNonce(fn, randomBytes_ = randomBytes) {\n    const { nonceLength } = fn;\n    anumber(nonceLength);\n    const addNonce = (nonce, ciphertext) => {\n        const out = concatBytes(nonce, ciphertext);\n        ciphertext.fill(0);\n        return out;\n    };\n    // NOTE: we cannot support DST here, it would be mistake:\n    // - we don't know how much dst length cipher requires\n    // - nonce may unalign dst and break everything\n    // - we create new u8a anyway (concatBytes)\n    // - previously we passed all args to cipher, but that was mistake!\n    return ((key, ...args) => ({\n        encrypt(plaintext) {\n            abytes(plaintext);\n            const nonce = randomBytes_(nonceLength);\n            const encrypted = fn(key, nonce, ...args).encrypt(plaintext);\n            // @ts-ignore\n            if (encrypted instanceof Promise)\n                return encrypted.then((ct) => addNonce(nonce, ct));\n            return addNonce(nonce, encrypted);\n        },\n        decrypt(ciphertext) {\n            abytes(ciphertext);\n            const nonce = ciphertext.subarray(0, nonceLength);\n            const decrypted = ciphertext.subarray(nonceLength);\n            return fn(key, nonce, ...args).decrypt(decrypted);\n        },\n    }));\n}\n//# sourceMappingURL=utils.js.map","/**\n * Basic utils for ARX (add-rotate-xor) salsa and chacha ciphers.\n\nRFC8439 requires multi-step cipher stream, where\nauthKey starts with counter: 0, actual msg with counter: 1.\n\nFor this, we need a way to re-use nonce / counter:\n\n    const counter = new Uint8Array(4);\n    chacha(..., counter, ...); // counter is now 1\n    chacha(..., counter, ...); // counter is now 2\n\nThis is complicated:\n\n- 32-bit counters are enough, no need for 64-bit: max ArrayBuffer size in JS is 4GB\n- Original papers don't allow mutating counters\n- Counter overflow is undefined [^1]\n- Idea A: allow providing (nonce | counter) instead of just nonce, re-use it\n- Caveat: Cannot be re-used through all cases:\n- * chacha has (counter | nonce)\n- * xchacha has (nonce16 | counter | nonce16)\n- Idea B: separate nonce / counter and provide separate API for counter re-use\n- Caveat: there are different counter sizes depending on an algorithm.\n- salsa & chacha also differ in structures of key & sigma:\n  salsa20:      s[0] | k(4) | s[1] | nonce(2) | cnt(2) | s[2] | k(4) | s[3]\n  chacha:       s(4) | k(8) | cnt(1) | nonce(3)\n  chacha20orig: s(4) | k(8) | cnt(2) | nonce(2)\n- Idea C: helper method such as `setSalsaState(key, nonce, sigma, data)`\n- Caveat: we can't re-use counter array\n\nxchacha [^2] uses the subkey and remaining 8 byte nonce with ChaCha20 as normal\n(prefixed by 4 NUL bytes, since [RFC8439] specifies a 12-byte nonce).\n\n[^1]: https://mailarchive.ietf.org/arch/msg/cfrg/gsOnTJzcbgG6OqD8Sc0GO5aR_tU/\n[^2]: https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha#appendix-A.2\n\n * @module\n */\nimport { abool, abytes, anumber, checkOpts, clean, copyBytes, randomBytes, u32, } from \"./utils.js\";\n// Replaces `TextEncoder`, which is not available in all environments\nconst encodeStr = (str) => Uint8Array.from(str.split(''), (c) => c.charCodeAt(0));\nconst sigma16 = encodeStr('expand 16-byte k');\nconst sigma32 = encodeStr('expand 32-byte k');\nconst sigma16_32 = u32(sigma16);\nconst sigma32_32 = u32(sigma32);\n/** Rotate left. */\nexport function rotl(a, b) {\n    return (a << b) | (a >>> (32 - b));\n}\n// Is byte array aligned to 4 byte offset (u32)?\nfunction isAligned32(b) {\n    return b.byteOffset % 4 === 0;\n}\n// Salsa and Chacha block length is always 512-bit\nconst BLOCK_LEN = 64;\nconst BLOCK_LEN32 = 16;\n// new Uint32Array([2**32])   // => Uint32Array(1) [ 0 ]\n// new Uint32Array([2**32-1]) // => Uint32Array(1) [ 4294967295 ]\nconst MAX_COUNTER = 2 ** 32 - 1;\nconst U32_EMPTY = Uint32Array.of();\nfunction runCipher(core, sigma, key, nonce, data, output, counter, rounds) {\n    const len = data.length;\n    const block = new Uint8Array(BLOCK_LEN);\n    const b32 = u32(block);\n    // Make sure that buffers aligned to 4 bytes\n    const isAligned = isAligned32(data) && isAligned32(output);\n    const d32 = isAligned ? u32(data) : U32_EMPTY;\n    const o32 = isAligned ? u32(output) : U32_EMPTY;\n    for (let pos = 0; pos < len; counter++) {\n        core(sigma, key, nonce, b32, counter, rounds);\n        if (counter >= MAX_COUNTER)\n            throw new Error('arx: counter overflow');\n        const take = Math.min(BLOCK_LEN, len - pos);\n        // aligned to 4 bytes\n        if (isAligned && take === BLOCK_LEN) {\n            const pos32 = pos / 4;\n            if (pos % 4 !== 0)\n                throw new Error('arx: invalid block position');\n            for (let j = 0, posj; j < BLOCK_LEN32; j++) {\n                posj = pos32 + j;\n                o32[posj] = d32[posj] ^ b32[j];\n            }\n            pos += BLOCK_LEN;\n            continue;\n        }\n        for (let j = 0, posj; j < take; j++) {\n            posj = pos + j;\n            output[posj] = data[posj] ^ block[j];\n        }\n        pos += take;\n    }\n}\n/** Creates ARX-like (ChaCha, Salsa) cipher stream from core function. */\nexport function createCipher(core, opts) {\n    const { allowShortKeys, extendNonceFn, counterLength, counterRight, rounds } = checkOpts({ allowShortKeys: false, counterLength: 8, counterRight: false, rounds: 20 }, opts);\n    if (typeof core !== 'function')\n        throw new Error('core must be a function');\n    anumber(counterLength);\n    anumber(rounds);\n    abool(counterRight);\n    abool(allowShortKeys);\n    return (key, nonce, data, output, counter = 0) => {\n        abytes(key, undefined, 'key');\n        abytes(nonce, undefined, 'nonce');\n        abytes(data, undefined, 'data');\n        const len = data.length;\n        if (output === undefined)\n            output = new Uint8Array(len);\n        abytes(output, undefined, 'output');\n        anumber(counter);\n        if (counter < 0 || counter >= MAX_COUNTER)\n            throw new Error('arx: counter overflow');\n        if (output.length < len)\n            throw new Error(`arx: output (${output.length}) is shorter than data (${len})`);\n        const toClean = [];\n        // Key & sigma\n        // key=16 -> sigma16, k=key|key\n        // key=32 -> sigma32, k=key\n        let l = key.length;\n        let k;\n        let sigma;\n        if (l === 32) {\n            toClean.push((k = copyBytes(key)));\n            sigma = sigma32_32;\n        }\n        else if (l === 16 && allowShortKeys) {\n            k = new Uint8Array(32);\n            k.set(key);\n            k.set(key, 16);\n            sigma = sigma16_32;\n            toClean.push(k);\n        }\n        else {\n            abytes(key, 32, 'arx key');\n            throw new Error('invalid key size');\n            // throw new Error(`\"arx key\" expected Uint8Array of length 32, got length=${l}`);\n        }\n        // Nonce\n        // salsa20:      8   (8-byte counter)\n        // chacha20orig: 8   (8-byte counter)\n        // chacha20:     12  (4-byte counter)\n        // xsalsa20:     24  (16 -> hsalsa,  8 -> old nonce)\n        // xchacha20:    24  (16 -> hchacha, 8 -> old nonce)\n        // Align nonce to 4 bytes\n        if (!isAligned32(nonce))\n            toClean.push((nonce = copyBytes(nonce)));\n        const k32 = u32(k);\n        // hsalsa & hchacha: handle extended nonce\n        if (extendNonceFn) {\n            if (nonce.length !== 24)\n                throw new Error(`arx: extended nonce must be 24 bytes`);\n            extendNonceFn(sigma, k32, u32(nonce.subarray(0, 16)), k32);\n            nonce = nonce.subarray(16);\n        }\n        // Handle nonce counter\n        const nonceNcLen = 16 - counterLength;\n        if (nonceNcLen !== nonce.length)\n            throw new Error(`arx: nonce must be ${nonceNcLen} or 16 bytes`);\n        // Pad counter when nonce is 64 bit\n        if (nonceNcLen !== 12) {\n            const nc = new Uint8Array(12);\n            nc.set(nonce, counterRight ? 0 : 12 - nonce.length);\n            nonce = nc;\n            toClean.push(nonce);\n        }\n        const n32 = u32(nonce);\n        runCipher(core, sigma, k32, n32, data, output, counter, rounds);\n        clean(...toClean);\n        return output;\n    };\n}\n/** Internal class which wraps chacha20 or chacha8 to create CSPRNG. */\nexport class _XorStreamPRG {\n    blockLen;\n    keyLen;\n    nonceLen;\n    state;\n    buf;\n    key;\n    nonce;\n    pos;\n    ctr;\n    cipher;\n    constructor(cipher, blockLen, keyLen, nonceLen, seed) {\n        this.cipher = cipher;\n        this.blockLen = blockLen;\n        this.keyLen = keyLen;\n        this.nonceLen = nonceLen;\n        this.state = new Uint8Array(this.keyLen + this.nonceLen);\n        this.reseed(seed);\n        this.ctr = 0;\n        this.pos = this.blockLen;\n        this.buf = new Uint8Array(this.blockLen);\n        this.key = this.state.subarray(0, this.keyLen);\n        this.nonce = this.state.subarray(this.keyLen);\n    }\n    reseed(seed) {\n        abytes(seed);\n        if (!seed || seed.length === 0)\n            throw new Error('entropy required');\n        for (let i = 0; i < seed.length; i++)\n            this.state[i % this.state.length] ^= seed[i];\n        this.ctr = 0;\n        this.pos = this.blockLen;\n    }\n    addEntropy(seed) {\n        this.state.set(this.randomBytes(this.state.length));\n        this.reseed(seed);\n    }\n    randomBytes(len) {\n        anumber(len);\n        if (len === 0)\n            return new Uint8Array(0);\n        const out = new Uint8Array(len);\n        let outPos = 0;\n        // Leftovers\n        if (this.pos < this.blockLen) {\n            const take = Math.min(len, this.blockLen - this.pos);\n            out.set(this.buf.subarray(this.pos, this.pos + take), 0);\n            this.pos += take;\n            outPos += take;\n            if (outPos === len)\n                return out; // fast path\n        }\n        // Full blocks directly to out\n        const blocks = Math.floor((len - outPos) / this.blockLen);\n        if (blocks > 0) {\n            const blockBytes = blocks * this.blockLen;\n            const b = out.subarray(outPos, outPos + blockBytes);\n            this.cipher(this.key, this.nonce, b, b, this.ctr);\n            this.ctr += blocks;\n            outPos += blockBytes;\n        }\n        // Save leftovers\n        const left = len - outPos;\n        if (left > 0) {\n            this.buf.fill(0);\n            // NOTE: cipher will handle overflow\n            this.cipher(this.key, this.nonce, this.buf, this.buf, this.ctr++);\n            out.set(this.buf.subarray(0, left), outPos);\n            this.pos = left;\n        }\n        return out;\n    }\n    clone() {\n        return new _XorStreamPRG(this.cipher, this.blockLen, this.keyLen, this.nonceLen, this.randomBytes(this.state.length));\n    }\n    clean() {\n        this.pos = 0;\n        this.ctr = 0;\n        this.buf.fill(0);\n        this.state.fill(0);\n    }\n}\nexport const createPRG = (cipher, blockLen, keyLen, nonceLen) => {\n    return (seed = randomBytes(32)) => new _XorStreamPRG(cipher, blockLen, keyLen, nonceLen, seed);\n};\n//# sourceMappingURL=_arx.js.map","/**\n * Poly1305 ([PDF](https://cr.yp.to/mac/poly1305-20050329.pdf),\n * [wiki](https://en.wikipedia.org/wiki/Poly1305))\n * is a fast and parallel secret-key message-authentication code suitable for\n * a wide variety of applications. It was standardized in\n * [RFC 8439](https://www.rfc-editor.org/rfc/rfc8439) and is now used in TLS 1.3.\n *\n * Polynomial MACs are not perfect for every situation:\n * they lack Random Key Robustness: the MAC can be forged, and can't be used in PAKE schemes.\n * See [invisible salamanders attack](https://keymaterial.net/2020/09/07/invisible-salamanders-in-aes-gcm-siv/).\n * To combat invisible salamanders, `hash(key)` can be included in ciphertext,\n * however, this would violate ciphertext indistinguishability:\n * an attacker would know which key was used - so `HKDF(key, i)`\n * could be used instead.\n *\n * Check out [original website](https://cr.yp.to/mac.html).\n * Based on Public Domain [poly1305-donna](https://github.com/floodyberry/poly1305-donna).\n * @module\n */\n// prettier-ignore\nimport { abytes, aexists, aoutput, bytesToHex, clean, concatBytes, copyBytes, hexToNumber, numberToBytesBE } from \"./utils.js\";\nfunction u8to16(a, i) {\n    return (a[i++] & 0xff) | ((a[i++] & 0xff) << 8);\n}\nfunction bytesToNumberLE(bytes) {\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\n/** Small version of `poly1305` without loop unrolling. Unused, provided for auditability. */\nfunction poly1305_small(msg, key) {\n    abytes(msg);\n    abytes(key, 32, 'key');\n    const POW_2_130_5 = BigInt(2) ** BigInt(130) - BigInt(5); // 2^130-5\n    const POW_2_128_1 = BigInt(2) ** BigInt(128) - BigInt(1); // 2^128-1\n    const CLAMP_R = BigInt('0x0ffffffc0ffffffc0ffffffc0fffffff');\n    const r = bytesToNumberLE(key.subarray(0, 16)) & CLAMP_R;\n    const s = bytesToNumberLE(key.subarray(16));\n    // Process by 16 byte chunks\n    let acc = BigInt(0);\n    for (let i = 0; i < msg.length; i += 16) {\n        const m = msg.subarray(i, i + 16);\n        const n = bytesToNumberLE(m) | (BigInt(1) << BigInt(8 * m.length));\n        acc = ((acc + n) * r) % POW_2_130_5;\n    }\n    const res = (acc + s) & POW_2_128_1;\n    return numberToBytesBE(res, 16).reverse(); // LE\n}\n// Can be used to replace `computeTag` in chacha.ts. Unused, provided for auditability.\n// @ts-expect-error\nfunction poly1305_computeTag_small(authKey, lengths, ciphertext, AAD) {\n    const res = [];\n    const updatePadded2 = (msg) => {\n        res.push(msg);\n        const leftover = msg.length % 16;\n        if (leftover)\n            res.push(new Uint8Array(16).slice(leftover));\n    };\n    if (AAD)\n        updatePadded2(AAD);\n    updatePadded2(ciphertext);\n    res.push(lengths);\n    return poly1305_small(concatBytes(...res), authKey);\n}\n/** Poly1305 class. Prefer poly1305() function instead. */\nexport class Poly1305 {\n    blockLen = 16;\n    outputLen = 16;\n    buffer = new Uint8Array(16);\n    r = new Uint16Array(10); // Allocating 1 array with .subarray() here is slower than 3\n    h = new Uint16Array(10);\n    pad = new Uint16Array(8);\n    pos = 0;\n    finished = false;\n    // Can be speed-up using BigUint64Array, at the cost of complexity\n    constructor(key) {\n        key = copyBytes(abytes(key, 32, 'key'));\n        const t0 = u8to16(key, 0);\n        const t1 = u8to16(key, 2);\n        const t2 = u8to16(key, 4);\n        const t3 = u8to16(key, 6);\n        const t4 = u8to16(key, 8);\n        const t5 = u8to16(key, 10);\n        const t6 = u8to16(key, 12);\n        const t7 = u8to16(key, 14);\n        // https://github.com/floodyberry/poly1305-donna/blob/e6ad6e091d30d7f4ec2d4f978be1fcfcbce72781/poly1305-donna-16.h#L47\n        this.r[0] = t0 & 0x1fff;\n        this.r[1] = ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n        this.r[2] = ((t1 >>> 10) | (t2 << 6)) & 0x1f03;\n        this.r[3] = ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n        this.r[4] = ((t3 >>> 4) | (t4 << 12)) & 0x00ff;\n        this.r[5] = (t4 >>> 1) & 0x1ffe;\n        this.r[6] = ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n        this.r[7] = ((t5 >>> 11) | (t6 << 5)) & 0x1f81;\n        this.r[8] = ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n        this.r[9] = (t7 >>> 5) & 0x007f;\n        for (let i = 0; i < 8; i++)\n            this.pad[i] = u8to16(key, 16 + 2 * i);\n    }\n    process(data, offset, isLast = false) {\n        const hibit = isLast ? 0 : 1 << 11;\n        const { h, r } = this;\n        const r0 = r[0];\n        const r1 = r[1];\n        const r2 = r[2];\n        const r3 = r[3];\n        const r4 = r[4];\n        const r5 = r[5];\n        const r6 = r[6];\n        const r7 = r[7];\n        const r8 = r[8];\n        const r9 = r[9];\n        const t0 = u8to16(data, offset + 0);\n        const t1 = u8to16(data, offset + 2);\n        const t2 = u8to16(data, offset + 4);\n        const t3 = u8to16(data, offset + 6);\n        const t4 = u8to16(data, offset + 8);\n        const t5 = u8to16(data, offset + 10);\n        const t6 = u8to16(data, offset + 12);\n        const t7 = u8to16(data, offset + 14);\n        let h0 = h[0] + (t0 & 0x1fff);\n        let h1 = h[1] + (((t0 >>> 13) | (t1 << 3)) & 0x1fff);\n        let h2 = h[2] + (((t1 >>> 10) | (t2 << 6)) & 0x1fff);\n        let h3 = h[3] + (((t2 >>> 7) | (t3 << 9)) & 0x1fff);\n        let h4 = h[4] + (((t3 >>> 4) | (t4 << 12)) & 0x1fff);\n        let h5 = h[5] + ((t4 >>> 1) & 0x1fff);\n        let h6 = h[6] + (((t4 >>> 14) | (t5 << 2)) & 0x1fff);\n        let h7 = h[7] + (((t5 >>> 11) | (t6 << 5)) & 0x1fff);\n        let h8 = h[8] + (((t6 >>> 8) | (t7 << 8)) & 0x1fff);\n        let h9 = h[9] + ((t7 >>> 5) | hibit);\n        let c = 0;\n        let d0 = c + h0 * r0 + h1 * (5 * r9) + h2 * (5 * r8) + h3 * (5 * r7) + h4 * (5 * r6);\n        c = d0 >>> 13;\n        d0 &= 0x1fff;\n        d0 += h5 * (5 * r5) + h6 * (5 * r4) + h7 * (5 * r3) + h8 * (5 * r2) + h9 * (5 * r1);\n        c += d0 >>> 13;\n        d0 &= 0x1fff;\n        let d1 = c + h0 * r1 + h1 * r0 + h2 * (5 * r9) + h3 * (5 * r8) + h4 * (5 * r7);\n        c = d1 >>> 13;\n        d1 &= 0x1fff;\n        d1 += h5 * (5 * r6) + h6 * (5 * r5) + h7 * (5 * r4) + h8 * (5 * r3) + h9 * (5 * r2);\n        c += d1 >>> 13;\n        d1 &= 0x1fff;\n        let d2 = c + h0 * r2 + h1 * r1 + h2 * r0 + h3 * (5 * r9) + h4 * (5 * r8);\n        c = d2 >>> 13;\n        d2 &= 0x1fff;\n        d2 += h5 * (5 * r7) + h6 * (5 * r6) + h7 * (5 * r5) + h8 * (5 * r4) + h9 * (5 * r3);\n        c += d2 >>> 13;\n        d2 &= 0x1fff;\n        let d3 = c + h0 * r3 + h1 * r2 + h2 * r1 + h3 * r0 + h4 * (5 * r9);\n        c = d3 >>> 13;\n        d3 &= 0x1fff;\n        d3 += h5 * (5 * r8) + h6 * (5 * r7) + h7 * (5 * r6) + h8 * (5 * r5) + h9 * (5 * r4);\n        c += d3 >>> 13;\n        d3 &= 0x1fff;\n        let d4 = c + h0 * r4 + h1 * r3 + h2 * r2 + h3 * r1 + h4 * r0;\n        c = d4 >>> 13;\n        d4 &= 0x1fff;\n        d4 += h5 * (5 * r9) + h6 * (5 * r8) + h7 * (5 * r7) + h8 * (5 * r6) + h9 * (5 * r5);\n        c += d4 >>> 13;\n        d4 &= 0x1fff;\n        let d5 = c + h0 * r5 + h1 * r4 + h2 * r3 + h3 * r2 + h4 * r1;\n        c = d5 >>> 13;\n        d5 &= 0x1fff;\n        d5 += h5 * r0 + h6 * (5 * r9) + h7 * (5 * r8) + h8 * (5 * r7) + h9 * (5 * r6);\n        c += d5 >>> 13;\n        d5 &= 0x1fff;\n        let d6 = c + h0 * r6 + h1 * r5 + h2 * r4 + h3 * r3 + h4 * r2;\n        c = d6 >>> 13;\n        d6 &= 0x1fff;\n        d6 += h5 * r1 + h6 * r0 + h7 * (5 * r9) + h8 * (5 * r8) + h9 * (5 * r7);\n        c += d6 >>> 13;\n        d6 &= 0x1fff;\n        let d7 = c + h0 * r7 + h1 * r6 + h2 * r5 + h3 * r4 + h4 * r3;\n        c = d7 >>> 13;\n        d7 &= 0x1fff;\n        d7 += h5 * r2 + h6 * r1 + h7 * r0 + h8 * (5 * r9) + h9 * (5 * r8);\n        c += d7 >>> 13;\n        d7 &= 0x1fff;\n        let d8 = c + h0 * r8 + h1 * r7 + h2 * r6 + h3 * r5 + h4 * r4;\n        c = d8 >>> 13;\n        d8 &= 0x1fff;\n        d8 += h5 * r3 + h6 * r2 + h7 * r1 + h8 * r0 + h9 * (5 * r9);\n        c += d8 >>> 13;\n        d8 &= 0x1fff;\n        let d9 = c + h0 * r9 + h1 * r8 + h2 * r7 + h3 * r6 + h4 * r5;\n        c = d9 >>> 13;\n        d9 &= 0x1fff;\n        d9 += h5 * r4 + h6 * r3 + h7 * r2 + h8 * r1 + h9 * r0;\n        c += d9 >>> 13;\n        d9 &= 0x1fff;\n        c = ((c << 2) + c) | 0;\n        c = (c + d0) | 0;\n        d0 = c & 0x1fff;\n        c = c >>> 13;\n        d1 += c;\n        h[0] = d0;\n        h[1] = d1;\n        h[2] = d2;\n        h[3] = d3;\n        h[4] = d4;\n        h[5] = d5;\n        h[6] = d6;\n        h[7] = d7;\n        h[8] = d8;\n        h[9] = d9;\n    }\n    finalize() {\n        const { h, pad } = this;\n        const g = new Uint16Array(10);\n        let c = h[1] >>> 13;\n        h[1] &= 0x1fff;\n        for (let i = 2; i < 10; i++) {\n            h[i] += c;\n            c = h[i] >>> 13;\n            h[i] &= 0x1fff;\n        }\n        h[0] += c * 5;\n        c = h[0] >>> 13;\n        h[0] &= 0x1fff;\n        h[1] += c;\n        c = h[1] >>> 13;\n        h[1] &= 0x1fff;\n        h[2] += c;\n        g[0] = h[0] + 5;\n        c = g[0] >>> 13;\n        g[0] &= 0x1fff;\n        for (let i = 1; i < 10; i++) {\n            g[i] = h[i] + c;\n            c = g[i] >>> 13;\n            g[i] &= 0x1fff;\n        }\n        g[9] -= 1 << 13;\n        let mask = (c ^ 1) - 1;\n        for (let i = 0; i < 10; i++)\n            g[i] &= mask;\n        mask = ~mask;\n        for (let i = 0; i < 10; i++)\n            h[i] = (h[i] & mask) | g[i];\n        h[0] = (h[0] | (h[1] << 13)) & 0xffff;\n        h[1] = ((h[1] >>> 3) | (h[2] << 10)) & 0xffff;\n        h[2] = ((h[2] >>> 6) | (h[3] << 7)) & 0xffff;\n        h[3] = ((h[3] >>> 9) | (h[4] << 4)) & 0xffff;\n        h[4] = ((h[4] >>> 12) | (h[5] << 1) | (h[6] << 14)) & 0xffff;\n        h[5] = ((h[6] >>> 2) | (h[7] << 11)) & 0xffff;\n        h[6] = ((h[7] >>> 5) | (h[8] << 8)) & 0xffff;\n        h[7] = ((h[8] >>> 8) | (h[9] << 5)) & 0xffff;\n        let f = h[0] + pad[0];\n        h[0] = f & 0xffff;\n        for (let i = 1; i < 8; i++) {\n            f = (((h[i] + pad[i]) | 0) + (f >>> 16)) | 0;\n            h[i] = f & 0xffff;\n        }\n        clean(g);\n    }\n    update(data) {\n        aexists(this);\n        abytes(data);\n        data = copyBytes(data);\n        const { buffer, blockLen } = this;\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input\n            if (take === blockLen) {\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(data, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(buffer, 0, false);\n                this.pos = 0;\n            }\n        }\n        return this;\n    }\n    destroy() {\n        clean(this.h, this.r, this.buffer, this.pad);\n    }\n    digestInto(out) {\n        aexists(this);\n        aoutput(out, this);\n        this.finished = true;\n        const { buffer, h } = this;\n        let { pos } = this;\n        if (pos) {\n            buffer[pos++] = 1;\n            for (; pos < 16; pos++)\n                buffer[pos] = 0;\n            this.process(buffer, 0, true);\n        }\n        this.finalize();\n        let opos = 0;\n        for (let i = 0; i < 8; i++) {\n            out[opos++] = h[i] >>> 0;\n            out[opos++] = h[i] >>> 8;\n        }\n        return out;\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n}\nexport function wrapConstructorWithKey(hashCons) {\n    const hashC = (msg, key) => hashCons(key).update(msg).digest();\n    const tmp = hashCons(new Uint8Array(32)); // tmp array, used just once below\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (key) => hashCons(key);\n    return hashC;\n}\n/** Poly1305 MAC from RFC 8439. */\nexport const poly1305 = /** @__PURE__ */ (() => wrapConstructorWithKey((key) => new Poly1305(key)))();\n//# sourceMappingURL=_poly1305.js.map","/**\n * ChaCha stream cipher, released\n * in 2008. Developed after Salsa20, ChaCha aims to increase diffusion per round.\n * It was standardized in [RFC 8439](https://www.rfc-editor.org/rfc/rfc8439) and\n * is now used in TLS 1.3.\n *\n * [XChaCha20](https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha)\n * extended-nonce variant is also provided. Similar to XSalsa, it's safe to use with\n * randomly-generated nonces.\n *\n * Check out [PDF](http://cr.yp.to/chacha/chacha-20080128.pdf) and\n * [wiki](https://en.wikipedia.org/wiki/Salsa20) and\n * [website](https://cr.yp.to/chacha.html).\n *\n * @module\n */\nimport { createCipher, createPRG, rotl } from \"./_arx.js\";\nimport { poly1305 } from \"./_poly1305.js\";\nimport { abytes, clean, equalBytes, getOutput, u64Lengths, wrapCipher, } from \"./utils.js\";\n/**\n * ChaCha core function. It is implemented twice:\n * 1. Simple loop (chachaCore_small, hchacha_small)\n * 2. Unrolled loop (chachaCore, hchacha) - 4x faster, but larger & harder to read\n * The specific implementation is selected in `createCipher` below.\n */\n/** quarter-round */\n// prettier-ignore\nfunction chachaQR(x, a, b, c, d) {\n    x[a] = (x[a] + x[b]) | 0;\n    x[d] = rotl(x[d] ^ x[a], 16);\n    x[c] = (x[c] + x[d]) | 0;\n    x[b] = rotl(x[b] ^ x[c], 12);\n    x[a] = (x[a] + x[b]) | 0;\n    x[d] = rotl(x[d] ^ x[a], 8);\n    x[c] = (x[c] + x[d]) | 0;\n    x[b] = rotl(x[b] ^ x[c], 7);\n}\n/** single round */\nfunction chachaRound(x, rounds = 20) {\n    for (let r = 0; r < rounds; r += 2) {\n        chachaQR(x, 0, 4, 8, 12);\n        chachaQR(x, 1, 5, 9, 13);\n        chachaQR(x, 2, 6, 10, 14);\n        chachaQR(x, 3, 7, 11, 15);\n        chachaQR(x, 0, 5, 10, 15);\n        chachaQR(x, 1, 6, 11, 12);\n        chachaQR(x, 2, 7, 8, 13);\n        chachaQR(x, 3, 4, 9, 14);\n    }\n}\nconst ctmp = /* @__PURE__ */ new Uint32Array(16);\n/** Small version of chacha without loop unrolling. Unused, provided for auditability. */\n// prettier-ignore\nfunction chacha(s, k, i, out, isHChacha = true, rounds = 20) {\n    // Create initial array using common pattern\n    const y = Uint32Array.from([\n        s[0], s[1], s[2], s[3], // \"expa\"   \"nd 3\"  \"2-by\"  \"te k\"\n        k[0], k[1], k[2], k[3], // Key      Key     Key     Key\n        k[4], k[5], k[6], k[7], // Key      Key     Key     Key\n        i[0], i[1], i[2], i[3], // Counter  Counter Nonce   Nonce\n    ]);\n    const x = ctmp;\n    x.set(y);\n    chachaRound(x, rounds);\n    // hchacha extracts 8 specific bytes, chacha adds orig to result\n    if (isHChacha) {\n        const xindexes = [0, 1, 2, 3, 12, 13, 14, 15];\n        for (let i = 0; i < 8; i++)\n            out[i] = x[xindexes[i]];\n    }\n    else {\n        for (let i = 0; i < 16; i++)\n            out[i] = (y[i] + x[i]) | 0;\n    }\n}\n/** Identical to `chachaCore`. Unused. */\n// @ts-ignore\nconst chachaCore_small = (s, k, n, out, cnt, rounds) => chacha(s, k, Uint32Array.from([n[0], n[1], cnt, 0]), out, false, rounds);\n/** Identical to `hchacha`. Unused. */\n// @ts-ignore\nconst hchacha_small = chacha;\n/** Identical to `chachaCore_small`. Unused. */\n// prettier-ignore\nfunction chachaCore(s, k, n, out, cnt, rounds = 20) {\n    let y00 = s[0], y01 = s[1], y02 = s[2], y03 = s[3], // \"expa\"   \"nd 3\"  \"2-by\"  \"te k\"\n    y04 = k[0], y05 = k[1], y06 = k[2], y07 = k[3], // Key      Key     Key     Key\n    y08 = k[4], y09 = k[5], y10 = k[6], y11 = k[7], // Key      Key     Key     Key\n    y12 = cnt, y13 = n[0], y14 = n[1], y15 = n[2]; // Counter  Counter\tNonce   Nonce\n    // Save state to temporary variables\n    let x00 = y00, x01 = y01, x02 = y02, x03 = y03, x04 = y04, x05 = y05, x06 = y06, x07 = y07, x08 = y08, x09 = y09, x10 = y10, x11 = y11, x12 = y12, x13 = y13, x14 = y14, x15 = y15;\n    for (let r = 0; r < rounds; r += 2) {\n        x00 = (x00 + x04) | 0;\n        x12 = rotl(x12 ^ x00, 16);\n        x08 = (x08 + x12) | 0;\n        x04 = rotl(x04 ^ x08, 12);\n        x00 = (x00 + x04) | 0;\n        x12 = rotl(x12 ^ x00, 8);\n        x08 = (x08 + x12) | 0;\n        x04 = rotl(x04 ^ x08, 7);\n        x01 = (x01 + x05) | 0;\n        x13 = rotl(x13 ^ x01, 16);\n        x09 = (x09 + x13) | 0;\n        x05 = rotl(x05 ^ x09, 12);\n        x01 = (x01 + x05) | 0;\n        x13 = rotl(x13 ^ x01, 8);\n        x09 = (x09 + x13) | 0;\n        x05 = rotl(x05 ^ x09, 7);\n        x02 = (x02 + x06) | 0;\n        x14 = rotl(x14 ^ x02, 16);\n        x10 = (x10 + x14) | 0;\n        x06 = rotl(x06 ^ x10, 12);\n        x02 = (x02 + x06) | 0;\n        x14 = rotl(x14 ^ x02, 8);\n        x10 = (x10 + x14) | 0;\n        x06 = rotl(x06 ^ x10, 7);\n        x03 = (x03 + x07) | 0;\n        x15 = rotl(x15 ^ x03, 16);\n        x11 = (x11 + x15) | 0;\n        x07 = rotl(x07 ^ x11, 12);\n        x03 = (x03 + x07) | 0;\n        x15 = rotl(x15 ^ x03, 8);\n        x11 = (x11 + x15) | 0;\n        x07 = rotl(x07 ^ x11, 7);\n        x00 = (x00 + x05) | 0;\n        x15 = rotl(x15 ^ x00, 16);\n        x10 = (x10 + x15) | 0;\n        x05 = rotl(x05 ^ x10, 12);\n        x00 = (x00 + x05) | 0;\n        x15 = rotl(x15 ^ x00, 8);\n        x10 = (x10 + x15) | 0;\n        x05 = rotl(x05 ^ x10, 7);\n        x01 = (x01 + x06) | 0;\n        x12 = rotl(x12 ^ x01, 16);\n        x11 = (x11 + x12) | 0;\n        x06 = rotl(x06 ^ x11, 12);\n        x01 = (x01 + x06) | 0;\n        x12 = rotl(x12 ^ x01, 8);\n        x11 = (x11 + x12) | 0;\n        x06 = rotl(x06 ^ x11, 7);\n        x02 = (x02 + x07) | 0;\n        x13 = rotl(x13 ^ x02, 16);\n        x08 = (x08 + x13) | 0;\n        x07 = rotl(x07 ^ x08, 12);\n        x02 = (x02 + x07) | 0;\n        x13 = rotl(x13 ^ x02, 8);\n        x08 = (x08 + x13) | 0;\n        x07 = rotl(x07 ^ x08, 7);\n        x03 = (x03 + x04) | 0;\n        x14 = rotl(x14 ^ x03, 16);\n        x09 = (x09 + x14) | 0;\n        x04 = rotl(x04 ^ x09, 12);\n        x03 = (x03 + x04) | 0;\n        x14 = rotl(x14 ^ x03, 8);\n        x09 = (x09 + x14) | 0;\n        x04 = rotl(x04 ^ x09, 7);\n    }\n    // Write output\n    let oi = 0;\n    out[oi++] = (y00 + x00) | 0;\n    out[oi++] = (y01 + x01) | 0;\n    out[oi++] = (y02 + x02) | 0;\n    out[oi++] = (y03 + x03) | 0;\n    out[oi++] = (y04 + x04) | 0;\n    out[oi++] = (y05 + x05) | 0;\n    out[oi++] = (y06 + x06) | 0;\n    out[oi++] = (y07 + x07) | 0;\n    out[oi++] = (y08 + x08) | 0;\n    out[oi++] = (y09 + x09) | 0;\n    out[oi++] = (y10 + x10) | 0;\n    out[oi++] = (y11 + x11) | 0;\n    out[oi++] = (y12 + x12) | 0;\n    out[oi++] = (y13 + x13) | 0;\n    out[oi++] = (y14 + x14) | 0;\n    out[oi++] = (y15 + x15) | 0;\n}\n/**\n * hchacha hashes key and nonce into key' and nonce' for xchacha20.\n * Identical to `hchacha_small`.\n * Need to find a way to merge it with `chachaCore` without 25% performance hit.\n */\n// prettier-ignore\nexport function hchacha(s, k, i, out) {\n    let x00 = s[0], x01 = s[1], x02 = s[2], x03 = s[3], x04 = k[0], x05 = k[1], x06 = k[2], x07 = k[3], x08 = k[4], x09 = k[5], x10 = k[6], x11 = k[7], x12 = i[0], x13 = i[1], x14 = i[2], x15 = i[3];\n    for (let r = 0; r < 20; r += 2) {\n        x00 = (x00 + x04) | 0;\n        x12 = rotl(x12 ^ x00, 16);\n        x08 = (x08 + x12) | 0;\n        x04 = rotl(x04 ^ x08, 12);\n        x00 = (x00 + x04) | 0;\n        x12 = rotl(x12 ^ x00, 8);\n        x08 = (x08 + x12) | 0;\n        x04 = rotl(x04 ^ x08, 7);\n        x01 = (x01 + x05) | 0;\n        x13 = rotl(x13 ^ x01, 16);\n        x09 = (x09 + x13) | 0;\n        x05 = rotl(x05 ^ x09, 12);\n        x01 = (x01 + x05) | 0;\n        x13 = rotl(x13 ^ x01, 8);\n        x09 = (x09 + x13) | 0;\n        x05 = rotl(x05 ^ x09, 7);\n        x02 = (x02 + x06) | 0;\n        x14 = rotl(x14 ^ x02, 16);\n        x10 = (x10 + x14) | 0;\n        x06 = rotl(x06 ^ x10, 12);\n        x02 = (x02 + x06) | 0;\n        x14 = rotl(x14 ^ x02, 8);\n        x10 = (x10 + x14) | 0;\n        x06 = rotl(x06 ^ x10, 7);\n        x03 = (x03 + x07) | 0;\n        x15 = rotl(x15 ^ x03, 16);\n        x11 = (x11 + x15) | 0;\n        x07 = rotl(x07 ^ x11, 12);\n        x03 = (x03 + x07) | 0;\n        x15 = rotl(x15 ^ x03, 8);\n        x11 = (x11 + x15) | 0;\n        x07 = rotl(x07 ^ x11, 7);\n        x00 = (x00 + x05) | 0;\n        x15 = rotl(x15 ^ x00, 16);\n        x10 = (x10 + x15) | 0;\n        x05 = rotl(x05 ^ x10, 12);\n        x00 = (x00 + x05) | 0;\n        x15 = rotl(x15 ^ x00, 8);\n        x10 = (x10 + x15) | 0;\n        x05 = rotl(x05 ^ x10, 7);\n        x01 = (x01 + x06) | 0;\n        x12 = rotl(x12 ^ x01, 16);\n        x11 = (x11 + x12) | 0;\n        x06 = rotl(x06 ^ x11, 12);\n        x01 = (x01 + x06) | 0;\n        x12 = rotl(x12 ^ x01, 8);\n        x11 = (x11 + x12) | 0;\n        x06 = rotl(x06 ^ x11, 7);\n        x02 = (x02 + x07) | 0;\n        x13 = rotl(x13 ^ x02, 16);\n        x08 = (x08 + x13) | 0;\n        x07 = rotl(x07 ^ x08, 12);\n        x02 = (x02 + x07) | 0;\n        x13 = rotl(x13 ^ x02, 8);\n        x08 = (x08 + x13) | 0;\n        x07 = rotl(x07 ^ x08, 7);\n        x03 = (x03 + x04) | 0;\n        x14 = rotl(x14 ^ x03, 16);\n        x09 = (x09 + x14) | 0;\n        x04 = rotl(x04 ^ x09, 12);\n        x03 = (x03 + x04) | 0;\n        x14 = rotl(x14 ^ x03, 8);\n        x09 = (x09 + x14) | 0;\n        x04 = rotl(x04 ^ x09, 7);\n    }\n    let oi = 0;\n    out[oi++] = x00;\n    out[oi++] = x01;\n    out[oi++] = x02;\n    out[oi++] = x03;\n    out[oi++] = x12;\n    out[oi++] = x13;\n    out[oi++] = x14;\n    out[oi++] = x15;\n}\n/** Original, non-RFC chacha20 from DJB. 8-byte nonce, 8-byte counter. */\nexport const chacha20orig = /* @__PURE__ */ createCipher(chachaCore, {\n    counterRight: false,\n    counterLength: 8,\n    allowShortKeys: true,\n});\n/**\n * ChaCha stream cipher. Conforms to RFC 8439 (IETF, TLS). 12-byte nonce, 4-byte counter.\n * With smaller nonce, it's not safe to make it random (CSPRNG), due to collision chance.\n */\nexport const chacha20 = /* @__PURE__ */ createCipher(chachaCore, {\n    counterRight: false,\n    counterLength: 4,\n    allowShortKeys: false,\n});\n/**\n * XChaCha eXtended-nonce ChaCha. With 24-byte nonce, it's safe to make it random (CSPRNG).\n * See [IRTF draft](https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha).\n */\nexport const xchacha20 = /* @__PURE__ */ createCipher(chachaCore, {\n    counterRight: false,\n    counterLength: 8,\n    extendNonceFn: hchacha,\n    allowShortKeys: false,\n});\n/** Reduced 8-round chacha, described in original paper. */\nexport const chacha8 = /* @__PURE__ */ createCipher(chachaCore, {\n    counterRight: false,\n    counterLength: 4,\n    rounds: 8,\n});\n/** Reduced 12-round chacha, described in original paper. */\nexport const chacha12 = /* @__PURE__ */ createCipher(chachaCore, {\n    counterRight: false,\n    counterLength: 4,\n    rounds: 12,\n});\nconst ZEROS16 = /* @__PURE__ */ new Uint8Array(16);\n// Pad to digest size with zeros\nconst updatePadded = (h, msg) => {\n    h.update(msg);\n    const leftover = msg.length % 16;\n    if (leftover)\n        h.update(ZEROS16.subarray(leftover));\n};\nconst ZEROS32 = /* @__PURE__ */ new Uint8Array(32);\nfunction computeTag(fn, key, nonce, ciphertext, AAD) {\n    if (AAD !== undefined)\n        abytes(AAD, undefined, 'AAD');\n    const authKey = fn(key, nonce, ZEROS32);\n    const lengths = u64Lengths(ciphertext.length, AAD ? AAD.length : 0, true);\n    // Methods below can be replaced with\n    // return poly1305_computeTag_small(authKey, lengths, ciphertext, AAD)\n    const h = poly1305.create(authKey);\n    if (AAD)\n        updatePadded(h, AAD);\n    updatePadded(h, ciphertext);\n    h.update(lengths);\n    const res = h.digest();\n    clean(authKey, lengths);\n    return res;\n}\n/**\n * AEAD algorithm from RFC 8439.\n * Salsa20 and chacha (RFC 8439) use poly1305 differently.\n * We could have composed them, but it's hard because of authKey:\n * In salsa20, authKey changes position in salsa stream.\n * In chacha, authKey can't be computed inside computeTag, it modifies the counter.\n */\nexport const _poly1305_aead = (xorStream) => (key, nonce, AAD) => {\n    const tagLength = 16;\n    return {\n        encrypt(plaintext, output) {\n            const plength = plaintext.length;\n            output = getOutput(plength + tagLength, output, false);\n            output.set(plaintext);\n            const oPlain = output.subarray(0, -tagLength);\n            // Actual encryption\n            xorStream(key, nonce, oPlain, oPlain, 1);\n            const tag = computeTag(xorStream, key, nonce, oPlain, AAD);\n            output.set(tag, plength); // append tag\n            clean(tag);\n            return output;\n        },\n        decrypt(ciphertext, output) {\n            output = getOutput(ciphertext.length - tagLength, output, false);\n            const data = ciphertext.subarray(0, -tagLength);\n            const passedTag = ciphertext.subarray(-tagLength);\n            const tag = computeTag(xorStream, key, nonce, data, AAD);\n            if (!equalBytes(passedTag, tag))\n                throw new Error('invalid tag');\n            output.set(ciphertext.subarray(0, -tagLength));\n            // Actual decryption\n            xorStream(key, nonce, output, output, 1); // start stream with i=1\n            clean(tag);\n            return output;\n        },\n    };\n};\n/**\n * ChaCha20-Poly1305 from RFC 8439.\n *\n * Unsafe to use random nonces under the same key, due to collision chance.\n * Prefer XChaCha instead.\n */\nexport const chacha20poly1305 = /* @__PURE__ */ wrapCipher({ blockSize: 64, nonceLength: 12, tagLength: 16 }, _poly1305_aead(chacha20));\n/**\n * XChaCha20-Poly1305 extended-nonce chacha.\n *\n * Can be safely used with random nonces (CSPRNG).\n * See [IRTF draft](https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha).\n */\nexport const xchacha20poly1305 = /* @__PURE__ */ wrapCipher({ blockSize: 64, nonceLength: 24, tagLength: 16 }, _poly1305_aead(xchacha20));\n/**\n * Chacha20 CSPRNG (cryptographically secure pseudorandom number generator).\n * It's best to limit usage to non-production, non-critical cases: for example, test-only.\n * Compatible with libtomcrypt. It does not have a specification, so unclear how secure it is.\n */\nexport const rngChacha20 = /* @__PURE__ */ createPRG(chacha20orig, 64, 32, 8);\n/**\n * Chacha20/8 CSPRNG (cryptographically secure pseudorandom number generator).\n * It's best to limit usage to non-production, non-critical cases: for example, test-only.\n * Faster than `rngChacha20`.\n */\nexport const rngChacha8 = /* @__PURE__ */ createPRG(chacha8, 64, 32, 12);\n//# sourceMappingURL=chacha.js.map","/**\n * HKDF (RFC 5869): extract + expand in one step.\n * See https://soatok.blog/2021/11/17/understanding-hkdf/.\n * @module\n */\nimport { hmac } from \"./hmac.js\";\nimport { abytes, ahash, anumber, clean } from \"./utils.js\";\n/**\n * HKDF-extract from spec. Less important part. `HKDF-Extract(IKM, salt) -> PRK`\n * Arguments position differs from spec (IKM is first one, since it is not optional)\n * @param hash - hash function that would be used (e.g. sha256)\n * @param ikm - input keying material, the initial key\n * @param salt - optional salt value (a non-secret random value)\n */\nexport function extract(hash, ikm, salt) {\n    ahash(hash);\n    // NOTE: some libraries treat zero-length array as 'not provided';\n    // we don't, since we have undefined as 'not provided'\n    // https://github.com/RustCrypto/KDFs/issues/15\n    if (salt === undefined)\n        salt = new Uint8Array(hash.outputLen);\n    return hmac(hash, salt, ikm);\n}\nconst HKDF_COUNTER = /* @__PURE__ */ Uint8Array.of(0);\nconst EMPTY_BUFFER = /* @__PURE__ */ Uint8Array.of();\n/**\n * HKDF-expand from the spec. The most important part. `HKDF-Expand(PRK, info, L) -> OKM`\n * @param hash - hash function that would be used (e.g. sha256)\n * @param prk - a pseudorandom key of at least HashLen octets (usually, the output from the extract step)\n * @param info - optional context and application specific information (can be a zero-length string)\n * @param length - length of output keying material in bytes\n */\nexport function expand(hash, prk, info, length = 32) {\n    ahash(hash);\n    anumber(length, 'length');\n    const olen = hash.outputLen;\n    if (length > 255 * olen)\n        throw new Error('Length must be <= 255*HashLen');\n    const blocks = Math.ceil(length / olen);\n    if (info === undefined)\n        info = EMPTY_BUFFER;\n    else\n        abytes(info, undefined, 'info');\n    // first L(ength) octets of T\n    const okm = new Uint8Array(blocks * olen);\n    // Re-use HMAC instance between blocks\n    const HMAC = hmac.create(hash, prk);\n    const HMACTmp = HMAC._cloneInto();\n    const T = new Uint8Array(HMAC.outputLen);\n    for (let counter = 0; counter < blocks; counter++) {\n        HKDF_COUNTER[0] = counter + 1;\n        // T(0) = empty string (zero length)\n        // T(N) = HMAC-Hash(PRK, T(N-1) | info | N)\n        HMACTmp.update(counter === 0 ? EMPTY_BUFFER : T)\n            .update(info)\n            .update(HKDF_COUNTER)\n            .digestInto(T);\n        okm.set(T, olen * counter);\n        HMAC._cloneInto(HMACTmp);\n    }\n    HMAC.destroy();\n    HMACTmp.destroy();\n    clean(T, HKDF_COUNTER);\n    return okm.slice(0, length);\n}\n/**\n * HKDF (RFC 5869): derive keys from an initial input.\n * Combines hkdf_extract + hkdf_expand in one step\n * @param hash - hash function that would be used (e.g. sha256)\n * @param ikm - input keying material, the initial key\n * @param salt - optional salt value (a non-secret random value)\n * @param info - optional context and application specific information (can be a zero-length string)\n * @param length - length of output keying material in bytes\n * @example\n * import { hkdf } from '@noble/hashes/hkdf';\n * import { sha256 } from '@noble/hashes/sha2';\n * import { randomBytes } from '@noble/hashes/utils';\n * const inputKey = randomBytes(32);\n * const salt = randomBytes(32);\n * const info = 'application-key';\n * const hk1 = hkdf(sha256, inputKey, salt, info, 32);\n */\nexport const hkdf = (hash, ikm, salt, info, length) => expand(hash, extract(hash, ikm, salt), info, length);\n//# sourceMappingURL=hkdf.js.map","import { chacha20poly1305 } from '@noble/ciphers/chacha.js';\nimport { x25519 } from '@noble/curves/ed25519.js';\nimport { extract, expand } from '@noble/hashes/hkdf.js';\nimport { sha256 } from '@noble/hashes/sha2.js';\nexport const pureJsCrypto = {\n    hashSHA256(data) {\n        return sha256(data.subarray());\n    },\n    getHKDF(ck, ikm) {\n        const prk = extract(sha256, ikm, ck);\n        const okmU8Array = expand(sha256, prk, undefined, 96);\n        const okm = okmU8Array;\n        const k1 = okm.subarray(0, 32);\n        const k2 = okm.subarray(32, 64);\n        const k3 = okm.subarray(64, 96);\n        return [k1, k2, k3];\n    },\n    generateX25519KeyPair() {\n        const secretKey = x25519.utils.randomSecretKey();\n        const publicKey = x25519.getPublicKey(secretKey);\n        return {\n            publicKey,\n            privateKey: secretKey\n        };\n    },\n    generateX25519KeyPairFromSeed(seed) {\n        const publicKey = x25519.getPublicKey(seed);\n        return {\n            publicKey,\n            privateKey: seed\n        };\n    },\n    generateX25519SharedKey(privateKey, publicKey) {\n        return x25519.getSharedSecret(privateKey.subarray(), publicKey.subarray());\n    },\n    chaCha20Poly1305Encrypt(plaintext, nonce, ad, k) {\n        return chacha20poly1305(k, nonce, ad).encrypt(plaintext.subarray());\n    },\n    chaCha20Poly1305Decrypt(ciphertext, nonce, ad, k, dst) {\n        return chacha20poly1305(k, nonce, ad).decrypt(ciphertext.subarray(), dst);\n    }\n};\n//# sourceMappingURL=js.js.map","import { pureJsCrypto } from './js.js';\nexport const defaultCrypto = pureJsCrypto;\n//# sourceMappingURL=index.browser.js.map","export function wrapCrypto(crypto) {\n    return {\n        generateKeypair: crypto.generateX25519KeyPair,\n        dh: (keypair, publicKey) => crypto.generateX25519SharedKey(keypair.privateKey, publicKey).subarray(0, 32),\n        encrypt: crypto.chaCha20Poly1305Encrypt,\n        decrypt: crypto.chaCha20Poly1305Decrypt,\n        hash: crypto.hashSHA256,\n        hkdf: crypto.getHKDF\n    };\n}\n//# sourceMappingURL=crypto.js.map","import { allocUnsafe as uint8ArrayAllocUnsafe } from 'uint8arrays/alloc';\nexport const uint16BEEncode = (value) => {\n    const target = uint8ArrayAllocUnsafe(2);\n    target[0] = value >> 8;\n    target[1] = value;\n    return target;\n};\nuint16BEEncode.bytes = 2;\nexport const uint16BEDecode = (data) => {\n    if (data.length < 2) {\n        throw RangeError('Could not decode int16BE');\n    }\n    if (data instanceof Uint8Array) {\n        let value = 0;\n        value += data[0] << 8;\n        value += data[1];\n        return value;\n    }\n    return data.getUint16(0);\n};\nuint16BEDecode.bytes = 2;\n//# sourceMappingURL=encoder.js.map","export function registerMetrics(metrics) {\n    return {\n        xxHandshakeSuccesses: metrics.registerCounter('libp2p_noise_xxhandshake_successes_total', {\n            help: 'Total count of noise xxHandshakes successes_'\n        }),\n        xxHandshakeErrors: metrics.registerCounter('libp2p_noise_xxhandshake_error_total', {\n            help: 'Total count of noise xxHandshakes errors'\n        }),\n        encryptedPackets: metrics.registerCounter('libp2p_noise_encrypted_packets_total', {\n            help: 'Total count of noise encrypted packets successfully'\n        }),\n        decryptedPackets: metrics.registerCounter('libp2p_noise_decrypted_packets_total', {\n            help: 'Total count of noise decrypted packets'\n        }),\n        decryptErrors: metrics.registerCounter('libp2p_noise_decrypt_errors_total', {\n            help: 'Total count of noise decrypt errors'\n        })\n    };\n}\n//# sourceMappingURL=metrics.js.map","import { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { DUMP_SESSION_KEYS } from './constants.js';\nexport function logLocalStaticKeys(s, keyLogger) {\n    if (!keyLogger.enabled || !DUMP_SESSION_KEYS) {\n        return;\n    }\n    if (s) {\n        keyLogger(`LOCAL_STATIC_PUBLIC_KEY ${uint8ArrayToString(s.publicKey, 'hex')}`);\n        keyLogger(`LOCAL_STATIC_PRIVATE_KEY ${uint8ArrayToString(s.privateKey, 'hex')}`);\n    }\n    else {\n        keyLogger('Missing local static keys.');\n    }\n}\nexport function logLocalEphemeralKeys(e, keyLogger) {\n    if (!keyLogger.enabled || !DUMP_SESSION_KEYS) {\n        return;\n    }\n    if (e) {\n        keyLogger(`LOCAL_PUBLIC_EPHEMERAL_KEY ${uint8ArrayToString(e.publicKey, 'hex')}`);\n        keyLogger(`LOCAL_PRIVATE_EPHEMERAL_KEY ${uint8ArrayToString(e.privateKey, 'hex')}`);\n    }\n    else {\n        keyLogger('Missing local ephemeral keys.');\n    }\n}\nexport function logRemoteStaticKey(rs, keyLogger) {\n    if (!keyLogger.enabled || !DUMP_SESSION_KEYS) {\n        return;\n    }\n    if (rs) {\n        keyLogger(`REMOTE_STATIC_PUBLIC_KEY ${uint8ArrayToString(rs.subarray(), 'hex')}`);\n    }\n    else {\n        keyLogger('Missing remote static public key.');\n    }\n}\nexport function logRemoteEphemeralKey(re, keyLogger) {\n    if (!keyLogger.enabled || !DUMP_SESSION_KEYS) {\n        return;\n    }\n    if (re) {\n        keyLogger(`REMOTE_EPHEMERAL_PUBLIC_KEY ${uint8ArrayToString(re.subarray(), 'hex')}`);\n    }\n    else {\n        keyLogger('Missing remote ephemeral keys.');\n    }\n}\nexport function logCipherState(cs1, cs2, keyLogger) {\n    if (!keyLogger.enabled || !DUMP_SESSION_KEYS) {\n        return;\n    }\n    keyLogger(`CIPHER_STATE_1 ${cs1.n.getUint64()} ${cs1.k && uint8ArrayToString(cs1.k, 'hex')}`);\n    keyLogger(`CIPHER_STATE_2 ${cs2.n.getUint64()} ${cs2.k && uint8ArrayToString(cs2.k, 'hex')}`);\n}\n//# sourceMappingURL=logger.js.map","export class InvalidCryptoExchangeError extends Error {\n    code;\n    constructor(message = 'Invalid crypto exchange') {\n        super(message);\n        this.code = InvalidCryptoExchangeError.code;\n    }\n    static code = 'ERR_INVALID_CRYPTO_EXCHANGE';\n}\n//# sourceMappingURL=errors.js.map","import { alloc as uint8ArrayAlloc } from 'uint8arrays/alloc';\nexport const MIN_NONCE = 0;\n// For performance reasons, the nonce is represented as a JS `number`\n// Although JS `number` can safely represent integers up to 2 ** 53 - 1, we choose to only use\n// 4 bytes to store the data for performance reason.\n// This is a slight deviation from the noise spec, which describes the max nonce as 2 ** 64 - 2\n// The effect is that this implementation will need a new handshake to be performed after fewer messages are exchanged than other implementations with full uint64 nonces.\n// this MAX_NONCE is still a large number of messages, so the practical effect of this is negligible.\nexport const MAX_NONCE = 0xffffffff;\nconst ERR_MAX_NONCE = 'Cipherstate has reached maximum n, a new handshake must be performed';\n/**\n * The nonce is an uint that's increased over time.\n * Maintaining different representations help improve performance.\n */\nexport class Nonce {\n    n;\n    bytes;\n    view;\n    constructor(n = MIN_NONCE) {\n        this.n = n;\n        this.bytes = uint8ArrayAlloc(12);\n        this.view = new DataView(this.bytes.buffer, this.bytes.byteOffset, this.bytes.byteLength);\n        this.view.setUint32(4, n, true);\n    }\n    increment() {\n        this.n++;\n        // Even though we're treating the nonce as 8 bytes, RFC7539 specifies 12 bytes for a nonce.\n        this.view.setUint32(4, this.n, true);\n    }\n    getBytes() {\n        return this.bytes;\n    }\n    getUint64() {\n        return this.n;\n    }\n    assertValue() {\n        if (this.n > MAX_NONCE) {\n            throw new Error(ERR_MAX_NONCE);\n        }\n    }\n}\n//# sourceMappingURL=nonce.js.map","import { Uint8ArrayList } from 'uint8arraylist';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays';\nimport { alloc as uint8ArrayAlloc } from 'uint8arrays/alloc';\nimport { InvalidCryptoExchangeError } from './errors.js';\nimport { Nonce } from './nonce.js';\n// Code in this file is a direct translation of a subset of the noise protocol https://noiseprotocol.org/noise.html,\n// agnostic to libp2p's usage of noise\nexport const ZEROLEN = uint8ArrayAlloc(0);\nexport class CipherState {\n    k;\n    n;\n    crypto;\n    constructor(crypto, k = undefined, n = 0) {\n        this.crypto = crypto;\n        this.k = k;\n        this.n = new Nonce(n);\n    }\n    hasKey() {\n        return Boolean(this.k);\n    }\n    encryptWithAd(ad, plaintext) {\n        if (!this.hasKey()) {\n            return plaintext;\n        }\n        this.n.assertValue();\n        const e = this.crypto.encrypt(plaintext, this.n.getBytes(), ad, this.k);\n        this.n.increment();\n        return e;\n    }\n    decryptWithAd(ad, ciphertext, dst) {\n        if (!this.hasKey()) {\n            return ciphertext;\n        }\n        this.n.assertValue();\n        const plaintext = this.crypto.decrypt(ciphertext, this.n.getBytes(), ad, this.k, dst);\n        this.n.increment();\n        return plaintext;\n    }\n}\nexport class SymmetricState {\n    cs;\n    ck;\n    h;\n    crypto;\n    constructor(crypto, protocolName) {\n        this.crypto = crypto;\n        const protocolNameBytes = uint8ArrayFromString(protocolName, 'utf-8');\n        this.h = hashProtocolName(crypto, protocolNameBytes);\n        this.ck = this.h;\n        this.cs = new CipherState(crypto);\n    }\n    mixKey(ikm) {\n        const [ck, tempK] = this.crypto.hkdf(this.ck, ikm);\n        this.ck = ck;\n        this.cs = new CipherState(this.crypto, tempK);\n    }\n    mixHash(data) {\n        this.h = this.crypto.hash(new Uint8ArrayList(this.h, data));\n    }\n    encryptAndHash(plaintext) {\n        const ciphertext = this.cs.encryptWithAd(this.h, plaintext);\n        this.mixHash(ciphertext);\n        return ciphertext;\n    }\n    decryptAndHash(ciphertext) {\n        const plaintext = this.cs.decryptWithAd(this.h, ciphertext);\n        this.mixHash(ciphertext);\n        return plaintext;\n    }\n    split() {\n        const [tempK1, tempK2] = this.crypto.hkdf(this.ck, ZEROLEN);\n        return [new CipherState(this.crypto, tempK1), new CipherState(this.crypto, tempK2)];\n    }\n}\nexport class AbstractHandshakeState {\n    ss;\n    s;\n    e;\n    rs;\n    re;\n    initiator;\n    crypto;\n    constructor(init) {\n        const { crypto, protocolName, prologue, initiator, s, e, rs, re } = init;\n        this.crypto = crypto;\n        this.ss = new SymmetricState(crypto, protocolName);\n        this.ss.mixHash(prologue);\n        this.initiator = initiator;\n        this.s = s;\n        this.e = e;\n        this.rs = rs;\n        this.re = re;\n    }\n    writeE() {\n        if (this.e) {\n            throw new Error('ephemeral keypair is already set');\n        }\n        const e = this.crypto.generateKeypair();\n        this.ss.mixHash(e.publicKey);\n        this.e = e;\n        return e.publicKey;\n    }\n    writeS() {\n        if (!this.s) {\n            throw new Error('static keypair is not set');\n        }\n        return this.ss.encryptAndHash(this.s.publicKey);\n    }\n    writeEE() {\n        if (!this.e) {\n            throw new Error('ephemeral keypair is not set');\n        }\n        if (!this.re) {\n            throw new Error('remote ephemeral public key is not set');\n        }\n        this.ss.mixKey(this.crypto.dh(this.e, this.re));\n    }\n    writeES() {\n        if (this.initiator) {\n            if (!this.e) {\n                throw new Error('ephemeral keypair is not set');\n            }\n            if (!this.rs) {\n                throw new Error('remote static public key is not set');\n            }\n            this.ss.mixKey(this.crypto.dh(this.e, this.rs));\n        }\n        else {\n            if (!this.s) {\n                throw new Error('static keypair is not set');\n            }\n            if (!this.re) {\n                throw new Error('remote ephemeral public key is not set');\n            }\n            this.ss.mixKey(this.crypto.dh(this.s, this.re));\n        }\n    }\n    writeSE() {\n        if (this.initiator) {\n            if (!this.s) {\n                throw new Error('static keypair is not set');\n            }\n            if (!this.re) {\n                throw new Error('remote ephemeral public key is not set');\n            }\n            this.ss.mixKey(this.crypto.dh(this.s, this.re));\n        }\n        else {\n            if (!this.e) {\n                throw new Error('ephemeral keypair is not set');\n            }\n            if (!this.rs) {\n                throw new Error('remote static public key is not set');\n            }\n            this.ss.mixKey(this.crypto.dh(this.e, this.rs));\n        }\n    }\n    readE(message, offset = 0) {\n        if (this.re) {\n            throw new Error('remote ephemeral public key is already set');\n        }\n        if (message.byteLength < offset + 32) {\n            throw new Error('message is not long enough');\n        }\n        this.re = message.sublist(offset, offset + 32);\n        this.ss.mixHash(this.re);\n    }\n    readS(message, offset = 0) {\n        if (this.rs) {\n            throw new Error('remote static public key is already set');\n        }\n        const cipherLength = 32 + (this.ss.cs.hasKey() ? 16 : 0);\n        if (message.byteLength < offset + cipherLength) {\n            throw new Error('message is not long enough');\n        }\n        const temp = message.sublist(offset, offset + cipherLength);\n        this.rs = this.ss.decryptAndHash(temp);\n        return cipherLength;\n    }\n    readEE() {\n        this.writeEE();\n    }\n    readES() {\n        this.writeES();\n    }\n    readSE() {\n        this.writeSE();\n    }\n}\n/**\n * A IHandshakeState that's optimized for the XX pattern\n */\nexport class XXHandshakeState extends AbstractHandshakeState {\n    // e\n    writeMessageA(payload) {\n        return new Uint8ArrayList(this.writeE(), this.ss.encryptAndHash(payload));\n    }\n    // e, ee, s, es\n    writeMessageB(payload) {\n        const e = this.writeE();\n        this.writeEE();\n        const encS = this.writeS();\n        this.writeES();\n        return new Uint8ArrayList(e, encS, this.ss.encryptAndHash(payload));\n    }\n    // s, se\n    writeMessageC(payload) {\n        const encS = this.writeS();\n        this.writeSE();\n        return new Uint8ArrayList(encS, this.ss.encryptAndHash(payload));\n    }\n    // e\n    readMessageA(message) {\n        try {\n            this.readE(message);\n            return this.ss.decryptAndHash(message.sublist(32));\n        }\n        catch (e) {\n            throw new InvalidCryptoExchangeError(`handshake stage 0 validation fail: ${e.message}`);\n        }\n    }\n    // e, ee, s, es\n    readMessageB(message) {\n        try {\n            this.readE(message);\n            this.readEE();\n            const consumed = this.readS(message, 32);\n            this.readES();\n            return this.ss.decryptAndHash(message.sublist(32 + consumed));\n        }\n        catch (e) {\n            throw new InvalidCryptoExchangeError(`handshake stage 1 validation fail: ${e.message}`);\n        }\n    }\n    // s, se\n    readMessageC(message) {\n        try {\n            const consumed = this.readS(message);\n            this.readSE();\n            return this.ss.decryptAndHash(message.sublist(consumed));\n        }\n        catch (e) {\n            throw new InvalidCryptoExchangeError(`handshake stage 2 validation fail: ${e.message}`);\n        }\n    }\n}\nfunction hashProtocolName(crypto, protocolName) {\n    if (protocolName.length <= 32) {\n        const h = uint8ArrayAlloc(32);\n        h.set(protocolName);\n        return h;\n    }\n    else {\n        return crypto.hash(protocolName);\n    }\n}\n//# sourceMappingURL=protocol.js.map","import { decodeMessage, encodeMessage, MaxLengthError, message } from 'protons-runtime';\nimport { alloc as uint8ArrayAlloc } from 'uint8arrays/alloc';\nexport var NoiseExtensions;\n(function (NoiseExtensions) {\n    let _codec;\n    NoiseExtensions.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.webtransportCerthashes != null) {\n                    for (const value of obj.webtransportCerthashes) {\n                        w.uint32(10);\n                        w.bytes(value);\n                    }\n                }\n                if (obj.streamMuxers != null) {\n                    for (const value of obj.streamMuxers) {\n                        w.uint32(18);\n                        w.string(value);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    webtransportCerthashes: [],\n                    streamMuxers: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            if (opts.limits?.webtransportCerthashes != null && obj.webtransportCerthashes.length === opts.limits.webtransportCerthashes) {\n                                throw new MaxLengthError('Decode error - map field \"webtransportCerthashes\" had too many elements');\n                            }\n                            obj.webtransportCerthashes.push(reader.bytes());\n                            break;\n                        }\n                        case 2: {\n                            if (opts.limits?.streamMuxers != null && obj.streamMuxers.length === opts.limits.streamMuxers) {\n                                throw new MaxLengthError('Decode error - map field \"streamMuxers\" had too many elements');\n                            }\n                            obj.streamMuxers.push(reader.string());\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    NoiseExtensions.encode = (obj) => {\n        return encodeMessage(obj, NoiseExtensions.codec());\n    };\n    NoiseExtensions.decode = (buf, opts) => {\n        return decodeMessage(buf, NoiseExtensions.codec(), opts);\n    };\n})(NoiseExtensions || (NoiseExtensions = {}));\nexport var NoiseHandshakePayload;\n(function (NoiseHandshakePayload) {\n    let _codec;\n    NoiseHandshakePayload.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if ((obj.identityKey != null && obj.identityKey.byteLength > 0)) {\n                    w.uint32(10);\n                    w.bytes(obj.identityKey);\n                }\n                if ((obj.identitySig != null && obj.identitySig.byteLength > 0)) {\n                    w.uint32(18);\n                    w.bytes(obj.identitySig);\n                }\n                if (obj.extensions != null) {\n                    w.uint32(34);\n                    NoiseExtensions.codec().encode(obj.extensions, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    identityKey: uint8ArrayAlloc(0),\n                    identitySig: uint8ArrayAlloc(0)\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.identityKey = reader.bytes();\n                            break;\n                        }\n                        case 2: {\n                            obj.identitySig = reader.bytes();\n                            break;\n                        }\n                        case 4: {\n                            obj.extensions = NoiseExtensions.codec().decode(reader, reader.uint32(), {\n                                limits: opts.limits?.extensions\n                            });\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    NoiseHandshakePayload.encode = (obj) => {\n        return encodeMessage(obj, NoiseHandshakePayload.codec());\n    };\n    NoiseHandshakePayload.decode = (buf, opts) => {\n        return decodeMessage(buf, NoiseHandshakePayload.codec(), opts);\n    };\n})(NoiseHandshakePayload || (NoiseHandshakePayload = {}));\n//# sourceMappingURL=payload.js.map","import { publicKeyFromProtobuf, publicKeyToProtobuf } from '@libp2p/crypto/keys';\nimport { StreamMessageEvent, UnexpectedPeerError } from '@libp2p/interface';\nimport { AbstractMessageStream, LengthPrefixedDecoder } from '@libp2p/utils';\nimport { Uint8ArrayList } from 'uint8arraylist';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { CHACHA_TAG_LENGTH, NOISE_MSG_MAX_LENGTH_BYTES, NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG } from \"./constants.js\";\nimport { uint16BEEncode, uint16BEDecode } from \"./encoder.js\";\nimport { NoiseHandshakePayload } from './proto/payload.js';\nexport async function createHandshakePayload(privateKey, staticPublicKey, extensions) {\n    const identitySig = await privateKey.sign(getSignaturePayload(staticPublicKey));\n    return NoiseHandshakePayload.encode({\n        identityKey: publicKeyToProtobuf(privateKey.publicKey),\n        identitySig,\n        extensions\n    });\n}\nexport async function decodeHandshakePayload(payloadBytes, remoteStaticKey, remoteIdentityKey) {\n    try {\n        const payload = NoiseHandshakePayload.decode(payloadBytes);\n        const publicKey = publicKeyFromProtobuf(payload.identityKey);\n        if (remoteIdentityKey?.equals(publicKey) === false) {\n            throw new Error(`Payload identity key ${publicKey} does not match expected remote identity key ${remoteIdentityKey}`);\n        }\n        if (!remoteStaticKey) {\n            throw new Error('Remote static does not exist');\n        }\n        const signaturePayload = getSignaturePayload(remoteStaticKey);\n        if (!(await publicKey.verify(signaturePayload, payload.identitySig))) {\n            throw new Error('Invalid payload signature');\n        }\n        return payload;\n    }\n    catch (e) {\n        throw new UnexpectedPeerError(e.message);\n    }\n}\nexport function getSignaturePayload(publicKey) {\n    const prefix = uint8ArrayFromString('noise-libp2p-static-key:');\n    if (publicKey instanceof Uint8Array) {\n        return uint8ArrayConcat([prefix, publicKey], prefix.length + publicKey.length);\n    }\n    publicKey.prepend(prefix);\n    return publicKey;\n}\nclass EncryptedMessageStream extends AbstractMessageStream {\n    stream;\n    handshake;\n    metrics;\n    decoder;\n    constructor(stream, handshake, metrics) {\n        super({\n            log: stream.log,\n            inactivityTimeout: stream.inactivityTimeout,\n            maxReadBufferLength: stream.maxReadBufferLength,\n            direction: stream.direction\n        });\n        this.stream = stream;\n        this.handshake = handshake;\n        this.metrics = metrics;\n        this.decoder = new LengthPrefixedDecoder({\n            lengthDecoder: uint16BEDecode,\n            maxBufferSize: 16 * 1024 * 1024,\n            encodingLength: () => 2\n        });\n        const noiseOnMessageDecrypt = (evt) => {\n            try {\n                for (const buf of this.decoder.decode(evt.data)) {\n                    this.onData(this.decrypt(buf));\n                }\n            }\n            catch (err) {\n                this.abort(err);\n            }\n        };\n        this.stream.addEventListener('message', noiseOnMessageDecrypt);\n        const noiseOnClose = (evt) => {\n            if (evt.error != null) {\n                if (evt.local === true) {\n                    this.abort(evt.error);\n                }\n                else {\n                    this.onRemoteReset();\n                }\n            }\n            else {\n                this.onTransportClosed();\n            }\n        };\n        this.stream.addEventListener('close', noiseOnClose);\n        const noiseOnDrain = () => {\n            this.safeDispatchEvent('drain');\n        };\n        this.stream.addEventListener('drain', noiseOnDrain);\n        const noiseOnRemoteCloseWrite = () => {\n            this.onRemoteCloseWrite();\n        };\n        this.stream.addEventListener('remoteCloseWrite', noiseOnRemoteCloseWrite);\n    }\n    encrypt(chunk) {\n        const output = new Uint8ArrayList();\n        for (let i = 0; i < chunk.byteLength; i += NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG) {\n            let end = i + NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG;\n            if (end > chunk.byteLength) {\n                end = chunk.byteLength;\n            }\n            let data;\n            if (chunk instanceof Uint8Array) {\n                data = this.handshake.encrypt(chunk.subarray(i, end));\n            }\n            else {\n                data = this.handshake.encrypt(chunk.sublist(i, end));\n            }\n            this.metrics?.encryptedPackets.increment();\n            output.append(uint16BEEncode(data.byteLength));\n            output.append(data);\n        }\n        return output;\n    }\n    decrypt(chunk) {\n        const output = new Uint8ArrayList();\n        for (let i = 0; i < chunk.byteLength; i += NOISE_MSG_MAX_LENGTH_BYTES) {\n            let end = i + NOISE_MSG_MAX_LENGTH_BYTES;\n            if (end > chunk.byteLength) {\n                end = chunk.byteLength;\n            }\n            if (end - CHACHA_TAG_LENGTH < i) {\n                throw new Error('Invalid chunk');\n            }\n            let encrypted;\n            if (chunk instanceof Uint8Array) {\n                encrypted = chunk.subarray(i, end);\n            }\n            else {\n                encrypted = chunk.sublist(i, end);\n            }\n            // memory allocation is not cheap so reuse the encrypted Uint8Array\n            // see https://github.com/ChainSafe/js-libp2p-noise/pull/242#issue-1422126164\n            // this is ok because chacha20 reads bytes one by one and don't reread after that\n            // it's also tested in https://github.com/ChainSafe/as-chacha20poly1305/pull/1/files#diff-25252846b58979dcaf4e41d47b3eadd7e4f335e7fb98da6c049b1f9cd011f381R48\n            const dst = chunk.subarray(i, end - CHACHA_TAG_LENGTH);\n            try {\n                const plaintext = this.handshake.decrypt(encrypted, dst);\n                this.metrics?.decryptedPackets.increment();\n                output.append(plaintext);\n            }\n            catch (e) {\n                this.metrics?.decryptErrors.increment();\n                throw e;\n            }\n        }\n        return output;\n    }\n    close(options) {\n        return this.stream.close(options);\n    }\n    sendPause() {\n        this.stream.pause();\n    }\n    sendResume() {\n        this.stream.resume();\n    }\n    sendReset(err) {\n        this.stream.abort(err);\n    }\n    sendData(data) {\n        return {\n            sentBytes: data.byteLength,\n            canSendMore: this.stream.send(this.encrypt(data))\n        };\n    }\n}\nexport function toMessageStream(connection, handshake, metrics) {\n    return new EncryptedMessageStream(connection, handshake, metrics);\n}\n//# sourceMappingURL=utils.js.map","import { logLocalStaticKeys, logLocalEphemeralKeys, logRemoteEphemeralKey, logRemoteStaticKey, logCipherState } from './logger.js';\nimport { ZEROLEN, XXHandshakeState } from './protocol.js';\nimport { createHandshakePayload, decodeHandshakePayload } from './utils.js';\nexport async function performHandshakeInitiator(init, options) {\n    const { log, connection, crypto, privateKey, prologue, s, remoteIdentityKey, extensions } = init;\n    const payload = await createHandshakePayload(privateKey, s.publicKey, extensions);\n    const xx = new XXHandshakeState({\n        crypto,\n        protocolName: 'Noise_XX_25519_ChaChaPoly_SHA256',\n        initiator: true,\n        prologue,\n        s\n    });\n    logLocalStaticKeys(xx.s, log);\n    log.trace('Stage 0 - Initiator starting to send first message.');\n    await connection.write(xx.writeMessageA(ZEROLEN), options);\n    log.trace('Stage 0 - Initiator finished sending first message.');\n    logLocalEphemeralKeys(xx.e, log);\n    log.trace('Stage 1 - Initiator waiting to receive first message from responder...');\n    const plaintext = xx.readMessageB(await connection.read(options));\n    log.trace('Stage 1 - Initiator received the message.');\n    logRemoteEphemeralKey(xx.re, log);\n    logRemoteStaticKey(xx.rs, log);\n    log.trace(\"Initiator going to check remote's signature...\");\n    const receivedPayload = await decodeHandshakePayload(plaintext, xx.rs, remoteIdentityKey);\n    log.trace('All good with the signature!');\n    log.trace('Stage 2 - Initiator sending third handshake message.');\n    await connection.write(xx.writeMessageC(payload), options);\n    log.trace('Stage 2 - Initiator sent message with signed payload.');\n    const [cs1, cs2] = xx.ss.split();\n    logCipherState(cs1, cs2, log);\n    return {\n        payload: receivedPayload,\n        encrypt: (plaintext) => cs1.encryptWithAd(ZEROLEN, plaintext),\n        decrypt: (ciphertext, dst) => cs2.decryptWithAd(ZEROLEN, ciphertext, dst)\n    };\n}\nexport async function performHandshakeResponder(init, options) {\n    const { log, connection, crypto, privateKey, prologue, s, remoteIdentityKey, extensions } = init;\n    const payload = await createHandshakePayload(privateKey, s.publicKey, extensions);\n    const xx = new XXHandshakeState({\n        crypto,\n        protocolName: 'Noise_XX_25519_ChaChaPoly_SHA256',\n        initiator: false,\n        prologue,\n        s\n    });\n    logLocalStaticKeys(xx.s, log);\n    log.trace('Stage 0 - Responder waiting to receive first message.');\n    xx.readMessageA(await connection.read(options));\n    log.trace('Stage 0 - Responder received first message.');\n    logRemoteEphemeralKey(xx.re, log);\n    log.trace('Stage 1 - Responder sending out first message with signed payload and static key.');\n    await connection.write(xx.writeMessageB(payload), options);\n    log.trace('Stage 1 - Responder sent the second handshake message with signed payload.');\n    logLocalEphemeralKeys(xx.e, log);\n    log.trace('Stage 2 - Responder waiting for third handshake message...');\n    const plaintext = xx.readMessageC(await connection.read(options));\n    log.trace('Stage 2 - Responder received the message, finished handshake.');\n    const receivedPayload = await decodeHandshakePayload(plaintext, xx.rs, remoteIdentityKey);\n    const [cs1, cs2] = xx.ss.split();\n    logCipherState(cs1, cs2, log);\n    return {\n        payload: receivedPayload,\n        encrypt: (plaintext) => cs2.encryptWithAd(ZEROLEN, plaintext),\n        decrypt: (ciphertext, dst) => cs1.decryptWithAd(ZEROLEN, ciphertext, dst)\n    };\n}\n//# sourceMappingURL=performHandshake.js.map","import { publicKeyFromProtobuf } from '@libp2p/crypto/keys';\nimport { InvalidCryptoExchangeError, serviceCapabilities } from '@libp2p/interface';\nimport { peerIdFromPublicKey } from '@libp2p/peer-id';\nimport { lpStream } from '@libp2p/utils';\nimport { alloc as uint8ArrayAlloc } from 'uint8arrays/alloc';\nimport { NOISE_MSG_MAX_LENGTH_BYTES } from './constants.js';\nimport { defaultCrypto } from './crypto/index.js';\nimport { wrapCrypto } from './crypto.js';\nimport { uint16BEDecode, uint16BEEncode } from './encoder.js';\nimport { registerMetrics } from './metrics.js';\nimport { performHandshakeInitiator, performHandshakeResponder } from './performHandshake.js';\nimport { toMessageStream } from \"./utils.js\";\nexport class Noise {\n    protocol = '/noise';\n    crypto;\n    prologue;\n    staticKey;\n    extensions;\n    metrics;\n    components;\n    log;\n    constructor(components, init = {}) {\n        const { staticNoiseKey, extensions, crypto, prologueBytes } = init;\n        const { metrics } = components;\n        this.components = components;\n        this.log = components.logger.forComponent('libp2p:noise');\n        const _crypto = crypto ?? defaultCrypto;\n        this.crypto = wrapCrypto(_crypto);\n        this.extensions = {\n            webtransportCerthashes: [],\n            ...extensions\n        };\n        this.metrics = metrics ? registerMetrics(metrics) : undefined;\n        if (staticNoiseKey) {\n            // accepts x25519 private key of length 32\n            this.staticKey = _crypto.generateX25519KeyPairFromSeed(staticNoiseKey);\n        }\n        else {\n            this.staticKey = _crypto.generateX25519KeyPair();\n        }\n        this.prologue = prologueBytes ?? uint8ArrayAlloc(0);\n    }\n    [Symbol.toStringTag] = '@chainsafe/libp2p-noise';\n    [serviceCapabilities] = [\n        '@libp2p/connection-encryption',\n        '@chainsafe/libp2p-noise'\n    ];\n    /**\n     * Encrypt outgoing data to the remote party (handshake as initiator)\n     *\n     * @param connection - streaming iterable duplex that will be encrypted\n     * @param options\n     * @param options.remotePeer - PeerId of the remote peer. Used to validate the integrity of the remote peer\n     * @param options.signal - Used to abort the operation\n     */\n    async secureOutbound(connection, options) {\n        const log = connection.log?.newScope('noise') ?? this.log;\n        const wrappedConnection = lpStream(connection, {\n            lengthEncoder: uint16BEEncode,\n            lengthDecoder: uint16BEDecode,\n            maxDataLength: NOISE_MSG_MAX_LENGTH_BYTES\n        });\n        const handshake = await this.performHandshakeInitiator(wrappedConnection, this.components.privateKey, log, options?.remotePeer?.publicKey, options);\n        const publicKey = publicKeyFromProtobuf(handshake.payload.identityKey);\n        return {\n            connection: toMessageStream(wrappedConnection.unwrap(), handshake, this.metrics),\n            remoteExtensions: handshake.payload.extensions,\n            remotePeer: peerIdFromPublicKey(publicKey),\n            streamMuxer: options?.skipStreamMuxerNegotiation === true ? undefined : this.getStreamMuxer(handshake.payload.extensions?.streamMuxers)\n        };\n    }\n    getStreamMuxer(protocols) {\n        if (protocols == null || protocols.length === 0) {\n            return;\n        }\n        const streamMuxers = this.components.upgrader.getStreamMuxers();\n        if (streamMuxers != null) {\n            for (const protocol of protocols) {\n                const streamMuxer = streamMuxers.get(protocol);\n                if (streamMuxer != null) {\n                    return streamMuxer;\n                }\n            }\n        }\n        if (protocols.length) {\n            throw new InvalidCryptoExchangeError('Early muxer negotiation was requested but the initiator and responder had no common muxers');\n        }\n    }\n    /**\n     * Decrypt incoming data (handshake as responder).\n     *\n     * @param connection - streaming iterable duplex that will be encrypted\n     * @param options\n     * @param options.remotePeer - PeerId of the remote peer. Used to validate the integrity of the remote peer\n     * @param options.signal - Used to abort the operation\n     */\n    async secureInbound(connection, options) {\n        const log = connection.log?.newScope('noise') ?? this.log;\n        const wrappedConnection = lpStream(connection, {\n            lengthEncoder: uint16BEEncode,\n            lengthDecoder: uint16BEDecode,\n            maxDataLength: NOISE_MSG_MAX_LENGTH_BYTES\n        });\n        const handshake = await this.performHandshakeResponder(wrappedConnection, this.components.privateKey, log, options?.remotePeer?.publicKey, options);\n        const publicKey = publicKeyFromProtobuf(handshake.payload.identityKey);\n        return {\n            connection: toMessageStream(wrappedConnection.unwrap(), handshake, this.metrics),\n            remoteExtensions: handshake.payload.extensions,\n            remotePeer: peerIdFromPublicKey(publicKey),\n            streamMuxer: options?.skipStreamMuxerNegotiation === true ? undefined : this.getStreamMuxer(handshake.payload.extensions?.streamMuxers)\n        };\n    }\n    /**\n     * Perform XX handshake as initiator.\n     */\n    async performHandshakeInitiator(connection, \n    // TODO: pass private key in noise constructor via Components\n    privateKey, log, remoteIdentityKey, options) {\n        let result;\n        const streamMuxers = options?.skipStreamMuxerNegotiation === true ? [] : [...this.components.upgrader.getStreamMuxers().keys()];\n        try {\n            result = await performHandshakeInitiator({\n                connection,\n                privateKey,\n                remoteIdentityKey,\n                log: log.newScope('xxhandshake'),\n                crypto: this.crypto,\n                prologue: this.prologue,\n                s: this.staticKey,\n                extensions: {\n                    streamMuxers,\n                    webtransportCerthashes: [],\n                    ...this.extensions\n                }\n            }, options);\n            this.metrics?.xxHandshakeSuccesses.increment();\n        }\n        catch (e) {\n            this.metrics?.xxHandshakeErrors.increment();\n            throw e;\n        }\n        return result;\n    }\n    /**\n     * Perform XX handshake as responder.\n     */\n    async performHandshakeResponder(connection, privateKey, log, remoteIdentityKey, options) {\n        let result;\n        const streamMuxers = options?.skipStreamMuxerNegotiation === true ? [] : [...this.components.upgrader.getStreamMuxers().keys()];\n        try {\n            result = await performHandshakeResponder({\n                connection,\n                privateKey,\n                remoteIdentityKey,\n                log: log.newScope('xxhandshake'),\n                crypto: this.crypto,\n                prologue: this.prologue,\n                s: this.staticKey,\n                extensions: {\n                    streamMuxers,\n                    webtransportCerthashes: [],\n                    ...this.extensions\n                }\n            }, options);\n            this.metrics?.xxHandshakeSuccesses.increment();\n        }\n        catch (e) {\n            this.metrics?.xxHandshakeErrors.increment();\n            throw e;\n        }\n        return result;\n    }\n}\n//# sourceMappingURL=noise.js.map","/**\n * @packageDocumentation\n *\n * This repository contains TypeScript implementation of noise protocol, an encryption protocol used in libp2p.\n *\n * ## Usage\n *\n * Install with `yarn add @chainsafe/libp2p-noise` or `npm i @chainsafe/libp2p-noise`.\n *\n * Example of using default noise configuration and passing it to the libp2p config:\n *\n * ```ts\n * import {createLibp2p} from \"libp2p\"\n * import {noise} from \"@chainsafe/libp2p-noise\"\n *\n * //custom noise configuration, pass it instead of `noise()`\n * //x25519 private key\n * const n = noise({ staticNoiseKey });\n *\n * const libp2p = await createLibp2p({\n *   connectionEncrypters: [noise()],\n *   //... other options\n * })\n * ```\n *\n * See the [NoiseInit](https://github.com/ChainSafe/js-libp2p-noise/blob/master/src/noise.ts#L22-L30) interface for noise configuration options.\n *\n * ## API\n *\n * This module exposes an implementation of the [ConnectionEncrypter](https://libp2p.github.io/js-libp2p/interfaces/_libp2p_interface.ConnectionEncrypter.html) interface.\n *\n * ## Bring your own crypto\n *\n * You can provide a custom crypto implementation (instead of the default, based on [@noble](https://paulmillr.com/noble/)) by adding a `crypto` field to the init argument passed to the `Noise` factory.\n *\n * The implementation must conform to the `ICryptoInterface`, defined in <https://github.com/ChainSafe/js-libp2p-noise/blob/master/src/crypto.ts>\n */\nimport { Noise } from './noise.js';\nexport { pureJsCrypto } from './crypto/js.js';\nexport function noise(init = {}) {\n    return (components) => new Noise(components, init);\n}\n//# sourceMappingURL=index.js.map","/**\n * @packageDocumentation\n *\n * A [libp2p transport](https://docs.libp2p.io/concepts/transports/overview/) based on [WebRTC data channels](https://webrtc.org/).\n *\n * [WebRTC](https://www.w3.org/TR/webrtc/) is a specification that allows real-time communication between nodes - it's commonly used in browser video conferencing applications but it also provides a reliable data transport mechanism called [data channels](https://www.w3.org/TR/webrtc/#peer-to-peer-data-api) which libp2p uses to facilitate [protocol streams](https://docs.libp2p.io/concepts/multiplex/overview/) between peers.\n *\n * There are two transports exposed by this module, [webRTC](https://github.com/libp2p/specs/blob/master/webrtc/webrtc.md) and [webRTCDirect](https://github.com/libp2p/specs/blob/master/webrtc/webrtc-direct.md).\n *\n * ## WebRTC vs WebRTC Direct\n *\n * The connection establishment phase of WebRTC involves a handshake using [SDP](https://en.wikipedia.org/wiki/Session_Description_Protocol) during which two peers will exchange information such as open ports, network addresses and required capabilities.\n *\n * A third party is usually necessary to carry out this handshake, forwarding messages between the two peers until they can make a direct connection between themselves.\n *\n * The WebRTC transport uses libp2p [Circuit Relay](https://docs.libp2p.io/concepts/nat/circuit-relay/)s to forward SDP messages. Once a direct connection is formed the relay plays no further part in the exchange.\n *\n * WebRTC Direct uses a technique known as [SDP munging](https://webrtchacks.com/not-a-guide-to-sdp-munging/) to skip the handshake step, instead encoding enough information in the connection request that the responder can derive what would have been in the handshake messages and so requires no third parties to establish a connection.\n *\n * A WebRTC Direct multiaddr also includes a certhash of the target peer - this is used to allow opening a connection to the remote, which would otherwise be denied due to use of a self-signed certificate.\n *\n * In both cases, once the connection is established a [Noise handshake](https://noiseprotocol.org/noise.html) is carried out to ensure that the remote peer has the private key that corresponds to the public key that makes up their PeerId, giving you both encryption and authentication.\n *\n * @example WebRTC\n *\n * WebRTC requires use of a relay to connect two nodes. The listener first discovers a relay server and makes a reservation, then the dialer can connect via the relayed address.\n *\n * ```TypeScript\n * import { noise } from '@chainsafe/libp2p-noise'\n * import { yamux } from '@chainsafe/libp2p-yamux'\n * import { echo } from '@libp2p/echo'\n * import { circuitRelayTransport, circuitRelayServer } from '@libp2p/circuit-relay-v2'\n * import { identify } from '@libp2p/identify'\n * import { webRTC } from '@libp2p/webrtc'\n * import { webSockets } from '@libp2p/websockets'\n * import { WebRTC } from '@multiformats/multiaddr-matcher'\n * import delay from 'delay'\n * import { createLibp2p } from 'libp2p'\n * import type { Multiaddr } from '@multiformats/multiaddr'\n *\n * // the relay server listens on a transport dialable by the listener and the\n * // dialer, and has a relay service configured\n * const relay = await createLibp2p({\n *   addresses: {\n *   listen: ['/ip4/127.0.0.1/tcp/0/ws']\n *   },\n *   transports: [\n *     webSockets()\n *   ],\n *   connectionEncrypters: [noise()],\n *   streamMuxers: [yamux()],\n *   connectionGater: {\n *     denyDialMultiaddr: () => false\n *   },\n *   services: {\n *     identify: identify(),\n *     relay: circuitRelayServer()\n *   }\n * })\n *\n * // the listener has a WebSocket transport to dial the relay, a Circuit Relay\n * // transport to make a reservation, and a WebRTC transport to accept incoming\n * // WebRTC connections\n * const listener = await createLibp2p({\n *   addresses: {\n *     listen: [\n *       '/p2p-circuit',\n *       '/webrtc'\n *     ]\n *   },\n *   transports: [\n *     webSockets(),\n *     webRTC(),\n *     circuitRelayTransport()\n *   ],\n *   connectionEncrypters: [noise()],\n *   streamMuxers: [yamux()],\n *   connectionGater: {\n *     denyDialMultiaddr: () => false\n *   },\n *   services: {\n *     identify: identify(),\n *     echo: echo()\n *   }\n * })\n *\n * // the listener dials the relay (or discovers a public relay via some other\n * // method)\n * await listener.dial(relay.getMultiaddrs(), {\n *   signal: AbortSignal.timeout(5000)\n * })\n *\n * let webRTCMultiaddr: Multiaddr | undefined\n *\n * // wait for the listener to make a reservation on the relay\n * while (true) {\n *   webRTCMultiaddr = listener.getMultiaddrs().find(ma => WebRTC.matches(ma))\n *\n *   if (webRTCMultiaddr != null) {\n *     break\n *   }\n *\n *   // try again later\n *   await delay(1000)\n * }\n *\n * // the dialer has Circuit Relay, WebSocket and WebRTC transports to dial\n * // the listener via the relay, complete the SDP handshake and establish a\n * // direct WebRTC connection\n * const dialer = await createLibp2p({\n *   transports: [\n *     webSockets(),\n *     webRTC(),\n *     circuitRelayTransport()\n *   ],\n *   connectionEncrypters: [noise()],\n *   streamMuxers: [yamux()],\n *   connectionGater: {\n *     denyDialMultiaddr: () => false\n *   },\n *   services: {\n *     identify: identify(),\n *     echo: echo()\n *   }\n * })\n *\n * // dial the listener and open an echo protocol stream\n * const stream = await dialer.dialProtocol(webRTCMultiaddr, dialer.services.echo.protocol, {\n *   signal: AbortSignal.timeout(5000)\n * })\n *\n * // we can now stop the relay\n * await relay.stop()\n *\n * // send/receive some data from the remote peer via a direct connection\n * stream.send(new TextEncoder().encode('hello world'))\n *\n * stream.addEventListener('message', (evt) => {\n *   console.info(new TextDecoder().decode(evt.data.subarray()))\n * })\n * ```\n *\n * @example WebRTC Direct\n *\n * WebRTC Direct allows a client to establish a WebRTC connection to a server\n * without using a relay to first exchange SDP messages.\n *\n * Instead the server listens on a public UDP port and embeds its certificate\n * hash in the published multiaddr. It derives the client's SDP offer based on\n * the incoming IP/port of STUN messages sent to this public port.\n *\n * The client derives the server's SDP answer based on the information in the\n * multiaddr so no SDP handshake via a third party is required.\n *\n * Full details of the connection protocol can be found in the [WebRTC Direct spec](https://github.com/libp2p/specs/blob/master/webrtc/webrtc-direct.md).\n *\n * Browsers cannot listen on WebRTC Direct addresses since they cannot open\n * ports, but they can dial all spec-compliant servers.\n *\n * Node.js/go and rust-libp2p can listen on and dial WebRTC Direct addresses.\n *\n * ```TypeScript\n * import { createLibp2p } from 'libp2p'\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { fromString, toString } from 'uint8arrays'\n * import { webRTCDirect } from '@libp2p/webrtc'\n *\n * const listener = await createLibp2p({\n *   addresses: {\n *     listen: [\n *       '/ip4/0.0.0.0/udp/0/webrtc-direct'\n *     ]\n *   },\n *   transports: [\n *     webRTCDirect()\n *   ]\n * })\n *\n * await listener.start()\n *\n * const dialer = await createLibp2p({\n *   transports: [\n *     webRTCDirect()\n *   ]\n * })\n *\n * await dialer.start()\n *\n * const stream = await dialer.dialProtocol(listener.getMultiaddrs(), '/my-protocol/1.0.0', {\n *   signal: AbortSignal.timeout(10_000)\n * })\n *\n * stream.send(new TextEncoder().encode('hello world'))\n *\n * stream.addEventListener('message', (evt) => {\n *   console.info(new TextDecoder().decode(evt.data.subarray()))\n * })\n * ```\n *\n * ## WebRTC Direct certificate hashes\n *\n * WebRTC Direct listeners publish the hash of their TLS certificate as part of\n * the listening multiaddr.\n *\n * By default these certificates are generated at start up using an ephemeral\n * keypair that only exists while the node is running.\n *\n * This means that the certificate hashes change when the node is restarted,\n * which can be undesirable if multiaddrs are intended to be long lived (e.g.\n * if the node is used as a network bootstrapper).\n *\n * To reuse the same certificate and keypair, configure a persistent datastore\n * and the [@libp2p/keychain](https://www.npmjs.com/package/@libp2p/keychain)\n * service as part of your service map:\n *\n * @example Reuse TLS certificates after restart\n *\n * ```ts\n * import { LevelDatastore } from 'datastore-level'\n * import { webRTCDirect } from '@libp2p/webrtc'\n * import { keychain } from '@libp2p/keychain'\n * import { createLibp2p } from 'libp2p'\n *\n * // store data on disk between restarts\n * const datastore = new LevelDatastore('/path/to/store')\n *\n * const listener = await createLibp2p({\n *   addresses: {\n *     listen: [\n *       '/ip4/0.0.0.0/udp/0/webrtc-direct'\n *     ]\n *   },\n *   datastore,\n *   transports: [\n *     webRTCDirect()\n *   ],\n *   services: {\n *     keychain: keychain()\n *   }\n * })\n *\n * await listener.start()\n *\n * console.info(listener.getMultiaddrs())\n * // /ip4/...../udp/../webrtc-direct/certhash/foo\n *\n * await listener.stop()\n * await listener.start()\n *\n * console.info(listener.getMultiaddrs())\n * // /ip4/...../udp/../webrtc-direct/certhash/foo\n * ```\n */\nimport { WebRTCTransport } from './private-to-private/transport.js';\nimport { WebRTCDirectTransport } from './private-to-public/transport.js';\nfunction webRTCDirect(init) {\n    return (components) => new WebRTCDirectTransport(components, init);\n}\nfunction webRTC(init) {\n    return (components) => new WebRTCTransport(components, init);\n}\nexport { webRTC, webRTCDirect };\n//# sourceMappingURL=index.js.map","/**\n * @packageDocumentation\n *\n * This module allows easy conversion of Multiaddrs to string URIs.\n *\n * @example Converting multiaddrs to string URIs\n *\n * ```js\n * import { multiaddrToUri } from '@multiformats/multiaddr-to-uri'\n *\n * console.log(multiaddrToUri('/dnsaddr/protocol.ai/https'))\n * // -> https://protocol.ai\n *\n * console.log(multiaddrToUri('/ip4/127.0.0.1/tcp/8080'))\n * // -> http://127.0.0.1:8080\n *\n * console.log(multiaddrToUri('/ip4/127.0.0.1/tcp/8080', { assumeHttp: false }))\n * // -> tcp://127.0.0.1:8080\n * ```\n *\n * Note:\n *\n * - When `/tcp` is the last (terminating) protocol HTTP is assumed by default (implicit `assumeHttp: true`)\n *   - this means produced URIs will start with `http://` instead of `tcp://`\n *   - passing `{ assumeHttp: false }` disables this behavior\n * - Might be lossy - e.g. a DNSv6 multiaddr\n * - Can throw if the passed multiaddr:\n *   - is not a valid multiaddr\n *   - is not supported as a URI e.g. circuit\n */\nimport { CODE_TCP, CODE_DNS, CODE_DNS4, CODE_DNS6, CODE_DNSADDR, multiaddr, CODE_TLS, CODE_IP6 } from '@multiformats/multiaddr';\nconst ASSUME_HTTP_CODES = [\n    CODE_TCP,\n    CODE_DNS,\n    CODE_DNSADDR,\n    CODE_DNS4,\n    CODE_DNS6\n];\nfunction extractSNI(ma) {\n    return extractTuple('sni', ma)?.value;\n}\nfunction extractPort(ma) {\n    const port = extractTuple('tcp', ma)?.value;\n    if (port == null) {\n        return '';\n    }\n    return `:${port}`;\n}\nfunction extractTuple(name, ma) {\n    return ma.find(component => component.name === name);\n}\nfunction hasTLS(ma) {\n    return ma.some(({ code }) => code === CODE_TLS);\n}\nfunction interpretNext(head, rest) {\n    const interpreter = interpreters[head.name];\n    if (interpreter == null) {\n        throw new Error(`Can't interpret protocol ${head.name}`);\n    }\n    const restVal = interpreter(head, rest);\n    if (head.code === CODE_IP6) {\n        return `[${restVal}]`;\n    }\n    return restVal;\n}\nconst interpreters = {\n    ip4: (head, rest) => head.value,\n    ip6: (head, rest) => {\n        if (rest.length === 0) {\n            return head.value;\n        }\n        return `[${head.value}]`;\n    },\n    tcp: (head, rest) => {\n        const tail = rest.pop();\n        if (tail == null) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        return `tcp://${interpretNext(tail, rest)}:${head.value}`;\n    },\n    udp: (head, rest) => {\n        const tail = rest.pop();\n        if (tail == null) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        return `udp://${interpretNext(tail, rest)}:${head.value}`;\n    },\n    dnsaddr: (head, rest) => head.value,\n    dns4: (head, rest) => head.value,\n    dns6: (head, rest) => head.value,\n    dns: (head, rest) => head.value,\n    ipfs: (head, rest) => {\n        const tail = rest.pop();\n        if (tail == null) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        return `${interpretNext(tail, rest)}`;\n    },\n    p2p: (head, rest) => {\n        const tail = rest.pop();\n        if (tail == null) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        return `${interpretNext(tail, rest)}`;\n    },\n    http: (head, rest) => {\n        const maHasTLS = hasTLS(rest);\n        const sni = extractSNI(rest);\n        const port = extractPort(rest);\n        if (maHasTLS && sni != null) {\n            return `https://${sni}${port}`;\n        }\n        const protocol = maHasTLS ? 'https://' : 'http://';\n        const tail = rest.pop();\n        if (tail == null) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        let baseVal = interpretNext(tail, rest);\n        // We are reinterpreting the base as http, so we need to remove the tcp:// if it's there\n        baseVal = baseVal?.replace('tcp://', '');\n        return `${protocol}${baseVal}`;\n    },\n    'http-path': (head, rest) => {\n        const tail = rest.pop();\n        if (tail == null) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        const baseVal = interpretNext(tail, rest);\n        const decodedValue = decodeURIComponent(head.value ?? '');\n        return `${baseVal}${decodedValue}`;\n    },\n    tls: (head, rest) => {\n        // Noop, the parent context knows that it's tls. We don't need to do\n        // anything here\n        const tail = rest.pop();\n        if (tail == null) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        return interpretNext(tail, rest);\n    },\n    sni: (head, rest) => {\n        // Noop, the parent context uses the sni information, we don't need to do\n        // anything here\n        const tail = rest.pop();\n        if (tail == null) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        return interpretNext(tail, rest);\n    },\n    https: (head, rest) => {\n        const tail = rest.pop();\n        if (tail == null) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        let baseVal = interpretNext(tail, rest);\n        // We are reinterpreting the base as http, so we need to remove the tcp:// if it's there\n        baseVal = baseVal?.replace('tcp://', '');\n        return `https://${baseVal}`;\n    },\n    ws: (head, rest) => {\n        const maHasTLS = hasTLS(rest);\n        const sni = extractSNI(rest);\n        const port = extractPort(rest);\n        if (maHasTLS && sni != null) {\n            return `wss://${sni}${port}`;\n        }\n        const protocol = maHasTLS ? 'wss://' : 'ws://';\n        const tail = rest.pop();\n        if (tail == null) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        let baseVal = interpretNext(tail, rest);\n        // We are reinterpreting the base, so we need to remove the tcp:// if it's there\n        baseVal = baseVal?.replace('tcp://', '');\n        return `${protocol}${baseVal}`;\n    },\n    wss: (head, rest) => {\n        const tail = rest.pop();\n        if (tail == null) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        let baseVal = interpretNext(tail, rest);\n        // We are reinterpreting the base as http, so we need to remove the tcp:// if it's there\n        baseVal = baseVal?.replace('tcp://', '');\n        return `wss://${baseVal}`;\n    }\n};\nexport function multiaddrToUri(input, opts) {\n    const ma = multiaddr(input);\n    const components = ma.getComponents();\n    const head = components.pop();\n    if (head == null) {\n        throw new Error('Unexpected end of multiaddr');\n    }\n    const interpreter = interpreters[head.name];\n    if (interpreter == null) {\n        throw new Error(`No interpreter found for ${head.name}`);\n    }\n    let uri = interpreter(head, components) ?? '';\n    if (opts?.assumeHttp !== false && ASSUME_HTTP_CODES.includes(head.code)) {\n        // strip any declared protocol\n        uri = uri.replace(/^.*:\\/\\//, '');\n        if (head.value === '443') {\n            uri = `https://${uri}`;\n        }\n        else {\n            uri = `http://${uri}`;\n        }\n    }\n    if (uri.startsWith('http://') || uri.startsWith('https://') || uri.startsWith('ws://') || uri.startsWith('wss://')) {\n        // this will strip default ports while keeping paths intact\n        uri = new URL(uri).toString();\n        // strip trailing slash, e.g. http://127.0.0.1/ -> http://127.0.0.1\n        if (uri.endsWith('/')) {\n            uri = uri.substring(0, uri.length - 1);\n        }\n    }\n    return uri;\n}\n//# sourceMappingURL=index.js.map","export function createListener() {\n    throw new Error('WebSocket Servers can not be created in the browser!');\n}\n//# sourceMappingURL=listener.browser.js.map","import { AbstractMultiaddrConnection, repeatingTask } from '@libp2p/utils';\nimport { Uint8ArrayList } from 'uint8arraylist';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nconst DEFAULT_MAX_BUFFERED_AMOUNT = 1024 * 1024 * 4;\nconst DEFAULT_BUFFERED_AMOUNT_POLL_INTERVAL = 10;\nclass WebSocketMultiaddrConnection extends AbstractMultiaddrConnection {\n    websocket;\n    maxBufferedAmount;\n    checkBufferedAmountTask;\n    constructor(init) {\n        super(init);\n        this.websocket = init.websocket;\n        this.maxBufferedAmount = init.maxBufferedAmount ?? DEFAULT_MAX_BUFFERED_AMOUNT;\n        this.checkBufferedAmountTask = repeatingTask(this.checkBufferedAmount.bind(this), init.bufferedAmountPollInterval ?? DEFAULT_BUFFERED_AMOUNT_POLL_INTERVAL);\n        this.websocket.addEventListener('close', (evt) => {\n            this.log('closed - code %d, reason \"%s\", wasClean %s', evt.code, evt.reason, evt.wasClean);\n            this.checkBufferedAmountTask.stop();\n            if (!evt.wasClean) {\n                this.onRemoteReset();\n                return;\n            }\n            this.onTransportClosed();\n        }, { once: true });\n        this.websocket.addEventListener('message', (evt) => {\n            try {\n                let buf;\n                if (typeof evt.data === 'string') {\n                    buf = uint8ArrayFromString(evt.data);\n                }\n                else if (evt.data instanceof ArrayBuffer) {\n                    buf = new Uint8Array(evt.data, 0, evt.data.byteLength);\n                }\n                else {\n                    this.abort(new Error('Incorrect binary type'));\n                    return;\n                }\n                this.onData(buf);\n            }\n            catch (err) {\n                this.log.error('error receiving data - %e', err);\n            }\n        });\n    }\n    sendData(data) {\n        for (const buf of data) {\n            this.websocket.send(buf);\n        }\n        const canSendMore = this.websocket.bufferedAmount < this.maxBufferedAmount;\n        if (!canSendMore) {\n            this.checkBufferedAmountTask.start();\n        }\n        return {\n            sentBytes: data.byteLength,\n            canSendMore\n        };\n    }\n    sendReset() {\n        this.websocket.close(1006); // abnormal closure\n    }\n    async sendClose(options) {\n        this.websocket.close();\n        options?.signal?.throwIfAborted();\n    }\n    sendPause() {\n        // read backpressure is not supported\n    }\n    sendResume() {\n        // read backpressure is not supported\n    }\n    checkBufferedAmount() {\n        this.log('buffered amount now %d', this.websocket.bufferedAmount);\n        if (this.websocket.bufferedAmount === 0) {\n            this.checkBufferedAmountTask.stop();\n            this.safeDispatchEvent('drain');\n        }\n    }\n}\n// Convert a stream into a MultiaddrConnection\n// https://github.com/libp2p/interface-transport#multiaddrconnection\nexport function webSocketToMaConn(init) {\n    return new WebSocketMultiaddrConnection(init);\n}\n//# sourceMappingURL=websocket-to-conn.js.map","/**\n * @packageDocumentation\n *\n * A [libp2p transport](https://docs.libp2p.io/concepts/transports/overview/) based on [WebSockets](https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API).\n *\n * @example\n *\n * ```TypeScript\n * import { createLibp2p } from 'libp2p'\n * import { webSockets } from '@libp2p/websockets'\n * import { multiaddr } from '@multiformats/multiaddr'\n *\n * const node = await createLibp2p({\n *   transports: [\n *     webSockets()\n *   ]\n * //... other config\n * })\n * await node.start()\n *\n * const ma = multiaddr('/dns4/example.com/tcp/9090/tls/ws')\n * await node.dial(ma)\n * ```\n */\nimport { transportSymbol, serviceCapabilities, ConnectionFailedError } from '@libp2p/interface';\nimport { WebSockets as WebSocketsMatcher, WebSocketsSecure } from '@multiformats/multiaddr-matcher';\nimport { multiaddrToUri as toUri } from '@multiformats/multiaddr-to-uri';\nimport { pEvent } from 'p-event';\nimport { CustomProgressEvent } from 'progress-events';\nimport { createListener } from './listener.js';\nimport { webSocketToMaConn } from './websocket-to-conn.js';\nclass WebSockets {\n    log;\n    init;\n    logger;\n    metrics;\n    components;\n    constructor(components, init = {}) {\n        this.log = components.logger.forComponent('libp2p:websockets');\n        this.logger = components.logger;\n        this.components = components;\n        this.init = init;\n        if (components.metrics != null) {\n            this.metrics = {\n                dialerEvents: components.metrics.registerCounterGroup('libp2p_websockets_dialer_events_total', {\n                    label: 'event',\n                    help: 'Total count of WebSockets dialer events by type'\n                })\n            };\n        }\n    }\n    [transportSymbol] = true;\n    [Symbol.toStringTag] = '@libp2p/websockets';\n    [serviceCapabilities] = [\n        '@libp2p/transport'\n    ];\n    async dial(ma, options) {\n        this.log('dialing %s', ma);\n        options = options ?? {};\n        const maConn = webSocketToMaConn({\n            websocket: await this._connect(ma, options),\n            remoteAddr: ma,\n            metrics: this.metrics?.dialerEvents,\n            direction: 'outbound',\n            log: this.components.logger.forComponent('libp2p:websockets:connection'),\n            maxBufferedAmount: this.init.maxBufferedAmount,\n            bufferedAmountPollInterval: this.init.bufferedAmountPollInterval\n        });\n        this.log('new outbound connection %s', maConn.remoteAddr);\n        const conn = await options.upgrader.upgradeOutbound(maConn, options);\n        this.log('outbound connection %s upgraded', maConn.remoteAddr);\n        return conn;\n    }\n    async _connect(ma, options) {\n        options?.signal?.throwIfAborted();\n        const uri = toUri(ma);\n        this.log('create websocket connection to %s', uri);\n        const websocket = new WebSocket(uri);\n        websocket.binaryType = 'arraybuffer';\n        try {\n            options.onProgress?.(new CustomProgressEvent('websockets:open-connection'));\n            await pEvent(websocket, 'open', options);\n        }\n        catch (err) {\n            if (options.signal?.aborted) {\n                this.metrics?.dialerEvents.increment({ abort: true });\n                throw new ConnectionFailedError(`Could not connect to ${uri}`);\n            }\n            else {\n                this.metrics?.dialerEvents.increment({ error: true });\n            }\n            try {\n                websocket.close();\n            }\n            catch { }\n            throw err;\n        }\n        this.log('connected %s', ma);\n        this.metrics?.dialerEvents.increment({ connect: true });\n        return websocket;\n    }\n    /**\n     * Creates a WebSockets listener. The provided `handler` function will be called\n     * anytime a new incoming Connection has been successfully upgraded via\n     * `upgrader.upgradeInbound`\n     */\n    createListener(options) {\n        return createListener({\n            logger: this.logger,\n            events: this.components.events,\n            metrics: this.components.metrics\n        }, {\n            ...this.init,\n            ...options\n        });\n    }\n    listenFilter(multiaddrs) {\n        return multiaddrs.filter(ma => WebSocketsMatcher.exactMatch(ma) || WebSocketsSecure.exactMatch(ma));\n    }\n    dialFilter(multiaddrs) {\n        return this.listenFilter(multiaddrs);\n    }\n}\nexport function webSockets(init = {}) {\n    return (components) => {\n        return new WebSockets(components, init);\n    };\n}\n//# sourceMappingURL=index.js.map","export var FrameType;\n(function (FrameType) {\n    /** Used to transmit data. May transmit zero length payloads depending on the flags. */\n    FrameType[FrameType[\"Data\"] = 0] = \"Data\";\n    /** Used to updated the senders receive window size. This is used to implement per-session flow control. */\n    FrameType[FrameType[\"WindowUpdate\"] = 1] = \"WindowUpdate\";\n    /** Used to measure RTT. It can also be used to heart-beat and do keep-alive over TCP. */\n    FrameType[FrameType[\"Ping\"] = 2] = \"Ping\";\n    /** Used to close a session. */\n    FrameType[FrameType[\"GoAway\"] = 3] = \"GoAway\";\n})(FrameType || (FrameType = {}));\nexport var Flag;\n(function (Flag) {\n    /** Signals the start of a new stream. May be sent with a data or window update message. Also sent with a ping to indicate outbound. */\n    Flag[Flag[\"SYN\"] = 1] = \"SYN\";\n    /** Acknowledges the start of a new stream. May be sent with a data or window update message. Also sent with a ping to indicate response. */\n    Flag[Flag[\"ACK\"] = 2] = \"ACK\";\n    /** Performs a half-close of a stream. May be sent with a data message or window update. */\n    Flag[Flag[\"FIN\"] = 4] = \"FIN\";\n    /** Reset a stream immediately. May be sent with a data or window update message. */\n    Flag[Flag[\"RST\"] = 8] = \"RST\";\n})(Flag || (Flag = {}));\nconst flagCodes = Object.values(Flag).filter((x) => typeof x !== 'string');\nexport const YAMUX_VERSION = 0;\nexport var GoAwayCode;\n(function (GoAwayCode) {\n    GoAwayCode[GoAwayCode[\"NormalTermination\"] = 0] = \"NormalTermination\";\n    GoAwayCode[GoAwayCode[\"ProtocolError\"] = 1] = \"ProtocolError\";\n    GoAwayCode[GoAwayCode[\"InternalError\"] = 2] = \"InternalError\";\n})(GoAwayCode || (GoAwayCode = {}));\nexport const HEADER_LENGTH = 12;\nexport function stringifyHeader(header) {\n    const flags = flagCodes.filter(f => (header.flag & f) === f).map(f => Flag[f]).join('|');\n    return `streamID=${header.streamID} type=${FrameType[header.type]} flag=${flags} length=${header.length}`;\n}\n//# sourceMappingURL=frame.js.map","import { GoAwayCode } from \"./frame.js\";\nexport class ProtocolError extends Error {\n    static name = 'ProtocolError';\n    reason;\n    constructor(message, reason) {\n        super(message);\n        this.name = 'ProtocolError';\n        this.reason = reason;\n    }\n}\nexport function isProtocolError(err) {\n    return err?.reason !== null;\n}\nexport class InvalidFrameError extends ProtocolError {\n    static name = 'InvalidFrameError';\n    constructor(message = 'The frame was invalid') {\n        super(message, GoAwayCode.ProtocolError);\n        this.name = 'InvalidFrameError';\n    }\n}\nexport class UnRequestedPingError extends ProtocolError {\n    static name = 'UnRequestedPingError';\n    constructor(message = 'Un-requested ping error') {\n        super(message, GoAwayCode.ProtocolError);\n        this.name = 'UnRequestedPingError';\n    }\n}\nexport class NotMatchingPingError extends ProtocolError {\n    static name = 'NotMatchingPingError';\n    constructor(message = 'Not matching ping error') {\n        super(message, GoAwayCode.ProtocolError);\n        this.name = 'NotMatchingPingError';\n    }\n}\nexport class InvalidStateError extends Error {\n    static name = 'InvalidStateError';\n    constructor(message = 'Invalid state') {\n        super(message);\n        this.name = 'InvalidStateError';\n    }\n}\nexport class StreamAlreadyExistsError extends ProtocolError {\n    static name = 'StreamAlreadyExistsError';\n    constructor(message = 'Stream already exists') {\n        super(message, GoAwayCode.ProtocolError);\n        this.name = 'StreamAlreadyExistsError';\n    }\n}\nexport class DecodeInvalidVersionError extends ProtocolError {\n    static name = 'DecodeInvalidVersionError';\n    constructor(message = 'Decode invalid version') {\n        super(message, GoAwayCode.ProtocolError);\n        this.name = 'DecodeInvalidVersionError';\n    }\n}\nexport class BothClientsError extends ProtocolError {\n    static name = 'BothClientsError';\n    constructor(message = 'Both clients') {\n        super(message, GoAwayCode.ProtocolError);\n        this.name = 'BothClientsError';\n    }\n}\nexport class ReceiveWindowExceededError extends ProtocolError {\n    static name = 'ReceiveWindowExceededError';\n    constructor(message = 'Receive window exceeded') {\n        super(message, GoAwayCode.ProtocolError);\n        this.name = 'ReceiveWindowExceededError';\n    }\n}\n//# sourceMappingURL=errors.js.map","// Protocol violation errors\nimport { BothClientsError, DecodeInvalidVersionError, InvalidFrameError, NotMatchingPingError, ReceiveWindowExceededError, StreamAlreadyExistsError, UnRequestedPingError } from './errors.js';\nexport const PROTOCOL_ERRORS = new Set([\n    InvalidFrameError.name,\n    UnRequestedPingError.name,\n    NotMatchingPingError.name,\n    StreamAlreadyExistsError.name,\n    DecodeInvalidVersionError.name,\n    BothClientsError.name,\n    ReceiveWindowExceededError.name\n]);\n/**\n * INITIAL_STREAM_WINDOW is the initial stream window size.\n *\n * Not an implementation choice, this is defined in the specification\n */\nexport const INITIAL_STREAM_WINDOW = 256 * 1024;\n/**\n * Default max stream window\n */\nexport const MAX_STREAM_WINDOW = 16 * 1024 * 1024;\n//# sourceMappingURL=constants.js.map","import { InvalidParametersError } from '@libp2p/interface';\nimport { INITIAL_STREAM_WINDOW, MAX_STREAM_WINDOW } from './constants.js';\nexport const defaultConfig = {\n    enableKeepAlive: true,\n    keepAliveInterval: 30_000,\n    maxInboundStreams: 1_000,\n    maxOutboundStreams: 1_000,\n    maxMessageSize: 64 * 1024,\n    maxEarlyStreams: 10,\n    streamOptions: {\n        initialStreamWindowSize: INITIAL_STREAM_WINDOW,\n        maxStreamWindowSize: MAX_STREAM_WINDOW,\n        inactivityTimeout: 120_000,\n        maxReadBufferLength: 4_194_304,\n        maxWriteBufferLength: Infinity\n    }\n};\nexport function verifyConfig(config) {\n    if (config.keepAliveInterval != null && config.keepAliveInterval <= 0) {\n        throw new InvalidParametersError('keep-alive interval must be positive');\n    }\n    if (config.maxInboundStreams != null && config.maxInboundStreams < 0) {\n        throw new InvalidParametersError('max inbound streams must be larger or equal 0');\n    }\n    if (config.maxOutboundStreams != null && config.maxOutboundStreams < 0) {\n        throw new InvalidParametersError('max outbound streams must be larger or equal 0');\n    }\n    if (config.maxMessageSize != null && config.maxMessageSize < 1024) {\n        throw new InvalidParametersError('MaxMessageSize must be greater than a kilobyte');\n    }\n    if (config.streamOptions?.initialStreamWindowSize != null && config.streamOptions?.initialStreamWindowSize < INITIAL_STREAM_WINDOW) {\n        throw new InvalidParametersError('InitialStreamWindowSize must be larger or equal 256 kB');\n    }\n    if (config.streamOptions?.maxStreamWindowSize != null && config.streamOptions?.initialStreamWindowSize != null && config.streamOptions?.maxStreamWindowSize < config.streamOptions?.initialStreamWindowSize) {\n        throw new InvalidParametersError('MaxStreamWindowSize must be larger than the InitialStreamWindowSize');\n    }\n    if (config.streamOptions?.maxStreamWindowSize != null && config.streamOptions?.maxStreamWindowSize > 2 ** 32 - 1) {\n        throw new InvalidParametersError('MaxStreamWindowSize must be less than equal MAX_UINT32');\n    }\n}\n//# sourceMappingURL=config.js.map","import { Uint8ArrayList } from 'uint8arraylist';\nimport { InvalidFrameError } from './errors.js';\nimport { FrameType, HEADER_LENGTH, YAMUX_VERSION } from './frame.js';\nexport function isDataFrame(frame) {\n    return frame.header.type === FrameType.Data && frame.data !== null;\n}\n// used to bit shift in decoding\n// native bit shift can overflow into a negative number, so we bit shift by\n// multiplying by a power of 2\nconst twoPow24 = 2 ** 24;\n/**\n * Decode a header from the front of a buffer\n *\n * @param data - Assumed to have enough bytes for a header\n */\nexport function decodeHeader(data) {\n    if (data[0] !== YAMUX_VERSION) {\n        throw new InvalidFrameError('Invalid frame version');\n    }\n    return {\n        type: data[1],\n        flag: (data[2] << 8) + data[3],\n        streamID: (data[4] * twoPow24) + (data[5] << 16) + (data[6] << 8) + data[7],\n        length: (data[8] * twoPow24) + (data[9] << 16) + (data[10] << 8) + data[11]\n    };\n}\n/**\n * Decodes yamux frames from a source\n */\nexport class Decoder {\n    /** Buffer for in-progress frames */\n    buffer;\n    constructor() {\n        this.buffer = new Uint8ArrayList();\n    }\n    /**\n     * Emits frames from the decoder source.\n     *\n     * Note: If `readData` is emitted, it _must_ be called before the next iteration\n     * Otherwise an error is thrown\n     */\n    *emitFrames(buf) {\n        this.buffer.append(buf);\n        // Loop to consume as many bytes from the buffer as possible\n        // Eg: when a single chunk contains several frames\n        while (true) {\n            const frame = this.readFrame();\n            if (frame === undefined) {\n                break;\n            }\n            yield frame;\n        }\n    }\n    readFrame() {\n        let frameSize = HEADER_LENGTH;\n        if (this.buffer.byteLength < HEADER_LENGTH) {\n            // not enough data yet\n            return;\n        }\n        // TODO: use sublist?\n        const header = decodeHeader(this.buffer.subarray(0, HEADER_LENGTH));\n        if (header.type === FrameType.Data) {\n            frameSize += header.length;\n            if (this.buffer.byteLength < frameSize) {\n                // not enough data yet\n                return;\n            }\n            const data = this.buffer.sublist(HEADER_LENGTH, frameSize);\n            this.buffer.consume(frameSize);\n            return { header, data };\n        }\n        this.buffer.consume(frameSize);\n        return { header };\n    }\n}\n//# sourceMappingURL=decode.js.map","import { HEADER_LENGTH } from './frame.js';\nexport function encodeHeader(header) {\n    const frame = new Uint8Array(HEADER_LENGTH);\n    // always assume version 0\n    // frameView.setUint8(0, header.version)\n    frame[1] = header.type;\n    frame[2] = header.flag >>> 8;\n    frame[3] = header.flag;\n    frame[4] = header.streamID >>> 24;\n    frame[5] = header.streamID >>> 16;\n    frame[6] = header.streamID >>> 8;\n    frame[7] = header.streamID;\n    frame[8] = header.length >>> 24;\n    frame[9] = header.length >>> 16;\n    frame[10] = header.length >>> 8;\n    frame[11] = header.length;\n    return frame;\n}\n//# sourceMappingURL=encode.js.map","import { AbstractStream } from '@libp2p/utils';\nimport { Uint8ArrayList } from 'uint8arraylist';\nimport { INITIAL_STREAM_WINDOW, MAX_STREAM_WINDOW } from './constants.js';\nimport { isDataFrame } from \"./decode.js\";\nimport { InvalidFrameError, ReceiveWindowExceededError } from './errors.js';\nimport { Flag, FrameType, HEADER_LENGTH } from './frame.js';\nexport var StreamState;\n(function (StreamState) {\n    StreamState[StreamState[\"Init\"] = 0] = \"Init\";\n    StreamState[StreamState[\"SYNSent\"] = 1] = \"SYNSent\";\n    StreamState[StreamState[\"SYNReceived\"] = 2] = \"SYNReceived\";\n    StreamState[StreamState[\"Established\"] = 3] = \"Established\";\n    StreamState[StreamState[\"Finished\"] = 4] = \"Finished\";\n    StreamState[StreamState[\"Paused\"] = 5] = \"Paused\";\n})(StreamState || (StreamState = {}));\n/** YamuxStream is used to represent a logical stream within a session */\nexport class YamuxStream extends AbstractStream {\n    streamId;\n    state;\n    /** The number of available bytes to send */\n    sendWindowCapacity;\n    /** The number of bytes available to receive in a full window */\n    recvWindow;\n    /** The number of available bytes to receive */\n    recvWindowCapacity;\n    maxStreamWindowSize;\n    /**\n     * An 'epoch' is the time it takes to process and read data\n     *\n     * Used in conjunction with RTT to determine whether to increase the recvWindow\n     */\n    epochStart;\n    getRTT;\n    sendFrame;\n    constructor(init) {\n        const initialWindowSize = init.initialStreamWindowSize ?? INITIAL_STREAM_WINDOW;\n        super({\n            ...init,\n            maxMessageSize: initialWindowSize - HEADER_LENGTH\n        });\n        this.streamId = init.streamId;\n        this.state = init.state;\n        this.sendWindowCapacity = initialWindowSize;\n        this.recvWindow = initialWindowSize;\n        this.recvWindowCapacity = this.recvWindow;\n        this.maxStreamWindowSize = init.maxStreamWindowSize ?? MAX_STREAM_WINDOW;\n        this.epochStart = Date.now();\n        this.getRTT = init.getRTT;\n        this.sendFrame = init.sendFrame;\n        const setStateToFinishedOnCloseListener = () => {\n            this.state = StreamState.Finished;\n        };\n        this.addEventListener('close', setStateToFinishedOnCloseListener);\n    }\n    /**\n     * Send a data message to the remote muxer\n     */\n    sendData(buf) {\n        const totalBytes = buf.byteLength;\n        let sentBytes = 0;\n        let canSendMore = true;\n        this.log?.trace('send window capacity is %d bytes', this.sendWindowCapacity);\n        // send in chunks, waiting for window updates\n        while (buf.byteLength > 0) {\n            // we exhausted the send window, sending will resume later\n            if (this.sendWindowCapacity === 0) {\n                canSendMore = false;\n                this.log?.trace('sent %d/%d bytes, exhausted send window, waiting for window update', sentBytes, totalBytes);\n                break;\n            }\n            // send as much as we can\n            const toSend = Math.min(this.sendWindowCapacity, buf.byteLength);\n            const flags = this.getSendFlags();\n            const data = buf.sublist(0, toSend);\n            buf.consume(toSend);\n            const muxerSendMore = this.sendFrame({\n                type: FrameType.Data,\n                flag: flags,\n                streamID: this.streamId,\n                length: toSend\n            }, data);\n            this.sendWindowCapacity -= toSend;\n            sentBytes += toSend;\n            if (!muxerSendMore) {\n                canSendMore = muxerSendMore;\n                this.log.trace('sent %d/%d bytes, wait for muxer to have more send capacity', sentBytes, totalBytes);\n                break;\n            }\n        }\n        return {\n            sentBytes,\n            canSendMore\n        };\n    }\n    /**\n     * Send a reset message to the remote muxer\n     */\n    sendReset() {\n        this.sendFrame({\n            type: FrameType.WindowUpdate,\n            flag: Flag.RST,\n            streamID: this.streamId,\n            length: 0\n        });\n    }\n    /**\n     * Send a message to the remote muxer, informing them no more data messages\n     * will be sent by this end of the stream\n     */\n    async sendCloseWrite() {\n        const flags = this.getSendFlags() | Flag.FIN;\n        this.sendFrame({\n            type: FrameType.WindowUpdate,\n            flag: flags,\n            streamID: this.streamId,\n            length: 0\n        });\n    }\n    /**\n     * Send a message to the remote muxer, informing them no more data messages\n     * will be read by this end of the stream - this is a no-op on Yamux streams\n     */\n    async sendCloseRead(options) {\n        options?.signal?.throwIfAborted();\n    }\n    /**\n     * Stop sending window updates temporarily - in the interim the the remote\n     * send window will exhaust and the remote will stop sending data\n     */\n    sendPause() {\n        this.state = StreamState.Paused;\n    }\n    /**\n     * Start sending window updates as normal\n     */\n    sendResume() {\n        this.state = StreamState.Established;\n        this.sendWindowUpdate();\n    }\n    /**\n     * handleWindowUpdate is called when the stream receives a window update frame\n     */\n    handleWindowUpdate(frame) {\n        this.processFlags(frame.header.flag);\n        // increase send window\n        this.sendWindowCapacity += frame.header.length;\n        // change the chunk size the superclass uses\n        this.maxMessageSize = this.sendWindowCapacity - HEADER_LENGTH;\n        if (this.maxMessageSize < 0) {\n            this.maxMessageSize = 0;\n        }\n        if (this.maxMessageSize === 0) {\n            return;\n        }\n        // if writing is paused and the update increases our send window, notify\n        // writers that writing can resume\n        if (this.writeBuffer.byteLength > 0) {\n            this.log?.trace('window update of %d bytes allows more data to be sent, have %d bytes queued, sending data %s', frame.header.length, this.writeBuffer.byteLength, this.sendingData);\n            this.safeDispatchEvent('drain');\n        }\n    }\n    /**\n     * handleData is called when the stream receives a data frame\n     */\n    handleData(frame) {\n        if (!isDataFrame(frame)) {\n            throw new InvalidFrameError('Frame was not data frame');\n        }\n        this.processFlags(frame.header.flag);\n        // check that our recv window is not exceeded\n        if (this.recvWindowCapacity < frame.header.length) {\n            throw new ReceiveWindowExceededError('Receive window exceeded');\n        }\n        this.recvWindowCapacity -= frame.header.length;\n        this.onData(frame.data);\n        this.sendWindowUpdate();\n    }\n    /**\n     * processFlags is used to update the state of the stream based on set flags, if any.\n     */\n    processFlags(flags) {\n        if ((flags & Flag.ACK) === Flag.ACK) {\n            if (this.state === StreamState.SYNSent) {\n                this.state = StreamState.Established;\n            }\n        }\n        if ((flags & Flag.FIN) === Flag.FIN) {\n            this.onRemoteCloseWrite();\n        }\n        if ((flags & Flag.RST) === Flag.RST) {\n            this.onRemoteReset();\n        }\n    }\n    /**\n     * getSendFlags determines any flags that are appropriate\n     * based on the current stream state.\n     *\n     * The state is updated as a side-effect.\n     */\n    getSendFlags() {\n        switch (this.state) {\n            case StreamState.Init:\n                this.state = StreamState.SYNSent;\n                return Flag.SYN;\n            case StreamState.SYNReceived:\n                this.state = StreamState.Established;\n                return Flag.ACK;\n            default:\n                return 0;\n        }\n    }\n    /**\n     * Potentially sends a window update enabling further remote writes to take\n     * place.\n     */\n    sendWindowUpdate() {\n        if (this.state === StreamState.Paused) {\n            // we don't want any more data from the remote right now - update the\n            // epoch start as otherwise when we unpause we'd be looking at the epoch\n            // start from before we were paused\n            this.epochStart = Date.now();\n            return;\n        }\n        // determine the flags if any\n        const flags = this.getSendFlags();\n        // If the stream has already been established\n        // and we've processed data within the time it takes for 4 round trips\n        // then we (up to) double the recvWindow\n        const now = Date.now();\n        const rtt = this.getRTT();\n        if (flags === 0 && rtt > -1 && (now - this.epochStart) <= (rtt * 4)) {\n            // we've already validated that maxStreamWindowSize can't be more than MAX_UINT32\n            this.recvWindow = Math.min(this.recvWindow * 2, this.maxStreamWindowSize);\n        }\n        if (this.recvWindowCapacity >= this.recvWindow && flags === 0) {\n            // a window update isn't needed\n            return;\n        }\n        // update the receive window\n        const delta = this.recvWindow - this.recvWindowCapacity;\n        this.recvWindowCapacity = this.recvWindow;\n        // update the epoch start\n        this.epochStart = now;\n        // send window update\n        this.sendFrame({\n            type: FrameType.WindowUpdate,\n            flag: flags,\n            streamID: this.streamId,\n            length: delta\n        });\n    }\n}\n//# sourceMappingURL=stream.js.map","import { InvalidParametersError, MuxerClosedError, TooManyOutboundProtocolStreamsError, serviceCapabilities } from '@libp2p/interface';\nimport { AbstractStreamMuxer, repeatingTask } from '@libp2p/utils';\nimport { raceSignal } from 'race-signal';\nimport { Uint8ArrayList } from 'uint8arraylist';\nimport { defaultConfig, verifyConfig } from './config.js';\nimport { Decoder } from './decode.js';\nimport { encodeHeader } from './encode.js';\nimport { InvalidFrameError, isProtocolError, NotMatchingPingError, UnRequestedPingError } from './errors.js';\nimport { Flag, FrameType, GoAwayCode } from './frame.js';\nimport { StreamState, YamuxStream } from './stream.js';\nfunction debugFrame(header) {\n    return {\n        type: FrameType[header.type],\n        flags: [\n            (header.flag & Flag.SYN) === Flag.SYN ? 'SYN' : undefined,\n            (header.flag & Flag.ACK) === Flag.ACK ? 'ACK' : undefined,\n            (header.flag & Flag.FIN) === Flag.FIN ? 'FIN' : undefined,\n            (header.flag & Flag.RST) === Flag.RST ? 'RST' : undefined\n        ].filter(Boolean),\n        streamID: header.streamID,\n        length: header.length\n    };\n}\nconst YAMUX_PROTOCOL_ID = '/yamux/1.0.0';\nexport class Yamux {\n    protocol = YAMUX_PROTOCOL_ID;\n    _init;\n    constructor(init = {}) {\n        this._init = init;\n    }\n    [Symbol.toStringTag] = '@chainsafe/libp2p-yamux';\n    [serviceCapabilities] = [\n        '@libp2p/stream-multiplexing'\n    ];\n    createStreamMuxer(maConn) {\n        return new YamuxMuxer(maConn, {\n            ...this._init\n        });\n    }\n}\nexport class YamuxMuxer extends AbstractStreamMuxer {\n    /** The next stream id to be used when initiating a new stream */\n    nextStreamID;\n    /** The next ping id to be used when pinging */\n    nextPingID;\n    /** Tracking info for the currently active ping */\n    activePing;\n    /** Round trip time */\n    rtt;\n    /** True if client, false if server */\n    client;\n    localGoAway;\n    remoteGoAway;\n    /** Number of tracked inbound streams */\n    numInboundStreams;\n    /** Number of tracked outbound streams */\n    numOutboundStreams;\n    decoder;\n    keepAlive;\n    enableKeepAlive;\n    keepAliveInterval;\n    maxInboundStreams;\n    maxOutboundStreams;\n    constructor(maConn, init = {}) {\n        super(maConn, {\n            ...init,\n            protocol: YAMUX_PROTOCOL_ID,\n            name: 'yamux'\n        });\n        this.client = maConn.direction === 'outbound';\n        verifyConfig(init);\n        this.enableKeepAlive = init.enableKeepAlive ?? defaultConfig.enableKeepAlive;\n        this.keepAliveInterval = init.keepAliveInterval ?? defaultConfig.keepAliveInterval;\n        this.maxInboundStreams = init.maxInboundStreams ?? defaultConfig.maxInboundStreams;\n        this.maxOutboundStreams = init.maxOutboundStreams ?? defaultConfig.maxOutboundStreams;\n        this.decoder = new Decoder();\n        this.numInboundStreams = 0;\n        this.numOutboundStreams = 0;\n        // client uses odd streamIDs, server uses even streamIDs\n        this.nextStreamID = this.client ? 1 : 2;\n        this.nextPingID = 0;\n        this.rtt = -1;\n        this.log.trace('muxer created');\n        if (this.enableKeepAlive) {\n            this.log.trace('muxer keepalive enabled interval=%s', this.keepAliveInterval);\n            this.keepAlive = repeatingTask(async (options) => {\n                try {\n                    await this.ping(options);\n                }\n                catch (err) {\n                    // TODO: should abort here?\n                    this.log.error('ping error: %s', err);\n                }\n            }, this.keepAliveInterval, {\n                // send an initial ping to establish RTT\n                runImmediately: true\n            });\n            this.keepAlive.start();\n        }\n    }\n    onData(buf) {\n        for (const frame of this.decoder.emitFrames(buf)) {\n            this.handleFrame(frame);\n        }\n    }\n    onCreateStream() {\n        if (this.remoteGoAway !== undefined) {\n            throw new MuxerClosedError('Muxer closed remotely');\n        }\n        if (this.localGoAway !== undefined) {\n            throw new MuxerClosedError('Muxer closed locally');\n        }\n        const id = this.nextStreamID;\n        this.nextStreamID += 2;\n        // check against our configured maximum number of outbound streams\n        if (this.numOutboundStreams >= this.maxOutboundStreams) {\n            throw new TooManyOutboundProtocolStreamsError('max outbound streams exceeded');\n        }\n        this.log.trace('new outgoing stream id=%s', id);\n        const stream = this._newStream(id, StreamState.Init, 'outbound');\n        this.numOutboundStreams++;\n        // send a window update to open the stream on the receiver end. do this in a\n        // microtask so the stream gets added to the streams array by the superclass\n        // before we send the SYN flag, otherwise we create a race condition whereby\n        // we can receive the ACK before the stream is added to the streams list\n        queueMicrotask(() => {\n            stream.sendWindowUpdate();\n        });\n        return stream;\n    }\n    /**\n     * Initiate a ping and wait for a response\n     *\n     * Note: only a single ping will be initiated at a time.\n     * If a ping is already in progress, a new ping will not be initiated.\n     *\n     * @returns the round-trip-time in milliseconds\n     */\n    async ping(options) {\n        if (this.remoteGoAway !== undefined) {\n            throw new MuxerClosedError('Muxer closed remotely');\n        }\n        if (this.localGoAway !== undefined) {\n            throw new MuxerClosedError('Muxer closed locally');\n        }\n        if (this.activePing != null) {\n            // an active ping is already in progress, piggyback off that\n            return raceSignal(this.activePing.promise, options?.signal);\n        }\n        // An active ping does not yet exist, handle the process here\n        // create active ping\n        this.activePing = Object.assign(Promise.withResolvers(), {\n            id: this.nextPingID++,\n            start: Date.now()\n        });\n        // send ping\n        this.sendPing(this.activePing.id);\n        // await pong\n        try {\n            this.rtt = await raceSignal(this.activePing.promise, options?.signal);\n        }\n        finally {\n            // clean-up active ping\n            this.activePing = undefined;\n        }\n        return this.rtt;\n    }\n    /**\n     * Get the ping round trip time\n     *\n     * Note: Will return 0 if no successful ping has yet been completed\n     *\n     * @returns the round-trip-time in milliseconds\n     */\n    getRTT() {\n        return this.rtt;\n    }\n    /**\n     * Close the muxer\n     */\n    async close(options = {}) {\n        if (this.status !== 'open') {\n            // already closed\n            return;\n        }\n        try {\n            const reason = options?.reason ?? GoAwayCode.NormalTermination;\n            this.log.trace('muxer close reason=%s', GoAwayCode[reason]);\n            await super.close(options);\n            // send reason to the other side, allow the other side to close gracefully\n            this.sendGoAway(reason);\n        }\n        finally {\n            this.keepAlive?.stop();\n        }\n    }\n    abort(err) {\n        if (this.status !== 'open') {\n            // already closed\n            return;\n        }\n        try {\n            super.abort(err);\n            let reason = GoAwayCode.InternalError;\n            if (isProtocolError(err)) {\n                reason = err.reason;\n            }\n            // If reason was provided, use that, otherwise use the presence of `err` to determine the reason\n            this.log.error('muxer abort reason=%s error=%s', reason, err);\n            // send reason to the other side, allow the other side to close gracefully\n            this.sendGoAway(reason);\n        }\n        finally {\n            this.keepAlive?.stop();\n        }\n    }\n    onTransportClosed() {\n        try {\n            super.onTransportClosed();\n        }\n        finally {\n            this.keepAlive?.stop();\n        }\n    }\n    /** Create a new stream */\n    _newStream(streamId, state, direction) {\n        if (this.streams.find(s => s.streamId === streamId) != null) {\n            throw new InvalidParametersError('Stream already exists with that id');\n        }\n        const stream = new YamuxStream({\n            ...this.streamOptions,\n            id: `${streamId}`,\n            streamId,\n            state,\n            direction,\n            sendFrame: this.sendFrame.bind(this),\n            log: this.log.newScope(`${direction}:${streamId}`),\n            getRTT: this.getRTT.bind(this)\n        });\n        stream.addEventListener('close', () => {\n            this.closeStream(streamId);\n        }, {\n            once: true\n        });\n        return stream;\n    }\n    /**\n     * closeStream is used to close a stream once both sides have\n     * issued a close.\n     */\n    closeStream(id) {\n        if (this.client === (id % 2 === 0)) {\n            this.numInboundStreams--;\n        }\n        else {\n            this.numOutboundStreams--;\n        }\n    }\n    handleFrame(frame) {\n        const { streamID, type, length } = frame.header;\n        this.log.trace('received frame %o', debugFrame(frame.header));\n        if (streamID === 0) {\n            switch (type) {\n                case FrameType.Ping:\n                    {\n                        this.handlePing(frame.header);\n                        return;\n                    }\n                case FrameType.GoAway:\n                    {\n                        this.handleGoAway(length);\n                        return;\n                    }\n                default:\n                    // Invalid state\n                    throw new InvalidFrameError('Invalid frame type');\n            }\n        }\n        else {\n            switch (frame.header.type) {\n                case FrameType.Data:\n                case FrameType.WindowUpdate:\n                    {\n                        this.handleStreamMessage(frame);\n                        return;\n                    }\n                default:\n                    // Invalid state\n                    throw new InvalidFrameError('Invalid frame type');\n            }\n        }\n    }\n    handlePing(header) {\n        // If the ping  is initiated by the sender, send a response\n        if (header.flag === Flag.SYN) {\n            this.log.trace('received ping request pingId=%s', header.length);\n            this.sendPing(header.length, Flag.ACK);\n        }\n        else if (header.flag === Flag.ACK) {\n            this.log.trace('received ping response pingId=%s', header.length);\n            this.handlePingResponse(header.length);\n        }\n        else {\n            // Invalid state\n            throw new InvalidFrameError('Invalid frame flag');\n        }\n    }\n    handlePingResponse(pingId) {\n        if (this.activePing === undefined) {\n            // this ping was not requested\n            throw new UnRequestedPingError('ping not requested');\n        }\n        if (this.activePing.id !== pingId) {\n            // this ping doesn't match our active ping request\n            throw new NotMatchingPingError('ping doesn\\'t match our id');\n        }\n        // valid ping response\n        this.activePing.resolve(Date.now() - this.activePing.start);\n    }\n    handleGoAway(reason) {\n        this.log.trace('received GoAway reason=%s', GoAwayCode[reason] ?? 'unknown');\n        this.remoteGoAway = reason;\n        if (reason === GoAwayCode.NormalTermination) {\n            this.onTransportClosed();\n        }\n        else {\n            // reset any streams that are still open and close the muxer\n            this.abort(new Error('Remote sent GoAway'));\n        }\n    }\n    handleStreamMessage(frame) {\n        const { streamID, flag, type } = frame.header;\n        if ((flag & Flag.SYN) === Flag.SYN) {\n            this.incomingStream(streamID);\n        }\n        const stream = this.streams.find(s => s.streamId === streamID);\n        if (stream === undefined) {\n            this.log.trace('frame for missing stream id=%s', streamID);\n            return;\n        }\n        switch (type) {\n            case FrameType.WindowUpdate: {\n                stream.handleWindowUpdate(frame);\n                return;\n            }\n            case FrameType.Data: {\n                stream.handleData(frame);\n                return;\n            }\n            default:\n                throw new Error('unreachable');\n        }\n    }\n    incomingStream(id) {\n        if (this.client !== (id % 2 === 0)) {\n            throw new InvalidParametersError('Both endpoints are clients');\n        }\n        if (this.streams.find(s => s.streamId === id)) {\n            return;\n        }\n        this.log.trace('new incoming stream id=%s', id);\n        if (this.localGoAway !== undefined) {\n            // reject (reset) immediately if we are doing a go away\n            this.sendFrame({\n                type: FrameType.WindowUpdate,\n                flag: Flag.RST,\n                streamID: id,\n                length: 0\n            });\n            return;\n        }\n        // check against our configured maximum number of inbound streams\n        if (this.numInboundStreams >= this.maxInboundStreams) {\n            this.log('maxIncomingStreams exceeded, forcing stream reset');\n            this.sendFrame({\n                type: FrameType.WindowUpdate,\n                flag: Flag.RST,\n                streamID: id,\n                length: 0\n            });\n            return;\n        }\n        // allocate a new stream\n        const stream = this._newStream(id, StreamState.SYNReceived, 'inbound');\n        this.numInboundStreams++;\n        // the stream should now be tracked\n        this.onRemoteStream(stream);\n    }\n    sendFrame(header, data) {\n        let encoded;\n        if (header.type === FrameType.Data) {\n            if (data == null) {\n                throw new InvalidFrameError('Invalid frame');\n            }\n            encoded = new Uint8ArrayList(encodeHeader(header), data);\n        }\n        else {\n            encoded = encodeHeader(header);\n        }\n        this.log.trace('sending frame %o', debugFrame(header));\n        return this.send(encoded);\n    }\n    sendPing(pingId, flag = Flag.SYN) {\n        if (flag === Flag.SYN) {\n            this.log.trace('sending ping request pingId=%s', pingId);\n        }\n        else {\n            this.log.trace('sending ping response pingId=%s', pingId);\n        }\n        this.sendFrame({\n            type: FrameType.Ping,\n            flag,\n            streamID: 0,\n            length: pingId\n        });\n    }\n    sendGoAway(reason = GoAwayCode.NormalTermination) {\n        this.log('sending GoAway reason=%s', GoAwayCode[reason]);\n        this.localGoAway = reason;\n        this.sendFrame({\n            type: FrameType.GoAway,\n            flag: 0,\n            streamID: 0,\n            length: reason\n        });\n    }\n}\n//# sourceMappingURL=muxer.js.map","/**\n * @packageDocumentation\n *\n * This module is a JavaScript implementation of [Yamux from Hashicorp](https://github.com/hashicorp/yamux/blob/master/spec.md) designed to be used with [js-libp2p](https://github.com/libp2p/js-libp2p).\n *\n * @example Configure libp2p with Yamux\n *\n * ```typescript\n * import { createLibp2p } from 'libp2p'\n * import { yamux } from '@chainsafe/libp2p-yamux'\n *\n * const node = await createLibp2p({\n *   // ... other options\n *   streamMuxers: [\n *     yamux()\n *   ]\n * })\n * ```\n *\n * @example Using the low-level API\n *\n * ```js\n * import { yamux } from '@chainsafe/libp2p-yamux'\n * import { pipe } from 'it-pipe'\n * import { duplexPair } from 'it-pair/duplex'\n * import all from 'it-all'\n *\n * // Connect two yamux muxers to demo basic stream multiplexing functionality\n *\n * const clientMuxer = yamux({\n *   client: true,\n *   onIncomingStream: stream => {\n *     // echo data on incoming streams\n *     pipe(stream, stream)\n *   },\n *   onStreamEnd: stream => {\n *     // do nothing\n *   }\n * })()\n *\n * const serverMuxer = yamux({\n *   client: false,\n *   onIncomingStream: stream => {\n *     // echo data on incoming streams\n *     pipe(stream, stream)\n *   },\n *   onStreamEnd: stream => {\n *     // do nothing\n *   }\n * })()\n *\n * // `p` is our \"connections\", what we use to connect the two sides\n * // In a real application, a connection is usually to a remote computer\n * const p = duplexPair()\n *\n * // connect the muxers together\n * pipe(p[0], clientMuxer, p[0])\n * pipe(p[1], serverMuxer, p[1])\n *\n * // now either side can open streams\n * const stream0 = clientMuxer.newStream()\n * const stream1 = serverMuxer.newStream()\n *\n * // Send some data to the other side\n * const encoder = new TextEncoder()\n * const data = [encoder.encode('hello'), encoder.encode('world')]\n * pipe(data, stream0)\n *\n * // Receive data back\n * const result = await pipe(stream0, all)\n *\n * // close a stream\n * stream1.close()\n *\n * // close the muxer\n * clientMuxer.close()\n * ```\n */\nimport { Yamux } from './muxer.js';\nexport { GoAwayCode } from './frame.js';\nexport function yamux(init = {}) {\n    return () => new Yamux(init);\n}\n//# sourceMappingURL=index.js.map","export const PROTOCOL_VERSION = 'ipfs/0.1.0'; // deprecated\nexport const MULTICODEC_IDENTIFY = '/ipfs/id/1.0.0'; // deprecated\nexport const MULTICODEC_IDENTIFY_PUSH = '/ipfs/id/push/1.0.0'; // deprecated\nexport const IDENTIFY_PROTOCOL_VERSION = '0.1.0';\nexport const MULTICODEC_IDENTIFY_PROTOCOL_NAME = 'id';\nexport const MULTICODEC_IDENTIFY_PUSH_PROTOCOL_NAME = 'id/push';\nexport const MULTICODEC_IDENTIFY_PROTOCOL_VERSION = '1.0.0';\nexport const MULTICODEC_IDENTIFY_PUSH_PROTOCOL_VERSION = '1.0.0';\n// https://github.com/libp2p/go-libp2p/blob/8d2e54e1637041d5cf4fac1e531287560bd1f4ac/p2p/protocol/identify/id.go#L52\nexport const MAX_IDENTIFY_MESSAGE_SIZE = 1024 * 8;\n// https://github.com/libp2p/go-libp2p/blob/0385ec924bad172f74a74db09939e97c079b1420/p2p/protocol/identify/id.go#L47C7-L47C25\nexport const MAX_PUSH_CONCURRENCY = 32;\nexport const PUSH_DEBOUNCE_MS = 1_000;\n//# sourceMappingURL=consts.js.map","import { decodeMessage, encodeMessage, MaxLengthError, message } from 'protons-runtime';\nexport var Identify;\n(function (Identify) {\n    let _codec;\n    Identify.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.protocolVersion != null) {\n                    w.uint32(42);\n                    w.string(obj.protocolVersion);\n                }\n                if (obj.agentVersion != null) {\n                    w.uint32(50);\n                    w.string(obj.agentVersion);\n                }\n                if (obj.publicKey != null) {\n                    w.uint32(10);\n                    w.bytes(obj.publicKey);\n                }\n                if (obj.listenAddrs != null) {\n                    for (const value of obj.listenAddrs) {\n                        w.uint32(18);\n                        w.bytes(value);\n                    }\n                }\n                if (obj.observedAddr != null) {\n                    w.uint32(34);\n                    w.bytes(obj.observedAddr);\n                }\n                if (obj.protocols != null) {\n                    for (const value of obj.protocols) {\n                        w.uint32(26);\n                        w.string(value);\n                    }\n                }\n                if (obj.signedPeerRecord != null) {\n                    w.uint32(66);\n                    w.bytes(obj.signedPeerRecord);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    listenAddrs: [],\n                    protocols: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 5: {\n                            obj.protocolVersion = reader.string();\n                            break;\n                        }\n                        case 6: {\n                            obj.agentVersion = reader.string();\n                            break;\n                        }\n                        case 1: {\n                            obj.publicKey = reader.bytes();\n                            break;\n                        }\n                        case 2: {\n                            if (opts.limits?.listenAddrs != null && obj.listenAddrs.length === opts.limits.listenAddrs) {\n                                throw new MaxLengthError('Decode error - map field \"listenAddrs\" had too many elements');\n                            }\n                            obj.listenAddrs.push(reader.bytes());\n                            break;\n                        }\n                        case 4: {\n                            obj.observedAddr = reader.bytes();\n                            break;\n                        }\n                        case 3: {\n                            if (opts.limits?.protocols != null && obj.protocols.length === opts.limits.protocols) {\n                                throw new MaxLengthError('Decode error - map field \"protocols\" had too many elements');\n                            }\n                            obj.protocols.push(reader.string());\n                            break;\n                        }\n                        case 8: {\n                            obj.signedPeerRecord = reader.bytes();\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    Identify.encode = (obj) => {\n        return encodeMessage(obj, Identify.codec());\n    };\n    Identify.decode = (buf, opts) => {\n        return decodeMessage(buf, Identify.codec(), opts);\n    };\n})(Identify || (Identify = {}));\n//# sourceMappingURL=message.js.map","import { publicKeyFromProtobuf } from '@libp2p/crypto/keys';\nimport { InvalidMessageError } from '@libp2p/interface';\nimport { peerIdFromCID, peerIdFromPublicKey } from '@libp2p/peer-id';\nimport { RecordEnvelope, PeerRecord } from '@libp2p/peer-record';\nimport { multiaddr } from '@multiformats/multiaddr';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { IDENTIFY_PROTOCOL_VERSION, MAX_IDENTIFY_MESSAGE_SIZE, MAX_PUSH_CONCURRENCY } from './consts.js';\nexport const defaultValues = {\n    protocolPrefix: 'ipfs',\n    timeout: 5000,\n    maxInboundStreams: 1,\n    maxOutboundStreams: 1,\n    maxObservedAddresses: 10,\n    maxMessageSize: MAX_IDENTIFY_MESSAGE_SIZE,\n    runOnConnectionOpen: true,\n    runOnSelfUpdate: true,\n    runOnLimitedConnection: true,\n    concurrency: MAX_PUSH_CONCURRENCY\n};\n/**\n * Takes the `addr` and converts it to a Multiaddr if possible\n */\nexport function getCleanMultiaddr(addr) {\n    if (addr != null && addr.length > 0) {\n        try {\n            return multiaddr(addr);\n        }\n        catch {\n        }\n    }\n}\nexport async function consumeIdentifyMessage(peerStore, events, log, connection, message) {\n    log('received identify from %p', connection.remotePeer);\n    if (message == null) {\n        throw new InvalidMessageError('message was null or undefined');\n    }\n    const peer = {};\n    if (message.listenAddrs.length > 0) {\n        peer.addresses = message.listenAddrs.map(buf => ({\n            isCertified: false,\n            multiaddr: multiaddr(buf)\n        }));\n    }\n    if (message.protocols.length > 0) {\n        peer.protocols = message.protocols;\n    }\n    if (message.publicKey != null) {\n        const publicKey = publicKeyFromProtobuf(message.publicKey);\n        const peerId = peerIdFromPublicKey(publicKey);\n        if (!peerId.equals(connection.remotePeer)) {\n            throw new InvalidMessageError('public key did not match remote PeerId');\n        }\n        peer.publicKey = publicKey;\n    }\n    let output;\n    // if the peer record has been sent, prefer the addresses in the record as they are signed by the remote peer\n    if (message.signedPeerRecord != null) {\n        log.trace('received signedPeerRecord from %p', connection.remotePeer);\n        let peerRecordEnvelope = message.signedPeerRecord;\n        const envelope = await RecordEnvelope.openAndCertify(peerRecordEnvelope, PeerRecord.DOMAIN);\n        let peerRecord = PeerRecord.createFromProtobuf(envelope.payload);\n        const envelopePeer = peerIdFromCID(envelope.publicKey.toCID());\n        // Verify peerId\n        if (!peerRecord.peerId.equals(envelopePeer)) {\n            throw new InvalidMessageError('signing key does not match PeerId in the PeerRecord');\n        }\n        // Make sure remote peer is the one sending the record\n        if (!connection.remotePeer.equals(peerRecord.peerId)) {\n            throw new InvalidMessageError('signing key does not match remote PeerId');\n        }\n        let existingPeer;\n        try {\n            existingPeer = await peerStore.get(peerRecord.peerId);\n        }\n        catch (err) {\n            if (err.name !== 'NotFoundError') {\n                throw err;\n            }\n        }\n        if (existingPeer != null) {\n            // don't lose any existing metadata\n            peer.metadata = existingPeer.metadata;\n            // if we have previously received a signed record for this peer, compare it to the incoming one\n            if (existingPeer.peerRecordEnvelope != null) {\n                const storedEnvelope = RecordEnvelope.createFromProtobuf(existingPeer.peerRecordEnvelope);\n                const storedRecord = PeerRecord.createFromProtobuf(storedEnvelope.payload);\n                // ensure seq is greater than, or equal to, the last received\n                if (storedRecord.seqNumber >= peerRecord.seqNumber) {\n                    log('sequence number was lower or equal to existing sequence number - stored: %d received: %d', storedRecord.seqNumber, peerRecord.seqNumber);\n                    peerRecord = storedRecord;\n                    peerRecordEnvelope = existingPeer.peerRecordEnvelope;\n                }\n            }\n        }\n        // store the signed record for next time\n        peer.peerRecordEnvelope = peerRecordEnvelope;\n        // override the stored addresses with the signed multiaddrs\n        peer.addresses = peerRecord.multiaddrs.map(multiaddr => ({\n            isCertified: true,\n            multiaddr\n        }));\n        output = {\n            seq: peerRecord.seqNumber,\n            addresses: peerRecord.multiaddrs\n        };\n    }\n    else {\n        log('%p did not send a signed peer record', connection.remotePeer);\n    }\n    log.trace('patching %p with', connection.remotePeer, peer);\n    await peerStore.patch(connection.remotePeer, peer);\n    if (message.agentVersion != null || message.protocolVersion != null) {\n        const metadata = {};\n        if (message.agentVersion != null) {\n            metadata.AgentVersion = uint8ArrayFromString(message.agentVersion);\n        }\n        if (message.protocolVersion != null) {\n            metadata.ProtocolVersion = uint8ArrayFromString(message.protocolVersion);\n        }\n        log.trace('merging %p metadata', connection.remotePeer, metadata);\n        await peerStore.merge(connection.remotePeer, {\n            metadata\n        });\n    }\n    const result = {\n        peerId: connection.remotePeer,\n        protocolVersion: message.protocolVersion,\n        agentVersion: message.agentVersion,\n        publicKey: message.publicKey,\n        listenAddrs: message.listenAddrs.map(buf => multiaddr(buf)),\n        observedAddr: message.observedAddr == null ? undefined : multiaddr(message.observedAddr),\n        protocols: message.protocols,\n        signedPeerRecord: output,\n        connection\n    };\n    events.safeDispatchEvent('peer:identify', { detail: result });\n    return result;\n}\nexport class AbstractIdentify {\n    host;\n    components;\n    protocol;\n    started;\n    timeout;\n    maxInboundStreams;\n    maxOutboundStreams;\n    maxMessageSize;\n    maxObservedAddresses;\n    runOnLimitedConnection;\n    log;\n    constructor(components, init) {\n        this.protocol = init.protocol;\n        this.started = false;\n        this.components = components;\n        this.log = init.log;\n        this.timeout = init.timeout ?? defaultValues.timeout;\n        this.maxInboundStreams = init.maxInboundStreams ?? defaultValues.maxInboundStreams;\n        this.maxOutboundStreams = init.maxOutboundStreams ?? defaultValues.maxOutboundStreams;\n        this.maxMessageSize = init.maxMessageSize ?? defaultValues.maxMessageSize;\n        this.maxObservedAddresses = init.maxObservedAddresses ?? defaultValues.maxObservedAddresses;\n        this.runOnLimitedConnection = init.runOnLimitedConnection ?? defaultValues.runOnLimitedConnection;\n        // Store self host metadata\n        this.host = {\n            protocolVersion: `${init.protocolPrefix ?? defaultValues.protocolPrefix}/${IDENTIFY_PROTOCOL_VERSION}`,\n            agentVersion: components.nodeInfo.userAgent\n        };\n        this.handleProtocol = this.handleProtocol.bind(this);\n    }\n    isStarted() {\n        return this.started;\n    }\n    async start() {\n        if (this.started) {\n            return;\n        }\n        await this.components.peerStore.merge(this.components.peerId, {\n            metadata: {\n                AgentVersion: uint8ArrayFromString(this.host.agentVersion),\n                ProtocolVersion: uint8ArrayFromString(this.host.protocolVersion)\n            }\n        });\n        await this.components.registrar.handle(this.protocol, this.handleProtocol, {\n            maxInboundStreams: this.maxInboundStreams,\n            maxOutboundStreams: this.maxOutboundStreams,\n            runOnLimitedConnection: this.runOnLimitedConnection\n        });\n        this.started = true;\n    }\n    async stop() {\n        await this.components.registrar.unhandle(this.protocol);\n        this.started = false;\n    }\n}\n//# sourceMappingURL=utils.js.map","import { publicKeyFromProtobuf, publicKeyToProtobuf } from '@libp2p/crypto/keys';\nimport { InvalidMessageError, serviceCapabilities } from '@libp2p/interface';\nimport { peerIdFromCID } from '@libp2p/peer-id';\nimport { RecordEnvelope, PeerRecord } from '@libp2p/peer-record';\nimport { isGlobalUnicast, isPrivate, pbStream } from '@libp2p/utils';\nimport { CODE_IP6, CODE_IP6ZONE, CODE_P2P } from '@multiformats/multiaddr';\nimport { IP_OR_DOMAIN, TCP } from '@multiformats/multiaddr-matcher';\nimport { setMaxListeners } from 'main-event';\nimport { MULTICODEC_IDENTIFY_PROTOCOL_NAME, MULTICODEC_IDENTIFY_PROTOCOL_VERSION } from './consts.js';\nimport { Identify as IdentifyMessage } from './pb/message.js';\nimport { AbstractIdentify, consumeIdentifyMessage, defaultValues, getCleanMultiaddr } from './utils.js';\nexport class Identify extends AbstractIdentify {\n    constructor(components, init = {}) {\n        super(components, {\n            ...init,\n            protocol: `/${init.protocolPrefix ?? defaultValues.protocolPrefix}/${MULTICODEC_IDENTIFY_PROTOCOL_NAME}/${MULTICODEC_IDENTIFY_PROTOCOL_VERSION}`,\n            log: components.logger.forComponent('libp2p:identify')\n        });\n        if (init.runOnConnectionOpen ?? defaultValues.runOnConnectionOpen) {\n            // When a new connection happens, trigger identify\n            components.events.addEventListener('connection:open', (evt) => {\n                const connection = evt.detail;\n                this.identify(connection)\n                    .catch(() => { });\n            });\n        }\n    }\n    [serviceCapabilities] = [\n        '@libp2p/identify'\n    ];\n    async _identify(connection, options = {}) {\n        let stream;\n        let log;\n        if (options.signal == null) {\n            const signal = AbortSignal.timeout(this.timeout);\n            setMaxListeners(Infinity, signal);\n            options = {\n                ...options,\n                signal\n            };\n        }\n        this.log('run identify on new connection %a', connection.remoteAddr);\n        try {\n            stream = await connection.newStream(this.protocol, {\n                ...options,\n                runOnLimitedConnection: this.runOnLimitedConnection\n            });\n            log = stream.log.newScope('identify');\n            const pb = pbStream(stream, {\n                maxDataLength: this.maxMessageSize\n            }).pb(IdentifyMessage);\n            const message = await pb.read(options);\n            await pb.unwrap().unwrap().close(options);\n            return message;\n        }\n        catch (err) {\n            log?.error('identify failed - %e', err);\n            stream?.abort(err);\n            throw err;\n        }\n    }\n    async identify(connection, options = {}) {\n        const message = await this._identify(connection, options);\n        const { publicKey, protocols, observedAddr } = message;\n        if (publicKey == null) {\n            throw new InvalidMessageError('Public key was missing from identify message');\n        }\n        const key = publicKeyFromProtobuf(publicKey);\n        const id = peerIdFromCID(key.toCID());\n        if (!connection.remotePeer.equals(id)) {\n            throw new InvalidMessageError('Identified peer does not match the expected peer');\n        }\n        if (this.components.peerId.equals(id)) {\n            throw new InvalidMessageError('Identified peer is our own peer id?');\n        }\n        // if the observed address is publicly routable, add it to the address\n        // manager for verification via AutoNAT\n        this.maybeAddObservedAddress(observedAddr);\n        this.log('completed for peer %p and protocols %o', id, protocols);\n        return consumeIdentifyMessage(this.components.peerStore, this.components.events, this.log, connection, message);\n    }\n    maybeAddObservedAddress(observedAddr) {\n        const cleanObservedAddr = getCleanMultiaddr(observedAddr);\n        if (cleanObservedAddr == null) {\n            return;\n        }\n        this.log.trace('our observed address was %a', cleanObservedAddr);\n        if (isPrivate(cleanObservedAddr)) {\n            return;\n        }\n        const tuples = cleanObservedAddr.getComponents();\n        if (((tuples[0].code === CODE_IP6) || (tuples[0].code === CODE_IP6ZONE && tuples[1].code === CODE_IP6)) && !isGlobalUnicast(cleanObservedAddr)) {\n            this.log.trace('our observed address was IPv6 but not a global unicast address');\n            return;\n        }\n        if (TCP.exactMatch(cleanObservedAddr)) {\n            // TODO: because socket dials can't use the same local port as the TCP\n            // listener, many unique observed addresses are reported so ignore all\n            // TCP addresses until https://github.com/libp2p/js-libp2p/issues/2620\n            // is resolved\n            return;\n        }\n        this.log.trace('storing the observed address');\n        this.components.addressManager.addObservedAddr(cleanObservedAddr);\n    }\n    /**\n     * Sends the `Identify` response with the Signed Peer Record\n     * to the requesting peer over the given `connection`\n     */\n    async handleProtocol(stream, connection) {\n        const log = stream.log.newScope('identify');\n        log('responding to identify');\n        const signal = AbortSignal.timeout(this.timeout);\n        setMaxListeners(Infinity, signal);\n        const peerData = await this.components.peerStore.get(this.components.peerId, {\n            signal\n        });\n        const multiaddrs = this.components.addressManager.getAddresses().map(ma => ma.decapsulateCode(CODE_P2P));\n        let signedPeerRecord = peerData.peerRecordEnvelope;\n        if (multiaddrs.length > 0 && signedPeerRecord == null) {\n            const peerRecord = new PeerRecord({\n                peerId: this.components.peerId,\n                multiaddrs\n            });\n            const envelope = await RecordEnvelope.seal(peerRecord, this.components.privateKey, {\n                signal\n            });\n            signedPeerRecord = envelope.marshal().subarray();\n        }\n        let observedAddr = connection.remoteAddr.bytes;\n        if (!IP_OR_DOMAIN.matches(connection.remoteAddr)) {\n            observedAddr = undefined;\n        }\n        const pb = pbStream(stream).pb(IdentifyMessage);\n        log('send response');\n        await pb.write({\n            protocolVersion: this.host.protocolVersion,\n            agentVersion: this.host.agentVersion,\n            publicKey: publicKeyToProtobuf(this.components.privateKey.publicKey),\n            listenAddrs: multiaddrs.map(addr => addr.bytes),\n            signedPeerRecord,\n            observedAddr,\n            protocols: peerData.protocols\n        }, {\n            signal\n        });\n        log('close write');\n        await pb.unwrap().unwrap().close({\n            signal\n        });\n    }\n}\n//# sourceMappingURL=identify.js.map","/**\n * @packageDocumentation\n *\n * Use the `identify` function to add support for the [Identify protocol](https://github.com/libp2p/specs/blob/master/identify/README.md) to libp2p.\n *\n * This protocol allows network peers to discover the multiaddrs the current node listens on, and the protocols it supports.\n *\n * A second function, `identifyPush` is also exported to add support for [identify/push](https://github.com/libp2p/specs/blob/master/identify/README.md#identifypush).\n *\n * This protocol will send updates to all connected peers when the multiaddrs or protocols of the current node change.\n *\n * > [!TIP]\n * > For maximum network compatibility you should configure both protocols\n *\n * @example Enabling identify\n *\n * ```typescript\n * import { createLibp2p } from 'libp2p'\n * import { identify } from '@libp2p/identify'\n *\n * const node = await createLibp2p({\n *   // ...other options\n *   services: {\n *     identify: identify()\n *   }\n * })\n * ```\n *\n * @example Enabling identify push\n *\n * ```typescript\n * import { createLibp2p } from 'libp2p'\n * import { identifyPush } from '@libp2p/identify'\n *\n * const node = await createLibp2p({\n *   // ...other options\n *   services: {\n *     identifyPush: identifyPush()\n *   }\n * })\n * ```\n */\nimport { IdentifyPush as IdentifyPushClass } from './identify-push.js';\nimport { Identify as IdentifyClass } from './identify.js';\nexport function identify(init = {}) {\n    return (components) => new IdentifyClass(components, init);\n}\nexport function identifyPush(init = {}) {\n    return (components) => new IdentifyPushClass(components, init);\n}\n//# sourceMappingURL=index.js.map","import { KEEP_ALIVE } from '@libp2p/interface';\nconst second = 1000;\nconst minute = 60 * second;\n/**\n * The maximum number of relay reservations the relay server will accept\n */\nexport const DEFAULT_MAX_RESERVATION_STORE_SIZE = 15;\n/**\n * How often to check for reservation expiry\n */\nexport const DEFAULT_MAX_RESERVATION_TTL = 2 * 60 * minute;\n/**\n * How many reservation attempts to make in parallel\n */\nexport const DEFAULT_RESERVATION_CONCURRENCY = 1;\n/**\n * How long to wait for a reservation attempt to finish\n */\nexport const DEFAULT_RESERVATION_COMPLETION_TIMEOUT = 5_000;\n/**\n * How long to let the reservation attempt queue to grow\n */\nexport const DEFAULT_MAX_RESERVATION_QUEUE_LENGTH = 100;\nexport const RELAY_SOURCE_TAG = 'circuit-relay-source';\nexport const KEEP_ALIVE_TAG = `${KEEP_ALIVE}-circuit-relay`;\n// circuit v2 connection limits\n// https://github.com/libp2p/go-libp2p/blob/master/p2p/protocol/circuitv2/relay/resources.go#L61-L66\n// 2 min is the default connection duration\nexport const DEFAULT_DURATION_LIMIT = 2 * minute;\n// 128k is the default data limit\nexport const DEFAULT_DATA_LIMIT = BigInt(1 << 17);\n/**\n * The hop protocol\n */\nexport const RELAY_V2_HOP_CODEC = '/libp2p/circuit/relay/0.2.0/hop';\n/**\n * the stop protocol\n */\nexport const RELAY_V2_STOP_CODEC = '/libp2p/circuit/relay/0.2.0/stop';\n/**\n * Hop messages must be exchanged inside this timeout\n */\nexport const DEFAULT_HOP_TIMEOUT = 30 * second;\n/**\n * How long to wait before starting to advertise the relay service\n */\nexport const DEFAULT_ADVERT_BOOT_DELAY = 30 * second;\nexport const MAX_CONNECTIONS = 300;\nexport const DEFAULT_DISCOVERY_FILTER_SIZE = 4096;\nexport const DEFAULT_DISCOVERY_FILTER_ERROR_RATE = 0.001;\n//# sourceMappingURL=constants.js.map","import { decodeMessage, encodeMessage, enumeration, MaxLengthError, message } from 'protons-runtime';\nimport { alloc as uint8ArrayAlloc } from 'uint8arrays/alloc';\nexport var HopMessage;\n(function (HopMessage) {\n    let Type;\n    (function (Type) {\n        Type[\"RESERVE\"] = \"RESERVE\";\n        Type[\"CONNECT\"] = \"CONNECT\";\n        Type[\"STATUS\"] = \"STATUS\";\n    })(Type = HopMessage.Type || (HopMessage.Type = {}));\n    let __TypeValues;\n    (function (__TypeValues) {\n        __TypeValues[__TypeValues[\"RESERVE\"] = 0] = \"RESERVE\";\n        __TypeValues[__TypeValues[\"CONNECT\"] = 1] = \"CONNECT\";\n        __TypeValues[__TypeValues[\"STATUS\"] = 2] = \"STATUS\";\n    })(__TypeValues || (__TypeValues = {}));\n    (function (Type) {\n        Type.codec = () => {\n            return enumeration(__TypeValues);\n        };\n    })(Type = HopMessage.Type || (HopMessage.Type = {}));\n    let _codec;\n    HopMessage.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.type != null) {\n                    w.uint32(8);\n                    HopMessage.Type.codec().encode(obj.type, w);\n                }\n                if (obj.peer != null) {\n                    w.uint32(18);\n                    Peer.codec().encode(obj.peer, w);\n                }\n                if (obj.reservation != null) {\n                    w.uint32(26);\n                    Reservation.codec().encode(obj.reservation, w);\n                }\n                if (obj.limit != null) {\n                    w.uint32(34);\n                    Limit.codec().encode(obj.limit, w);\n                }\n                if (obj.status != null) {\n                    w.uint32(40);\n                    Status.codec().encode(obj.status, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.type = HopMessage.Type.codec().decode(reader);\n                            break;\n                        }\n                        case 2: {\n                            obj.peer = Peer.codec().decode(reader, reader.uint32(), {\n                                limits: opts.limits?.peer\n                            });\n                            break;\n                        }\n                        case 3: {\n                            obj.reservation = Reservation.codec().decode(reader, reader.uint32(), {\n                                limits: opts.limits?.reservation\n                            });\n                            break;\n                        }\n                        case 4: {\n                            obj.limit = Limit.codec().decode(reader, reader.uint32(), {\n                                limits: opts.limits?.limit\n                            });\n                            break;\n                        }\n                        case 5: {\n                            obj.status = Status.codec().decode(reader);\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    HopMessage.encode = (obj) => {\n        return encodeMessage(obj, HopMessage.codec());\n    };\n    HopMessage.decode = (buf, opts) => {\n        return decodeMessage(buf, HopMessage.codec(), opts);\n    };\n})(HopMessage || (HopMessage = {}));\nexport var StopMessage;\n(function (StopMessage) {\n    let Type;\n    (function (Type) {\n        Type[\"CONNECT\"] = \"CONNECT\";\n        Type[\"STATUS\"] = \"STATUS\";\n    })(Type = StopMessage.Type || (StopMessage.Type = {}));\n    let __TypeValues;\n    (function (__TypeValues) {\n        __TypeValues[__TypeValues[\"CONNECT\"] = 0] = \"CONNECT\";\n        __TypeValues[__TypeValues[\"STATUS\"] = 1] = \"STATUS\";\n    })(__TypeValues || (__TypeValues = {}));\n    (function (Type) {\n        Type.codec = () => {\n            return enumeration(__TypeValues);\n        };\n    })(Type = StopMessage.Type || (StopMessage.Type = {}));\n    let _codec;\n    StopMessage.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.type != null) {\n                    w.uint32(8);\n                    StopMessage.Type.codec().encode(obj.type, w);\n                }\n                if (obj.peer != null) {\n                    w.uint32(18);\n                    Peer.codec().encode(obj.peer, w);\n                }\n                if (obj.limit != null) {\n                    w.uint32(26);\n                    Limit.codec().encode(obj.limit, w);\n                }\n                if (obj.status != null) {\n                    w.uint32(32);\n                    Status.codec().encode(obj.status, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.type = StopMessage.Type.codec().decode(reader);\n                            break;\n                        }\n                        case 2: {\n                            obj.peer = Peer.codec().decode(reader, reader.uint32(), {\n                                limits: opts.limits?.peer\n                            });\n                            break;\n                        }\n                        case 3: {\n                            obj.limit = Limit.codec().decode(reader, reader.uint32(), {\n                                limits: opts.limits?.limit\n                            });\n                            break;\n                        }\n                        case 4: {\n                            obj.status = Status.codec().decode(reader);\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    StopMessage.encode = (obj) => {\n        return encodeMessage(obj, StopMessage.codec());\n    };\n    StopMessage.decode = (buf, opts) => {\n        return decodeMessage(buf, StopMessage.codec(), opts);\n    };\n})(StopMessage || (StopMessage = {}));\nexport var Peer;\n(function (Peer) {\n    let _codec;\n    Peer.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if ((obj.id != null && obj.id.byteLength > 0)) {\n                    w.uint32(10);\n                    w.bytes(obj.id);\n                }\n                if (obj.addrs != null) {\n                    for (const value of obj.addrs) {\n                        w.uint32(18);\n                        w.bytes(value);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    id: uint8ArrayAlloc(0),\n                    addrs: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.id = reader.bytes();\n                            break;\n                        }\n                        case 2: {\n                            if (opts.limits?.addrs != null && obj.addrs.length === opts.limits.addrs) {\n                                throw new MaxLengthError('Decode error - map field \"addrs\" had too many elements');\n                            }\n                            obj.addrs.push(reader.bytes());\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    Peer.encode = (obj) => {\n        return encodeMessage(obj, Peer.codec());\n    };\n    Peer.decode = (buf, opts) => {\n        return decodeMessage(buf, Peer.codec(), opts);\n    };\n})(Peer || (Peer = {}));\nexport var Reservation;\n(function (Reservation) {\n    let _codec;\n    Reservation.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if ((obj.expire != null && obj.expire !== 0n)) {\n                    w.uint32(8);\n                    w.uint64(obj.expire);\n                }\n                if (obj.addrs != null) {\n                    for (const value of obj.addrs) {\n                        w.uint32(18);\n                        w.bytes(value);\n                    }\n                }\n                if (obj.voucher != null) {\n                    w.uint32(26);\n                    Envelope.codec().encode(obj.voucher, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    expire: 0n,\n                    addrs: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.expire = reader.uint64();\n                            break;\n                        }\n                        case 2: {\n                            if (opts.limits?.addrs != null && obj.addrs.length === opts.limits.addrs) {\n                                throw new MaxLengthError('Decode error - map field \"addrs\" had too many elements');\n                            }\n                            obj.addrs.push(reader.bytes());\n                            break;\n                        }\n                        case 3: {\n                            obj.voucher = Envelope.codec().decode(reader, reader.uint32(), {\n                                limits: opts.limits?.voucher\n                            });\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    Reservation.encode = (obj) => {\n        return encodeMessage(obj, Reservation.codec());\n    };\n    Reservation.decode = (buf, opts) => {\n        return decodeMessage(buf, Reservation.codec(), opts);\n    };\n})(Reservation || (Reservation = {}));\nexport var Limit;\n(function (Limit) {\n    let _codec;\n    Limit.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.duration != null) {\n                    w.uint32(8);\n                    w.uint32(obj.duration);\n                }\n                if (obj.data != null) {\n                    w.uint32(16);\n                    w.uint64(obj.data);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.duration = reader.uint32();\n                            break;\n                        }\n                        case 2: {\n                            obj.data = reader.uint64();\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    Limit.encode = (obj) => {\n        return encodeMessage(obj, Limit.codec());\n    };\n    Limit.decode = (buf, opts) => {\n        return decodeMessage(buf, Limit.codec(), opts);\n    };\n})(Limit || (Limit = {}));\nexport var Status;\n(function (Status) {\n    Status[\"UNUSED\"] = \"UNUSED\";\n    Status[\"OK\"] = \"OK\";\n    Status[\"RESERVATION_REFUSED\"] = \"RESERVATION_REFUSED\";\n    Status[\"RESOURCE_LIMIT_EXCEEDED\"] = \"RESOURCE_LIMIT_EXCEEDED\";\n    Status[\"PERMISSION_DENIED\"] = \"PERMISSION_DENIED\";\n    Status[\"CONNECTION_FAILED\"] = \"CONNECTION_FAILED\";\n    Status[\"NO_RESERVATION\"] = \"NO_RESERVATION\";\n    Status[\"MALFORMED_MESSAGE\"] = \"MALFORMED_MESSAGE\";\n    Status[\"UNEXPECTED_MESSAGE\"] = \"UNEXPECTED_MESSAGE\";\n})(Status || (Status = {}));\nvar __StatusValues;\n(function (__StatusValues) {\n    __StatusValues[__StatusValues[\"UNUSED\"] = 0] = \"UNUSED\";\n    __StatusValues[__StatusValues[\"OK\"] = 100] = \"OK\";\n    __StatusValues[__StatusValues[\"RESERVATION_REFUSED\"] = 200] = \"RESERVATION_REFUSED\";\n    __StatusValues[__StatusValues[\"RESOURCE_LIMIT_EXCEEDED\"] = 201] = \"RESOURCE_LIMIT_EXCEEDED\";\n    __StatusValues[__StatusValues[\"PERMISSION_DENIED\"] = 202] = \"PERMISSION_DENIED\";\n    __StatusValues[__StatusValues[\"CONNECTION_FAILED\"] = 203] = \"CONNECTION_FAILED\";\n    __StatusValues[__StatusValues[\"NO_RESERVATION\"] = 204] = \"NO_RESERVATION\";\n    __StatusValues[__StatusValues[\"MALFORMED_MESSAGE\"] = 400] = \"MALFORMED_MESSAGE\";\n    __StatusValues[__StatusValues[\"UNEXPECTED_MESSAGE\"] = 401] = \"UNEXPECTED_MESSAGE\";\n})(__StatusValues || (__StatusValues = {}));\n(function (Status) {\n    Status.codec = () => {\n        return enumeration(__StatusValues);\n    };\n})(Status || (Status = {}));\nexport var ReservationVoucher;\n(function (ReservationVoucher) {\n    let _codec;\n    ReservationVoucher.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if ((obj.relay != null && obj.relay.byteLength > 0)) {\n                    w.uint32(10);\n                    w.bytes(obj.relay);\n                }\n                if ((obj.peer != null && obj.peer.byteLength > 0)) {\n                    w.uint32(18);\n                    w.bytes(obj.peer);\n                }\n                if ((obj.expiration != null && obj.expiration !== 0n)) {\n                    w.uint32(24);\n                    w.uint64(obj.expiration);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    relay: uint8ArrayAlloc(0),\n                    peer: uint8ArrayAlloc(0),\n                    expiration: 0n\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.relay = reader.bytes();\n                            break;\n                        }\n                        case 2: {\n                            obj.peer = reader.bytes();\n                            break;\n                        }\n                        case 3: {\n                            obj.expiration = reader.uint64();\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    ReservationVoucher.encode = (obj) => {\n        return encodeMessage(obj, ReservationVoucher.codec());\n    };\n    ReservationVoucher.decode = (buf, opts) => {\n        return decodeMessage(buf, ReservationVoucher.codec(), opts);\n    };\n})(ReservationVoucher || (ReservationVoucher = {}));\nexport var Envelope;\n(function (Envelope) {\n    let _codec;\n    Envelope.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if ((obj.publicKey != null && obj.publicKey.byteLength > 0)) {\n                    w.uint32(10);\n                    w.bytes(obj.publicKey);\n                }\n                if ((obj.payloadType != null && obj.payloadType.byteLength > 0)) {\n                    w.uint32(18);\n                    w.bytes(obj.payloadType);\n                }\n                if (obj.payload != null) {\n                    w.uint32(26);\n                    ReservationVoucher.codec().encode(obj.payload, w);\n                }\n                if ((obj.signature != null && obj.signature.byteLength > 0)) {\n                    w.uint32(42);\n                    w.bytes(obj.signature);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    publicKey: uint8ArrayAlloc(0),\n                    payloadType: uint8ArrayAlloc(0),\n                    signature: uint8ArrayAlloc(0)\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.publicKey = reader.bytes();\n                            break;\n                        }\n                        case 2: {\n                            obj.payloadType = reader.bytes();\n                            break;\n                        }\n                        case 3: {\n                            obj.payload = ReservationVoucher.codec().decode(reader, reader.uint32(), {\n                                limits: opts.limits?.payload\n                            });\n                            break;\n                        }\n                        case 5: {\n                            obj.signature = reader.bytes();\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    Envelope.encode = (obj) => {\n        return encodeMessage(obj, Envelope.codec());\n    };\n    Envelope.decode = (buf, opts) => {\n        return decodeMessage(buf, Envelope.codec(), opts);\n    };\n})(Envelope || (Envelope = {}));\n//# sourceMappingURL=index.js.map","/**\n * A transfer limit was hit\n */\nexport class TransferLimitError extends Error {\n    constructor(message = 'Transfer limit error') {\n        super(message);\n        this.name = 'TransferLimitError';\n    }\n}\n/**\n * A duration limit was hit\n */\nexport class DurationLimitError extends Error {\n    constructor(message = 'Duration limit error') {\n        super(message);\n        this.name = 'DurationLimitError';\n    }\n}\n/**\n * There were enough relay reservations already\n */\nexport class HadEnoughRelaysError extends Error {\n    static name = 'HadEnoughRelaysError';\n    name = 'HadEnoughRelaysError';\n}\n/**\n * An attempt to open a relayed connection over a relayed connection was made\n */\nexport class DoubleRelayError extends Error {\n    static name = 'DoubleRelayError';\n    name = 'DoubleRelayError';\n}\n/**\n * An attempt to make a reservation on a relay was made while the reservation\n * queue was full\n */\nexport class RelayQueueFullError extends Error {\n    static name = 'RelayQueueFullError';\n    name = 'RelayQueueFullError';\n}\n//# sourceMappingURL=errors.js.map","import { setMaxListeners } from '@libp2p/interface';\nimport { pipe } from '@libp2p/utils';\nimport { CODE_P2P_CIRCUIT } from '@multiformats/multiaddr';\nimport { P2P } from '@multiformats/multiaddr-matcher';\nimport { fmt, code, and } from '@multiformats/multiaddr-matcher/utils';\nimport { anySignal } from 'any-signal';\nimport { CID } from 'multiformats/cid';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { DurationLimitError, TransferLimitError } from './errors.js';\nfunction countStreamBytes(source, limit, options) {\n    const limitBytes = limit.remaining;\n    const abortIfStreamByteLimitExceeded = (evt) => {\n        const len = BigInt(evt.data.byteLength);\n        limit.remaining -= len;\n        if (limit.remaining < 0) {\n            source.abort(new TransferLimitError(`data limit of ${limitBytes} bytes exceeded`));\n        }\n    };\n    source.addEventListener('message', abortIfStreamByteLimitExceeded);\n}\nexport function createLimitedRelay(src, dst, abortSignal, reservation, options) {\n    function abortStreams(err) {\n        src.abort(err);\n        dst.abort(err);\n    }\n    // combine shutdown signal and reservation expiry signal\n    const signals = [abortSignal, reservation.signal];\n    if (reservation.limit?.duration != null) {\n        options.log('limiting relayed connection duration to %dms', reservation.limit.duration);\n        const durationSignal = AbortSignal.timeout(reservation.limit.duration);\n        setMaxListeners(Infinity, durationSignal);\n        signals.push(durationSignal);\n    }\n    const signal = anySignal(signals);\n    setMaxListeners(Infinity, signal);\n    let dataLimit;\n    if (reservation.limit?.data != null) {\n        dataLimit = {\n            remaining: reservation.limit.data\n        };\n    }\n    const onAbort = () => {\n        let err;\n        if (abortSignal.aborted) {\n            err = abortSignal.reason;\n        }\n        else {\n            err = new DurationLimitError(`duration limit of ${reservation.limit?.duration} ms exceeded`);\n        }\n        abortStreams(err);\n    };\n    signal.addEventListener('abort', onAbort, { once: true });\n    if (dataLimit != null) {\n        countStreamBytes(dst, dataLimit, options);\n        countStreamBytes(src, dataLimit, options);\n    }\n    // join the streams together\n    pipe(src, dst, src)\n        .catch(err => {\n        abortStreams(err);\n    })\n        .finally(() => {\n        signal.clear();\n    });\n}\n/**\n * Convert a namespace string into a cid\n */\nexport async function namespaceToCid(namespace) {\n    const bytes = new TextEncoder().encode(namespace);\n    const hash = await sha256.digest(bytes);\n    return CID.createV0(hash);\n}\n/**\n * returns number of ms between now and expiration time\n */\nexport function getExpirationMilliseconds(expireTimeSeconds) {\n    const expireTimeMillis = expireTimeSeconds * BigInt(1000);\n    const currentTime = new Date().getTime();\n    // downcast to number to use with setTimeout\n    return Number(expireTimeMillis - BigInt(currentTime));\n}\nexport class LimitTracker {\n    expires;\n    bytes;\n    constructor(limits) {\n        if (limits?.duration != null && limits?.duration !== 0) {\n            this.expires = Date.now() + (limits.duration * 1000);\n        }\n        this.bytes = limits?.data;\n        if (this.bytes === 0n) {\n            this.bytes = undefined;\n        }\n        this.onData = this.onData.bind(this);\n    }\n    onData(buf) {\n        if (this.bytes == null) {\n            return;\n        }\n        this.bytes -= BigInt(buf.byteLength);\n        if (this.bytes < 0n) {\n            this.bytes = 0n;\n        }\n    }\n    getLimits() {\n        if (this.expires == null && this.bytes == null) {\n            return;\n        }\n        const output = {};\n        if (this.bytes != null) {\n            const self = this;\n            Object.defineProperty(output, 'bytes', {\n                get() {\n                    return self.bytes;\n                }\n            });\n        }\n        if (this.expires != null) {\n            const self = this;\n            Object.defineProperty(output, 'seconds', {\n                get() {\n                    return Math.round(((self.expires ?? 0) - Date.now()) / 1000);\n                }\n            });\n        }\n        return output;\n    }\n}\n/**\n * A custom matcher that tells us to listen on a particular relay\n */\nexport const CircuitListen = fmt(and(P2P.matchers[0], code(CODE_P2P_CIRCUIT)));\n/**\n * A custom matcher that tells us to discover available relays\n */\nexport const CircuitSearch = fmt(code(CODE_P2P_CIRCUIT));\n//# sourceMappingURL=utils.js.map","import { PeerQueue } from '@libp2p/utils';\nimport { anySignal } from 'any-signal';\nimport { TypedEventEmitter, setMaxListeners } from 'main-event';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { RELAY_V2_HOP_CODEC } from '../constants.js';\n/**\n * ReservationManager automatically makes a circuit v2 reservation on any connected\n * peers that support the circuit v2 HOP protocol.\n */\nexport class RelayDiscovery extends TypedEventEmitter {\n    components;\n    started;\n    running;\n    topologyId;\n    log;\n    discoveryController;\n    filter;\n    queue;\n    constructor(components, init = {}) {\n        super();\n        this.log = components.logger.forComponent('libp2p:circuit-relay:discover-relays');\n        this.components = components;\n        this.started = false;\n        this.running = false;\n        this.filter = init.filter;\n        this.discoveryController = new AbortController();\n        setMaxListeners(Infinity, this.discoveryController.signal);\n        this.dialPeer = this.dialPeer.bind(this);\n        this.onPeer = this.onPeer.bind(this);\n    }\n    isStarted() {\n        return this.started;\n    }\n    async start() {\n        // register a topology listener for when new peers are encountered\n        // that support the hop protocol\n        this.topologyId = await this.components.registrar.register(RELAY_V2_HOP_CODEC, {\n            filter: this.filter,\n            onConnect: (peerId) => {\n                this.log.trace('discovered relay %p queue (length: %d, active %d)', peerId, this.queue?.size, this.queue?.running);\n                this.safeDispatchEvent('relay:discover', { detail: peerId });\n            }\n        });\n        this.started = true;\n    }\n    stop() {\n        if (this.topologyId != null) {\n            this.components.registrar.unregister(this.topologyId);\n        }\n        if (this.running) {\n            this.stopDiscovery();\n        }\n        this.started = false;\n    }\n    /**\n     * Try to listen on available hop relay connections.\n     * The following order will happen while we do not have enough relays:\n     *\n     * 1. Check the metadata store for known relays, try to listen on the ones we are already connected to\n     * 2. Dial and try to listen on the peers we know that support hop but are not connected\n     * 3. Search the network - this requires a peer routing implementation to be configured but will fail gracefully\n     * 4. Dial any peers discovered - this covers when no peer routing implementation has been configured but some peer discovery mechanism is also present\n     */\n    startDiscovery() {\n        if (this.running) {\n            return;\n        }\n        this.log('start discovery');\n        this.running = true;\n        this.discoveryController = new AbortController();\n        setMaxListeners(Infinity, this.discoveryController.signal);\n        // dial any peer we discover\n        this.components.events.addEventListener('peer:discovery', this.onPeer);\n        Promise.resolve()\n            .then(async () => {\n            this.log('searching peer store for relays');\n            const peers = (await this.components.peerStore.all({\n                filters: [\n                    // filter by a list of peers supporting RELAY_V2_HOP and ones we are not listening on\n                    (peer) => {\n                        return peer.protocols.includes(RELAY_V2_HOP_CODEC);\n                    }\n                ],\n                orders: [\n                    // randomize\n                    () => Math.random() < 0.5 ? 1 : -1,\n                    // prefer peers we've connected to in the past\n                    (a, b) => {\n                        const lastDialA = getLastDial(a);\n                        const lastDialB = getLastDial(b);\n                        if (lastDialA > lastDialB) {\n                            return -1;\n                        }\n                        if (lastDialB > lastDialA) {\n                            return 1;\n                        }\n                        return 0;\n                    }\n                ]\n            }));\n            for (const peer of peers) {\n                this.log.trace('found relay peer %p in peer store', peer.id);\n                this.safeDispatchEvent('relay:discover', { detail: peer.id });\n            }\n            this.log('found %d relay peers in peer store', peers.length);\n            // perform random walk and dial peers - after identify has run, the network\n            // topology will be notified of new relays\n            const queue = this.queue = new PeerQueue({\n                concurrency: 5\n            });\n            this.log('start random walk');\n            for await (const peer of this.components.randomWalk.walk({ signal: this.discoveryController.signal })) {\n                this.log.trace('found random peer %p', peer.id);\n                if (queue.has(peer.id)) {\n                    this.log.trace('random peer %p was already in queue', peer.id);\n                    // skip peers already in the queue\n                    continue;\n                }\n                if (this.components.connectionManager.getConnections(peer.id)?.length > 0) {\n                    this.log.trace('random peer %p was already connected', peer.id);\n                    // skip peers we are already connected to\n                    continue;\n                }\n                if (!(await this.components.connectionManager.isDialable(peer.multiaddrs))) {\n                    this.log.trace('random peer %p was not dialable', peer.id, peer.multiaddrs.map(ma => ma.toString()));\n                    // skip peers we can't dial\n                    continue;\n                }\n                if (queue.queued > 10) {\n                    this.log.trace('wait for space in queue for %p', peer.id);\n                    // pause the random walk until there is space in the queue\n                    await queue.onSizeLessThan(10, {\n                        signal: this.discoveryController.signal\n                    });\n                }\n                this.log('adding random peer %p to dial queue (length: %d, active %d)', peer.id, queue.size, queue.running);\n                // dial the peer - this will cause identify to run and our topology to\n                // be notified and we'll attempt to create reservations\n                queue.add(this.dialPeer, {\n                    peerId: peer.id,\n                    signal: this.discoveryController.signal\n                })\n                    .catch(err => {\n                    this.log.error('error opening connection to random peer %p - %e', peer.id, err);\n                });\n            }\n            this.log('stop random walk');\n            await queue.onIdle();\n        })\n            .catch(err => {\n            if (!this.discoveryController.signal.aborted) {\n                this.log.error('failed when finding relays on the network - %e', err);\n            }\n        });\n    }\n    stopDiscovery() {\n        this.log('stop discovery');\n        this.running = false;\n        this.discoveryController?.abort();\n        this.queue?.clear();\n        // stop dialing any peer we discover\n        this.components.events.removeEventListener('peer:discovery', this.onPeer);\n    }\n    onPeer(evt) {\n        this.log.trace('maybe dialing discovered peer %p', evt.detail.id);\n        this.maybeDialPeer(evt)\n            .catch(err => {\n            this.log.trace('error dialing discovered peer %p - %e', evt.detail.id, err);\n        });\n    }\n    async maybeDialPeer(evt) {\n        if (this.queue == null) {\n            return;\n        }\n        const peerId = evt.detail.id;\n        const multiaddrs = evt.detail.multiaddrs;\n        if (this.queue.has(peerId)) {\n            this.log.trace('random peer %p was already in queue', peerId);\n            // skip peers already in the queue\n            return;\n        }\n        if (this.components.connectionManager.getConnections(peerId)?.length > 0) {\n            this.log.trace('random peer %p was already connected', peerId);\n            // skip peers we are already connected to\n            return;\n        }\n        if (!(await this.components.connectionManager.isDialable(multiaddrs))) {\n            this.log.trace('random peer %p was not dialable', peerId);\n            // skip peers we can't dial\n            return;\n        }\n        this.queue?.add(this.dialPeer, {\n            peerId: evt.detail.id,\n            signal: this.discoveryController.signal\n        })\n            .catch(err => {\n            this.log.error('error opening connection to discovered peer %p - %e', evt.detail.id, err);\n        });\n    }\n    async dialPeer({ peerId, signal }) {\n        const combinedSignal = anySignal([AbortSignal.timeout(5_000), signal]);\n        setMaxListeners(Infinity, combinedSignal);\n        try {\n            await this.components.connectionManager.openConnection(peerId, {\n                signal: combinedSignal\n            });\n        }\n        finally {\n            combinedSignal.clear();\n        }\n    }\n}\n/**\n * Returns the timestamp of the last time we connected to this peer, if we've\n * not connected to them before return 0\n */\nfunction getLastDial(peer) {\n    const lastDial = peer.metadata.get('last-dial-success');\n    if (lastDial == null) {\n        return 0;\n    }\n    return new Date(uint8ArrayToString(lastDial)).getTime();\n}\n//# sourceMappingURL=discovery.js.map","import { ListenError } from '@libp2p/interface';\nimport { multiaddr } from '@multiformats/multiaddr';\nimport { TypedEventEmitter, setMaxListeners } from 'main-event';\nimport { DEFAULT_RESERVATION_COMPLETION_TIMEOUT } from '../constants.js';\nimport { CircuitListen, CircuitSearch } from '../utils.js';\nclass CircuitRelayTransportListener extends TypedEventEmitter {\n    connectionManager;\n    addressManager;\n    reservationStore;\n    listeningAddrs;\n    log;\n    listenTimeout;\n    reservationId;\n    relay;\n    constructor(components, init = {}) {\n        super();\n        this.log = components.logger.forComponent('libp2p:circuit-relay:transport:listener');\n        this.connectionManager = components.connectionManager;\n        this.addressManager = components.addressManager;\n        this.reservationStore = components.reservationStore;\n        this.listeningAddrs = [];\n        this.listenTimeout = init.listenTimeout ?? DEFAULT_RESERVATION_COMPLETION_TIMEOUT;\n        // remove listening addrs when a relay is removed\n        this.reservationStore.addEventListener('relay:removed', this._onRemoveRelayPeer);\n        this.reservationStore.addEventListener('relay:created-reservation', this._onAddRelayPeer);\n    }\n    _onRemoveRelayPeer = (evt) => {\n        this.log('relay removed %p our relay %p', evt.detail.relay, this.relay, this.relay?.equals(evt.detail.relay));\n        if (this.relay?.equals(evt.detail.relay) !== true) {\n            return;\n        }\n        this.log('relay peer removed %p', evt.detail.relay);\n        this.listeningAddrs.forEach(ma => {\n            // mark as externally dialable\n            this.addressManager.removeObservedAddr(ma);\n        });\n        this.listeningAddrs = [];\n        // announce listen addresses change\n        this.safeDispatchEvent('listening');\n    };\n    _onAddRelayPeer = (evt) => {\n        const { details } = evt.detail;\n        if (details.type === 'configured') {\n            return;\n        }\n        if (details.id !== this.reservationId) {\n            return;\n        }\n        this.addedRelay(evt.detail);\n    };\n    async listen(addr) {\n        if (CircuitSearch.exactMatch(addr)) {\n            this.log('searching for circuit relay servers');\n            // start relay discovery\n            this.reservationId = this.reservationStore.reserveRelay();\n        }\n        else if (CircuitListen.exactMatch(addr)) {\n            this.log('listen on specific relay server %a', addr);\n            const signal = AbortSignal.timeout(this.listenTimeout);\n            setMaxListeners(Infinity, signal);\n            // try to make a reservation on one particular relay\n            // remove the circuit part to get the peer id of the relay\n            const relayAddr = addr.decapsulate('/p2p-circuit');\n            const relayConn = await this.connectionManager.openConnection(relayAddr, {\n                signal\n            });\n            if (!this.reservationStore.hasReservation(relayConn.remotePeer)) {\n                this.log('making reservation on peer %p', relayConn.remotePeer);\n                const reservation = await this.reservationStore.addRelay(relayConn.remotePeer, 'configured');\n                this.addedRelay(reservation);\n            }\n        }\n        else {\n            throw new ListenError(`Could not listen on p2p-circuit address \"${addr}\"`);\n        }\n    }\n    getAddrs() {\n        return [...this.listeningAddrs.values()].flat();\n    }\n    updateAnnounceAddrs() {\n    }\n    async close() {\n        this.reservationStore.cancelReservations();\n        this.listeningAddrs = [];\n        // remove listener\n        this.reservationStore.removeEventListener('relay:removed', this._onRemoveRelayPeer);\n        // announce listen addresses change\n        queueMicrotask(() => {\n            this.safeDispatchEvent('close');\n        });\n    }\n    addedRelay(reservation) {\n        this.log('relay peer added %p', reservation.relay);\n        this.relay = reservation.relay;\n        // add all addresses from the relay reservation\n        this.listeningAddrs = reservation.details.reservation.addrs\n            .map(buf => multiaddr(buf).encapsulate('/p2p-circuit'));\n        this.listeningAddrs.forEach(ma => {\n            // mark as externally dialable\n            this.addressManager.confirmObservedAddr(ma, {\n                type: 'transport'\n            });\n        });\n        // if that succeeded announce listen addresses change\n        queueMicrotask(() => {\n            this.safeDispatchEvent('listening');\n        });\n    }\n}\nexport function createListener(options) {\n    return new CircuitRelayTransportListener(options);\n}\n//# sourceMappingURL=listener.js.map","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","/* @ts-self-types=\"./index.d.ts\" */\nimport { urlAlphabet as scopedUrlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << Math.log2(alphabet.length - 1)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step | 0\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length >= size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size | 0, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array((size |= 0)))\n  while (size--) {\n    id += scopedUrlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","import { ListenError } from '@libp2p/interface';\nimport { PeerMap } from '@libp2p/peer-collections';\nimport { createScalableCuckooFilter, PeerQueue, pbStream } from '@libp2p/utils';\nimport { CODE_P2P, multiaddr } from '@multiformats/multiaddr';\nimport { Circuit } from '@multiformats/multiaddr-matcher';\nimport { TypedEventEmitter, setMaxListeners } from 'main-event';\nimport { nanoid } from 'nanoid';\nimport { DEFAULT_MAX_RESERVATION_QUEUE_LENGTH, DEFAULT_RESERVATION_COMPLETION_TIMEOUT, DEFAULT_RESERVATION_CONCURRENCY, KEEP_ALIVE_TAG, RELAY_V2_HOP_CODEC } from '../constants.js';\nimport { DoubleRelayError, HadEnoughRelaysError, RelayQueueFullError } from '../errors.js';\nimport { HopMessage, Status } from '../pb/index.js';\nimport { getExpirationMilliseconds } from '../utils.js';\n// allow refreshing a relay reservation if it will expire in the next 10 minutes\nconst REFRESH_WINDOW = (60 * 1000) * 10;\n// try to refresh relay reservations 5 minutes before expiry\nconst REFRESH_TIMEOUT = (60 * 1000) * 5;\n// minimum duration before which a reservation must not be refreshed\nconst REFRESH_TIMEOUT_MIN = 30 * 1000;\nexport class ReservationStore extends TypedEventEmitter {\n    peerId;\n    connectionManager;\n    peerStore;\n    events;\n    reserveQueue;\n    reservations;\n    pendingReservations;\n    maxReservationQueueLength;\n    reservationCompletionTimeout;\n    started;\n    log;\n    relayFilter;\n    constructor(components, init) {\n        super();\n        this.log = components.logger.forComponent('libp2p:circuit-relay:transport:reservation-store');\n        this.peerId = components.peerId;\n        this.connectionManager = components.connectionManager;\n        this.peerStore = components.peerStore;\n        this.events = components.events;\n        this.reservations = new PeerMap();\n        this.pendingReservations = [];\n        this.maxReservationQueueLength = init?.maxReservationQueueLength ?? DEFAULT_MAX_RESERVATION_QUEUE_LENGTH;\n        this.reservationCompletionTimeout = init?.reservationCompletionTimeout ?? DEFAULT_RESERVATION_COMPLETION_TIMEOUT;\n        this.started = false;\n        this.relayFilter = createScalableCuckooFilter(100);\n        // ensure we don't listen on multiple relays simultaneously\n        this.reserveQueue = new PeerQueue({\n            concurrency: init?.reservationConcurrency ?? DEFAULT_RESERVATION_CONCURRENCY,\n            metricName: 'libp2p_relay_reservation_queue',\n            metrics: components.metrics\n        });\n        // reservations are only valid while we are still connected to the relay.\n        // if we had a reservation opened via that connection, remove it and maybe\n        // trigger a search for new relays\n        this.events.addEventListener('connection:close', (evt) => {\n            const reservation = [...this.reservations.values()]\n                .find(reservation => reservation.connection === evt.detail.id);\n            if (reservation == null) {\n                return;\n            }\n            this.#removeReservation(evt.detail.remotePeer)\n                .catch(err => {\n                this.log('could not remove relay %p - %e', evt.detail, err);\n            });\n        });\n    }\n    isStarted() {\n        return this.started;\n    }\n    start() {\n        this.started = true;\n    }\n    afterStart() {\n        // remove old relay tags\n        void Promise.resolve()\n            .then(async () => {\n            const relayPeers = await this.peerStore.all({\n                filters: [(peer) => {\n                        return peer.tags.has(KEEP_ALIVE_TAG);\n                    }]\n            });\n            this.log('removing tag from %d old relays', relayPeers.length);\n            // remove old relay tag and redial\n            await Promise.all(relayPeers.map(async (peer) => {\n                await this.peerStore.merge(peer.id, {\n                    tags: {\n                        [KEEP_ALIVE_TAG]: undefined\n                    }\n                });\n            }));\n            this.log('redialing %d old relays', relayPeers.length);\n            await Promise.all(relayPeers.map(async (peer) => this.addRelay(peer.id, 'discovered')));\n            this.#checkReservationCount();\n        })\n            .catch(err => {\n            this.log.error('failed to clean up and redial old relays during afterStart - %e', err);\n        });\n    }\n    stop() {\n        this.reserveQueue.clear();\n        this.reservations.forEach(({ timeout }) => {\n            clearTimeout(timeout);\n        });\n        this.reservations.clear();\n        this.started = false;\n    }\n    reserveRelay() {\n        const id = nanoid();\n        this.pendingReservations.push(id);\n        this.#checkReservationCount();\n        return id;\n    }\n    /**\n     * If the number of current relays is beneath the configured `maxReservations`\n     * value, and the passed peer id is not our own, and we have a non-relayed\n     * connection to the remote, and the remote peer speaks the hop protocol, try\n     * to reserve a slot on the remote peer\n     */\n    async addRelay(peerId, type) {\n        if (this.peerId.equals(peerId)) {\n            this.log.trace('not trying to use self as relay');\n            throw new ListenError('Cannot use self as relay');\n        }\n        if (this.reserveQueue.size > this.maxReservationQueueLength) {\n            throw new RelayQueueFullError('The reservation queue is full');\n        }\n        const existingJob = this.reserveQueue.find(peerId);\n        if (existingJob != null) {\n            this.log.trace('potential relay peer %p is already in the reservation queue', peerId);\n            return existingJob.join();\n        }\n        if (this.relayFilter.has(peerId.toMultihash().bytes)) {\n            throw new ListenError('The relay was previously invalid');\n        }\n        this.log.trace('try to reserve relay slot with %p', peerId);\n        return this.reserveQueue.add(async () => {\n            const start = Date.now();\n            try {\n                // allow refresh of an existing reservation if it is about to expire\n                const existingReservation = this.reservations.get(peerId);\n                if (existingReservation != null) {\n                    const connections = this.connectionManager.getConnections(peerId);\n                    let connected = false;\n                    if (connections.length === 0) {\n                        this.log('already have relay reservation with %p but we are no longer connected', peerId);\n                    }\n                    if (connections.map(conn => conn.id).includes(existingReservation.connection)) {\n                        this.log('already have relay reservation with %p and the original connection is still open', peerId);\n                        connected = true;\n                    }\n                    if (connected && getExpirationMilliseconds(existingReservation.reservation.expire) > REFRESH_WINDOW) {\n                        this.log('already have relay reservation with %p but we are still connected and it does not expire soon', peerId);\n                        return {\n                            relay: peerId,\n                            details: existingReservation\n                        };\n                    }\n                    await this.#removeReservation(peerId);\n                }\n                if (type === 'discovered' && this.pendingReservations.length === 0) {\n                    throw new HadEnoughRelaysError('Not making reservation on discovered relay because we do not need any more relays');\n                }\n                const signal = AbortSignal.timeout(this.reservationCompletionTimeout);\n                setMaxListeners(Infinity, signal);\n                const connection = await this.connectionManager.openConnection(peerId, {\n                    signal\n                });\n                if (Circuit.matches(connection.remoteAddr)) {\n                    throw new DoubleRelayError('not creating reservation over relayed connection');\n                }\n                const reservation = await this.#createReservation(connection, {\n                    signal\n                });\n                const expiration = getExpirationMilliseconds(reservation.expire);\n                this.log('created reservation on relay peer %p, expiry date is %s', peerId, new Date(Date.now() + expiration).toString());\n                // sets a lower bound on the timeout, and also don't let it go over\n                // 2^31 - 1 (setTimeout will only accept signed 32 bit integers)\n                const timeoutDuration = Math.min(Math.max(expiration - REFRESH_TIMEOUT, REFRESH_TIMEOUT_MIN), Math.pow(2, 31) - 1);\n                const timeout = setTimeout(() => {\n                    this.log('refresh reservation to relay %p', peerId);\n                    this.addRelay(peerId, type)\n                        .catch(async (err) => {\n                        this.log.error('could not refresh reservation to relay %p - %e', peerId, err);\n                        await this.#removeReservation(peerId);\n                    })\n                        .catch(err => {\n                        this.log.error('could not remove expired reservation to relay %p - %e', peerId, err);\n                    });\n                }, timeoutDuration);\n                let res;\n                // assign a reservation id if one was requested\n                if (type === 'discovered') {\n                    const id = this.pendingReservations.pop();\n                    if (id == null) {\n                        throw new HadEnoughRelaysError('Made reservation on relay but did not need any more discovered relays');\n                    }\n                    res = {\n                        timeout,\n                        reservation,\n                        type,\n                        connection: connection.id,\n                        id\n                    };\n                }\n                else {\n                    res = {\n                        timeout,\n                        reservation,\n                        type,\n                        connection: connection.id\n                    };\n                }\n                // we've managed to create a reservation successfully\n                this.reservations.set(peerId, res);\n                // ensure we don't close the connection to the relay\n                await this.peerStore.merge(peerId, {\n                    tags: {\n                        [KEEP_ALIVE_TAG]: {\n                            value: 1,\n                            ttl: expiration\n                        }\n                    }\n                });\n                // check to see if we have discovered enough relays\n                this.#checkReservationCount();\n                const result = {\n                    relay: peerId,\n                    details: res\n                };\n                this.safeDispatchEvent('relay:created-reservation', {\n                    detail: result\n                });\n                return result;\n            }\n            catch (err) {\n                if (!(type === 'discovered' && err.name === 'HadEnoughRelaysError')) {\n                    this.log.error('could not reserve slot on %p after %dms - %e', peerId, Date.now() - start, err);\n                }\n                // don't try this peer again if dialing failed or they do not support\n                // the hop protocol\n                if (err.name === 'DialError' || err.name === 'UnsupportedProtocolError') {\n                    this.relayFilter.add(peerId.toMultihash().bytes);\n                }\n                // if listening failed, remove the reservation\n                this.#removeReservation(peerId)\n                    .catch(err => {\n                    this.log.error('could not remove reservation on %p after reserving slot failed - %e', peerId, err);\n                });\n                throw err;\n            }\n        }, {\n            peerId\n        });\n    }\n    hasReservation(peerId) {\n        return this.reservations.has(peerId);\n    }\n    getReservation(peerId) {\n        return this.reservations.get(peerId)?.reservation;\n    }\n    reservationCount(type) {\n        if (type == null) {\n            return this.reservations.size;\n        }\n        return [...this.reservations.values()].reduce((acc, curr) => {\n            if (curr.type === type) {\n                acc++;\n            }\n            return acc;\n        }, 0);\n    }\n    cancelReservations() {\n        [...this.reservations.values()].forEach(reservation => {\n            clearTimeout(reservation.timeout);\n        });\n        this.reservations.clear();\n    }\n    async #createReservation(connection, options) {\n        options.signal?.throwIfAborted();\n        this.log('requesting reservation from %p', connection.remotePeer);\n        const stream = await connection.newStream(RELAY_V2_HOP_CODEC, options);\n        const pbstr = pbStream(stream);\n        const hopstr = pbstr.pb(HopMessage);\n        this.log.trace('send RESERVE to %p', connection.remotePeer);\n        await hopstr.write({ type: HopMessage.Type.RESERVE }, options);\n        let response;\n        try {\n            this.log.trace('reading response from %p', connection.remotePeer);\n            response = await hopstr.read(options);\n        }\n        catch (err) {\n            stream.abort(err);\n            throw err;\n        }\n        finally {\n            if (stream.status !== 'closed') {\n                await stream.close(options);\n            }\n        }\n        this.log.trace('read response %s', response.status);\n        if (response.status === Status.OK && response.reservation != null) {\n            // check that the returned relay has the relay address - this can be\n            // omitted when requesting a reservation from a go-libp2p relay we\n            // already have a reservation on\n            const addresses = new Set();\n            addresses.add(connection.remoteAddr.toString());\n            for (const buf of response.reservation.addrs) {\n                let ma = multiaddr(buf);\n                if (ma.getComponents().find(c => c.code === CODE_P2P) == null) {\n                    ma = ma.encapsulate(`/p2p/${connection.remotePeer}`);\n                }\n                // TODO: workaround for https://github.com/libp2p/go-libp2p/issues/3003\n                ma = multiaddr(ma.toString().replace(`/p2p/${connection.remotePeer}/p2p/${connection.remotePeer}`, `/p2p/${connection.remotePeer}`));\n                addresses.add(ma.toString());\n            }\n            response.reservation.addrs = [...addresses].map(str => multiaddr(str).bytes);\n            return response.reservation;\n        }\n        const errMsg = `reservation failed with status ${response.status ?? 'undefined'}`;\n        this.log.error(errMsg);\n        throw new Error(errMsg);\n    }\n    /**\n     * Remove listen relay\n     */\n    async #removeReservation(peerId) {\n        const reservation = this.reservations.get(peerId);\n        if (reservation == null) {\n            return;\n        }\n        this.log('removing relay reservation with %p from local store', peerId);\n        clearTimeout(reservation.timeout);\n        this.reservations.delete(peerId);\n        // discover a new relay for this discovery request\n        if (reservation.type === 'discovered') {\n            this.pendingReservations.push(reservation.id);\n        }\n        // untag the relay\n        await this.peerStore.merge(peerId, {\n            tags: {\n                [KEEP_ALIVE_TAG]: undefined\n            }\n        });\n        this.safeDispatchEvent('relay:removed', {\n            detail: {\n                relay: peerId,\n                details: reservation\n            }\n        });\n        // maybe trigger discovery of new relays\n        this.#checkReservationCount();\n    }\n    #checkReservationCount() {\n        if (this.pendingReservations.length === 0) {\n            this.log.trace('have discovered enough relays');\n            this.reserveQueue.clear();\n            this.safeDispatchEvent('relay:found-enough-relays');\n            return;\n        }\n        this.relayFilter = createScalableCuckooFilter(100);\n        this.log('not discovered enough relays %d/%d', this.reservations.size, this.pendingReservations.length);\n        this.safeDispatchEvent('relay:not-enough-relays');\n    }\n}\n//# sourceMappingURL=reservation-store.js.map","import { AbstractMultiaddrConnection } from '@libp2p/utils';\nimport { Uint8ArrayList } from 'uint8arraylist';\nclass StreamMultiaddrConnection extends AbstractMultiaddrConnection {\n    stream;\n    init;\n    constructor(init) {\n        super({\n            ...init,\n            direction: init.stream.direction\n        });\n        this.init = init;\n        this.stream = init.stream;\n        this.stream.addEventListener('close', (evt) => {\n            this.onTransportClosed(evt.error);\n        });\n        this.stream.addEventListener('remoteCloseWrite', (evt) => {\n            this.onRemoteCloseWrite();\n            // close our end when the remote closes\n            this.close()\n                .catch(err => {\n                this.abort(err);\n            });\n        });\n        // count incoming bytes\n        this.stream.addEventListener('message', (evt) => {\n            init.onDataRead?.(evt.data);\n            this.onData(evt.data);\n        });\n        // forward drain events\n        this.stream.addEventListener('drain', () => {\n            this.safeDispatchEvent('drain');\n        });\n    }\n    sendData(data) {\n        this.init.onDataWrite?.(data);\n        return {\n            sentBytes: data.byteLength,\n            canSendMore: this.stream.send(data)\n        };\n    }\n    async sendClose(options) {\n        await this.stream.close(options);\n    }\n    sendReset() {\n        this.stream.abort(new Error('An error occurred'));\n    }\n    sendPause() {\n        this.stream.pause();\n    }\n    sendResume() {\n        this.stream.resume();\n    }\n}\n/**\n * Convert a Stream into a MultiaddrConnection.\n */\nexport function streamToMaConnection(init) {\n    return new StreamMultiaddrConnection(init);\n}\n//# sourceMappingURL=stream-to-conn.js.map","import { DialError, InvalidMessageError, serviceCapabilities, serviceDependencies, start, stop, transportSymbol } from '@libp2p/interface';\nimport { peerFilter } from '@libp2p/peer-collections';\nimport { peerIdFromMultihash, peerIdFromString } from '@libp2p/peer-id';\nimport { pbStream } from '@libp2p/utils';\nimport { CODE_P2P, multiaddr } from '@multiformats/multiaddr';\nimport { Circuit } from '@multiformats/multiaddr-matcher';\nimport { setMaxListeners } from 'main-event';\nimport * as Digest from 'multiformats/hashes/digest';\nimport { CustomProgressEvent } from 'progress-events';\nimport { DEFAULT_DISCOVERY_FILTER_ERROR_RATE, DEFAULT_DISCOVERY_FILTER_SIZE, MAX_CONNECTIONS, RELAY_V2_HOP_CODEC, RELAY_V2_STOP_CODEC } from '../constants.js';\nimport { StopMessage, HopMessage, Status } from '../pb/index.js';\nimport { CircuitListen, CircuitSearch, LimitTracker } from '../utils.js';\nimport { RelayDiscovery } from './discovery.js';\nimport { createListener } from './listener.js';\nimport { ReservationStore } from './reservation-store.js';\nimport { streamToMaConnection } from './stream-to-conn.js';\nconst isValidStop = (request) => {\n    if (request.peer == null) {\n        return false;\n    }\n    try {\n        request.peer.addrs.forEach(multiaddr);\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\nconst defaults = {\n    maxInboundStopStreams: MAX_CONNECTIONS,\n    maxOutboundStopStreams: MAX_CONNECTIONS,\n    stopTimeout: 30000\n};\nexport class CircuitRelayTransport {\n    components;\n    discovery;\n    reservationStore;\n    maxInboundStopStreams;\n    maxOutboundStopStreams;\n    started;\n    log;\n    shutdownController;\n    constructor(components, init = {}) {\n        this.components = components;\n        this.log = components.logger.forComponent('libp2p:circuit-relay:transport');\n        this.maxInboundStopStreams = init.maxInboundStopStreams ?? defaults.maxInboundStopStreams;\n        this.maxOutboundStopStreams = init.maxOutboundStopStreams ?? defaults.maxOutboundStopStreams;\n        this.shutdownController = new AbortController();\n        this.discovery = new RelayDiscovery(components, {\n            filter: init.discoveryFilter ?? peerFilter(DEFAULT_DISCOVERY_FILTER_SIZE, DEFAULT_DISCOVERY_FILTER_ERROR_RATE)\n        });\n        this.discovery.addEventListener('relay:discover', (evt) => {\n            this.reservationStore.addRelay(evt.detail, 'discovered')\n                .catch(err => {\n                if (err.name !== 'HadEnoughRelaysError' && err.name !== 'RelayQueueFullError') {\n                    this.log.error('could not add discovered relay %p - %e', evt.detail, err);\n                }\n            });\n        });\n        this.reservationStore = new ReservationStore(components, init);\n        this.reservationStore.addEventListener('relay:not-enough-relays', () => {\n            this.discovery?.startDiscovery();\n        });\n        this.reservationStore.addEventListener('relay:found-enough-relays', () => {\n            this.discovery?.stopDiscovery();\n        });\n        this.started = false;\n        this.onStop = this.onStop.bind(this);\n    }\n    [Symbol.toStringTag] = '@libp2p/circuit-relay-v2-transport';\n    [serviceCapabilities] = [\n        '@libp2p/transport',\n        '@libp2p/circuit-relay-v2-transport'\n    ];\n    get [serviceDependencies]() {\n        // we only need identify if discovery is enabled\n        if (this.discovery != null) {\n            return [\n                '@libp2p/identify'\n            ];\n        }\n        return [];\n    }\n    [transportSymbol] = true;\n    isStarted() {\n        return this.started;\n    }\n    async start() {\n        this.shutdownController = new AbortController();\n        setMaxListeners(Infinity, this.shutdownController.signal);\n        await this.components.registrar.handle(RELAY_V2_STOP_CODEC, this.onStop, {\n            maxInboundStreams: this.maxInboundStopStreams,\n            maxOutboundStreams: this.maxOutboundStopStreams,\n            runOnLimitedConnection: true\n        });\n        await start(this.discovery, this.reservationStore);\n        this.started = true;\n    }\n    async stop() {\n        this.shutdownController.abort();\n        await stop(this.discovery, this.reservationStore);\n        await this.components.registrar.unhandle(RELAY_V2_STOP_CODEC);\n        this.started = false;\n    }\n    /**\n     * Dial a peer over a relay\n     */\n    async dial(ma, options) {\n        // Check the multiaddr to see if it contains a relay and a destination peer\n        const addrs = ma.toString().split('/p2p-circuit');\n        const relayAddr = multiaddr(addrs[0]);\n        const destinationAddr = multiaddr(addrs[addrs.length - 1]);\n        const relayId = relayAddr.getComponents().find(c => c.code === CODE_P2P)?.value;\n        const destinationId = destinationAddr.getComponents().find(c => c.code === CODE_P2P)?.value;\n        if (relayId == null || destinationId == null) {\n            const errMsg = `ircuit relay dial to ${ma.toString()} failed as address did not have both relay and destination PeerIDs`;\n            this.log.error(`c${errMsg}`);\n            throw new DialError(`C${errMsg}`);\n        }\n        const relayPeer = peerIdFromString(relayId);\n        const destinationPeer = peerIdFromString(destinationId);\n        const relayConnections = this.components.connectionManager.getConnections(relayPeer);\n        let relayConnection = relayConnections[0];\n        if (relayConnection == null) {\n            await this.components.peerStore.merge(relayPeer, {\n                multiaddrs: [relayAddr]\n            });\n            options.onProgress?.(new CustomProgressEvent('circuit-relay:open-connection'));\n            relayConnection = await this.components.connectionManager.openConnection(relayPeer, options);\n        }\n        else {\n            options.onProgress?.(new CustomProgressEvent('circuit-relay:reuse-connection'));\n        }\n        let stream;\n        try {\n            options.onProgress?.(new CustomProgressEvent('circuit-relay:open-hop-stream'));\n            stream = await relayConnection.newStream(RELAY_V2_HOP_CODEC, options);\n            const hopstr = pbStream(stream).pb(HopMessage);\n            options.onProgress?.(new CustomProgressEvent('circuit-relay:write-connect-message'));\n            await hopstr.write({\n                type: HopMessage.Type.CONNECT,\n                peer: {\n                    id: destinationPeer.toMultihash().bytes,\n                    addrs: [multiaddr(destinationAddr).bytes]\n                }\n            }, options);\n            options.onProgress?.(new CustomProgressEvent('circuit-relay:read-connect-response'));\n            const status = await hopstr.read(options);\n            if (status.status !== Status.OK) {\n                throw new InvalidMessageError(`failed to connect via relay with status ${status?.status?.toString() ?? 'undefined'}`);\n            }\n            const limits = new LimitTracker(status.limit);\n            const maConn = streamToMaConnection({\n                stream: hopstr.unwrap().unwrap(),\n                remoteAddr: ma,\n                localAddr: relayAddr.encapsulate(`/p2p-circuit/p2p/${this.components.peerId.toString()}`),\n                onDataRead: limits.onData,\n                onDataWrite: limits.onData,\n                log: stream.log.newScope('circuit-relay:connection')\n            });\n            const conn = await this.components.upgrader.upgradeOutbound(maConn, {\n                ...options,\n                limits: limits.getLimits()\n            });\n            conn.log('outbound relayed connection established to %p with limits %o, over connection %s', conn.remotePeer, status.limit ?? 'none', relayConnection.id);\n            return conn;\n        }\n        catch (err) {\n            this.log.error('circuit relay dial to destination %p via relay %p failed - %e', destinationPeer, relayPeer, err);\n            stream?.abort(err);\n            throw err;\n        }\n    }\n    /**\n     * Create a listener\n     */\n    createListener(options) {\n        return createListener({\n            peerId: this.components.peerId,\n            connectionManager: this.components.connectionManager,\n            addressManager: this.components.addressManager,\n            reservationStore: this.reservationStore,\n            logger: this.components.logger\n        });\n    }\n    /**\n     * Filter check for all Multiaddrs that this transport can listen on\n     */\n    listenFilter(multiaddrs) {\n        multiaddrs = Array.isArray(multiaddrs) ? multiaddrs : [multiaddrs];\n        return multiaddrs.filter((ma) => {\n            return CircuitListen.exactMatch(ma) || CircuitSearch.exactMatch(ma);\n        });\n    }\n    /**\n     * Filter check for all Multiaddrs that this transport can dial\n     */\n    dialFilter(multiaddrs) {\n        multiaddrs = Array.isArray(multiaddrs) ? multiaddrs : [multiaddrs];\n        return multiaddrs.filter((ma) => {\n            return Circuit.exactMatch(ma);\n        });\n    }\n    /**\n     * An incoming STOP request means a remote peer wants to dial us via a relay\n     */\n    async onStop(stream, connection) {\n        const signal = this.components.upgrader.createInboundAbortSignal(this.shutdownController.signal);\n        try {\n            if (!this.reservationStore.hasReservation(connection.remotePeer)) {\n                try {\n                    this.log('dialed via relay we did not have a reservation on, start listening on that relay address');\n                    await this.components.transportManager.listen([connection.remoteAddr.encapsulate('/p2p-circuit')]);\n                }\n                catch (err) {\n                    // failed to refresh our hitherto unknown relay reservation but allow the connection attempt anyway\n                    this.log.error('failed to listen on a relay peer we were dialed via but did not have a reservation on - %e', err);\n                }\n            }\n            const stopStream = pbStream(stream).pb(StopMessage);\n            const request = await stopStream.read({\n                signal\n            });\n            this.log('new circuit relay v2 stop stream from %p with type %s', connection.remotePeer, request.type);\n            if (request?.type === undefined) {\n                this.log.error('type was missing from circuit v2 stop protocol request from %s', connection.remotePeer);\n                await stopStream.write({ type: StopMessage.Type.STATUS, status: Status.MALFORMED_MESSAGE }, {\n                    signal\n                });\n                await stream.close({\n                    signal\n                });\n                return;\n            }\n            // Validate the STOP request has the required input\n            if (request.type !== StopMessage.Type.CONNECT) {\n                this.log.error('invalid stop connect request via peer %p', connection.remotePeer);\n                await stopStream.write({ type: StopMessage.Type.STATUS, status: Status.UNEXPECTED_MESSAGE }, {\n                    signal\n                });\n                await stream.close({\n                    signal\n                });\n                return;\n            }\n            if (!isValidStop(request)) {\n                this.log.error('invalid stop connect request via peer %p', connection.remotePeer);\n                await stopStream.write({ type: StopMessage.Type.STATUS, status: Status.MALFORMED_MESSAGE }, {\n                    signal\n                });\n                await stream.close({\n                    signal\n                });\n                return;\n            }\n            const remotePeerId = peerIdFromMultihash(Digest.decode(request.peer.id));\n            if ((await this.components.connectionGater.denyInboundRelayedConnection?.(connection.remotePeer, remotePeerId)) === true) {\n                this.log.error('connection gater denied inbound relayed connection from %p', connection.remotePeer);\n                await stopStream.write({ type: StopMessage.Type.STATUS, status: Status.PERMISSION_DENIED }, {\n                    signal\n                });\n                await stream.close({\n                    signal\n                });\n                return;\n            }\n            this.log.trace('sending success response to %p', connection.remotePeer);\n            await stopStream.write({ type: StopMessage.Type.STATUS, status: Status.OK }, {\n                signal\n            });\n            const limits = new LimitTracker(request.limit);\n            const remoteAddr = connection.remoteAddr.encapsulate(`/p2p-circuit/p2p/${remotePeerId.toString()}`);\n            const localAddr = this.components.addressManager.getAddresses()[0];\n            const maConn = streamToMaConnection({\n                stream: stopStream.unwrap().unwrap(),\n                remoteAddr,\n                localAddr,\n                onDataRead: limits.onData,\n                onDataWrite: limits.onData,\n                log: stream.log.newScope('circuit-relay:connection')\n            });\n            await this.components.upgrader.upgradeInbound(maConn, {\n                limits: limits.getLimits(),\n                signal\n            });\n            maConn.log('inbound relayed connection established to %p with limits %o, over connection %s', remotePeerId, request.limit ?? 'none', connection.id);\n        }\n        finally {\n            signal?.clear();\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","/**\n * @packageDocumentation\n *\n * The `circuitRelayTransport` allows libp2p to dial and listen on [Circuit Relay](https://docs.libp2p.io/concepts/nat/circuit-relay/)\n * addresses.\n *\n * @example Use as a transport\n *\n * Configuring a transport will let you dial other circuit relay addresses.\n *\n * ```typescript\n * import { createLibp2p } from 'libp2p'\n * import { circuitRelayTransport } from '@libp2p/circuit-relay-v2'\n *\n * const node = await createLibp2p({\n *   transports: [\n *     circuitRelayTransport()\n *   ]\n * })\n * ```\n *\n * The `circuitRelayServer` function allows libp2p to function as a [Circuit Relay](https://docs.libp2p.io/concepts/nat/circuit-relay/)\n * server.  This will not work in browsers.\n *\n * @example Use as a server\n *\n * Configuring a server will let you function as a network relay for other\n * nodes.\n *\n * ```typescript\n * import { createLibp2p } from 'libp2p'\n * import { circuitRelayServer } from '@libp2p/circuit-relay-v2'\n *\n * const node = await createLibp2p({\n *   services: {\n *     circuitRelay: circuitRelayServer()\n *   }\n * })\n * ```\n */\nimport { TypedEventEmitter } from 'main-event';\nimport { CircuitRelayServer } from './server/index.js';\nimport { CircuitRelayTransport } from \"./transport/index.js\";\nexport { RELAY_V2_HOP_CODEC, RELAY_V2_STOP_CODEC } from './constants.js';\nexport function circuitRelayServer(init = {}) {\n    return (components) => {\n        return new CircuitRelayServer(components, init);\n    };\n}\nexport function circuitRelayTransport(init = {}) {\n    return (components) => {\n        return new CircuitRelayTransport(components, init);\n    };\n}\n//# sourceMappingURL=index.js.map","/**\n * @packageDocumentation\n *\n * The configured bootstrap peers will be discovered after the configured timeout. This will ensure there are some peers in the peer store for the node to use to discover other peers.\n *\n * They will be tagged with a tag with the name `'bootstrap'` tag, the value `50` and it will expire after two minutes which means the nodes connections may be closed if the maximum number of connections is reached.\n *\n * Clients that need constant connections to bootstrap nodes (e.g. browsers) can set the TTL to `Infinity`.\n *\n * @example Configuring a list of bootstrap nodes\n *\n * ```TypeScript\n * import { createLibp2p } from 'libp2p'\n * import { bootstrap } from '@libp2p/bootstrap'\n *\n * const libp2p = await createLibp2p({\n *   peerDiscovery: [\n *     bootstrap({\n *       list: [\n *         // a list of bootstrap peer multiaddrs to connect to on node startup\n *         '/ip4/104.131.131.82/tcp/4001/ipfs/QmaCpDMGvV2BGHeYERUEnRQAwe3N8SzbUtfsmvsqQLuvuJ',\n *         '/dnsaddr/bootstrap.libp2p.io/ipfs/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN',\n *         '/dnsaddr/bootstrap.libp2p.io/ipfs/QmQCU2EcMqAqQPR2i9bChDtGNJchTbq5TbXJJ16u19uLTa'\n *       ]\n *     })\n *   ]\n * })\n *\n * libp2p.addEventListener('peer:discovery', (evt) => {\n *   console.log('found peer: ', evt.detail.toString())\n * })\n * ```\n */\nimport { peerDiscoverySymbol, serviceCapabilities } from '@libp2p/interface';\nimport { peerIdFromString } from '@libp2p/peer-id';\nimport { CODE_P2P, multiaddr } from '@multiformats/multiaddr';\nimport { P2P } from '@multiformats/multiaddr-matcher';\nimport { TypedEventEmitter } from 'main-event';\nconst DEFAULT_BOOTSTRAP_TAG_NAME = 'bootstrap';\nconst DEFAULT_BOOTSTRAP_TAG_VALUE = 50;\nconst DEFAULT_BOOTSTRAP_DISCOVERY_TIMEOUT = 1000;\n/**\n * Emits 'peer' events on a regular interval for each peer in the provided list.\n */\nclass Bootstrap extends TypedEventEmitter {\n    static tag = 'bootstrap';\n    log;\n    timer;\n    list;\n    timeout;\n    components;\n    _init;\n    constructor(components, options = { list: [] }) {\n        if (options.list == null || options.list.length === 0) {\n            throw new Error('Bootstrap requires a list of peer addresses');\n        }\n        super();\n        this.components = components;\n        this.log = components.logger.forComponent('libp2p:bootstrap');\n        this.timeout = options.timeout ?? DEFAULT_BOOTSTRAP_DISCOVERY_TIMEOUT;\n        this.list = options.list\n            .map(str => multiaddr(str))\n            .filter(ma => {\n            if (!P2P.matches(ma)) {\n                this.log.error('invalid multiaddr %a', ma);\n                return false;\n            }\n            const peerIdStr = ma.getComponents().findLast(c => c.code === CODE_P2P)?.value;\n            if (peerIdStr == null) {\n                this.log.error('invalid bootstrap multiaddr without peer id');\n                return false;\n            }\n            return true;\n        })\n            .map(ma => {\n            return {\n                id: peerIdFromString(ma.getComponents().findLast(c => c.code === CODE_P2P)?.value ?? ''),\n                multiaddrs: [ma]\n            };\n        });\n        this._init = options;\n    }\n    [peerDiscoverySymbol] = this;\n    [Symbol.toStringTag] = '@libp2p/bootstrap';\n    [serviceCapabilities] = [\n        '@libp2p/peer-discovery'\n    ];\n    isStarted() {\n        return Boolean(this.timer);\n    }\n    /**\n     * Start emitting events\n     */\n    start() {\n        if (this.isStarted()) {\n            return;\n        }\n        this.log('Starting bootstrap node discovery, discovering peers after %s ms', this.timeout);\n        this.timer = setTimeout(() => {\n            void this._discoverBootstrapPeers()\n                .catch(err => {\n                this.log.error('failed to discover bootstrap peers - %e', err);\n            });\n        }, this.timeout);\n    }\n    /**\n     * Emit each address in the list as a PeerInfo\n     */\n    async _discoverBootstrapPeers() {\n        if (this.timer == null) {\n            return;\n        }\n        for (const peerData of this.list) {\n            await this.components.peerStore.merge(peerData.id, {\n                tags: {\n                    [this._init.tagName ?? DEFAULT_BOOTSTRAP_TAG_NAME]: {\n                        value: this._init.tagValue ?? DEFAULT_BOOTSTRAP_TAG_VALUE,\n                        ttl: this._init.tagTTL\n                    }\n                },\n                multiaddrs: peerData.multiaddrs\n            });\n            // check we are still running\n            if (this.timer == null) {\n                return;\n            }\n            this.safeDispatchEvent('peer', { detail: peerData });\n            this.components.connectionManager.openConnection(peerData.id)\n                .catch(err => {\n                this.log.error('could not dial bootstrap peer %p - %e', peerData.id, err);\n            });\n        }\n    }\n    /**\n     * Stop emitting events\n     */\n    stop() {\n        if (this.timer != null) {\n            clearTimeout(this.timer);\n        }\n        this.timer = undefined;\n    }\n}\nexport function bootstrap(init) {\n    return (components) => new Bootstrap(components, init);\n}\n//# sourceMappingURL=index.js.map","export const second = 1000;\nexport const minute = 60 * second;\n// Protocol identifiers\nexport const FloodsubID = '/floodsub/1.0.0';\n/**\n * The protocol ID for version 1.0.0 of the Gossipsub protocol\n * It is advertised along with GossipsubIDv11 for backwards compatability\n */\nexport const GossipsubIDv10 = '/meshsub/1.0.0';\n/**\n * The protocol ID for version 1.1.0 of the Gossipsub protocol\n * See the spec for details about how v1.1.0 compares to v1.0.0:\n * https://github.com/libp2p/specs/blob/master/pubsub/gossipsub/gossipsub-v1.1.md\n */\nexport const GossipsubIDv11 = '/meshsub/1.1.0';\n/**\n * The protocol ID for version 1.2.0 of the Gossipsub protocol\n * See the spec for details about how v1.2.0 compares to v1.1.0:\n * https://github.com/libp2p/specs/blob/master/pubsub/gossipsub/gossipsub-v1.2.md\n */\nexport const GossipsubIDv12 = '/meshsub/1.2.0';\n// Overlay parameters\n/**\n * GossipsubD sets the optimal degree for a Gossipsub topic mesh. For example, if GossipsubD == 6,\n * each peer will want to have about six peers in their mesh for each topic they're subscribed to.\n * GossipsubD should be set somewhere between GossipsubDlo and GossipsubDhi.\n */\nexport const GossipsubD = 6;\n/**\n * GossipsubDlo sets the lower bound on the number of peers we keep in a Gossipsub topic mesh.\n * If we have fewer than GossipsubDlo peers, we will attempt to graft some more into the mesh at\n * the next heartbeat.\n */\nexport const GossipsubDlo = 4;\n/**\n * GossipsubDhi sets the upper bound on the number of peers we keep in a Gossipsub topic mesh.\n * If we have more than GossipsubDhi peers, we will select some to prune from the mesh at the next heartbeat.\n */\nexport const GossipsubDhi = 12;\n/**\n * GossipsubDscore affects how peers are selected when pruning a mesh due to over subscription.\n * At least GossipsubDscore of the retained peers will be high-scoring, while the remainder are\n * chosen randomly.\n */\nexport const GossipsubDscore = 4;\n/**\n * GossipsubDout sets the quota for the number of outbound connections to maintain in a topic mesh.\n * When the mesh is pruned due to over subscription, we make sure that we have outbound connections\n * to at least GossipsubDout of the survivor peers. This prevents sybil attackers from overwhelming\n * our mesh with incoming connections.\n *\n * GossipsubDout must be set below GossipsubDlo, and must not exceed GossipsubD / 2.\n */\nexport const GossipsubDout = 2;\n// Gossip parameters\n/**\n * GossipsubHistoryLength controls the size of the message cache used for gossip.\n * The message cache will remember messages for GossipsubHistoryLength heartbeats.\n */\nexport const GossipsubHistoryLength = 5;\n/**\n * GossipsubHistoryGossip controls how many cached message ids we will advertise in\n * IHAVE gossip messages. When asked for our seen message IDs, we will return\n * only those from the most recent GossipsubHistoryGossip heartbeats. The slack between\n * GossipsubHistoryGossip and GossipsubHistoryLength allows us to avoid advertising messages\n * that will be expired by the time they're requested.\n *\n * GossipsubHistoryGossip must be less than or equal to GossipsubHistoryLength to\n * avoid a runtime panic.\n */\nexport const GossipsubHistoryGossip = 3;\n/**\n * GossipsubDlazy affects how many peers we will emit gossip to at each heartbeat.\n * We will send gossip to at least GossipsubDlazy peers outside our mesh. The actual\n * number may be more, depending on GossipsubGossipFactor and how many peers we're\n * connected to.\n */\nexport const GossipsubDlazy = 6;\n/**\n * GossipsubGossipFactor affects how many peers we will emit gossip to at each heartbeat.\n * We will send gossip to GossipsubGossipFactor * (total number of non-mesh peers), or\n * GossipsubDlazy, whichever is greater.\n */\nexport const GossipsubGossipFactor = 0.25;\n/**\n * GossipsubGossipRetransmission controls how many times we will allow a peer to request\n * the same message id through IWANT gossip before we start ignoring them. This is designed\n * to prevent peers from spamming us with requests and wasting our resources.\n */\nexport const GossipsubGossipRetransmission = 3;\n// Heartbeat interval\n/**\n * GossipsubHeartbeatInitialDelay is the short delay before the heartbeat timer begins\n * after the router is initialized.\n */\nexport const GossipsubHeartbeatInitialDelay = 100;\n/**\n * GossipsubHeartbeatInterval controls the time between heartbeats.\n */\nexport const GossipsubHeartbeatInterval = second;\n/**\n * GossipsubFanoutTTL controls how long we keep track of the fanout state. If it's been\n * GossipsubFanoutTTL since we've published to a topic that we're not subscribed to,\n * we'll delete the fanout map for that topic.\n */\nexport const GossipsubFanoutTTL = minute;\n/**\n * GossipsubPrunePeers controls the number of peers to include in prune Peer eXchange.\n * When we prune a peer that's eligible for PX (has a good score, etc), we will try to\n * send them signed peer records for up to GossipsubPrunePeers other peers that we\n * know of.\n */\nexport const GossipsubPrunePeers = 16;\n/**\n * GossipsubPruneBackoff controls the backoff time for pruned peers. This is how long\n * a peer must wait before attempting to graft into our mesh again after being pruned.\n * When pruning a peer, we send them our value of GossipsubPruneBackoff so they know\n * the minimum time to wait. Peers running older versions may not send a backoff time,\n * so if we receive a prune message without one, we will wait at least GossipsubPruneBackoff\n * before attempting to re-graft.\n */\nexport const GossipsubPruneBackoff = minute;\n/**\n * Backoff to use when unsuscribing from a topic. Should not resubscribe to this topic before it expired.\n */\nexport const GossipsubUnsubscribeBackoff = 10 * second;\n/**\n * GossipsubPruneBackoffTicks is the number of heartbeat ticks for attempting to prune expired\n * backoff timers.\n */\nexport const GossipsubPruneBackoffTicks = 15;\n/**\n * GossipsubConnectors controls the number of active connection attempts for peers obtained through PX.\n */\nexport const GossipsubConnectors = 8;\n/**\n * GossipsubMaxPendingConnections sets the maximum number of pending connections for peers attempted through px.\n */\nexport const GossipsubMaxPendingConnections = 128;\n/**\n * GossipsubConnectionTimeout controls the timeout for connection attempts.\n */\nexport const GossipsubConnectionTimeout = 30 * second;\n/**\n * GossipsubDirectConnectTicks is the number of heartbeat ticks for attempting to reconnect direct peers\n * that are not currently connected.\n */\nexport const GossipsubDirectConnectTicks = 300;\n/**\n * GossipsubDirectConnectInitialDelay is the initial delay before opening connections to direct peers\n */\nexport const GossipsubDirectConnectInitialDelay = second;\n/**\n * GossipsubOpportunisticGraftTicks is the number of heartbeat ticks for attempting to improve the mesh\n * with opportunistic grafting. Every GossipsubOpportunisticGraftTicks we will attempt to select some\n * high-scoring mesh peers to replace lower-scoring ones, if the median score of our mesh peers falls\n * below a threshold\n */\nexport const GossipsubOpportunisticGraftTicks = 60;\n/**\n * GossipsubOpportunisticGraftPeers is the number of peers to opportunistically graft.\n */\nexport const GossipsubOpportunisticGraftPeers = 2;\n/**\n * If a GRAFT comes before GossipsubGraftFloodThreshold has elapsed since the last PRUNE,\n * then there is an extra score penalty applied to the peer through P7.\n */\nexport const GossipsubGraftFloodThreshold = 10 * second;\n/**\n * GossipsubMaxIHaveLength is the maximum number of messages to include in an IHAVE message.\n * Also controls the maximum number of IHAVE ids we will accept and request with IWANT from a\n * peer within a heartbeat, to protect from IHAVE floods. You should adjust this value from the\n * default if your system is pushing more than 5000 messages in GossipsubHistoryGossip heartbeats;\n * with the defaults this is 1666 messages/s.\n */\nexport const GossipsubMaxIHaveLength = 5000;\n/**\n * GossipsubMaxIHaveMessages is the maximum number of IHAVE messages to accept from a peer within a heartbeat.\n */\nexport const GossipsubMaxIHaveMessages = 10;\n/**\n * Time to wait for a message requested through IWANT following an IHAVE advertisement.\n * If the message is not received within this window, a broken promise is declared and\n * the router may apply bahavioural penalties.\n */\nexport const GossipsubIWantFollowupTime = 3 * second;\n/**\n * Time in milliseconds to keep message ids in the seen cache\n */\nexport const GossipsubSeenTTL = 2 * minute;\nexport const TimeCacheDuration = 120 * 1000;\nexport const ERR_TOPIC_VALIDATOR_REJECT = 'ERR_TOPIC_VALIDATOR_REJECT';\nexport const ERR_TOPIC_VALIDATOR_IGNORE = 'ERR_TOPIC_VALIDATOR_IGNORE';\n/**\n * If peer score is better than this, we accept messages from this peer\n * within ACCEPT_FROM_WHITELIST_DURATION_MS from the last time computing score.\n */\nexport const ACCEPT_FROM_WHITELIST_THRESHOLD_SCORE = 0;\n/**\n * If peer score >= ACCEPT_FROM_WHITELIST_THRESHOLD_SCORE, accept up to this\n * number of messages from that peer.\n */\nexport const ACCEPT_FROM_WHITELIST_MAX_MESSAGES = 128;\n/**\n * If peer score >= ACCEPT_FROM_WHITELIST_THRESHOLD_SCORE, accept messages from\n * this peer up to this time duration.\n */\nexport const ACCEPT_FROM_WHITELIST_DURATION_MS = 1000;\n/**\n * The default MeshMessageDeliveriesWindow to be used in metrics.\n */\nexport const DEFAULT_METRIC_MESH_MESSAGE_DELIVERIES_WINDOWS = 1000;\n/** Wait for 1 more heartbeats before clearing a backoff */\nexport const BACKOFF_SLACK = 1;\nexport const GossipsubIdontwantMinDataSize = 512;\nexport const GossipsubIdontwantMaxMessages = 512;\n//# sourceMappingURL=constants.js.map","export const defaultDecodeRpcLimits = {\n    maxSubscriptions: Infinity,\n    maxMessages: Infinity,\n    maxIhaveMessageIDs: Infinity,\n    maxIwantMessageIDs: Infinity,\n    maxIdontwantMessageIDs: Infinity,\n    maxControlMessages: Infinity,\n    maxPeerInfos: Infinity\n};\n//# sourceMappingURL=decodeRpc.js.map","/* eslint-disable complexity */\nimport { decodeMessage, encodeMessage, MaxLengthError, message } from 'protons-runtime';\nexport var RPC;\n(function (RPC) {\n    let SubOpts;\n    (function (SubOpts) {\n        let _codec;\n        SubOpts.codec = () => {\n            if (_codec == null) {\n                _codec = message((obj, w, opts = {}) => {\n                    if (opts.lengthDelimited !== false) {\n                        w.fork();\n                    }\n                    if (obj.subscribe != null) {\n                        w.uint32(8);\n                        w.bool(obj.subscribe);\n                    }\n                    if (obj.topic != null) {\n                        w.uint32(18);\n                        w.string(obj.topic);\n                    }\n                    if (opts.lengthDelimited !== false) {\n                        w.ldelim();\n                    }\n                }, (reader, length, opts = {}) => {\n                    const obj = {};\n                    const end = length == null ? reader.len : reader.pos + length;\n                    while (reader.pos < end) {\n                        const tag = reader.uint32();\n                        switch (tag >>> 3) {\n                            case 1: {\n                                obj.subscribe = reader.bool();\n                                break;\n                            }\n                            case 2: {\n                                obj.topic = reader.string();\n                                break;\n                            }\n                            default: {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                    }\n                    return obj;\n                });\n            }\n            return _codec;\n        };\n        SubOpts.encode = (obj) => {\n            return encodeMessage(obj, SubOpts.codec());\n        };\n        SubOpts.decode = (buf, opts) => {\n            return decodeMessage(buf, SubOpts.codec(), opts);\n        };\n    })(SubOpts = RPC.SubOpts || (RPC.SubOpts = {}));\n    let Message;\n    (function (Message) {\n        let _codec;\n        Message.codec = () => {\n            if (_codec == null) {\n                _codec = message((obj, w, opts = {}) => {\n                    if (opts.lengthDelimited !== false) {\n                        w.fork();\n                    }\n                    if (obj.from != null) {\n                        w.uint32(10);\n                        w.bytes(obj.from);\n                    }\n                    if (obj.data != null) {\n                        w.uint32(18);\n                        w.bytes(obj.data);\n                    }\n                    if (obj.seqno != null) {\n                        w.uint32(26);\n                        w.bytes(obj.seqno);\n                    }\n                    if ((obj.topic != null && obj.topic !== '')) {\n                        w.uint32(34);\n                        w.string(obj.topic);\n                    }\n                    if (obj.signature != null) {\n                        w.uint32(42);\n                        w.bytes(obj.signature);\n                    }\n                    if (obj.key != null) {\n                        w.uint32(50);\n                        w.bytes(obj.key);\n                    }\n                    if (opts.lengthDelimited !== false) {\n                        w.ldelim();\n                    }\n                }, (reader, length, opts = {}) => {\n                    const obj = {\n                        topic: ''\n                    };\n                    const end = length == null ? reader.len : reader.pos + length;\n                    while (reader.pos < end) {\n                        const tag = reader.uint32();\n                        switch (tag >>> 3) {\n                            case 1: {\n                                obj.from = reader.bytes();\n                                break;\n                            }\n                            case 2: {\n                                obj.data = reader.bytes();\n                                break;\n                            }\n                            case 3: {\n                                obj.seqno = reader.bytes();\n                                break;\n                            }\n                            case 4: {\n                                obj.topic = reader.string();\n                                break;\n                            }\n                            case 5: {\n                                obj.signature = reader.bytes();\n                                break;\n                            }\n                            case 6: {\n                                obj.key = reader.bytes();\n                                break;\n                            }\n                            default: {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                    }\n                    return obj;\n                });\n            }\n            return _codec;\n        };\n        Message.encode = (obj) => {\n            return encodeMessage(obj, Message.codec());\n        };\n        Message.decode = (buf, opts) => {\n            return decodeMessage(buf, Message.codec(), opts);\n        };\n    })(Message = RPC.Message || (RPC.Message = {}));\n    let ControlMessage;\n    (function (ControlMessage) {\n        let _codec;\n        ControlMessage.codec = () => {\n            if (_codec == null) {\n                _codec = message((obj, w, opts = {}) => {\n                    if (opts.lengthDelimited !== false) {\n                        w.fork();\n                    }\n                    if (obj.ihave != null) {\n                        for (const value of obj.ihave) {\n                            w.uint32(10);\n                            RPC.ControlIHave.codec().encode(value, w);\n                        }\n                    }\n                    if (obj.iwant != null) {\n                        for (const value of obj.iwant) {\n                            w.uint32(18);\n                            RPC.ControlIWant.codec().encode(value, w);\n                        }\n                    }\n                    if (obj.graft != null) {\n                        for (const value of obj.graft) {\n                            w.uint32(26);\n                            RPC.ControlGraft.codec().encode(value, w);\n                        }\n                    }\n                    if (obj.prune != null) {\n                        for (const value of obj.prune) {\n                            w.uint32(34);\n                            RPC.ControlPrune.codec().encode(value, w);\n                        }\n                    }\n                    if (obj.idontwant != null) {\n                        for (const value of obj.idontwant) {\n                            w.uint32(42);\n                            RPC.ControlIDontWant.codec().encode(value, w);\n                        }\n                    }\n                    if (opts.lengthDelimited !== false) {\n                        w.ldelim();\n                    }\n                }, (reader, length, opts = {}) => {\n                    const obj = {\n                        ihave: [],\n                        iwant: [],\n                        graft: [],\n                        prune: [],\n                        idontwant: []\n                    };\n                    const end = length == null ? reader.len : reader.pos + length;\n                    while (reader.pos < end) {\n                        const tag = reader.uint32();\n                        switch (tag >>> 3) {\n                            case 1: {\n                                if (opts.limits?.ihave != null && obj.ihave.length === opts.limits.ihave) {\n                                    throw new MaxLengthError('Decode error - map field \"ihave\" had too many elements');\n                                }\n                                obj.ihave.push(RPC.ControlIHave.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.ihave$\n                                }));\n                                break;\n                            }\n                            case 2: {\n                                if (opts.limits?.iwant != null && obj.iwant.length === opts.limits.iwant) {\n                                    throw new MaxLengthError('Decode error - map field \"iwant\" had too many elements');\n                                }\n                                obj.iwant.push(RPC.ControlIWant.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.iwant$\n                                }));\n                                break;\n                            }\n                            case 3: {\n                                if (opts.limits?.graft != null && obj.graft.length === opts.limits.graft) {\n                                    throw new MaxLengthError('Decode error - map field \"graft\" had too many elements');\n                                }\n                                obj.graft.push(RPC.ControlGraft.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.graft$\n                                }));\n                                break;\n                            }\n                            case 4: {\n                                if (opts.limits?.prune != null && obj.prune.length === opts.limits.prune) {\n                                    throw new MaxLengthError('Decode error - map field \"prune\" had too many elements');\n                                }\n                                obj.prune.push(RPC.ControlPrune.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.prune$\n                                }));\n                                break;\n                            }\n                            case 5: {\n                                if (opts.limits?.idontwant != null && obj.idontwant.length === opts.limits.idontwant) {\n                                    throw new MaxLengthError('Decode error - map field \"idontwant\" had too many elements');\n                                }\n                                obj.idontwant.push(RPC.ControlIDontWant.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.idontwant$\n                                }));\n                                break;\n                            }\n                            default: {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                    }\n                    return obj;\n                });\n            }\n            return _codec;\n        };\n        ControlMessage.encode = (obj) => {\n            return encodeMessage(obj, ControlMessage.codec());\n        };\n        ControlMessage.decode = (buf, opts) => {\n            return decodeMessage(buf, ControlMessage.codec(), opts);\n        };\n    })(ControlMessage = RPC.ControlMessage || (RPC.ControlMessage = {}));\n    let ControlIHave;\n    (function (ControlIHave) {\n        let _codec;\n        ControlIHave.codec = () => {\n            if (_codec == null) {\n                _codec = message((obj, w, opts = {}) => {\n                    if (opts.lengthDelimited !== false) {\n                        w.fork();\n                    }\n                    if (obj.topicID != null) {\n                        w.uint32(10);\n                        w.string(obj.topicID);\n                    }\n                    if (obj.messageIDs != null) {\n                        for (const value of obj.messageIDs) {\n                            w.uint32(18);\n                            w.bytes(value);\n                        }\n                    }\n                    if (opts.lengthDelimited !== false) {\n                        w.ldelim();\n                    }\n                }, (reader, length, opts = {}) => {\n                    const obj = {\n                        messageIDs: []\n                    };\n                    const end = length == null ? reader.len : reader.pos + length;\n                    while (reader.pos < end) {\n                        const tag = reader.uint32();\n                        switch (tag >>> 3) {\n                            case 1: {\n                                obj.topicID = reader.string();\n                                break;\n                            }\n                            case 2: {\n                                if (opts.limits?.messageIDs != null && obj.messageIDs.length === opts.limits.messageIDs) {\n                                    throw new MaxLengthError('Decode error - map field \"messageIDs\" had too many elements');\n                                }\n                                obj.messageIDs.push(reader.bytes());\n                                break;\n                            }\n                            default: {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                    }\n                    return obj;\n                });\n            }\n            return _codec;\n        };\n        ControlIHave.encode = (obj) => {\n            return encodeMessage(obj, ControlIHave.codec());\n        };\n        ControlIHave.decode = (buf, opts) => {\n            return decodeMessage(buf, ControlIHave.codec(), opts);\n        };\n    })(ControlIHave = RPC.ControlIHave || (RPC.ControlIHave = {}));\n    let ControlIWant;\n    (function (ControlIWant) {\n        let _codec;\n        ControlIWant.codec = () => {\n            if (_codec == null) {\n                _codec = message((obj, w, opts = {}) => {\n                    if (opts.lengthDelimited !== false) {\n                        w.fork();\n                    }\n                    if (obj.messageIDs != null) {\n                        for (const value of obj.messageIDs) {\n                            w.uint32(10);\n                            w.bytes(value);\n                        }\n                    }\n                    if (opts.lengthDelimited !== false) {\n                        w.ldelim();\n                    }\n                }, (reader, length, opts = {}) => {\n                    const obj = {\n                        messageIDs: []\n                    };\n                    const end = length == null ? reader.len : reader.pos + length;\n                    while (reader.pos < end) {\n                        const tag = reader.uint32();\n                        switch (tag >>> 3) {\n                            case 1: {\n                                if (opts.limits?.messageIDs != null && obj.messageIDs.length === opts.limits.messageIDs) {\n                                    throw new MaxLengthError('Decode error - map field \"messageIDs\" had too many elements');\n                                }\n                                obj.messageIDs.push(reader.bytes());\n                                break;\n                            }\n                            default: {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                    }\n                    return obj;\n                });\n            }\n            return _codec;\n        };\n        ControlIWant.encode = (obj) => {\n            return encodeMessage(obj, ControlIWant.codec());\n        };\n        ControlIWant.decode = (buf, opts) => {\n            return decodeMessage(buf, ControlIWant.codec(), opts);\n        };\n    })(ControlIWant = RPC.ControlIWant || (RPC.ControlIWant = {}));\n    let ControlGraft;\n    (function (ControlGraft) {\n        let _codec;\n        ControlGraft.codec = () => {\n            if (_codec == null) {\n                _codec = message((obj, w, opts = {}) => {\n                    if (opts.lengthDelimited !== false) {\n                        w.fork();\n                    }\n                    if (obj.topicID != null) {\n                        w.uint32(10);\n                        w.string(obj.topicID);\n                    }\n                    if (opts.lengthDelimited !== false) {\n                        w.ldelim();\n                    }\n                }, (reader, length, opts = {}) => {\n                    const obj = {};\n                    const end = length == null ? reader.len : reader.pos + length;\n                    while (reader.pos < end) {\n                        const tag = reader.uint32();\n                        switch (tag >>> 3) {\n                            case 1: {\n                                obj.topicID = reader.string();\n                                break;\n                            }\n                            default: {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                    }\n                    return obj;\n                });\n            }\n            return _codec;\n        };\n        ControlGraft.encode = (obj) => {\n            return encodeMessage(obj, ControlGraft.codec());\n        };\n        ControlGraft.decode = (buf, opts) => {\n            return decodeMessage(buf, ControlGraft.codec(), opts);\n        };\n    })(ControlGraft = RPC.ControlGraft || (RPC.ControlGraft = {}));\n    let ControlPrune;\n    (function (ControlPrune) {\n        let _codec;\n        ControlPrune.codec = () => {\n            if (_codec == null) {\n                _codec = message((obj, w, opts = {}) => {\n                    if (opts.lengthDelimited !== false) {\n                        w.fork();\n                    }\n                    if (obj.topicID != null) {\n                        w.uint32(10);\n                        w.string(obj.topicID);\n                    }\n                    if (obj.peers != null) {\n                        for (const value of obj.peers) {\n                            w.uint32(18);\n                            RPC.PeerInfo.codec().encode(value, w);\n                        }\n                    }\n                    if (obj.backoff != null) {\n                        w.uint32(24);\n                        w.uint64Number(obj.backoff);\n                    }\n                    if (opts.lengthDelimited !== false) {\n                        w.ldelim();\n                    }\n                }, (reader, length, opts = {}) => {\n                    const obj = {\n                        peers: []\n                    };\n                    const end = length == null ? reader.len : reader.pos + length;\n                    while (reader.pos < end) {\n                        const tag = reader.uint32();\n                        switch (tag >>> 3) {\n                            case 1: {\n                                obj.topicID = reader.string();\n                                break;\n                            }\n                            case 2: {\n                                if (opts.limits?.peers != null && obj.peers.length === opts.limits.peers) {\n                                    throw new MaxLengthError('Decode error - map field \"peers\" had too many elements');\n                                }\n                                obj.peers.push(RPC.PeerInfo.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.peers$\n                                }));\n                                break;\n                            }\n                            case 3: {\n                                obj.backoff = reader.uint64Number();\n                                break;\n                            }\n                            default: {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                    }\n                    return obj;\n                });\n            }\n            return _codec;\n        };\n        ControlPrune.encode = (obj) => {\n            return encodeMessage(obj, ControlPrune.codec());\n        };\n        ControlPrune.decode = (buf, opts) => {\n            return decodeMessage(buf, ControlPrune.codec(), opts);\n        };\n    })(ControlPrune = RPC.ControlPrune || (RPC.ControlPrune = {}));\n    let PeerInfo;\n    (function (PeerInfo) {\n        let _codec;\n        PeerInfo.codec = () => {\n            if (_codec == null) {\n                _codec = message((obj, w, opts = {}) => {\n                    if (opts.lengthDelimited !== false) {\n                        w.fork();\n                    }\n                    if (obj.peerID != null) {\n                        w.uint32(10);\n                        w.bytes(obj.peerID);\n                    }\n                    if (obj.signedPeerRecord != null) {\n                        w.uint32(18);\n                        w.bytes(obj.signedPeerRecord);\n                    }\n                    if (opts.lengthDelimited !== false) {\n                        w.ldelim();\n                    }\n                }, (reader, length, opts = {}) => {\n                    const obj = {};\n                    const end = length == null ? reader.len : reader.pos + length;\n                    while (reader.pos < end) {\n                        const tag = reader.uint32();\n                        switch (tag >>> 3) {\n                            case 1: {\n                                obj.peerID = reader.bytes();\n                                break;\n                            }\n                            case 2: {\n                                obj.signedPeerRecord = reader.bytes();\n                                break;\n                            }\n                            default: {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                    }\n                    return obj;\n                });\n            }\n            return _codec;\n        };\n        PeerInfo.encode = (obj) => {\n            return encodeMessage(obj, PeerInfo.codec());\n        };\n        PeerInfo.decode = (buf, opts) => {\n            return decodeMessage(buf, PeerInfo.codec(), opts);\n        };\n    })(PeerInfo = RPC.PeerInfo || (RPC.PeerInfo = {}));\n    let ControlIDontWant;\n    (function (ControlIDontWant) {\n        let _codec;\n        ControlIDontWant.codec = () => {\n            if (_codec == null) {\n                _codec = message((obj, w, opts = {}) => {\n                    if (opts.lengthDelimited !== false) {\n                        w.fork();\n                    }\n                    if (obj.messageIDs != null) {\n                        for (const value of obj.messageIDs) {\n                            w.uint32(10);\n                            w.bytes(value);\n                        }\n                    }\n                    if (opts.lengthDelimited !== false) {\n                        w.ldelim();\n                    }\n                }, (reader, length, opts = {}) => {\n                    const obj = {\n                        messageIDs: []\n                    };\n                    const end = length == null ? reader.len : reader.pos + length;\n                    while (reader.pos < end) {\n                        const tag = reader.uint32();\n                        switch (tag >>> 3) {\n                            case 1: {\n                                if (opts.limits?.messageIDs != null && obj.messageIDs.length === opts.limits.messageIDs) {\n                                    throw new MaxLengthError('Decode error - map field \"messageIDs\" had too many elements');\n                                }\n                                obj.messageIDs.push(reader.bytes());\n                                break;\n                            }\n                            default: {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                    }\n                    return obj;\n                });\n            }\n            return _codec;\n        };\n        ControlIDontWant.encode = (obj) => {\n            return encodeMessage(obj, ControlIDontWant.codec());\n        };\n        ControlIDontWant.decode = (buf, opts) => {\n            return decodeMessage(buf, ControlIDontWant.codec(), opts);\n        };\n    })(ControlIDontWant = RPC.ControlIDontWant || (RPC.ControlIDontWant = {}));\n    let _codec;\n    RPC.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.subscriptions != null) {\n                    for (const value of obj.subscriptions) {\n                        w.uint32(10);\n                        RPC.SubOpts.codec().encode(value, w);\n                    }\n                }\n                if (obj.messages != null) {\n                    for (const value of obj.messages) {\n                        w.uint32(18);\n                        RPC.Message.codec().encode(value, w);\n                    }\n                }\n                if (obj.control != null) {\n                    w.uint32(26);\n                    RPC.ControlMessage.codec().encode(obj.control, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    subscriptions: [],\n                    messages: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            if (opts.limits?.subscriptions != null && obj.subscriptions.length === opts.limits.subscriptions) {\n                                throw new MaxLengthError('Decode error - map field \"subscriptions\" had too many elements');\n                            }\n                            obj.subscriptions.push(RPC.SubOpts.codec().decode(reader, reader.uint32(), {\n                                limits: opts.limits?.subscriptions$\n                            }));\n                            break;\n                        }\n                        case 2: {\n                            if (opts.limits?.messages != null && obj.messages.length === opts.limits.messages) {\n                                throw new MaxLengthError('Decode error - map field \"messages\" had too many elements');\n                            }\n                            obj.messages.push(RPC.Message.codec().decode(reader, reader.uint32(), {\n                                limits: opts.limits?.messages$\n                            }));\n                            break;\n                        }\n                        case 3: {\n                            obj.control = RPC.ControlMessage.codec().decode(reader, reader.uint32(), {\n                                limits: opts.limits?.control\n                            });\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    RPC.encode = (obj) => {\n        return encodeMessage(obj, RPC.codec());\n    };\n    RPC.decode = (buf, opts) => {\n        return decodeMessage(buf, RPC.codec(), opts);\n    };\n})(RPC || (RPC = {}));\n//# sourceMappingURL=rpc.js.map","export class MessageCache {\n    gossip;\n    msgs = new Map();\n    msgIdToStrFn;\n    history = [];\n    /** Track with accounting of messages in the mcache that are not yet validated */\n    notValidatedCount = 0;\n    /**\n     * Holds history of messages in timebounded history arrays\n     */\n    constructor(\n    /**\n     * The number of indices in the cache history used for gossiping. That means that a message\n     * won't get gossiped anymore when shift got called `gossip` many times after inserting the\n     * message in the cache.\n     */\n    gossip, historyCapacity, msgIdToStrFn) {\n        this.gossip = gossip;\n        this.msgIdToStrFn = msgIdToStrFn;\n        for (let i = 0; i < historyCapacity; i++) {\n            this.history[i] = [];\n        }\n    }\n    get size() {\n        return this.msgs.size;\n    }\n    /**\n     * Adds a message to the current window and the cache\n     * Returns true if the message is not known and is inserted in the cache\n     */\n    put(messageId, msg, validated = false) {\n        const { msgIdStr } = messageId;\n        // Don't add duplicate entries to the cache.\n        if (this.msgs.has(msgIdStr)) {\n            return false;\n        }\n        this.msgs.set(msgIdStr, {\n            message: msg,\n            validated,\n            originatingPeers: new Set(),\n            iwantCounts: new Map()\n        });\n        this.history[0].push({ ...messageId, topic: msg.topic });\n        if (!validated) {\n            this.notValidatedCount++;\n        }\n        return true;\n    }\n    observeDuplicate(msgId, fromPeerIdStr) {\n        const entry = this.msgs.get(msgId);\n        if ((entry != null) &&\n            // if the message is already validated, we don't need to store extra peers sending us\n            // duplicates as the message has already been forwarded\n            !entry.validated) {\n            entry.originatingPeers.add(fromPeerIdStr);\n        }\n    }\n    /**\n     * Retrieves a message from the cache by its ID, if it is still present\n     */\n    get(msgId) {\n        return this.msgs.get(this.msgIdToStrFn(msgId))?.message;\n    }\n    /**\n     * Increases the iwant count for the given message by one and returns the message together\n     * with the iwant if the message exists.\n     */\n    getWithIWantCount(msgIdStr, p) {\n        const msg = this.msgs.get(msgIdStr);\n        if (msg == null) {\n            return null;\n        }\n        const count = (msg.iwantCounts.get(p) ?? 0) + 1;\n        msg.iwantCounts.set(p, count);\n        return { msg: msg.message, count };\n    }\n    /**\n     * Retrieves a list of message IDs for a set of topics\n     */\n    getGossipIDs(topics) {\n        const msgIdsByTopic = new Map();\n        for (let i = 0; i < this.gossip; i++) {\n            this.history[i].forEach((entry) => {\n                const msg = this.msgs.get(entry.msgIdStr);\n                if ((msg?.validated ?? false) && topics.has(entry.topic)) {\n                    let msgIds = msgIdsByTopic.get(entry.topic);\n                    if (msgIds == null) {\n                        msgIds = [];\n                        msgIdsByTopic.set(entry.topic, msgIds);\n                    }\n                    msgIds.push(entry.msgId);\n                }\n            });\n        }\n        return msgIdsByTopic;\n    }\n    /**\n     * Gets a message with msgId and tags it as validated.\n     * This function also returns the known peers that have sent us this message. This is used to\n     * prevent us sending redundant messages to peers who have already propagated it.\n     */\n    validate(msgId) {\n        const entry = this.msgs.get(msgId);\n        if (entry == null) {\n            return null;\n        }\n        if (!entry.validated) {\n            this.notValidatedCount--;\n        }\n        const { message, originatingPeers } = entry;\n        entry.validated = true;\n        // Clear the known peers list (after a message is validated, it is forwarded and we no\n        // longer need to store the originating peers).\n        entry.originatingPeers = new Set();\n        return { message, originatingPeers };\n    }\n    /**\n     * Shifts the current window, discarding messages older than this.history.length of the cache\n     */\n    shift() {\n        const lastCacheEntries = this.history[this.history.length - 1];\n        lastCacheEntries.forEach((cacheEntry) => {\n            const entry = this.msgs.get(cacheEntry.msgIdStr);\n            if (entry != null) {\n                this.msgs.delete(cacheEntry.msgIdStr);\n                if (!entry.validated) {\n                    this.notValidatedCount--;\n                }\n            }\n        });\n        this.history.pop();\n        this.history.unshift([]);\n    }\n    remove(msgId) {\n        const entry = this.msgs.get(msgId);\n        if (entry == null) {\n            return null;\n        }\n        // Keep the message on the history vector, it will be dropped on a shift()\n        this.msgs.delete(msgId);\n        return entry;\n    }\n}\n//# sourceMappingURL=message-cache.js.map","import { TopicValidatorResult } from \"./index.js\";\nexport var SignaturePolicy;\n(function (SignaturePolicy) {\n    /**\n     * On the producing side:\n     * - Build messages with the signature, key (from may be enough for certain inlineable public key types), from and seqno fields.\n     *\n     * On the consuming side:\n     * - Enforce the fields to be present, reject otherwise.\n     * - Propagate only if the fields are valid and signature can be verified, reject otherwise.\n     */\n    SignaturePolicy[\"StrictSign\"] = \"StrictSign\";\n    /**\n     * On the producing side:\n     * - Build messages without the signature, key, from and seqno fields.\n     * - The corresponding protobuf key-value pairs are absent from the marshalled message, not just empty.\n     *\n     * On the consuming side:\n     * - Enforce the fields to be absent, reject otherwise.\n     * - Propagate only if the fields are absent, reject otherwise.\n     * - A message_id function will not be able to use the above fields, and should instead rely on the data field. A commonplace strategy is to calculate a hash.\n     */\n    SignaturePolicy[\"StrictNoSign\"] = \"StrictNoSign\";\n})(SignaturePolicy || (SignaturePolicy = {}));\nexport var PublishConfigType;\n(function (PublishConfigType) {\n    PublishConfigType[PublishConfigType[\"Signing\"] = 0] = \"Signing\";\n    PublishConfigType[PublishConfigType[\"Anonymous\"] = 1] = \"Anonymous\";\n})(PublishConfigType || (PublishConfigType = {}));\nexport var RejectReason;\n(function (RejectReason) {\n    /**\n     * The message failed the configured validation during decoding.\n     * SelfOrigin is considered a ValidationError\n     */\n    RejectReason[\"Error\"] = \"error\";\n    /**\n     * Custom validator fn reported status IGNORE.\n     */\n    RejectReason[\"Ignore\"] = \"ignore\";\n    /**\n     * Custom validator fn reported status REJECT.\n     */\n    RejectReason[\"Reject\"] = \"reject\";\n    /**\n     * The peer that sent the message OR the source from field is blacklisted.\n     * Causes messages to be ignored, not penalized, neither do score record creation.\n     */\n    RejectReason[\"Blacklisted\"] = \"blacklisted\";\n})(RejectReason || (RejectReason = {}));\nexport var ValidateError;\n(function (ValidateError) {\n    /// The message has an invalid signature,\n    ValidateError[\"InvalidSignature\"] = \"invalid_signature\";\n    /// The sequence number was the incorrect size\n    ValidateError[\"InvalidSeqno\"] = \"invalid_seqno\";\n    /// The PeerId was invalid\n    ValidateError[\"InvalidPeerId\"] = \"invalid_peerid\";\n    /// Signature existed when validation has been sent to\n    /// [`crate::behaviour::MessageAuthenticity::Anonymous`].\n    ValidateError[\"SignaturePresent\"] = \"signature_present\";\n    /// Sequence number existed when validation has been sent to\n    /// [`crate::behaviour::MessageAuthenticity::Anonymous`].\n    ValidateError[\"SeqnoPresent\"] = \"seqno_present\";\n    /// Message source existed when validation has been sent to\n    /// [`crate::behaviour::MessageAuthenticity::Anonymous`].\n    ValidateError[\"FromPresent\"] = \"from_present\";\n    /// The data transformation failed.\n    ValidateError[\"TransformFailed\"] = \"transform_failed\";\n})(ValidateError || (ValidateError = {}));\nexport var MessageStatus;\n(function (MessageStatus) {\n    MessageStatus[\"duplicate\"] = \"duplicate\";\n    MessageStatus[\"invalid\"] = \"invalid\";\n    MessageStatus[\"valid\"] = \"valid\";\n})(MessageStatus || (MessageStatus = {}));\n/**\n * Typesafe conversion of MessageAcceptance -> RejectReason. TS ensures all values covered\n */\nexport function rejectReasonFromAcceptance(acceptance) {\n    switch (acceptance) {\n        case TopicValidatorResult.Ignore:\n            return RejectReason.Ignore;\n        case TopicValidatorResult.Reject:\n            return RejectReason.Reject;\n        default:\n            throw new Error('Unreachable');\n    }\n}\n//# sourceMappingURL=types.js.map","import { TopicValidatorResult } from \"./index.js\";\nimport { MessageStatus, RejectReason } from './types.js';\nexport var MessageSource;\n(function (MessageSource) {\n    MessageSource[\"forward\"] = \"forward\";\n    MessageSource[\"publish\"] = \"publish\";\n})(MessageSource || (MessageSource = {}));\nexport var InclusionReason;\n(function (InclusionReason) {\n    /** Peer was a fanaout peer. */\n    InclusionReason[\"Fanout\"] = \"fanout\";\n    /** Included from random selection. */\n    InclusionReason[\"Random\"] = \"random\";\n    /** Peer subscribed. */\n    InclusionReason[\"Subscribed\"] = \"subscribed\";\n    /** On heartbeat, peer was included to fill the outbound quota. */\n    InclusionReason[\"Outbound\"] = \"outbound\";\n    /** On heartbeat, not enough peers in mesh */\n    InclusionReason[\"NotEnough\"] = \"not_enough\";\n    /** On heartbeat opportunistic grafting due to low mesh score */\n    InclusionReason[\"Opportunistic\"] = \"opportunistic\";\n})(InclusionReason || (InclusionReason = {}));\n/// Reasons why a peer was removed from the mesh.\nexport var ChurnReason;\n(function (ChurnReason) {\n    /// Peer disconnected.\n    ChurnReason[\"Dc\"] = \"disconnected\";\n    /// Peer had a bad score.\n    ChurnReason[\"BadScore\"] = \"bad_score\";\n    /// Peer sent a PRUNE.\n    ChurnReason[\"Prune\"] = \"prune\";\n    /// Too many peers.\n    ChurnReason[\"Excess\"] = \"excess\";\n})(ChurnReason || (ChurnReason = {}));\n/// Kinds of reasons a peer's score has been penalized\nexport var ScorePenalty;\n(function (ScorePenalty) {\n    /// A peer grafted before waiting the back-off time.\n    ScorePenalty[\"GraftBackoff\"] = \"graft_backoff\";\n    /// A Peer did not respond to an IWANT request in time.\n    ScorePenalty[\"BrokenPromise\"] = \"broken_promise\";\n    /// A Peer did not send enough messages as expected.\n    ScorePenalty[\"MessageDeficit\"] = \"message_deficit\";\n    /// Too many peers under one IP address.\n    ScorePenalty[\"IPColocation\"] = \"IP_colocation\";\n})(ScorePenalty || (ScorePenalty = {}));\nexport var IHaveIgnoreReason;\n(function (IHaveIgnoreReason) {\n    IHaveIgnoreReason[\"LowScore\"] = \"low_score\";\n    IHaveIgnoreReason[\"MaxIhave\"] = \"max_ihave\";\n    IHaveIgnoreReason[\"MaxIasked\"] = \"max_iasked\";\n})(IHaveIgnoreReason || (IHaveIgnoreReason = {}));\nexport var ScoreThreshold;\n(function (ScoreThreshold) {\n    ScoreThreshold[\"graylist\"] = \"graylist\";\n    ScoreThreshold[\"publish\"] = \"publish\";\n    ScoreThreshold[\"gossip\"] = \"gossip\";\n    ScoreThreshold[\"mesh\"] = \"mesh\";\n})(ScoreThreshold || (ScoreThreshold = {}));\n/**\n * A collection of metrics used throughout the Gossipsub behaviour.\n * NOTE: except for special reasons, do not add more than 1 label for frequent metrics,\n * there's a performance penalty as of June 2023.\n */\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport function getMetrics(register, topicStrToLabel, opts) {\n    // Using function style instead of class to prevent having to re-declare all MetricsPrometheus types.\n    return {\n        /* Metrics for static config */\n        protocolsEnabled: register.gauge({\n            name: 'gossipsub_protocol',\n            help: 'Status of enabled protocols',\n            labelNames: ['protocol']\n        }),\n        /* Metrics per known topic */\n        /**\n         * Status of our subscription to this topic. This metric allows analyzing other topic metrics\n         * filtered by our current subscription status.\n         * = rust-libp2p `topic_subscription_status`\n         */\n        topicSubscriptionStatus: register.gauge({\n            name: 'gossipsub_topic_subscription_status',\n            help: 'Status of our subscription to this topic',\n            labelNames: ['topicStr']\n        }),\n        /**\n         * Number of peers subscribed to each topic. This allows us to analyze a topic's behaviour\n         * regardless of our subscription status.\n         */\n        topicPeersCount: register.gauge({\n            name: 'gossipsub_topic_peer_count',\n            help: 'Number of peers subscribed to each topic',\n            labelNames: ['topicStr']\n        }),\n        /* Metrics regarding mesh state */\n        /**\n         * Number of peers in our mesh. This metric should be updated with the count of peers for a\n         * topic in the mesh regardless of inclusion and churn events.\n         * = rust-libp2p `mesh_peer_counts`\n         */\n        meshPeerCounts: register.gauge({\n            name: 'gossipsub_mesh_peer_count',\n            help: 'Number of peers in our mesh',\n            labelNames: ['topicStr']\n        }),\n        /**\n         * Number of times we include peers in a topic mesh for different reasons.\n         * = rust-libp2p `mesh_peer_inclusion_events`\n         */\n        meshPeerInclusionEventsFanout: register.gauge({\n            name: 'gossipsub_mesh_peer_inclusion_events_fanout_total',\n            help: 'Number of times we include peers in a topic mesh for fanout reasons',\n            labelNames: ['topic']\n        }),\n        meshPeerInclusionEventsRandom: register.gauge({\n            name: 'gossipsub_mesh_peer_inclusion_events_random_total',\n            help: 'Number of times we include peers in a topic mesh for random reasons',\n            labelNames: ['topic']\n        }),\n        meshPeerInclusionEventsSubscribed: register.gauge({\n            name: 'gossipsub_mesh_peer_inclusion_events_subscribed_total',\n            help: 'Number of times we include peers in a topic mesh for subscribed reasons',\n            labelNames: ['topic']\n        }),\n        meshPeerInclusionEventsOutbound: register.gauge({\n            name: 'gossipsub_mesh_peer_inclusion_events_outbound_total',\n            help: 'Number of times we include peers in a topic mesh for outbound reasons',\n            labelNames: ['topic']\n        }),\n        meshPeerInclusionEventsNotEnough: register.gauge({\n            name: 'gossipsub_mesh_peer_inclusion_events_not_enough_total',\n            help: 'Number of times we include peers in a topic mesh for not_enough reasons',\n            labelNames: ['topic']\n        }),\n        meshPeerInclusionEventsOpportunistic: register.gauge({\n            name: 'gossipsub_mesh_peer_inclusion_events_opportunistic_total',\n            help: 'Number of times we include peers in a topic mesh for opportunistic reasons',\n            labelNames: ['topic']\n        }),\n        meshPeerInclusionEventsUnknown: register.gauge({\n            name: 'gossipsub_mesh_peer_inclusion_events_unknown_total',\n            help: 'Number of times we include peers in a topic mesh for unknown reasons',\n            labelNames: ['topic']\n        }),\n        /**\n         * Number of times we remove peers in a topic mesh for different reasons.\n         * = rust-libp2p `mesh_peer_churn_events`\n         */\n        meshPeerChurnEventsDisconnected: register.gauge({\n            name: 'gossipsub_peer_churn_events_disconnected_total',\n            help: 'Number of times we remove peers in a topic mesh for disconnected reasons',\n            labelNames: ['topic']\n        }),\n        meshPeerChurnEventsBadScore: register.gauge({\n            name: 'gossipsub_peer_churn_events_bad_score_total',\n            help: 'Number of times we remove peers in a topic mesh for bad_score reasons',\n            labelNames: ['topic']\n        }),\n        meshPeerChurnEventsPrune: register.gauge({\n            name: 'gossipsub_peer_churn_events_prune_total',\n            help: 'Number of times we remove peers in a topic mesh for prune reasons',\n            labelNames: ['topic']\n        }),\n        meshPeerChurnEventsExcess: register.gauge({\n            name: 'gossipsub_peer_churn_events_excess_total',\n            help: 'Number of times we remove peers in a topic mesh for excess reasons',\n            labelNames: ['topic']\n        }),\n        meshPeerChurnEventsUnknown: register.gauge({\n            name: 'gossipsub_peer_churn_events_unknown_total',\n            help: 'Number of times we remove peers in a topic mesh for unknown reasons',\n            labelNames: ['topic']\n        }),\n        /* General Metrics */\n        /**\n         * Gossipsub supports floodsub, gossipsub v1.0, v1.1, and v1.2. Peers are classified based\n         * on which protocol they support. This metric keeps track of the number of peers that are\n         * connected of each type.\n         */\n        peersPerProtocol: register.gauge({\n            name: 'gossipsub_peers_per_protocol_count',\n            help: 'Peers connected for each topic',\n            labelNames: ['protocol']\n        }),\n        /** The time it takes to complete one iteration of the heartbeat. */\n        heartbeatDuration: register.histogram({\n            name: 'gossipsub_heartbeat_duration_seconds',\n            help: 'The time it takes to complete one iteration of the heartbeat',\n            // Should take <10ms, over 1s it's a huge issue that needs debugging, since a heartbeat will be cancelled\n            buckets: [0.01, 0.1, 1]\n        }),\n        /** Heartbeat run took longer than heartbeat interval so next is skipped */\n        heartbeatSkipped: register.gauge({\n            name: 'gossipsub_heartbeat_skipped',\n            help: 'Heartbeat run took longer than heartbeat interval so next is skipped'\n        }),\n        /**\n         * Message validation results for each topic.\n         * Invalid == Reject?\n         * = rust-libp2p `invalid_messages`, `accepted_messages`, `ignored_messages`, `rejected_messages`\n         */\n        acceptedMessagesTotal: register.gauge({\n            name: 'gossipsub_accepted_messages_total',\n            help: 'Total accepted messages for each topic',\n            labelNames: ['topic']\n        }),\n        ignoredMessagesTotal: register.gauge({\n            name: 'gossipsub_ignored_messages_total',\n            help: 'Total ignored messages for each topic',\n            labelNames: ['topic']\n        }),\n        rejectedMessagesTotal: register.gauge({\n            name: 'gossipsub_rejected_messages_total',\n            help: 'Total rejected messages for each topic',\n            labelNames: ['topic']\n        }),\n        unknownValidationResultsTotal: register.gauge({\n            name: 'gossipsub_unknown_validation_results_total',\n            help: 'Total unknown validation results for each topic',\n            labelNames: ['topic']\n        }),\n        /**\n         * When the user validates a message, it tries to re propagate it to its mesh peers. If the\n         * message expires from the memcache before it can be validated, we count this a cache miss\n         * and it is an indicator that the memcache size should be increased.\n         * = rust-libp2p `mcache_misses`\n         */\n        asyncValidationMcacheHit: register.gauge({\n            name: 'gossipsub_async_validation_mcache_hit_total',\n            help: 'Async validation result reported by the user layer',\n            labelNames: ['hit']\n        }),\n        asyncValidationDelayFromFirstSeenSec: register.histogram({\n            name: 'gossipsub_async_validation_delay_from_first_seen',\n            help: 'Async validation report delay from first seen in second',\n            buckets: [0.01, 0.03, 0.1, 0.3, 1, 3, 10]\n        }),\n        asyncValidationUnknownFirstSeen: register.gauge({\n            name: 'gossipsub_async_validation_unknown_first_seen_count_total',\n            help: 'Async validation report unknown first seen value for message'\n        }),\n        // peer stream\n        peerReadStreamError: register.gauge({\n            name: 'gossipsub_peer_read_stream_err_count_total',\n            help: 'Peer read stream error'\n        }),\n        // RPC outgoing. Track byte length + data structure sizes\n        rpcRecvBytes: register.gauge({ name: 'gossipsub_rpc_recv_bytes_total', help: 'RPC recv' }),\n        rpcRecvCount: register.gauge({ name: 'gossipsub_rpc_recv_count_total', help: 'RPC recv' }),\n        rpcRecvSubscription: register.gauge({ name: 'gossipsub_rpc_recv_subscription_total', help: 'RPC recv' }),\n        rpcRecvMessage: register.gauge({ name: 'gossipsub_rpc_recv_message_total', help: 'RPC recv' }),\n        rpcRecvControl: register.gauge({ name: 'gossipsub_rpc_recv_control_total', help: 'RPC recv' }),\n        rpcRecvIHave: register.gauge({ name: 'gossipsub_rpc_recv_ihave_total', help: 'RPC recv' }),\n        rpcRecvIWant: register.gauge({ name: 'gossipsub_rpc_recv_iwant_total', help: 'RPC recv' }),\n        rpcRecvGraft: register.gauge({ name: 'gossipsub_rpc_recv_graft_total', help: 'RPC recv' }),\n        rpcRecvPrune: register.gauge({ name: 'gossipsub_rpc_recv_prune_total', help: 'RPC recv' }),\n        rpcDataError: register.gauge({ name: 'gossipsub_rpc_data_err_count_total', help: 'RPC data error' }),\n        rpcRecvError: register.gauge({ name: 'gossipsub_rpc_recv_err_count_total', help: 'RPC recv error' }),\n        /** Total count of RPC dropped because acceptFrom() == false */\n        rpcRecvNotAccepted: register.gauge({\n            name: 'gossipsub_rpc_rcv_not_accepted_total',\n            help: 'Total count of RPC dropped because acceptFrom() == false'\n        }),\n        // RPC incoming. Track byte length + data structure sizes\n        rpcSentBytes: register.gauge({ name: 'gossipsub_rpc_sent_bytes_total', help: 'RPC sent' }),\n        rpcSentCount: register.gauge({ name: 'gossipsub_rpc_sent_count_total', help: 'RPC sent' }),\n        rpcSentSubscription: register.gauge({ name: 'gossipsub_rpc_sent_subscription_total', help: 'RPC sent' }),\n        rpcSentMessage: register.gauge({ name: 'gossipsub_rpc_sent_message_total', help: 'RPC sent' }),\n        rpcSentControl: register.gauge({ name: 'gossipsub_rpc_sent_control_total', help: 'RPC sent' }),\n        rpcSentIHave: register.gauge({ name: 'gossipsub_rpc_sent_ihave_total', help: 'RPC sent' }),\n        rpcSentIWant: register.gauge({ name: 'gossipsub_rpc_sent_iwant_total', help: 'RPC sent' }),\n        rpcSentGraft: register.gauge({ name: 'gossipsub_rpc_sent_graft_total', help: 'RPC sent' }),\n        rpcSentPrune: register.gauge({ name: 'gossipsub_rpc_sent_prune_total', help: 'RPC sent' }),\n        rpcSentIDontWant: register.gauge({ name: 'gossipsub_rpc_sent_idontwant_total', help: 'RPC sent' }),\n        // publish message. Track peers sent to and bytes\n        /** Total count of msg published by topic */\n        msgPublishCount: register.gauge({\n            name: 'gossipsub_msg_publish_count_total',\n            help: 'Total count of msg published by topic',\n            labelNames: ['topic']\n        }),\n        /** Total count of peers that we publish a msg to */\n        msgPublishPeersByTopic: register.gauge({\n            name: 'gossipsub_msg_publish_peers_total',\n            help: 'Total count of peers that we publish a msg to',\n            labelNames: ['topic']\n        }),\n        /** Total count of peers (by group) that we publish a msg to */\n        directPeersPublishedTotal: register.gauge({\n            name: 'gossipsub_direct_peers_published_total',\n            help: 'Total direct peers that we publish a msg to',\n            labelNames: ['topic']\n        }),\n        floodsubPeersPublishedTotal: register.gauge({\n            name: 'gossipsub_floodsub_peers_published_total',\n            help: 'Total floodsub peers that we publish a msg to',\n            labelNames: ['topic']\n        }),\n        meshPeersPublishedTotal: register.gauge({\n            name: 'gossipsub_mesh_peers_published_total',\n            help: 'Total mesh peers that we publish a msg to',\n            labelNames: ['topic']\n        }),\n        fanoutPeersPublishedTotal: register.gauge({\n            name: 'gossipsub_fanout_peers_published_total',\n            help: 'Total fanout peers that we publish a msg to',\n            labelNames: ['topic']\n        }),\n        /** Total count of msg publish data.length bytes */\n        msgPublishBytes: register.gauge({\n            name: 'gossipsub_msg_publish_bytes_total',\n            help: 'Total count of msg publish data.length bytes',\n            labelNames: ['topic']\n        }),\n        /** Total time in seconds to publish a message */\n        msgPublishTime: register.histogram({\n            name: 'gossipsub_msg_publish_seconds',\n            help: 'Total time in seconds to publish a message',\n            buckets: [0.001, 0.002, 0.005, 0.01, 0.1, 0.5, 1],\n            labelNames: ['topic']\n        }),\n        /** Total count of msg forwarded by topic */\n        msgForwardCount: register.gauge({\n            name: 'gossipsub_msg_forward_count_total',\n            help: 'Total count of msg forwarded by topic',\n            labelNames: ['topic']\n        }),\n        /** Total count of peers that we forward a msg to */\n        msgForwardPeers: register.gauge({\n            name: 'gossipsub_msg_forward_peers_total',\n            help: 'Total count of peers that we forward a msg to',\n            labelNames: ['topic']\n        }),\n        /** Total count of recv msgs before any validation */\n        msgReceivedPreValidation: register.gauge({\n            name: 'gossipsub_msg_received_prevalidation_total',\n            help: 'Total count of recv msgs before any validation',\n            labelNames: ['topic']\n        }),\n        /** Total count of recv msgs error */\n        msgReceivedError: register.gauge({\n            name: 'gossipsub_msg_received_error_total',\n            help: 'Total count of recv msgs error',\n            labelNames: ['topic']\n        }),\n        /** Tracks distribution of recv msgs by duplicate, invalid, valid */\n        prevalidationInvalidTotal: register.gauge({\n            name: 'gossipsub_pre_validation_invalid_total',\n            help: 'Total count of invalid messages received',\n            labelNames: ['topic']\n        }),\n        prevalidationValidTotal: register.gauge({\n            name: 'gossipsub_pre_validation_valid_total',\n            help: 'Total count of valid messages received',\n            labelNames: ['topic']\n        }),\n        prevalidationDuplicateTotal: register.gauge({\n            name: 'gossipsub_pre_validation_duplicate_total',\n            help: 'Total count of duplicate messages received',\n            labelNames: ['topic']\n        }),\n        prevalidationUnknownTotal: register.gauge({\n            name: 'gossipsub_pre_validation_unknown_status_total',\n            help: 'Total count of unknown_status messages received',\n            labelNames: ['topic']\n        }),\n        /** Tracks specific reason of invalid */\n        msgReceivedInvalid: register.gauge({\n            name: 'gossipsub_msg_received_invalid_total',\n            help: 'Tracks specific reason of invalid',\n            labelNames: ['error']\n        }),\n        msgReceivedInvalidByTopic: register.gauge({\n            name: 'gossipsub_msg_received_invalid_by_topic_total',\n            help: 'Tracks specific invalid message by topic',\n            labelNames: ['topic']\n        }),\n        /** Track duplicate message delivery time */\n        duplicateMsgDeliveryDelay: register.histogram({\n            name: 'gossisub_duplicate_msg_delivery_delay_seconds',\n            help: 'Time since the 1st duplicated message validated',\n            labelNames: ['topic'],\n            buckets: [\n                0.25 * opts.maxMeshMessageDeliveriesWindowSec,\n                0.5 * opts.maxMeshMessageDeliveriesWindowSec,\n                Number(opts.maxMeshMessageDeliveriesWindowSec),\n                2 * opts.maxMeshMessageDeliveriesWindowSec,\n                4 * opts.maxMeshMessageDeliveriesWindowSec\n            ]\n        }),\n        /** Total count of late msg delivery total by topic */\n        duplicateMsgLateDelivery: register.gauge({\n            name: 'gossisub_duplicate_msg_late_delivery_total',\n            help: 'Total count of late duplicate message delivery by topic, which triggers P3 penalty',\n            labelNames: ['topic']\n        }),\n        duplicateMsgIgnored: register.gauge({\n            name: 'gossisub_ignored_published_duplicate_msgs_total',\n            help: 'Total count of published duplicate message ignored by topic',\n            labelNames: ['topic']\n        }),\n        /* Metrics related to scoring */\n        /** Total times score() is called */\n        scoreFnCalls: register.gauge({\n            name: 'gossipsub_score_fn_calls_total',\n            help: 'Total times score() is called'\n        }),\n        /** Total times score() call actually computed computeScore(), no cache */\n        scoreFnRuns: register.gauge({\n            name: 'gossipsub_score_fn_runs_total',\n            help: 'Total times score() call actually computed computeScore(), no cache'\n        }),\n        scoreCachedDelta: register.histogram({\n            name: 'gossipsub_score_cache_delta',\n            help: 'Delta of score between cached values that expired',\n            buckets: [10, 100, 1000]\n        }),\n        /** Current count of peers by score threshold */\n        peersByScoreThreshold: register.gauge({\n            name: 'gossipsub_peers_by_score_threshold_count',\n            help: 'Current count of peers by score threshold',\n            labelNames: ['threshold']\n        }),\n        score: register.avgMinMax({\n            name: 'gossipsub_score',\n            help: 'Avg min max of gossip scores'\n        }),\n        /**\n         * Separate score weights\n         * Need to use 2-label metrics in this case to debug the score weights\n         */\n        scoreWeights: register.avgMinMax({\n            name: 'gossipsub_score_weights',\n            help: 'Separate score weights',\n            labelNames: ['topic', 'p']\n        }),\n        /** Histogram of the scores for each mesh topic. */\n        // TODO: Not implemented\n        scorePerMesh: register.avgMinMax({\n            name: 'gossipsub_score_per_mesh',\n            help: 'Histogram of the scores for each mesh topic',\n            labelNames: ['topic']\n        }),\n        /** A counter of the kind of penalties being applied to peers. */\n        // TODO: Not fully implemented\n        scoringPenalties: register.gauge({\n            name: 'gossipsub_scoring_penalties_total',\n            help: 'A counter of the kind of penalties being applied to peers',\n            labelNames: ['penalty']\n        }),\n        behaviourPenalty: register.histogram({\n            name: 'gossipsub_peer_stat_behaviour_penalty',\n            help: 'Current peer stat behaviour_penalty at each scrape',\n            buckets: [\n                0.25 * opts.behaviourPenaltyThreshold,\n                0.5 * opts.behaviourPenaltyThreshold,\n                Number(opts.behaviourPenaltyThreshold),\n                2 * opts.behaviourPenaltyThreshold,\n                4 * opts.behaviourPenaltyThreshold\n            ]\n        }),\n        // TODO:\n        // - iasked per peer (on heartbeat)\n        // - when promise is resolved, track messages from promises\n        /** Total received IHAVE messages that we ignore for some reason */\n        ihaveRcvIgnored: register.gauge({\n            name: 'gossipsub_ihave_rcv_ignored_total',\n            help: 'Total received IHAVE messages that we ignore for some reason',\n            labelNames: ['reason']\n        }),\n        /** Total received IHAVE messages by topic */\n        ihaveRcvMsgids: register.gauge({\n            name: 'gossipsub_ihave_rcv_msgids_total',\n            help: 'Total received IHAVE messages by topic',\n            labelNames: ['topic']\n        }),\n        /**\n         * Total messages per topic we don't have. Not actual requests.\n         * The number of times we have decided that an IWANT control message is required for this\n         * topic. A very high metric might indicate an underperforming network.\n         * = rust-libp2p `topic_iwant_msgs`\n         */\n        ihaveRcvNotSeenMsgids: register.gauge({\n            name: 'gossipsub_ihave_rcv_not_seen_msgids_total',\n            help: 'Total messages per topic we do not have, not actual requests',\n            labelNames: ['topic']\n        }),\n        /** Total received IWANT messages by topic */\n        iwantRcvMsgids: register.gauge({\n            name: 'gossipsub_iwant_rcv_msgids_total',\n            help: 'Total received IWANT messages by topic',\n            labelNames: ['topic']\n        }),\n        /** Total requested messageIDs that we don't have */\n        iwantRcvDonthaveMsgids: register.gauge({\n            name: 'gossipsub_iwant_rcv_dont_have_msgids_total',\n            help: 'Total requested messageIDs that we do not have'\n        }),\n        /** Total received IDONTWANT messages */\n        idontwantRcvMsgids: register.gauge({\n            name: 'gossipsub_idontwant_rcv_msgids_total',\n            help: 'Total received IDONTWANT messages'\n        }),\n        /** Total received IDONTWANT messageIDs that we don't have */\n        idontwantRcvDonthaveMsgids: register.gauge({\n            name: 'gossipsub_idontwant_rcv_dont_have_msgids_total',\n            help: 'Total received IDONTWANT messageIDs that we do not have in mcache'\n        }),\n        iwantPromiseStarted: register.gauge({\n            name: 'gossipsub_iwant_promise_sent_total',\n            help: 'Total count of started IWANT promises'\n        }),\n        /** Total count of resolved IWANT promises */\n        iwantPromiseResolved: register.gauge({\n            name: 'gossipsub_iwant_promise_resolved_total',\n            help: 'Total count of resolved IWANT promises'\n        }),\n        /** Total count of resolved IWANT promises from duplicate messages */\n        iwantPromiseResolvedFromDuplicate: register.gauge({\n            name: 'gossipsub_iwant_promise_resolved_from_duplicate_total',\n            help: 'Total count of resolved IWANT promises from duplicate messages'\n        }),\n        /** Total count of peers we have asked IWANT promises that are resolved */\n        iwantPromiseResolvedPeers: register.gauge({\n            name: 'gossipsub_iwant_promise_resolved_peers',\n            help: 'Total count of peers we have asked IWANT promises that are resolved'\n        }),\n        iwantPromiseBroken: register.gauge({\n            name: 'gossipsub_iwant_promise_broken',\n            help: 'Total count of broken IWANT promises'\n        }),\n        iwantMessagePruned: register.gauge({\n            name: 'gossipsub_iwant_message_pruned',\n            help: 'Total count of pruned IWANT messages'\n        }),\n        /** Histogram of delivery time of resolved IWANT promises */\n        iwantPromiseDeliveryTime: register.histogram({\n            name: 'gossipsub_iwant_promise_delivery_seconds',\n            help: 'Histogram of delivery time of resolved IWANT promises',\n            buckets: [\n                0.5 * opts.gossipPromiseExpireSec,\n                Number(opts.gossipPromiseExpireSec),\n                2 * opts.gossipPromiseExpireSec,\n                4 * opts.gossipPromiseExpireSec\n            ]\n        }),\n        iwantPromiseUntracked: register.gauge({\n            name: 'gossip_iwant_promise_untracked',\n            help: 'Total count of untracked IWANT promise'\n        }),\n        /** Backoff time */\n        connectedPeersBackoffSec: register.histogram({\n            name: 'gossipsub_connected_peers_backoff_seconds',\n            help: 'Backoff time in seconds',\n            // Using 1 seconds as minimum as that's close to the heartbeat duration, no need for more resolution.\n            // As per spec, backoff times are 10 seconds for UnsubscribeBackoff and 60 seconds for PruneBackoff.\n            // Higher values of 60 seconds should not occur, but we add 120 seconds just in case\n            // https://github.com/libp2p/specs/blob/master/pubsub/gossipsub/gossipsub-v1.1.md#overview-of-new-parameters\n            buckets: [1, 2, 4, 10, 20, 60, 120]\n        }),\n        /* Data structure sizes */\n        /** Unbounded cache sizes */\n        cacheSize: register.gauge({\n            name: 'gossipsub_cache_size',\n            help: 'Unbounded cache sizes',\n            labelNames: ['cache']\n        }),\n        /** Current mcache msg count */\n        mcacheSize: register.gauge({\n            name: 'gossipsub_mcache_size',\n            help: 'Current mcache msg count'\n        }),\n        mcacheNotValidatedCount: register.gauge({\n            name: 'gossipsub_mcache_not_validated_count',\n            help: 'Current mcache msg count not validated'\n        }),\n        fastMsgIdCacheCollision: register.gauge({\n            name: 'gossipsub_fastmsgid_cache_collision_total',\n            help: 'Total count of key collisions on fastmsgid cache put'\n        }),\n        newConnectionCount: register.gauge({\n            name: 'gossipsub_new_connection_total',\n            help: 'Total new connection by status',\n            labelNames: ['status']\n        }),\n        topicStrToLabel,\n        toTopic(topicStr) {\n            return this.topicStrToLabel.get(topicStr) ?? topicStr;\n        },\n        /** We joined a topic */\n        onJoin(topicStr) {\n            this.topicSubscriptionStatus.set({ topicStr }, 1);\n            this.meshPeerCounts.set({ topicStr }, 0); // Reset count\n        },\n        /** We left a topic */\n        onLeave(topicStr) {\n            this.topicSubscriptionStatus.set({ topicStr }, 0);\n            this.meshPeerCounts.set({ topicStr }, 0); // Reset count\n        },\n        /** Register the inclusion of peers in our mesh due to some reason. */\n        onAddToMesh(topicStr, reason, count) {\n            const topic = this.toTopic(topicStr);\n            switch (reason) {\n                case InclusionReason.Fanout:\n                    this.meshPeerInclusionEventsFanout.inc({ topic }, count);\n                    break;\n                case InclusionReason.Random:\n                    this.meshPeerInclusionEventsRandom.inc({ topic }, count);\n                    break;\n                case InclusionReason.Subscribed:\n                    this.meshPeerInclusionEventsSubscribed.inc({ topic }, count);\n                    break;\n                case InclusionReason.Outbound:\n                    this.meshPeerInclusionEventsOutbound.inc({ topic }, count);\n                    break;\n                case InclusionReason.NotEnough:\n                    this.meshPeerInclusionEventsNotEnough.inc({ topic }, count);\n                    break;\n                case InclusionReason.Opportunistic:\n                    this.meshPeerInclusionEventsOpportunistic.inc({ topic }, count);\n                    break;\n                default:\n                    this.meshPeerInclusionEventsUnknown.inc({ topic }, count);\n                    break;\n            }\n        },\n        /** Register the removal of peers in our mesh due to some reason */\n        // - remove_peer_from_mesh()\n        // - heartbeat() Churn::BadScore\n        // - heartbeat() Churn::Excess\n        // - on_disconnect() Churn::Ds\n        onRemoveFromMesh(topicStr, reason, count) {\n            const topic = this.toTopic(topicStr);\n            switch (reason) {\n                case ChurnReason.Dc:\n                    this.meshPeerChurnEventsDisconnected.inc({ topic }, count);\n                    break;\n                case ChurnReason.BadScore:\n                    this.meshPeerChurnEventsBadScore.inc({ topic }, count);\n                    break;\n                case ChurnReason.Prune:\n                    this.meshPeerChurnEventsPrune.inc({ topic }, count);\n                    break;\n                case ChurnReason.Excess:\n                    this.meshPeerChurnEventsExcess.inc({ topic }, count);\n                    break;\n                default:\n                    this.meshPeerChurnEventsUnknown.inc({ topic }, count);\n                    break;\n            }\n        },\n        /**\n         * Update validation result to metrics\n         *\n         * @param messageRecord - null means the message's mcache record was not known at the time of acceptance report\n         */\n        onReportValidation(messageRecord, acceptance, firstSeenTimestampMs) {\n            this.asyncValidationMcacheHit.inc({ hit: messageRecord != null ? 'hit' : 'miss' });\n            if (messageRecord != null) {\n                const topic = this.toTopic(messageRecord.message.topic);\n                switch (acceptance) {\n                    case TopicValidatorResult.Accept:\n                        this.acceptedMessagesTotal.inc({ topic });\n                        break;\n                    case TopicValidatorResult.Ignore:\n                        this.ignoredMessagesTotal.inc({ topic });\n                        break;\n                    case TopicValidatorResult.Reject:\n                        this.rejectedMessagesTotal.inc({ topic });\n                        break;\n                    default:\n                        this.unknownValidationResultsTotal.inc({ topic });\n                        break;\n                }\n            }\n            if (firstSeenTimestampMs != null) {\n                this.asyncValidationDelayFromFirstSeenSec.observe((Date.now() - firstSeenTimestampMs) / 1000);\n            }\n            else {\n                this.asyncValidationUnknownFirstSeen.inc();\n            }\n        },\n        /**\n         * - in handle_graft() Penalty::GraftBackoff\n         * - in apply_iwant_penalties() Penalty::BrokenPromise\n         * - in metric_score() P3 Penalty::MessageDeficit\n         * - in metric_score() P6 Penalty::IPColocation\n         */\n        onScorePenalty(penalty) {\n            // Can this be labeled by topic too?\n            this.scoringPenalties.inc({ penalty }, 1);\n        },\n        onIhaveRcv(topicStr, ihave, idonthave) {\n            const topic = this.toTopic(topicStr);\n            this.ihaveRcvMsgids.inc({ topic }, ihave);\n            this.ihaveRcvNotSeenMsgids.inc({ topic }, idonthave);\n        },\n        onIwantRcv(iwantByTopic, iwantDonthave) {\n            for (const [topicStr, iwant] of iwantByTopic) {\n                const topic = this.toTopic(topicStr);\n                this.iwantRcvMsgids.inc({ topic }, iwant);\n            }\n            this.iwantRcvDonthaveMsgids.inc(iwantDonthave);\n        },\n        onIdontwantRcv(idontwant, idontwantDonthave) {\n            this.idontwantRcvMsgids.inc(idontwant);\n            this.idontwantRcvDonthaveMsgids.inc(idontwantDonthave);\n        },\n        onForwardMsg(topicStr, tosendCount) {\n            const topic = this.toTopic(topicStr);\n            this.msgForwardCount.inc({ topic }, 1);\n            this.msgForwardPeers.inc({ topic }, tosendCount);\n        },\n        onPublishMsg(topicStr, tosendGroupCount, tosendCount, dataLen, ms) {\n            const topic = this.toTopic(topicStr);\n            this.msgPublishCount.inc({ topic }, 1);\n            this.msgPublishBytes.inc({ topic }, tosendCount * dataLen);\n            this.msgPublishPeersByTopic.inc({ topic }, tosendCount);\n            this.directPeersPublishedTotal.inc({ topic }, tosendGroupCount.direct);\n            this.floodsubPeersPublishedTotal.inc({ topic }, tosendGroupCount.floodsub);\n            this.meshPeersPublishedTotal.inc({ topic }, tosendGroupCount.mesh);\n            this.fanoutPeersPublishedTotal.inc({ topic }, tosendGroupCount.fanout);\n            this.msgPublishTime.observe({ topic }, ms / 1000);\n        },\n        onMsgRecvPreValidation(topicStr) {\n            const topic = this.toTopic(topicStr);\n            this.msgReceivedPreValidation.inc({ topic }, 1);\n        },\n        onMsgRecvError(topicStr) {\n            const topic = this.toTopic(topicStr);\n            this.msgReceivedError.inc({ topic }, 1);\n        },\n        onPrevalidationResult(topicStr, status) {\n            const topic = this.toTopic(topicStr);\n            switch (status) {\n                case MessageStatus.duplicate:\n                    this.prevalidationDuplicateTotal.inc({ topic });\n                    break;\n                case MessageStatus.invalid:\n                    this.prevalidationInvalidTotal.inc({ topic });\n                    break;\n                case MessageStatus.valid:\n                    this.prevalidationValidTotal.inc({ topic });\n                    break;\n                default:\n                    this.prevalidationUnknownTotal.inc({ topic });\n                    break;\n            }\n        },\n        onMsgRecvInvalid(topicStr, reason) {\n            const topic = this.toTopic(topicStr);\n            const error = reason.reason === RejectReason.Error ? reason.error : reason.reason;\n            this.msgReceivedInvalid.inc({ error }, 1);\n            this.msgReceivedInvalidByTopic.inc({ topic }, 1);\n        },\n        onDuplicateMsgDelivery(topicStr, deliveryDelayMs, isLateDelivery) {\n            const topic = this.toTopic(topicStr);\n            this.duplicateMsgDeliveryDelay.observe({ topic }, deliveryDelayMs / 1000);\n            if (isLateDelivery) {\n                this.duplicateMsgLateDelivery.inc({ topic }, 1);\n            }\n        },\n        onPublishDuplicateMsg(topicStr) {\n            const topic = this.toTopic(topicStr);\n            this.duplicateMsgIgnored.inc({ topic }, 1);\n        },\n        onPeerReadStreamError() {\n            this.peerReadStreamError.inc(1);\n        },\n        onRpcRecvError() {\n            this.rpcRecvError.inc(1);\n        },\n        onRpcDataError() {\n            this.rpcDataError.inc(1);\n        },\n        onRpcRecv(rpc, rpcBytes) {\n            this.rpcRecvBytes.inc(rpcBytes);\n            this.rpcRecvCount.inc(1);\n            if (rpc.subscriptions != null) {\n                this.rpcRecvSubscription.inc(rpc.subscriptions.length);\n            }\n            if (rpc.messages != null) {\n                this.rpcRecvMessage.inc(rpc.messages.length);\n            }\n            if (rpc.control != null) {\n                this.rpcRecvControl.inc(1);\n                if (rpc.control.ihave != null) {\n                    this.rpcRecvIHave.inc(rpc.control.ihave.length);\n                }\n                if (rpc.control.iwant != null) {\n                    this.rpcRecvIWant.inc(rpc.control.iwant.length);\n                }\n                if (rpc.control.graft != null) {\n                    this.rpcRecvGraft.inc(rpc.control.graft.length);\n                }\n                if (rpc.control.prune != null) {\n                    this.rpcRecvPrune.inc(rpc.control.prune.length);\n                }\n            }\n        },\n        onRpcSent(rpc, rpcBytes) {\n            this.rpcSentBytes.inc(rpcBytes);\n            this.rpcSentCount.inc(1);\n            if (rpc.subscriptions != null) {\n                this.rpcSentSubscription.inc(rpc.subscriptions.length);\n            }\n            if (rpc.messages != null) {\n                this.rpcSentMessage.inc(rpc.messages.length);\n            }\n            if (rpc.control != null) {\n                const ihave = rpc.control.ihave?.length ?? 0;\n                const iwant = rpc.control.iwant?.length ?? 0;\n                const graft = rpc.control.graft?.length ?? 0;\n                const prune = rpc.control.prune?.length ?? 0;\n                const idontwant = rpc.control.idontwant?.length ?? 0;\n                if (ihave > 0) {\n                    this.rpcSentIHave.inc(ihave);\n                }\n                if (iwant > 0) {\n                    this.rpcSentIWant.inc(iwant);\n                }\n                if (graft > 0) {\n                    this.rpcSentGraft.inc(graft);\n                }\n                if (prune > 0) {\n                    this.rpcSentPrune.inc(prune);\n                }\n                if (idontwant > 0) {\n                    this.rpcSentIDontWant.inc(idontwant);\n                }\n                if (ihave > 0 || iwant > 0 || graft > 0 || prune > 0 || idontwant > 0) {\n                    this.rpcSentControl.inc(1);\n                }\n            }\n        },\n        registerScores(scores, scoreThresholds) {\n            let graylist = 0;\n            let publish = 0;\n            let gossip = 0;\n            let mesh = 0;\n            for (const score of scores) {\n                if (score >= scoreThresholds.graylistThreshold) {\n                    graylist++;\n                }\n                if (score >= scoreThresholds.publishThreshold) {\n                    publish++;\n                }\n                if (score >= scoreThresholds.gossipThreshold) {\n                    gossip++;\n                }\n                if (score >= 0) {\n                    mesh++;\n                }\n            }\n            this.peersByScoreThreshold.set({ threshold: ScoreThreshold.graylist }, graylist);\n            this.peersByScoreThreshold.set({ threshold: ScoreThreshold.publish }, publish);\n            this.peersByScoreThreshold.set({ threshold: ScoreThreshold.gossip }, gossip);\n            this.peersByScoreThreshold.set({ threshold: ScoreThreshold.mesh }, mesh);\n            // Register full score too\n            this.score.set(scores);\n        },\n        registerScoreWeights(sw) {\n            for (const [topic, wsTopic] of sw.byTopic) {\n                this.scoreWeights.set({ topic, p: 'p1' }, wsTopic.p1w);\n                this.scoreWeights.set({ topic, p: 'p2' }, wsTopic.p2w);\n                this.scoreWeights.set({ topic, p: 'p3' }, wsTopic.p3w);\n                this.scoreWeights.set({ topic, p: 'p3b' }, wsTopic.p3bw);\n                this.scoreWeights.set({ topic, p: 'p4' }, wsTopic.p4w);\n            }\n            this.scoreWeights.set({ p: 'p5' }, sw.p5w);\n            this.scoreWeights.set({ p: 'p6' }, sw.p6w);\n            this.scoreWeights.set({ p: 'p7' }, sw.p7w);\n        },\n        registerScorePerMesh(mesh, scoreByPeer) {\n            const peersPerTopicLabel = new Map();\n            mesh.forEach((peers, topicStr) => {\n                // Aggregate by known topicLabel or throw to 'unknown'. This prevent too high cardinality\n                const topicLabel = this.topicStrToLabel.get(topicStr) ?? 'unknown';\n                let peersInMesh = peersPerTopicLabel.get(topicLabel);\n                if (peersInMesh == null) {\n                    peersInMesh = new Set();\n                    peersPerTopicLabel.set(topicLabel, peersInMesh);\n                }\n                peers.forEach((p) => peersInMesh?.add(p));\n            });\n            for (const [topic, peers] of peersPerTopicLabel) {\n                const meshScores = [];\n                peers.forEach((peer) => {\n                    meshScores.push(scoreByPeer.get(peer) ?? 0);\n                });\n                this.scorePerMesh.set({ topic }, meshScores);\n            }\n        }\n    };\n}\n//# sourceMappingURL=metrics.js.map","export class InvalidPeerScoreParamsError extends Error {\n    static name = 'InvalidPeerScoreParamsError';\n    constructor(message = 'Invalid peer score params') {\n        super(message);\n        this.name = 'InvalidPeerScoreParamsError';\n    }\n}\nexport class InvalidPeerScoreThresholdsError extends Error {\n    static name = 'InvalidPeerScoreThresholdsError';\n    constructor(message = 'Invalid peer score thresholds') {\n        super(message);\n        this.name = 'InvalidPeerScoreThresholdsError';\n    }\n}\n//# sourceMappingURL=errors.js.map","import { InvalidPeerScoreParamsError } from '../errors.js';\nexport const defaultPeerScoreParams = {\n    topics: {},\n    topicScoreCap: 10.0,\n    appSpecificScore: () => 0.0,\n    appSpecificWeight: 10.0,\n    IPColocationFactorWeight: -5.0,\n    IPColocationFactorThreshold: 10.0,\n    IPColocationFactorWhitelist: new Set(),\n    behaviourPenaltyWeight: -10.0,\n    behaviourPenaltyThreshold: 0.0,\n    behaviourPenaltyDecay: 0.2,\n    decayInterval: 1000.0,\n    decayToZero: 0.1,\n    retainScore: 3600 * 1000\n};\nexport const defaultTopicScoreParams = {\n    topicWeight: 0.5,\n    timeInMeshWeight: 1,\n    timeInMeshQuantum: 1,\n    timeInMeshCap: 3600,\n    firstMessageDeliveriesWeight: 1,\n    firstMessageDeliveriesDecay: 0.5,\n    firstMessageDeliveriesCap: 2000,\n    meshMessageDeliveriesWeight: -1,\n    meshMessageDeliveriesDecay: 0.5,\n    meshMessageDeliveriesCap: 100,\n    meshMessageDeliveriesThreshold: 20,\n    meshMessageDeliveriesWindow: 10,\n    meshMessageDeliveriesActivation: 5000,\n    meshFailurePenaltyWeight: -1,\n    meshFailurePenaltyDecay: 0.5,\n    invalidMessageDeliveriesWeight: -1,\n    invalidMessageDeliveriesDecay: 0.3\n};\nexport function createPeerScoreParams(p = {}) {\n    return {\n        ...defaultPeerScoreParams,\n        ...p,\n        topics: (p.topics != null)\n            ? Object.entries(p.topics).reduce((topics, [topic, topicScoreParams]) => {\n                topics[topic] = createTopicScoreParams(topicScoreParams);\n                return topics;\n            }, {})\n            : {}\n    };\n}\nexport function createTopicScoreParams(p = {}) {\n    return {\n        ...defaultTopicScoreParams,\n        ...p\n    };\n}\n// peer score parameter validation\nexport function validatePeerScoreParams(p) {\n    for (const [topic, params] of Object.entries(p.topics)) {\n        try {\n            validateTopicScoreParams(params);\n        }\n        catch (e) {\n            throw new InvalidPeerScoreParamsError(`invalid score parameters for topic ${topic}: ${e.message}`);\n        }\n    }\n    // check that the topic score is 0 or something positive\n    if (p.topicScoreCap < 0) {\n        throw new InvalidPeerScoreParamsError('invalid topic score cap; must be positive (or 0 for no cap)');\n    }\n    // check that we have an app specific score; the weight can be anything (but expected positive)\n    if (p.appSpecificScore === null || p.appSpecificScore === undefined) {\n        throw new InvalidPeerScoreParamsError('missing application specific score function');\n    }\n    // check the IP colocation factor\n    if (p.IPColocationFactorWeight > 0) {\n        throw new InvalidPeerScoreParamsError('invalid IPColocationFactorWeight; must be negative (or 0 to disable)');\n    }\n    if (p.IPColocationFactorWeight !== 0 && p.IPColocationFactorThreshold < 1) {\n        throw new InvalidPeerScoreParamsError('invalid IPColocationFactorThreshold; must be at least 1');\n    }\n    // check the behaviour penalty\n    if (p.behaviourPenaltyWeight > 0) {\n        throw new InvalidPeerScoreParamsError('invalid BehaviourPenaltyWeight; must be negative (or 0 to disable)');\n    }\n    if (p.behaviourPenaltyWeight !== 0 && (p.behaviourPenaltyDecay <= 0 || p.behaviourPenaltyDecay >= 1)) {\n        throw new InvalidPeerScoreParamsError('invalid BehaviourPenaltyDecay; must be between 0 and 1');\n    }\n    // check the decay parameters\n    if (p.decayInterval < 1000) {\n        throw new InvalidPeerScoreParamsError('invalid DecayInterval; must be at least 1s');\n    }\n    if (p.decayToZero <= 0 || p.decayToZero >= 1) {\n        throw new InvalidPeerScoreParamsError('invalid DecayToZero; must be between 0 and 1');\n    }\n    // no need to check the score retention; a value of 0 means that we don't retain scores\n}\n// eslint-disable-next-line complexity\nexport function validateTopicScoreParams(p) {\n    // make sure we have a sane topic weight\n    if (p.topicWeight < 0) {\n        throw new InvalidPeerScoreParamsError('invalid topic weight; must be >= 0');\n    }\n    // check P1\n    if (p.timeInMeshQuantum === 0) {\n        throw new InvalidPeerScoreParamsError('invalid TimeInMeshQuantum; must be non zero');\n    }\n    if (p.timeInMeshWeight < 0) {\n        throw new InvalidPeerScoreParamsError('invalid TimeInMeshWeight; must be positive (or 0 to disable)');\n    }\n    if (p.timeInMeshWeight !== 0 && p.timeInMeshQuantum <= 0) {\n        throw new InvalidPeerScoreParamsError('invalid TimeInMeshQuantum; must be positive');\n    }\n    if (p.timeInMeshWeight !== 0 && p.timeInMeshCap <= 0) {\n        throw new InvalidPeerScoreParamsError('invalid TimeInMeshCap; must be positive');\n    }\n    // check P2\n    if (p.firstMessageDeliveriesWeight < 0) {\n        throw new InvalidPeerScoreParamsError('invallid FirstMessageDeliveriesWeight; must be positive (or 0 to disable)');\n    }\n    if (p.firstMessageDeliveriesWeight !== 0 &&\n        (p.firstMessageDeliveriesDecay <= 0 || p.firstMessageDeliveriesDecay >= 1)) {\n        throw new InvalidPeerScoreParamsError('invalid FirstMessageDeliveriesDecay; must be between 0 and 1');\n    }\n    if (p.firstMessageDeliveriesWeight !== 0 && p.firstMessageDeliveriesCap <= 0) {\n        throw new InvalidPeerScoreParamsError('invalid FirstMessageDeliveriesCap; must be positive');\n    }\n    // check P3\n    if (p.meshMessageDeliveriesWeight > 0) {\n        throw new InvalidPeerScoreParamsError('invalid MeshMessageDeliveriesWeight; must be negative (or 0 to disable)');\n    }\n    if (p.meshMessageDeliveriesWeight !== 0 && (p.meshMessageDeliveriesDecay <= 0 || p.meshMessageDeliveriesDecay >= 1)) {\n        throw new InvalidPeerScoreParamsError('invalid MeshMessageDeliveriesDecay; must be between 0 and 1');\n    }\n    if (p.meshMessageDeliveriesWeight !== 0 && p.meshMessageDeliveriesCap <= 0) {\n        throw new InvalidPeerScoreParamsError('invalid MeshMessageDeliveriesCap; must be positive');\n    }\n    if (p.meshMessageDeliveriesWeight !== 0 && p.meshMessageDeliveriesThreshold <= 0) {\n        throw new InvalidPeerScoreParamsError('invalid MeshMessageDeliveriesThreshold; must be positive');\n    }\n    if (p.meshMessageDeliveriesWindow < 0) {\n        throw new InvalidPeerScoreParamsError('invalid MeshMessageDeliveriesWindow; must be non-negative');\n    }\n    if (p.meshMessageDeliveriesWeight !== 0 && p.meshMessageDeliveriesActivation < 1000) {\n        throw new InvalidPeerScoreParamsError('invalid MeshMessageDeliveriesActivation; must be at least 1s');\n    }\n    // check P3b\n    if (p.meshFailurePenaltyWeight > 0) {\n        throw new InvalidPeerScoreParamsError('invalid MeshFailurePenaltyWeight; must be negative (or 0 to disable)');\n    }\n    if (p.meshFailurePenaltyWeight !== 0 && (p.meshFailurePenaltyDecay <= 0 || p.meshFailurePenaltyDecay >= 1)) {\n        throw new InvalidPeerScoreParamsError('invalid MeshFailurePenaltyDecay; must be between 0 and 1');\n    }\n    // check P4\n    if (p.invalidMessageDeliveriesWeight > 0) {\n        throw new InvalidPeerScoreParamsError('invalid InvalidMessageDeliveriesWeight; must be negative (or 0 to disable)');\n    }\n    if (p.invalidMessageDeliveriesDecay <= 0 || p.invalidMessageDeliveriesDecay >= 1) {\n        throw new InvalidPeerScoreParamsError('invalid InvalidMessageDeliveriesDecay; must be between 0 and 1');\n    }\n}\n//# sourceMappingURL=peer-score-params.js.map","import { InvalidPeerScoreThresholdsError } from '../errors.js';\nexport const defaultPeerScoreThresholds = {\n    gossipThreshold: -10,\n    publishThreshold: -50,\n    graylistThreshold: -80,\n    acceptPXThreshold: 10,\n    opportunisticGraftThreshold: 20\n};\nexport function createPeerScoreThresholds(p = {}) {\n    return {\n        ...defaultPeerScoreThresholds,\n        ...p\n    };\n}\nexport function validatePeerScoreThresholds(p) {\n    if (p.gossipThreshold > 0) {\n        throw new InvalidPeerScoreThresholdsError('invalid gossip threshold; it must be <= 0');\n    }\n    if (p.publishThreshold > 0 || p.publishThreshold > p.gossipThreshold) {\n        throw new InvalidPeerScoreThresholdsError('invalid publish threshold; it must be <= 0 and <= gossip threshold');\n    }\n    if (p.graylistThreshold > 0 || p.graylistThreshold > p.publishThreshold) {\n        throw new InvalidPeerScoreThresholdsError('invalid graylist threshold; it must be <= 0 and <= publish threshold');\n    }\n    if (p.acceptPXThreshold < 0) {\n        throw new InvalidPeerScoreThresholdsError('invalid accept PX threshold; it must be >= 0');\n    }\n    if (p.opportunisticGraftThreshold < 0) {\n        throw new InvalidPeerScoreThresholdsError('invalid opportunistic grafting threshold; it must be >= 0');\n    }\n}\n//# sourceMappingURL=peer-score-thresholds.js.map","/**\n * Exclude up to `ineed` items from a set if item meets condition `cond`\n */\nexport function removeItemsFromSet(superSet, ineed, cond = () => true) {\n    const subset = new Set();\n    if (ineed <= 0) {\n        return subset;\n    }\n    for (const id of superSet) {\n        if (subset.size >= ineed) {\n            break;\n        }\n        if (cond(id)) {\n            subset.add(id);\n            superSet.delete(id);\n        }\n    }\n    return subset;\n}\n/**\n * Exclude up to `ineed` items from a set\n */\nexport function removeFirstNItemsFromSet(superSet, ineed) {\n    return removeItemsFromSet(superSet, ineed, () => true);\n}\nexport class MapDef extends Map {\n    getDefault;\n    constructor(getDefault) {\n        super();\n        this.getDefault = getDefault;\n    }\n    getOrDefault(key) {\n        let value = super.get(key);\n        if (value === undefined) {\n            value = this.getDefault();\n            this.set(key, value);\n        }\n        return value;\n    }\n}\n//# sourceMappingURL=set.js.map","export function computeScore(peer, pstats, params, peerIPs) {\n    let score = 0;\n    // topic stores\n    Object.entries(pstats.topics).forEach(([topic, tstats]) => {\n        // the topic parameters\n        const topicParams = params.topics[topic];\n        if (topicParams === undefined) {\n            // we are not scoring this topic\n            return;\n        }\n        let topicScore = 0;\n        // P1: time in Mesh\n        if (tstats.inMesh) {\n            let p1 = tstats.meshTime / topicParams.timeInMeshQuantum;\n            if (p1 > topicParams.timeInMeshCap) {\n                p1 = topicParams.timeInMeshCap;\n            }\n            topicScore += p1 * topicParams.timeInMeshWeight;\n        }\n        // P2: first message deliveries\n        let p2 = tstats.firstMessageDeliveries;\n        if (p2 > topicParams.firstMessageDeliveriesCap) {\n            p2 = topicParams.firstMessageDeliveriesCap;\n        }\n        topicScore += p2 * topicParams.firstMessageDeliveriesWeight;\n        // P3: mesh message deliveries\n        if (tstats.meshMessageDeliveriesActive &&\n            tstats.meshMessageDeliveries < topicParams.meshMessageDeliveriesThreshold) {\n            const deficit = topicParams.meshMessageDeliveriesThreshold - tstats.meshMessageDeliveries;\n            const p3 = deficit * deficit;\n            topicScore += p3 * topicParams.meshMessageDeliveriesWeight;\n        }\n        // P3b:\n        // NOTE: the weight of P3b is negative (validated in validateTopicScoreParams) so this detracts\n        const p3b = tstats.meshFailurePenalty;\n        topicScore += p3b * topicParams.meshFailurePenaltyWeight;\n        // P4: invalid messages\n        // NOTE: the weight of P4 is negative (validated in validateTopicScoreParams) so this detracts\n        const p4 = tstats.invalidMessageDeliveries * tstats.invalidMessageDeliveries;\n        topicScore += p4 * topicParams.invalidMessageDeliveriesWeight;\n        // update score, mixing with topic weight\n        score += topicScore * topicParams.topicWeight;\n    });\n    // apply the topic score cap, if any\n    if (params.topicScoreCap > 0 && score > params.topicScoreCap) {\n        score = params.topicScoreCap;\n    }\n    // P5: application-specific score\n    const p5 = params.appSpecificScore(peer);\n    score += p5 * params.appSpecificWeight;\n    // P6: IP colocation factor\n    pstats.knownIPs.forEach((ip) => {\n        if (params.IPColocationFactorWhitelist.has(ip)) {\n            return;\n        }\n        // P6 has a cliff (IPColocationFactorThreshold)\n        // It's only applied if at least that many peers are connected to us from that source IP addr.\n        // It is quadratic, and the weight is negative (validated in validatePeerScoreParams)\n        const peersInIP = peerIPs.get(ip);\n        const numPeersInIP = (peersInIP != null) ? peersInIP.size : 0;\n        if (numPeersInIP > params.IPColocationFactorThreshold) {\n            const surplus = numPeersInIP - params.IPColocationFactorThreshold;\n            const p6 = surplus * surplus;\n            score += p6 * params.IPColocationFactorWeight;\n        }\n    });\n    // P7: behavioural pattern penalty\n    if (pstats.behaviourPenalty > params.behaviourPenaltyThreshold) {\n        const excess = pstats.behaviourPenalty - params.behaviourPenaltyThreshold;\n        const p7 = excess * excess;\n        score += p7 * params.behaviourPenaltyWeight;\n    }\n    return score;\n}\n//# sourceMappingURL=compute-score.js.map","'use strict';\n\n/**\n * Custom implementation of a double ended queue.\n */\nfunction Denque(array, options) {\n  var options = options || {};\n  this._capacity = options.capacity;\n\n  this._head = 0;\n  this._tail = 0;\n\n  if (Array.isArray(array)) {\n    this._fromArray(array);\n  } else {\n    this._capacityMask = 0x3;\n    this._list = new Array(4);\n  }\n}\n\n/**\n * --------------\n *  PUBLIC API\n * -------------\n */\n\n/**\n * Returns the item at the specified index from the list.\n * 0 is the first element, 1 is the second, and so on...\n * Elements at negative values are that many from the end: -1 is one before the end\n * (the last element), -2 is two before the end (one before last), etc.\n * @param index\n * @returns {*}\n */\nDenque.prototype.peekAt = function peekAt(index) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  var len = this.size();\n  if (i >= len || i < -len) return undefined;\n  if (i < 0) i += len;\n  i = (this._head + i) & this._capacityMask;\n  return this._list[i];\n};\n\n/**\n * Alias for peekAt()\n * @param i\n * @returns {*}\n */\nDenque.prototype.get = function get(i) {\n  return this.peekAt(i);\n};\n\n/**\n * Returns the first item in the list without removing it.\n * @returns {*}\n */\nDenque.prototype.peek = function peek() {\n  if (this._head === this._tail) return undefined;\n  return this._list[this._head];\n};\n\n/**\n * Alias for peek()\n * @returns {*}\n */\nDenque.prototype.peekFront = function peekFront() {\n  return this.peek();\n};\n\n/**\n * Returns the item that is at the back of the queue without removing it.\n * Uses peekAt(-1)\n */\nDenque.prototype.peekBack = function peekBack() {\n  return this.peekAt(-1);\n};\n\n/**\n * Returns the current length of the queue\n * @return {Number}\n */\nObject.defineProperty(Denque.prototype, 'length', {\n  get: function length() {\n    return this.size();\n  }\n});\n\n/**\n * Return the number of items on the list, or 0 if empty.\n * @returns {number}\n */\nDenque.prototype.size = function size() {\n  if (this._head === this._tail) return 0;\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Add an item at the beginning of the list.\n * @param item\n */\nDenque.prototype.unshift = function unshift(item) {\n  if (arguments.length === 0) return this.size();\n  var len = this._list.length;\n  this._head = (this._head - 1 + len) & this._capacityMask;\n  this._list[this._head] = item;\n  if (this._tail === this._head) this._growArray();\n  if (this._capacity && this.size() > this._capacity) this.pop();\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Remove and return the first item on the list,\n * Returns undefined if the list is empty.\n * @returns {*}\n */\nDenque.prototype.shift = function shift() {\n  var head = this._head;\n  if (head === this._tail) return undefined;\n  var item = this._list[head];\n  this._list[head] = undefined;\n  this._head = (head + 1) & this._capacityMask;\n  if (head < 2 && this._tail > 10000 && this._tail <= this._list.length >>> 2) this._shrinkArray();\n  return item;\n};\n\n/**\n * Add an item to the bottom of the list.\n * @param item\n */\nDenque.prototype.push = function push(item) {\n  if (arguments.length === 0) return this.size();\n  var tail = this._tail;\n  this._list[tail] = item;\n  this._tail = (tail + 1) & this._capacityMask;\n  if (this._tail === this._head) {\n    this._growArray();\n  }\n  if (this._capacity && this.size() > this._capacity) {\n    this.shift();\n  }\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Remove and return the last item on the list.\n * Returns undefined if the list is empty.\n * @returns {*}\n */\nDenque.prototype.pop = function pop() {\n  var tail = this._tail;\n  if (tail === this._head) return undefined;\n  var len = this._list.length;\n  this._tail = (tail - 1 + len) & this._capacityMask;\n  var item = this._list[this._tail];\n  this._list[this._tail] = undefined;\n  if (this._head < 2 && tail > 10000 && tail <= len >>> 2) this._shrinkArray();\n  return item;\n};\n\n/**\n * Remove and return the item at the specified index from the list.\n * Returns undefined if the list is empty.\n * @param index\n * @returns {*}\n */\nDenque.prototype.removeOne = function removeOne(index) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  if (this._head === this._tail) return void 0;\n  var size = this.size();\n  var len = this._list.length;\n  if (i >= size || i < -size) return void 0;\n  if (i < 0) i += size;\n  i = (this._head + i) & this._capacityMask;\n  var item = this._list[i];\n  var k;\n  if (index < size / 2) {\n    for (k = index; k > 0; k--) {\n      this._list[i] = this._list[i = (i - 1 + len) & this._capacityMask];\n    }\n    this._list[i] = void 0;\n    this._head = (this._head + 1 + len) & this._capacityMask;\n  } else {\n    for (k = size - 1 - index; k > 0; k--) {\n      this._list[i] = this._list[i = (i + 1 + len) & this._capacityMask];\n    }\n    this._list[i] = void 0;\n    this._tail = (this._tail - 1 + len) & this._capacityMask;\n  }\n  return item;\n};\n\n/**\n * Remove number of items from the specified index from the list.\n * Returns array of removed items.\n * Returns undefined if the list is empty.\n * @param index\n * @param count\n * @returns {array}\n */\nDenque.prototype.remove = function remove(index, count) {\n  var i = index;\n  var removed;\n  var del_count = count;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  if (this._head === this._tail) return void 0;\n  var size = this.size();\n  var len = this._list.length;\n  if (i >= size || i < -size || count < 1) return void 0;\n  if (i < 0) i += size;\n  if (count === 1 || !count) {\n    removed = new Array(1);\n    removed[0] = this.removeOne(i);\n    return removed;\n  }\n  if (i === 0 && i + count >= size) {\n    removed = this.toArray();\n    this.clear();\n    return removed;\n  }\n  if (i + count > size) count = size - i;\n  var k;\n  removed = new Array(count);\n  for (k = 0; k < count; k++) {\n    removed[k] = this._list[(this._head + i + k) & this._capacityMask];\n  }\n  i = (this._head + i) & this._capacityMask;\n  if (index + count === size) {\n    this._tail = (this._tail - count + len) & this._capacityMask;\n    for (k = count; k > 0; k--) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n    }\n    return removed;\n  }\n  if (index === 0) {\n    this._head = (this._head + count + len) & this._capacityMask;\n    for (k = count - 1; k > 0; k--) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n    }\n    return removed;\n  }\n  if (i < size / 2) {\n    this._head = (this._head + index + count + len) & this._capacityMask;\n    for (k = index; k > 0; k--) {\n      this.unshift(this._list[i = (i - 1 + len) & this._capacityMask]);\n    }\n    i = (this._head - 1 + len) & this._capacityMask;\n    while (del_count > 0) {\n      this._list[i = (i - 1 + len) & this._capacityMask] = void 0;\n      del_count--;\n    }\n    if (index < 0) this._tail = i;\n  } else {\n    this._tail = i;\n    i = (i + count + len) & this._capacityMask;\n    for (k = size - (count + index); k > 0; k--) {\n      this.push(this._list[i++]);\n    }\n    i = this._tail;\n    while (del_count > 0) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n      del_count--;\n    }\n  }\n  if (this._head < 2 && this._tail > 10000 && this._tail <= len >>> 2) this._shrinkArray();\n  return removed;\n};\n\n/**\n * Native splice implementation.\n * Remove number of items from the specified index from the list and/or add new elements.\n * Returns array of removed items or empty array if count == 0.\n * Returns undefined if the list is empty.\n *\n * @param index\n * @param count\n * @param {...*} [elements]\n * @returns {array}\n */\nDenque.prototype.splice = function splice(index, count) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  var size = this.size();\n  if (i < 0) i += size;\n  if (i > size) return void 0;\n  if (arguments.length > 2) {\n    var k;\n    var temp;\n    var removed;\n    var arg_len = arguments.length;\n    var len = this._list.length;\n    var arguments_index = 2;\n    if (!size || i < size / 2) {\n      temp = new Array(i);\n      for (k = 0; k < i; k++) {\n        temp[k] = this._list[(this._head + k) & this._capacityMask];\n      }\n      if (count === 0) {\n        removed = [];\n        if (i > 0) {\n          this._head = (this._head + i + len) & this._capacityMask;\n        }\n      } else {\n        removed = this.remove(i, count);\n        this._head = (this._head + i + len) & this._capacityMask;\n      }\n      while (arg_len > arguments_index) {\n        this.unshift(arguments[--arg_len]);\n      }\n      for (k = i; k > 0; k--) {\n        this.unshift(temp[k - 1]);\n      }\n    } else {\n      temp = new Array(size - (i + count));\n      var leng = temp.length;\n      for (k = 0; k < leng; k++) {\n        temp[k] = this._list[(this._head + i + count + k) & this._capacityMask];\n      }\n      if (count === 0) {\n        removed = [];\n        if (i != size) {\n          this._tail = (this._head + i + len) & this._capacityMask;\n        }\n      } else {\n        removed = this.remove(i, count);\n        this._tail = (this._tail - leng + len) & this._capacityMask;\n      }\n      while (arguments_index < arg_len) {\n        this.push(arguments[arguments_index++]);\n      }\n      for (k = 0; k < leng; k++) {\n        this.push(temp[k]);\n      }\n    }\n    return removed;\n  } else {\n    return this.remove(i, count);\n  }\n};\n\n/**\n * Soft clear - does not reset capacity.\n */\nDenque.prototype.clear = function clear() {\n  this._list = new Array(this._list.length);\n  this._head = 0;\n  this._tail = 0;\n};\n\n/**\n * Returns true or false whether the list is empty.\n * @returns {boolean}\n */\nDenque.prototype.isEmpty = function isEmpty() {\n  return this._head === this._tail;\n};\n\n/**\n * Returns an array of all queue items.\n * @returns {Array}\n */\nDenque.prototype.toArray = function toArray() {\n  return this._copyArray(false);\n};\n\n/**\n * -------------\n *   INTERNALS\n * -------------\n */\n\n/**\n * Fills the queue with items from an array\n * For use in the constructor\n * @param array\n * @private\n */\nDenque.prototype._fromArray = function _fromArray(array) {\n  var length = array.length;\n  var capacity = this._nextPowerOf2(length);\n\n  this._list = new Array(capacity);\n  this._capacityMask = capacity - 1;\n  this._tail = length;\n\n  for (var i = 0; i < length; i++) this._list[i] = array[i];\n};\n\n/**\n *\n * @param fullCopy\n * @param size Initialize the array with a specific size. Will default to the current list size\n * @returns {Array}\n * @private\n */\nDenque.prototype._copyArray = function _copyArray(fullCopy, size) {\n  var src = this._list;\n  var capacity = src.length;\n  var length = this.length;\n  size = size | length;\n\n  // No prealloc requested and the buffer is contiguous\n  if (size == length && this._head < this._tail) {\n    // Simply do a fast slice copy\n    return this._list.slice(this._head, this._tail);\n  }\n\n  var dest = new Array(size);\n\n  var k = 0;\n  var i;\n  if (fullCopy || this._head > this._tail) {\n    for (i = this._head; i < capacity; i++) dest[k++] = src[i];\n    for (i = 0; i < this._tail; i++) dest[k++] = src[i];\n  } else {\n    for (i = this._head; i < this._tail; i++) dest[k++] = src[i];\n  }\n\n  return dest;\n}\n\n/**\n * Grows the internal list array.\n * @private\n */\nDenque.prototype._growArray = function _growArray() {\n  if (this._head != 0) {\n    // double array size and copy existing data, head to end, then beginning to tail.\n    var newList = this._copyArray(true, this._list.length << 1);\n\n    this._tail = this._list.length;\n    this._head = 0;\n\n    this._list = newList;\n  } else {\n    this._tail = this._list.length;\n    this._list.length <<= 1;\n  }\n\n  this._capacityMask = (this._capacityMask << 1) | 1;\n};\n\n/**\n * Shrinks the internal list array.\n * @private\n */\nDenque.prototype._shrinkArray = function _shrinkArray() {\n  this._list.length >>>= 1;\n  this._capacityMask >>>= 1;\n};\n\n/**\n * Find the next power of 2, at least 4\n * @private\n * @param {number} num \n * @returns {number}\n */\nDenque.prototype._nextPowerOf2 = function _nextPowerOf2(num) {\n  var log2 = Math.log(num) / Math.log(2);\n  var nextPow2 = 1 << (log2 + 1);\n\n  return Math.max(nextPow2, 4);\n}\n\nmodule.exports = Denque;\n","import Denque from 'denque';\nimport { TimeCacheDuration } from '../constants.js';\nexport var DeliveryRecordStatus;\n(function (DeliveryRecordStatus) {\n    /**\n     * we don't know (yet) if the message is valid\n     */\n    DeliveryRecordStatus[DeliveryRecordStatus[\"unknown\"] = 0] = \"unknown\";\n    /**\n     * we know the message is valid\n     */\n    DeliveryRecordStatus[DeliveryRecordStatus[\"valid\"] = 1] = \"valid\";\n    /**\n     * we know the message is invalid\n     */\n    DeliveryRecordStatus[DeliveryRecordStatus[\"invalid\"] = 2] = \"invalid\";\n    /**\n     * we were instructed by the validator to ignore the message\n     */\n    DeliveryRecordStatus[DeliveryRecordStatus[\"ignored\"] = 3] = \"ignored\";\n})(DeliveryRecordStatus || (DeliveryRecordStatus = {}));\n/**\n * Map of canonical message ID to DeliveryRecord\n *\n * Maintains an internal queue for efficient gc of old messages\n */\nexport class MessageDeliveries {\n    records;\n    queue;\n    constructor() {\n        this.records = new Map();\n        this.queue = new Denque();\n    }\n    getRecord(msgIdStr) {\n        return this.records.get(msgIdStr);\n    }\n    ensureRecord(msgIdStr) {\n        let drec = this.records.get(msgIdStr);\n        if (drec != null) {\n            return drec;\n        }\n        // record doesn't exist yet\n        // create record\n        drec = {\n            status: DeliveryRecordStatus.unknown,\n            firstSeenTsMs: Date.now(),\n            validated: 0,\n            peers: new Set()\n        };\n        this.records.set(msgIdStr, drec);\n        // and add msgId to the queue\n        const entry = {\n            msgId: msgIdStr,\n            expire: Date.now() + TimeCacheDuration\n        };\n        this.queue.push(entry);\n        return drec;\n    }\n    gc() {\n        const now = Date.now();\n        // queue is sorted by expiry time\n        // remove expired messages, remove from queue until first un-expired message found\n        let head = this.queue.peekFront();\n        while ((head != null) && head.expire < now) {\n            this.records.delete(head.msgId);\n            this.queue.shift();\n            head = this.queue.peekFront();\n        }\n    }\n    clear() {\n        this.records.clear();\n        this.queue.clear();\n    }\n}\n//# sourceMappingURL=message-deliveries.js.map","import { RejectReason } from '../types.js';\nimport { MapDef } from '../utils/set.js';\nimport { computeScore } from './compute-score.js';\nimport { MessageDeliveries, DeliveryRecordStatus } from './message-deliveries.js';\nimport { validatePeerScoreParams } from './peer-score-params.js';\nexport class PeerScore {\n    params;\n    metrics;\n    /**\n     * Per-peer stats for score calculation\n     */\n    peerStats = new Map();\n    /**\n     * IP colocation tracking; maps IP => set of peers.\n     */\n    peerIPs = new MapDef(() => new Set());\n    /**\n     * Cache score up to decayInterval if topic stats are unchanged.\n     */\n    scoreCache = new Map();\n    /**\n     * Recent message delivery timing/participants\n     */\n    deliveryRecords = new MessageDeliveries();\n    _backgroundInterval;\n    scoreCacheValidityMs;\n    computeScore;\n    log;\n    constructor(params, metrics, componentLogger, opts) {\n        this.params = params;\n        this.metrics = metrics;\n        validatePeerScoreParams(params);\n        this.scoreCacheValidityMs = opts.scoreCacheValidityMs;\n        this.computeScore = opts.computeScore ?? computeScore;\n        this.log = componentLogger.forComponent('libp2p:gossipsub:score');\n    }\n    get size() {\n        return this.peerStats.size;\n    }\n    /**\n     * Start PeerScore instance\n     */\n    start() {\n        if (this._backgroundInterval != null) {\n            this.log('Peer score already running');\n            return;\n        }\n        this._backgroundInterval = setInterval(() => { this.background(); }, this.params.decayInterval);\n        this.log('started');\n    }\n    /**\n     * Stop PeerScore instance\n     */\n    stop() {\n        if (this._backgroundInterval == null) {\n            this.log('Peer score already stopped');\n            return;\n        }\n        clearInterval(this._backgroundInterval);\n        delete this._backgroundInterval;\n        this.peerIPs.clear();\n        this.peerStats.clear();\n        this.deliveryRecords.clear();\n        this.log('stopped');\n    }\n    /**\n     * Periodic maintenance\n     */\n    background() {\n        this.refreshScores();\n        this.deliveryRecords.gc();\n    }\n    dumpPeerScoreStats() {\n        return Object.fromEntries(Array.from(this.peerStats.entries()).map(([peer, stats]) => [peer, stats]));\n    }\n    messageFirstSeenTimestampMs(msgIdStr) {\n        const drec = this.deliveryRecords.getRecord(msgIdStr);\n        return (drec != null) ? drec.firstSeenTsMs : null;\n    }\n    /**\n     * Decays scores, and purges score records for disconnected peers once their expiry has elapsed.\n     */\n    refreshScores() {\n        const now = Date.now();\n        const decayToZero = this.params.decayToZero;\n        this.peerStats.forEach((pstats, id) => {\n            if (!pstats.connected) {\n                // has the retention period expired?\n                if (now > pstats.expire) {\n                    // yes, throw it away (but clean up the IP tracking first)\n                    this.removeIPsForPeer(id, pstats.knownIPs);\n                    this.peerStats.delete(id);\n                    this.scoreCache.delete(id);\n                }\n                // we don't decay retained scores, as the peer is not active.\n                // this way the peer cannot reset a negative score by simply disconnecting and reconnecting,\n                // unless the retention period has elapsed.\n                // similarly, a well behaved peer does not lose its score by getting disconnected.\n                return;\n            }\n            Object.entries(pstats.topics).forEach(([topic, tstats]) => {\n                const tparams = this.params.topics[topic];\n                if (tparams === undefined) {\n                    // we are not scoring this topic\n                    // should be unreachable, we only add scored topics to pstats\n                    return;\n                }\n                // decay counters\n                tstats.firstMessageDeliveries *= tparams.firstMessageDeliveriesDecay;\n                if (tstats.firstMessageDeliveries < decayToZero) {\n                    tstats.firstMessageDeliveries = 0;\n                }\n                tstats.meshMessageDeliveries *= tparams.meshMessageDeliveriesDecay;\n                if (tstats.meshMessageDeliveries < decayToZero) {\n                    tstats.meshMessageDeliveries = 0;\n                }\n                tstats.meshFailurePenalty *= tparams.meshFailurePenaltyDecay;\n                if (tstats.meshFailurePenalty < decayToZero) {\n                    tstats.meshFailurePenalty = 0;\n                }\n                tstats.invalidMessageDeliveries *= tparams.invalidMessageDeliveriesDecay;\n                if (tstats.invalidMessageDeliveries < decayToZero) {\n                    tstats.invalidMessageDeliveries = 0;\n                }\n                // update mesh time and activate mesh message delivery parameter if need be\n                if (tstats.inMesh) {\n                    tstats.meshTime = now - tstats.graftTime;\n                    if (tstats.meshTime > tparams.meshMessageDeliveriesActivation) {\n                        tstats.meshMessageDeliveriesActive = true;\n                    }\n                }\n            });\n            // decay P7 counter\n            pstats.behaviourPenalty *= this.params.behaviourPenaltyDecay;\n            if (pstats.behaviourPenalty < decayToZero) {\n                pstats.behaviourPenalty = 0;\n            }\n        });\n    }\n    /**\n     * Return the score for a peer\n     */\n    score(id) {\n        this.metrics?.scoreFnCalls.inc();\n        const pstats = this.peerStats.get(id);\n        if (pstats == null) {\n            return 0;\n        }\n        const now = Date.now();\n        const cacheEntry = this.scoreCache.get(id);\n        // Found cached score within validity period\n        if ((cacheEntry != null) && cacheEntry.cacheUntil > now) {\n            return cacheEntry.score;\n        }\n        this.metrics?.scoreFnRuns.inc();\n        const score = this.computeScore(id, pstats, this.params, this.peerIPs);\n        const cacheUntil = now + this.scoreCacheValidityMs;\n        if (cacheEntry != null) {\n            this.metrics?.scoreCachedDelta.observe(Math.abs(score - cacheEntry.score));\n            cacheEntry.score = score;\n            cacheEntry.cacheUntil = cacheUntil;\n        }\n        else {\n            this.scoreCache.set(id, { score, cacheUntil });\n        }\n        return score;\n    }\n    /**\n     * Apply a behavioural penalty to a peer\n     */\n    addPenalty(id, penalty, penaltyLabel) {\n        const pstats = this.peerStats.get(id);\n        if (pstats != null) {\n            pstats.behaviourPenalty += penalty;\n            this.metrics?.onScorePenalty(penaltyLabel);\n        }\n    }\n    addPeer(id) {\n        // create peer stats (not including topic stats for each topic to be scored)\n        // topic stats will be added as needed\n        const pstats = {\n            connected: true,\n            expire: 0,\n            topics: {},\n            knownIPs: new Set(),\n            behaviourPenalty: 0\n        };\n        this.peerStats.set(id, pstats);\n    }\n    /** Adds a new IP to a peer, if the peer is not known the update is ignored */\n    addIP(id, ip) {\n        const pstats = this.peerStats.get(id);\n        if (pstats != null) {\n            pstats.knownIPs.add(ip);\n        }\n        this.peerIPs.getOrDefault(ip).add(id);\n    }\n    /** Remove peer association with IP */\n    removeIP(id, ip) {\n        const pstats = this.peerStats.get(id);\n        if (pstats != null) {\n            pstats.knownIPs.delete(ip);\n        }\n        const peersWithIP = this.peerIPs.get(ip);\n        if (peersWithIP != null) {\n            peersWithIP.delete(id);\n            if (peersWithIP.size === 0) {\n                this.peerIPs.delete(ip);\n            }\n        }\n    }\n    removePeer(id) {\n        const pstats = this.peerStats.get(id);\n        if (pstats == null) {\n            return;\n        }\n        // decide whether to retain the score; this currently only retains non-positive scores\n        // to dissuade attacks on the score function.\n        if (this.score(id) > 0) {\n            this.removeIPsForPeer(id, pstats.knownIPs);\n            this.peerStats.delete(id);\n            return;\n        }\n        // furthermore, when we decide to retain the score, the firstMessageDelivery counters are\n        // reset to 0 and mesh delivery penalties applied.\n        Object.entries(pstats.topics).forEach(([topic, tstats]) => {\n            tstats.firstMessageDeliveries = 0;\n            const threshold = this.params.topics[topic].meshMessageDeliveriesThreshold;\n            if (tstats.inMesh && tstats.meshMessageDeliveriesActive && tstats.meshMessageDeliveries < threshold) {\n                const deficit = threshold - tstats.meshMessageDeliveries;\n                tstats.meshFailurePenalty += deficit * deficit;\n            }\n            tstats.inMesh = false;\n            tstats.meshMessageDeliveriesActive = false;\n        });\n        pstats.connected = false;\n        pstats.expire = Date.now() + this.params.retainScore;\n    }\n    /** Handles scoring functionality as a peer GRAFTs to a topic. */\n    graft(id, topic) {\n        const pstats = this.peerStats.get(id);\n        if (pstats != null) {\n            const tstats = this.getPtopicStats(pstats, topic);\n            if (tstats != null) {\n                // if we are scoring the topic, update the mesh status.\n                tstats.inMesh = true;\n                tstats.graftTime = Date.now();\n                tstats.meshTime = 0;\n                tstats.meshMessageDeliveriesActive = false;\n            }\n        }\n    }\n    /** Handles scoring functionality as a peer PRUNEs from a topic. */\n    prune(id, topic) {\n        const pstats = this.peerStats.get(id);\n        if (pstats != null) {\n            const tstats = this.getPtopicStats(pstats, topic);\n            if (tstats != null) {\n                // sticky mesh delivery rate failure penalty\n                const threshold = this.params.topics[topic].meshMessageDeliveriesThreshold;\n                if (tstats.meshMessageDeliveriesActive && tstats.meshMessageDeliveries < threshold) {\n                    const deficit = threshold - tstats.meshMessageDeliveries;\n                    tstats.meshFailurePenalty += deficit * deficit;\n                }\n                tstats.meshMessageDeliveriesActive = false;\n                tstats.inMesh = false;\n                // TODO: Consider clearing score cache on important penalties\n                // this.scoreCache.delete(id)\n            }\n        }\n    }\n    validateMessage(msgIdStr) {\n        this.deliveryRecords.ensureRecord(msgIdStr);\n    }\n    deliverMessage(from, msgIdStr, topic) {\n        this.markFirstMessageDelivery(from, topic);\n        const drec = this.deliveryRecords.ensureRecord(msgIdStr);\n        const now = Date.now();\n        // defensive check that this is the first delivery trace -- delivery status should be unknown\n        if (drec.status !== DeliveryRecordStatus.unknown) {\n            this.log('unexpected delivery: message from %s was first seen %s ago and has delivery status %s', from, now - drec.firstSeenTsMs, DeliveryRecordStatus[drec.status]);\n            return;\n        }\n        // mark the message as valid and reward mesh peers that have already forwarded it to us\n        drec.status = DeliveryRecordStatus.valid;\n        drec.validated = now;\n        drec.peers.forEach((p) => {\n            // this check is to make sure a peer can't send us a message twice and get a double count\n            // if it is a first delivery.\n            if (p !== from.toString()) {\n                this.markDuplicateMessageDelivery(p, topic);\n            }\n        });\n    }\n    /**\n     * Similar to `rejectMessage` except does not require the message id or reason for an invalid message.\n     */\n    rejectInvalidMessage(from, topic) {\n        this.markInvalidMessageDelivery(from, topic);\n    }\n    rejectMessage(from, msgIdStr, topic, reason) {\n        // eslint-disable-next-line default-case\n        switch (reason) {\n            // these messages are not tracked, but the peer is penalized as they are invalid\n            case RejectReason.Error:\n                this.markInvalidMessageDelivery(from, topic);\n                return;\n            // we ignore those messages, so do nothing.\n            case RejectReason.Blacklisted:\n                return;\n            // the rest are handled after record creation\n        }\n        const drec = this.deliveryRecords.ensureRecord(msgIdStr);\n        // defensive check that this is the first rejection -- delivery status should be unknown\n        if (drec.status !== DeliveryRecordStatus.unknown) {\n            this.log('unexpected rejection: message from %s was first seen %s ago and has delivery status %d', from, Date.now() - drec.firstSeenTsMs, DeliveryRecordStatus[drec.status]);\n            return;\n        }\n        if (reason === RejectReason.Ignore) {\n            // we were explicitly instructed by the validator to ignore the message but not penalize the peer\n            drec.status = DeliveryRecordStatus.ignored;\n            drec.peers.clear();\n            return;\n        }\n        // mark the message as invalid and penalize peers that have already forwarded it.\n        drec.status = DeliveryRecordStatus.invalid;\n        this.markInvalidMessageDelivery(from, topic);\n        drec.peers.forEach((p) => {\n            this.markInvalidMessageDelivery(p, topic);\n        });\n        // release the delivery time tracking map to free some memory early\n        drec.peers.clear();\n    }\n    duplicateMessage(from, msgIdStr, topic) {\n        const drec = this.deliveryRecords.ensureRecord(msgIdStr);\n        if (drec.peers.has(from)) {\n            // we have already seen this duplicate\n            return;\n        }\n        // eslint-disable-next-line default-case\n        switch (drec.status) {\n            case DeliveryRecordStatus.unknown:\n                // the message is being validated; track the peer delivery and wait for\n                // the Deliver/Reject/Ignore notification.\n                drec.peers.add(from);\n                break;\n            case DeliveryRecordStatus.valid:\n                // mark the peer delivery time to only count a duplicate delivery once.\n                drec.peers.add(from);\n                this.markDuplicateMessageDelivery(from, topic, drec.validated);\n                break;\n            case DeliveryRecordStatus.invalid:\n                // we no longer track delivery time\n                this.markInvalidMessageDelivery(from, topic);\n                break;\n            case DeliveryRecordStatus.ignored:\n                // the message was ignored; do nothing (we don't know if it was valid)\n                break;\n        }\n    }\n    /**\n     * Increments the \"invalid message deliveries\" counter for all scored topics the message is published in.\n     */\n    markInvalidMessageDelivery(from, topic) {\n        const pstats = this.peerStats.get(from);\n        if (pstats != null) {\n            const tstats = this.getPtopicStats(pstats, topic);\n            if (tstats != null) {\n                tstats.invalidMessageDeliveries += 1;\n            }\n        }\n    }\n    /**\n     * Increments the \"first message deliveries\" counter for all scored topics the message is published in,\n     * as well as the \"mesh message deliveries\" counter, if the peer is in the mesh for the topic.\n     * Messages already known (with the seenCache) are counted with markDuplicateMessageDelivery()\n     */\n    markFirstMessageDelivery(from, topic) {\n        const pstats = this.peerStats.get(from);\n        if (pstats != null) {\n            const tstats = this.getPtopicStats(pstats, topic);\n            if (tstats != null) {\n                let cap = this.params.topics[topic].firstMessageDeliveriesCap;\n                tstats.firstMessageDeliveries = Math.min(cap, tstats.firstMessageDeliveries + 1);\n                if (tstats.inMesh) {\n                    cap = this.params.topics[topic].meshMessageDeliveriesCap;\n                    tstats.meshMessageDeliveries = Math.min(cap, tstats.meshMessageDeliveries + 1);\n                }\n            }\n        }\n    }\n    /**\n     * Increments the \"mesh message deliveries\" counter for messages we've seen before,\n     * as long the message was received within the P3 window.\n     */\n    markDuplicateMessageDelivery(from, topic, validatedTime) {\n        const pstats = this.peerStats.get(from);\n        if (pstats != null) {\n            const now = validatedTime !== undefined ? Date.now() : 0;\n            const tstats = this.getPtopicStats(pstats, topic);\n            if (tstats != null && tstats.inMesh) {\n                const tparams = this.params.topics[topic];\n                // check against the mesh delivery window -- if the validated time is passed as 0, then\n                // the message was received before we finished validation and thus falls within the mesh\n                // delivery window.\n                if (validatedTime !== undefined) {\n                    const deliveryDelayMs = now - validatedTime;\n                    const isLateDelivery = deliveryDelayMs > tparams.meshMessageDeliveriesWindow;\n                    this.metrics?.onDuplicateMsgDelivery(topic, deliveryDelayMs, isLateDelivery);\n                    if (isLateDelivery) {\n                        return;\n                    }\n                }\n                const cap = tparams.meshMessageDeliveriesCap;\n                tstats.meshMessageDeliveries = Math.min(cap, tstats.meshMessageDeliveries + 1);\n            }\n        }\n    }\n    /**\n     * Removes an IP list from the tracking list for a peer.\n     */\n    removeIPsForPeer(id, ipsToRemove) {\n        for (const ipToRemove of ipsToRemove) {\n            const peerSet = this.peerIPs.get(ipToRemove);\n            if (peerSet != null) {\n                peerSet.delete(id);\n                if (peerSet.size === 0) {\n                    this.peerIPs.delete(ipToRemove);\n                }\n            }\n        }\n    }\n    /**\n     * Returns topic stats if they exist, otherwise if the supplied parameters score the\n     * topic, inserts the default stats and returns a reference to those. If neither apply, returns None.\n     */\n    getPtopicStats(pstats, topic) {\n        let topicStats = pstats.topics[topic];\n        if (topicStats !== undefined) {\n            return topicStats;\n        }\n        if (this.params.topics[topic] !== undefined) {\n            topicStats = {\n                inMesh: false,\n                graftTime: 0,\n                meshTime: 0,\n                firstMessageDeliveries: 0,\n                meshMessageDeliveries: 0,\n                meshMessageDeliveriesActive: false,\n                meshFailurePenalty: 0,\n                invalidMessageDeliveries: 0\n            };\n            pstats.topics[topic] = topicStats;\n            return topicStats;\n        }\n        return null;\n    }\n}\n//# sourceMappingURL=peer-score.js.map","export function computeScoreWeights(peer, pstats, params, peerIPs, topicStrToLabel) {\n    let score = 0;\n    const byTopic = new Map();\n    // topic stores\n    Object.entries(pstats.topics).forEach(([topic, tstats]) => {\n        // the topic parameters\n        // Aggregate by known topicLabel or throw to 'unknown'. This prevent too high cardinality\n        const topicLabel = topicStrToLabel.get(topic) ?? 'unknown';\n        const topicParams = params.topics[topic];\n        if (topicParams === undefined) {\n            // we are not scoring this topic\n            return;\n        }\n        let topicScores = byTopic.get(topicLabel);\n        if (topicScores == null) {\n            topicScores = {\n                p1w: 0,\n                p2w: 0,\n                p3w: 0,\n                p3bw: 0,\n                p4w: 0\n            };\n            byTopic.set(topicLabel, topicScores);\n        }\n        let p1w = 0;\n        let p2w = 0;\n        let p3w = 0;\n        let p3bw = 0;\n        let p4w = 0;\n        // P1: time in Mesh\n        if (tstats.inMesh) {\n            const p1 = Math.max(tstats.meshTime / topicParams.timeInMeshQuantum, topicParams.timeInMeshCap);\n            p1w += p1 * topicParams.timeInMeshWeight;\n        }\n        // P2: first message deliveries\n        let p2 = tstats.firstMessageDeliveries;\n        if (p2 > topicParams.firstMessageDeliveriesCap) {\n            p2 = topicParams.firstMessageDeliveriesCap;\n        }\n        p2w += p2 * topicParams.firstMessageDeliveriesWeight;\n        // P3: mesh message deliveries\n        if (tstats.meshMessageDeliveriesActive &&\n            tstats.meshMessageDeliveries < topicParams.meshMessageDeliveriesThreshold) {\n            const deficit = topicParams.meshMessageDeliveriesThreshold - tstats.meshMessageDeliveries;\n            const p3 = deficit * deficit;\n            p3w += p3 * topicParams.meshMessageDeliveriesWeight;\n        }\n        // P3b:\n        // NOTE: the weight of P3b is negative (validated in validateTopicScoreParams) so this detracts\n        const p3b = tstats.meshFailurePenalty;\n        p3bw += p3b * topicParams.meshFailurePenaltyWeight;\n        // P4: invalid messages\n        // NOTE: the weight of P4 is negative (validated in validateTopicScoreParams) so this detracts\n        const p4 = tstats.invalidMessageDeliveries * tstats.invalidMessageDeliveries;\n        p4w += p4 * topicParams.invalidMessageDeliveriesWeight;\n        // update score, mixing with topic weight\n        score += (p1w + p2w + p3w + p3bw + p4w) * topicParams.topicWeight;\n        topicScores.p1w += p1w;\n        topicScores.p2w += p2w;\n        topicScores.p3w += p3w;\n        topicScores.p3bw += p3bw;\n        topicScores.p4w += p4w;\n    });\n    // apply the topic score cap, if any\n    if (params.topicScoreCap > 0 && score > params.topicScoreCap) {\n        score = params.topicScoreCap;\n        // Proportionally apply cap to all individual contributions\n        const capF = params.topicScoreCap / score;\n        for (const ws of byTopic.values()) {\n            ws.p1w *= capF;\n            ws.p2w *= capF;\n            ws.p3w *= capF;\n            ws.p3bw *= capF;\n            ws.p4w *= capF;\n        }\n    }\n    let p5w = 0;\n    let p6w = 0;\n    let p7w = 0;\n    // P5: application-specific score\n    const p5 = params.appSpecificScore(peer);\n    p5w += p5 * params.appSpecificWeight;\n    // P6: IP colocation factor\n    pstats.knownIPs.forEach((ip) => {\n        if (params.IPColocationFactorWhitelist.has(ip)) {\n            return;\n        }\n        // P6 has a cliff (IPColocationFactorThreshold)\n        // It's only applied if at least that many peers are connected to us from that source IP addr.\n        // It is quadratic, and the weight is negative (validated in validatePeerScoreParams)\n        const peersInIP = peerIPs.get(ip);\n        const numPeersInIP = (peersInIP != null) ? peersInIP.size : 0;\n        if (numPeersInIP > params.IPColocationFactorThreshold) {\n            const surplus = numPeersInIP - params.IPColocationFactorThreshold;\n            const p6 = surplus * surplus;\n            p6w += p6 * params.IPColocationFactorWeight;\n        }\n    });\n    // P7: behavioural pattern penalty\n    const p7 = pstats.behaviourPenalty * pstats.behaviourPenalty;\n    p7w += p7 * params.behaviourPenaltyWeight;\n    score += p5w + p6w + p7w;\n    return {\n        byTopic,\n        p5w,\n        p6w,\n        p7w,\n        score\n    };\n}\nexport function computeAllPeersScoreWeights(peerIdStrs, peerStats, params, peerIPs, topicStrToLabel) {\n    const sw = {\n        byTopic: new Map(),\n        p5w: [],\n        p6w: [],\n        p7w: [],\n        score: []\n    };\n    for (const peerIdStr of peerIdStrs) {\n        const pstats = peerStats.get(peerIdStr);\n        if (pstats != null) {\n            const swPeer = computeScoreWeights(peerIdStr, pstats, params, peerIPs, topicStrToLabel);\n            for (const [topic, swPeerTopic] of swPeer.byTopic) {\n                let swTopic = sw.byTopic.get(topic);\n                if (swTopic == null) {\n                    swTopic = {\n                        p1w: [],\n                        p2w: [],\n                        p3w: [],\n                        p3bw: [],\n                        p4w: []\n                    };\n                    sw.byTopic.set(topic, swTopic);\n                }\n                swTopic.p1w.push(swPeerTopic.p1w);\n                swTopic.p2w.push(swPeerTopic.p2w);\n                swTopic.p3w.push(swPeerTopic.p3w);\n                swTopic.p3bw.push(swPeerTopic.p3bw);\n                swTopic.p4w.push(swPeerTopic.p4w);\n            }\n            sw.p5w.push(swPeer.p5w);\n            sw.p6w.push(swPeer.p6w);\n            sw.p7w.push(swPeer.p7w);\n            sw.score.push(swPeer.score);\n        }\n        else {\n            sw.p5w.push(0);\n            sw.p6w.push(0);\n            sw.p7w.push(0);\n            sw.score.push(0);\n        }\n    }\n    return sw;\n}\n//# sourceMappingURL=scoreMetrics.js.map","import { pipe } from '@libp2p/utils';\nimport { encode, decode } from 'it-length-prefixed';\nexport class OutboundStream {\n    rawStream;\n    constructor(rawStream, errCallback, opts) {\n        this.rawStream = rawStream;\n        if (opts.maxBufferSize != null) {\n            rawStream.maxWriteBufferLength = opts.maxBufferSize;\n        }\n        rawStream.addEventListener('close', (evt) => {\n            if (evt.error != null) {\n                errCallback(evt.error);\n            }\n        });\n    }\n    get protocol() {\n        return this.rawStream.protocol;\n    }\n    async push(data) {\n        return this.pushPrefixed(encode.single(data));\n    }\n    /**\n     * Same to push() but this is prefixed data so no need to encode length prefixed again\n     */\n    pushPrefixed(data) {\n        // TODO: backpressure\n        this.rawStream.send(data);\n    }\n    async close(options) {\n        await this.rawStream.close(options)\n            .catch(err => {\n            this.rawStream.abort(err);\n        });\n    }\n}\nexport class InboundStream {\n    source;\n    rawStream;\n    closeController;\n    constructor(rawStream, opts = {}) {\n        this.rawStream = rawStream;\n        this.closeController = new AbortController();\n        this.closeController.signal.addEventListener('abort', () => {\n            rawStream.close()\n                .catch(err => {\n                rawStream.abort(err);\n            });\n        });\n        this.source = pipe(this.rawStream, (source) => decode(source, opts));\n    }\n    async close() {\n        this.closeController.abort();\n    }\n}\n//# sourceMappingURL=stream.js.map","import { RejectReason } from './types.js';\n/**\n * IWantTracer is an internal tracer that tracks IWANT requests in order to penalize\n * peers who don't follow up on IWANT requests after an IHAVE advertisement.\n * The tracking of promises is probabilistic to avoid using too much memory.\n *\n * Note: Do not confuse these 'promises' with JS Promise objects.\n * These 'promises' are merely expectations of a peer's behavior.\n */\nexport class IWantTracer {\n    gossipsubIWantFollowupMs;\n    msgIdToStrFn;\n    metrics;\n    /**\n     * Promises to deliver a message\n     * Map per message id, per peer, promise expiration time\n     */\n    promises = new Map();\n    /**\n     * First request time by msgId. Used for metrics to track expire times.\n     * Necessary to know if peers are actually breaking promises or simply sending them a bit later\n     */\n    requestMsByMsg = new Map();\n    requestMsByMsgExpire;\n    constructor(gossipsubIWantFollowupMs, msgIdToStrFn, metrics) {\n        this.gossipsubIWantFollowupMs = gossipsubIWantFollowupMs;\n        this.msgIdToStrFn = msgIdToStrFn;\n        this.metrics = metrics;\n        this.requestMsByMsgExpire = 10 * gossipsubIWantFollowupMs;\n    }\n    get size() {\n        return this.promises.size;\n    }\n    get requestMsByMsgSize() {\n        return this.requestMsByMsg.size;\n    }\n    /**\n     * Track a promise to deliver a message from a list of msgIds we are requesting\n     */\n    addPromise(from, msgIds) {\n        // pick msgId randomly from the list\n        const ix = Math.floor(Math.random() * msgIds.length);\n        const msgId = msgIds[ix];\n        const msgIdStr = this.msgIdToStrFn(msgId);\n        let expireByPeer = this.promises.get(msgIdStr);\n        if (expireByPeer == null) {\n            expireByPeer = new Map();\n            this.promises.set(msgIdStr, expireByPeer);\n        }\n        const now = Date.now();\n        // If a promise for this message id and peer already exists we don't update the expiry\n        if (!expireByPeer.has(from)) {\n            expireByPeer.set(from, now + this.gossipsubIWantFollowupMs);\n            if (this.metrics != null) {\n                this.metrics.iwantPromiseStarted.inc(1);\n                if (!this.requestMsByMsg.has(msgIdStr)) {\n                    this.requestMsByMsg.set(msgIdStr, now);\n                }\n            }\n        }\n    }\n    /**\n     * Returns the number of broken promises for each peer who didn't follow up on an IWANT request.\n     *\n     * This should be called not too often relative to the expire times, since it iterates over the whole data.\n     */\n    getBrokenPromises() {\n        const now = Date.now();\n        const result = new Map();\n        let brokenPromises = 0;\n        this.promises.forEach((expireByPeer, msgId) => {\n            expireByPeer.forEach((expire, p) => {\n                // the promise has been broken\n                if (expire < now) {\n                    // add 1 to result\n                    result.set(p, (result.get(p) ?? 0) + 1);\n                    // delete from tracked promises\n                    expireByPeer.delete(p);\n                    // for metrics\n                    brokenPromises++;\n                }\n            });\n            // clean up empty promises for a msgId\n            if (expireByPeer.size === 0) {\n                this.promises.delete(msgId);\n            }\n        });\n        this.metrics?.iwantPromiseBroken.inc(brokenPromises);\n        return result;\n    }\n    /**\n     * Someone delivered a message, stop tracking promises for it\n     */\n    deliverMessage(msgIdStr, isDuplicate = false) {\n        this.trackMessage(msgIdStr);\n        const expireByPeer = this.promises.get(msgIdStr);\n        // Expired promise, check requestMsByMsg\n        if (expireByPeer != null) {\n            this.promises.delete(msgIdStr);\n            if (this.metrics != null) {\n                this.metrics.iwantPromiseResolved.inc(1);\n                if (isDuplicate) {\n                    this.metrics.iwantPromiseResolvedFromDuplicate.inc(1);\n                }\n                this.metrics.iwantPromiseResolvedPeers.inc(expireByPeer.size);\n            }\n        }\n    }\n    /**\n     * A message got rejected, so we can stop tracking promises and let the score penalty apply from invalid message delivery,\n     * unless its an obviously invalid message.\n     */\n    rejectMessage(msgIdStr, reason) {\n        this.trackMessage(msgIdStr);\n        // A message got rejected, so we can stop tracking promises and let the score penalty apply.\n        // With the expection of obvious invalid messages\n        switch (reason) {\n            case RejectReason.Error:\n                return;\n            default:\n                break;\n        }\n        this.promises.delete(msgIdStr);\n    }\n    clear() {\n        this.promises.clear();\n    }\n    prune() {\n        const maxMs = Date.now() - this.requestMsByMsgExpire;\n        let count = 0;\n        for (const [k, v] of this.requestMsByMsg.entries()) {\n            if (v < maxMs) {\n                // messages that stay too long in the requestMsByMsg map, delete\n                this.requestMsByMsg.delete(k);\n                count++;\n            }\n            else {\n                // recent messages, keep them\n                // sort by insertion order\n                break;\n            }\n        }\n        this.metrics?.iwantMessagePruned.inc(count);\n    }\n    trackMessage(msgIdStr) {\n        if (this.metrics != null) {\n            const requestMs = this.requestMsByMsg.get(msgIdStr);\n            if (requestMs !== undefined) {\n                this.metrics.iwantPromiseDeliveryTime.observe((Date.now() - requestMs) / 1000);\n                this.requestMsByMsg.delete(msgIdStr);\n            }\n        }\n    }\n}\n//# sourceMappingURL=tracer.js.map","import { randomBytes } from '@libp2p/crypto';\nimport { publicKeyFromProtobuf } from '@libp2p/crypto/keys';\nimport { peerIdFromMultihash } from '@libp2p/peer-id';\nimport * as Digest from 'multiformats/hashes/digest';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { StrictSign, StrictNoSign } from \"../index.js\";\nimport { RPC } from '../message/rpc.js';\nimport { PublishConfigType, ValidateError } from '../types.js';\nexport const SignPrefix = uint8ArrayFromString('libp2p-pubsub:');\nexport async function buildRawMessage(publishConfig, topic, originalData, transformedData) {\n    switch (publishConfig.type) {\n        case PublishConfigType.Signing: {\n            const rpcMsg = {\n                from: publishConfig.author.toMultihash().bytes,\n                data: transformedData,\n                seqno: randomBytes(8),\n                topic,\n                signature: undefined, // Exclude signature field for signing\n                key: undefined // Exclude key field for signing\n            };\n            // Get the message in bytes, and prepend with the pubsub prefix\n            // the signature is over the bytes \"libp2p-pubsub:<protobuf-message>\"\n            const bytes = uint8ArrayConcat([SignPrefix, RPC.Message.encode(rpcMsg)]);\n            rpcMsg.signature = await publishConfig.privateKey.sign(bytes);\n            rpcMsg.key = publishConfig.key;\n            const msg = {\n                type: 'signed',\n                from: publishConfig.author,\n                data: originalData,\n                sequenceNumber: BigInt(`0x${uint8ArrayToString(rpcMsg.seqno ?? new Uint8Array(0), 'base16')}`),\n                topic,\n                signature: rpcMsg.signature,\n                key: publicKeyFromProtobuf(rpcMsg.key)\n            };\n            return {\n                raw: rpcMsg,\n                msg\n            };\n        }\n        case PublishConfigType.Anonymous: {\n            return {\n                raw: {\n                    from: undefined,\n                    data: transformedData,\n                    seqno: undefined,\n                    topic,\n                    signature: undefined,\n                    key: undefined\n                },\n                msg: {\n                    type: 'unsigned',\n                    data: originalData,\n                    topic\n                }\n            };\n        }\n        default:\n            throw new Error('Unreachable');\n    }\n}\nexport async function validateToRawMessage(signaturePolicy, msg) {\n    // If strict-sign, verify all\n    // If anonymous (no-sign), ensure no preven\n    switch (signaturePolicy) {\n        case StrictNoSign:\n            if (msg.signature != null) {\n                return { valid: false, error: ValidateError.SignaturePresent };\n            }\n            if (msg.seqno != null) {\n                return { valid: false, error: ValidateError.SeqnoPresent };\n            }\n            if (msg.key != null) {\n                return { valid: false, error: ValidateError.FromPresent };\n            }\n            return { valid: true, message: { type: 'unsigned', topic: msg.topic, data: msg.data ?? new Uint8Array(0) } };\n        case StrictSign: {\n            // Verify seqno\n            if (msg.seqno == null) {\n                return { valid: false, error: ValidateError.InvalidSeqno };\n            }\n            if (msg.seqno.length !== 8) {\n                return { valid: false, error: ValidateError.InvalidSeqno };\n            }\n            if (msg.signature == null) {\n                return { valid: false, error: ValidateError.InvalidSignature };\n            }\n            if (msg.from == null) {\n                return { valid: false, error: ValidateError.InvalidPeerId };\n            }\n            let fromPeerId;\n            try {\n                // TODO: Fix PeerId types\n                fromPeerId = peerIdFromMultihash(Digest.decode(msg.from));\n            }\n            catch (e) {\n                return { valid: false, error: ValidateError.InvalidPeerId };\n            }\n            // - check from defined\n            // - transform source to PeerId\n            // - parse signature\n            // - get .key, else from source\n            // - check key == source if present\n            // - verify sig\n            let publicKey;\n            if (msg.key != null) {\n                publicKey = publicKeyFromProtobuf(msg.key);\n                // TODO: Should `fromPeerId.pubKey` be optional?\n                if (fromPeerId.publicKey !== undefined && !publicKey.equals(fromPeerId.publicKey)) {\n                    return { valid: false, error: ValidateError.InvalidPeerId };\n                }\n            }\n            else {\n                if (fromPeerId.publicKey == null) {\n                    return { valid: false, error: ValidateError.InvalidPeerId };\n                }\n                publicKey = fromPeerId.publicKey;\n            }\n            const rpcMsgPreSign = {\n                from: msg.from,\n                data: msg.data,\n                seqno: msg.seqno,\n                topic: msg.topic,\n                signature: undefined, // Exclude signature field for signing\n                key: undefined // Exclude key field for signing\n            };\n            // Get the message in bytes, and prepend with the pubsub prefix\n            // the signature is over the bytes \"libp2p-pubsub:<protobuf-message>\"\n            const bytes = uint8ArrayConcat([SignPrefix, RPC.Message.encode(rpcMsgPreSign)]);\n            if (!(await publicKey.verify(bytes, msg.signature))) {\n                return { valid: false, error: ValidateError.InvalidSignature };\n            }\n            return {\n                valid: true,\n                message: {\n                    type: 'signed',\n                    from: fromPeerId,\n                    data: msg.data ?? new Uint8Array(0),\n                    sequenceNumber: BigInt(`0x${uint8ArrayToString(msg.seqno, 'base16')}`),\n                    topic: msg.topic,\n                    signature: msg.signature,\n                    key: msg.key != null ? publicKeyFromProtobuf(msg.key) : publicKey\n                }\n            };\n        }\n        default:\n            throw new Error('Unreachable');\n    }\n}\n//# sourceMappingURL=buildRawMessage.js.map","/**\n * Create a gossipsub RPC object\n */\nexport function createGossipRpc(messages = [], control) {\n    return {\n        subscriptions: [],\n        messages,\n        control: control !== undefined\n            ? {\n                graft: control.graft ?? [],\n                prune: control.prune ?? [],\n                ihave: control.ihave ?? [],\n                iwant: control.iwant ?? [],\n                idontwant: control.idontwant ?? []\n            }\n            : undefined\n    };\n}\nexport function ensureControl(rpc) {\n    if (rpc.control === undefined) {\n        rpc.control = {\n            graft: [],\n            prune: [],\n            ihave: [],\n            iwant: [],\n            idontwant: []\n        };\n    }\n    return rpc;\n}\n//# sourceMappingURL=create-gossip-rpc.js.map","/**\n * Pseudo-randomly shuffles an array\n *\n * Mutates the input array\n */\nexport function shuffle(arr) {\n    if (arr.length <= 1) {\n        return arr;\n    }\n    const randInt = () => {\n        return Math.floor(Math.random() * Math.floor(arr.length));\n    };\n    for (let i = 0; i < arr.length; i++) {\n        const j = randInt();\n        const tmp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = tmp;\n    }\n    return arr;\n}\n//# sourceMappingURL=shuffle.js.map","import { toString } from 'uint8arrays/to-string';\n/**\n * Browser friendly function to convert Uint8Array message id to base64 string.\n */\nexport function messageIdToString(msgId) {\n    return toString(msgId, 'base64');\n}\n//# sourceMappingURL=messageIdToString.js.map","import { publicKeyToProtobuf } from '@libp2p/crypto/keys';\nimport { StrictSign, StrictNoSign } from \"../index.js\";\nimport { PublishConfigType } from '../types.js';\n/**\n * Prepare a PublishConfig object from a PeerId.\n */\nexport function getPublishConfigFromPeerId(signaturePolicy, peerId, privateKey) {\n    switch (signaturePolicy) {\n        case StrictSign: {\n            return {\n                type: PublishConfigType.Signing,\n                author: peerId,\n                key: publicKeyToProtobuf(privateKey.publicKey),\n                privateKey\n            };\n        }\n        case StrictNoSign:\n            return {\n                type: PublishConfigType.Anonymous\n            };\n        default:\n            throw new Error(`Unknown signature policy \"${signaturePolicy}\"`);\n    }\n}\n//# sourceMappingURL=publishConfig.js.map","import { randomBytes } from '@libp2p/crypto';\nimport { publicKeyFromProtobuf, publicKeyToProtobuf } from '@libp2p/crypto/keys';\nimport { InvalidMessageError } from '@libp2p/interface';\nimport { peerIdFromMultihash, peerIdFromPublicKey } from '@libp2p/peer-id';\nimport * as Digest from 'multiformats/hashes/digest';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\n/**\n * Generate a random sequence number\n */\nexport function randomSeqno() {\n    return BigInt(`0x${uint8ArrayToString(randomBytes(8), 'base16')}`);\n}\n/**\n * Generate a message id, based on the `key` and `seqno`\n */\nexport const msgId = (key, seqno) => {\n    const seqnoBytes = uint8ArrayFromString(seqno.toString(16).padStart(16, '0'), 'base16');\n    const keyBytes = publicKeyToProtobuf(key);\n    const msgId = new Uint8Array(keyBytes.byteLength + seqnoBytes.length);\n    msgId.set(keyBytes, 0);\n    msgId.set(seqnoBytes, keyBytes.byteLength);\n    return msgId;\n};\n/**\n * Generate a message id, based on message `data`\n */\nexport const noSignMsgId = (data) => {\n    return sha256.encode(data);\n};\n/**\n * Check if any member of the first set is also a member\n * of the second set\n */\nexport const anyMatch = (a, b) => {\n    let bHas;\n    if (Array.isArray(b)) {\n        bHas = (val) => b.includes(val);\n    }\n    else {\n        bHas = (val) => b.has(val);\n    }\n    for (const val of a) {\n        if (bHas(val)) {\n            return true;\n        }\n    }\n    return false;\n};\n/**\n * Make everything an array\n */\nexport const ensureArray = function (maybeArray) {\n    if (!Array.isArray(maybeArray)) {\n        return [maybeArray];\n    }\n    return maybeArray;\n};\nconst isSigned = async (message) => {\n    if ((message.sequenceNumber == null) || (message.from == null) || (message.signature == null)) {\n        return false;\n    }\n    // if a public key is present in the `from` field, the message should be signed\n    const fromID = peerIdFromMultihash(Digest.decode(message.from));\n    if (fromID.publicKey != null) {\n        return true;\n    }\n    if (message.key != null) {\n        const signingKey = message.key;\n        const signingID = peerIdFromPublicKey(publicKeyFromProtobuf(signingKey));\n        return signingID.equals(fromID);\n    }\n    return false;\n};\nexport const toMessage = async (message) => {\n    if (message.from == null) {\n        throw new InvalidMessageError('RPC message was missing from');\n    }\n    if (!await isSigned(message)) {\n        return {\n            type: 'unsigned',\n            topic: message.topic ?? '',\n            data: message.data ?? new Uint8Array(0)\n        };\n    }\n    const from = peerIdFromMultihash(Digest.decode(message.from));\n    const key = message.key ?? from.publicKey;\n    if (key == null) {\n        throw new InvalidMessageError('RPC message was missing public key');\n    }\n    const msg = {\n        type: 'signed',\n        from,\n        topic: message.topic ?? '',\n        sequenceNumber: bigIntFromBytes(message.sequenceNumber ?? new Uint8Array(0)),\n        data: message.data ?? new Uint8Array(0),\n        signature: message.signature ?? new Uint8Array(0),\n        key: key instanceof Uint8Array ? publicKeyFromProtobuf(key) : key\n    };\n    return msg;\n};\nexport const toRpcMessage = (message) => {\n    if (message.type === 'signed') {\n        return {\n            from: message.from.toMultihash().bytes,\n            data: message.data,\n            sequenceNumber: bigIntToBytes(message.sequenceNumber),\n            topic: message.topic,\n            signature: message.signature,\n            key: message.key ? publicKeyToProtobuf(message.key) : undefined\n        };\n    }\n    return {\n        data: message.data,\n        topic: message.topic\n    };\n};\nexport const bigIntToBytes = (num) => {\n    let str = num.toString(16);\n    if (str.length % 2 !== 0) {\n        str = `0${str}`;\n    }\n    return uint8ArrayFromString(str, 'base16');\n};\nexport const bigIntFromBytes = (num) => {\n    return BigInt(`0x${uint8ArrayToString(num, 'base16')}`);\n};\n//# sourceMappingURL=utils.js.map","import { msgId } from '@libp2p/pubsub/utils';\nimport { sha256 } from 'multiformats/hashes/sha2';\n/**\n * Generate a message id, based on the `key` and `seqno`\n */\nexport function msgIdFnStrictSign(msg) {\n    if (msg.type !== 'signed') {\n        throw new Error('expected signed message type');\n    }\n    // Should never happen\n    if (msg.sequenceNumber == null) {\n        throw Error('missing seqno field');\n    }\n    // TODO: Should use .from here or key?\n    return msgId(msg.from.publicKey ?? msg.key, msg.sequenceNumber);\n}\n/**\n * Generate a message id, based on message `data`\n */\nexport async function msgIdFnStrictNoSign(msg) {\n    return sha256.encode(msg.data);\n}\n//# sourceMappingURL=msgIdFn.js.map","import { getNetConfig, isNetworkAddress } from '@libp2p/utils';\nexport function multiaddrToIPStr(multiaddr) {\n    if (isNetworkAddress(multiaddr)) {\n        const config = getNetConfig(multiaddr);\n        switch (config.type) {\n            case 'ip4':\n            case 'ip6':\n                return config.host;\n            default:\n                break;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=multiaddr.js.map","/**\n * This is similar to https://github.com/daviddias/time-cache/blob/master/src/index.js\n * for our own need, we don't use lodash throttle to improve performance.\n * This gives 4x - 5x performance gain compared to npm TimeCache\n */\nexport class SimpleTimeCache {\n    entries = new Map();\n    validityMs;\n    constructor(opts) {\n        this.validityMs = opts.validityMs;\n        // allow negative validityMs so that this does not cache anything, spec test compliance.spec.js\n        // sends duplicate messages and expect peer to receive all. Application likely uses positive validityMs\n    }\n    get size() {\n        return this.entries.size;\n    }\n    /** Returns true if there was a key collision and the entry is dropped */\n    put(key, value) {\n        if (this.entries.has(key)) {\n            // Key collisions break insertion order in the entries cache, which break prune logic.\n            // prune relies on each iterated entry to have strictly ascending validUntilMs, else it\n            // won't prune expired entries and SimpleTimeCache will grow unexpectedly.\n            // As of Oct 2022 NodeJS v16, inserting the same key twice with different value does not\n            // change the key position in the iterator stream. A unit test asserts this behaviour.\n            return true;\n        }\n        this.entries.set(key, { value, validUntilMs: Date.now() + this.validityMs });\n        return false;\n    }\n    prune() {\n        const now = Date.now();\n        for (const [k, v] of this.entries.entries()) {\n            if (v.validUntilMs < now) {\n                this.entries.delete(k);\n            }\n            else {\n                // Entries are inserted with strictly ascending validUntilMs.\n                // Stop early to save iterations\n                break;\n            }\n        }\n    }\n    has(key) {\n        return this.entries.has(key);\n    }\n    get(key) {\n        const value = this.entries.get(key);\n        return (value != null) && value.validUntilMs >= Date.now() ? value.value : undefined;\n    }\n    clear() {\n        this.entries.clear();\n    }\n}\n//# sourceMappingURL=time-cache.js.map","import { TypedEventEmitter, serviceCapabilities, serviceDependencies } from '@libp2p/interface';\nimport { peerIdFromMultihash, peerIdFromString } from '@libp2p/peer-id';\nimport { encode } from 'it-length-prefixed';\nimport { pipe } from 'it-pipe';\nimport { pushable } from 'it-pushable';\nimport * as Digest from 'multiformats/hashes/digest';\nimport * as constants from './constants.js';\nimport { ACCEPT_FROM_WHITELIST_DURATION_MS, ACCEPT_FROM_WHITELIST_MAX_MESSAGES, ACCEPT_FROM_WHITELIST_THRESHOLD_SCORE, BACKOFF_SLACK } from './constants.js';\nimport { StrictNoSign, StrictSign, TopicValidatorResult } from \"./index.js\";\nimport { defaultDecodeRpcLimits } from './message/decodeRpc.js';\nimport { RPC } from './message/rpc.js';\nimport { MessageCache } from './message-cache.js';\nimport { ChurnReason, getMetrics, IHaveIgnoreReason, InclusionReason, ScorePenalty } from './metrics.js';\nimport { PeerScore, createPeerScoreParams, createPeerScoreThresholds } from './score/index.js';\nimport { computeAllPeersScoreWeights } from './score/scoreMetrics.js';\nimport { InboundStream, OutboundStream } from './stream.js';\nimport { IWantTracer } from './tracer.js';\nimport { ValidateError, MessageStatus, RejectReason, rejectReasonFromAcceptance } from './types.js';\nimport { buildRawMessage, validateToRawMessage } from './utils/buildRawMessage.js';\nimport { createGossipRpc, ensureControl } from './utils/create-gossip-rpc.js';\nimport { shuffle, messageIdToString } from './utils/index.js';\nimport { msgIdFnStrictNoSign, msgIdFnStrictSign } from './utils/msgIdFn.js';\nimport { multiaddrToIPStr } from './utils/multiaddr.js';\nimport { getPublishConfigFromPeerId } from './utils/publishConfig.js';\nimport { removeFirstNItemsFromSet, removeItemsFromSet } from './utils/set.js';\nimport { SimpleTimeCache } from './utils/time-cache.js';\nvar GossipStatusCode;\n(function (GossipStatusCode) {\n    GossipStatusCode[GossipStatusCode[\"started\"] = 0] = \"started\";\n    GossipStatusCode[GossipStatusCode[\"stopped\"] = 1] = \"stopped\";\n})(GossipStatusCode || (GossipStatusCode = {}));\nexport class GossipSub extends TypedEventEmitter {\n    /**\n     * The signature policy to follow by default\n     */\n    globalSignaturePolicy;\n    protocols = [constants.GossipsubIDv12, constants.GossipsubIDv11, constants.GossipsubIDv10];\n    publishConfig;\n    dataTransform;\n    // State\n    peers = new Map();\n    streamsInbound = new Map();\n    streamsOutbound = new Map();\n    /** Ensures outbound streams are created sequentially */\n    outboundInflightQueue = pushable({ objectMode: true });\n    /** Direct peers */\n    direct = new Set();\n    /** Floodsub peers */\n    floodsubPeers = new Set();\n    /** Cache of seen messages */\n    seenCache;\n    /**\n     * Map of peer id and AcceptRequestWhileListEntry\n     */\n    acceptFromWhitelist = new Map();\n    /**\n     * Map of topics to which peers are subscribed to\n     */\n    topics = new Map();\n    /**\n     * List of our subscriptions\n     */\n    subscriptions = new Set();\n    /**\n     * Map of topic meshes\n     * topic => peer id set\n     */\n    mesh = new Map();\n    /**\n     * Map of topics to set of peers. These mesh peers are the ones to which we are publishing without a topic membership\n     * topic => peer id set\n     */\n    fanout = new Map();\n    /**\n     * Map of last publish time for fanout topics\n     * topic => last publish time\n     */\n    fanoutLastpub = new Map();\n    /**\n     * Map of pending messages to gossip\n     * peer id => control messages\n     */\n    gossip = new Map();\n    /**\n     * Map of control messages\n     * peer id => control message\n     */\n    control = new Map();\n    /**\n     * Number of IHAVEs received from peer in the last heartbeat\n     */\n    peerhave = new Map();\n    /** Number of messages we have asked from peer in the last heartbeat */\n    iasked = new Map();\n    /** Prune backoff map */\n    backoff = new Map();\n    /**\n     * Connection direction cache, marks peers with outbound connections\n     * peer id => direction\n     */\n    outbound = new Map();\n    msgIdFn;\n    /**\n     * A fast message id function used for internal message de-duplication\n     */\n    fastMsgIdFn;\n    msgIdToStrFn;\n    /** Maps fast message-id to canonical message-id */\n    fastMsgIdCache;\n    /**\n     * Short term cache for published message ids. This is used for penalizing peers sending\n     * our own messages back if the messages are anonymous or use a random author.\n     */\n    publishedMessageIds;\n    /**\n     * A message cache that contains the messages for last few heartbeat ticks\n     */\n    mcache;\n    /** Peer score tracking */\n    score;\n    /**\n     * Custom validator function per topic.\n     * Must return or resolve quickly (< 100ms) to prevent causing penalties for late messages.\n     * If you need to apply validation that may require longer times use `asyncValidation` option and callback the\n     * validation result through `Gossipsub.reportValidationResult`\n     */\n    topicValidators = new Map();\n    /**\n     * Make this protected so child class may want to redirect to its own log.\n     */\n    log;\n    /**\n     * Number of heartbeats since the beginning of time\n     * This allows us to amortize some resource cleanup -- eg: backoff cleanup\n     */\n    heartbeatTicks = 0;\n    /**\n     * Tracks IHAVE/IWANT promises broken by peers\n     */\n    gossipTracer;\n    /**\n     * Tracks IDONTWANT messages received by peers in the current heartbeat\n     */\n    idontwantCounts = new Map();\n    /**\n     * Tracks IDONTWANT messages received by peers and the heartbeat they were received in\n     *\n     * idontwants are stored for `mcacheLength` heartbeats before being pruned,\n     * so this map is bounded by peerCount * idontwantMaxMessages * mcacheLength\n     */\n    idontwants = new Map();\n    components;\n    directPeerInitial = null;\n    static multicodec = constants.GossipsubIDv12;\n    // Options\n    opts;\n    decodeRpcLimits;\n    metrics;\n    status = { code: GossipStatusCode.stopped };\n    maxInboundStreams;\n    maxOutboundStreams;\n    runOnLimitedConnection;\n    allowedTopics;\n    heartbeatTimer = null;\n    constructor(components, options = {}) {\n        super();\n        const opts = {\n            fallbackToFloodsub: true,\n            floodPublish: true,\n            batchPublish: false,\n            tagMeshPeers: true,\n            doPX: false,\n            directPeers: [],\n            D: constants.GossipsubD,\n            Dlo: constants.GossipsubDlo,\n            Dhi: constants.GossipsubDhi,\n            Dscore: constants.GossipsubDscore,\n            Dout: constants.GossipsubDout,\n            Dlazy: constants.GossipsubDlazy,\n            heartbeatInterval: constants.GossipsubHeartbeatInterval,\n            fanoutTTL: constants.GossipsubFanoutTTL,\n            mcacheLength: constants.GossipsubHistoryLength,\n            mcacheGossip: constants.GossipsubHistoryGossip,\n            seenTTL: constants.GossipsubSeenTTL,\n            gossipsubIWantFollowupMs: constants.GossipsubIWantFollowupTime,\n            prunePeers: constants.GossipsubPrunePeers,\n            pruneBackoff: constants.GossipsubPruneBackoff,\n            unsubcribeBackoff: constants.GossipsubUnsubscribeBackoff,\n            graftFloodThreshold: constants.GossipsubGraftFloodThreshold,\n            opportunisticGraftPeers: constants.GossipsubOpportunisticGraftPeers,\n            opportunisticGraftTicks: constants.GossipsubOpportunisticGraftTicks,\n            directConnectTicks: constants.GossipsubDirectConnectTicks,\n            gossipFactor: constants.GossipsubGossipFactor,\n            idontwantMinDataSize: constants.GossipsubIdontwantMinDataSize,\n            idontwantMaxMessages: constants.GossipsubIdontwantMaxMessages,\n            ...options,\n            scoreParams: createPeerScoreParams(options.scoreParams),\n            scoreThresholds: createPeerScoreThresholds(options.scoreThresholds)\n        };\n        this.components = components;\n        this.decodeRpcLimits = opts.decodeRpcLimits ?? defaultDecodeRpcLimits;\n        this.globalSignaturePolicy = opts.globalSignaturePolicy ?? StrictSign;\n        // Also wants to get notified of peers connected using floodsub\n        if (opts.fallbackToFloodsub) {\n            this.protocols.push(constants.FloodsubID);\n        }\n        // From pubsub\n        this.log = components.logger.forComponent(opts.debugName ?? 'libp2p:gossipsub');\n        // Gossipsub\n        this.opts = opts;\n        this.direct = new Set(opts.directPeers.map((p) => p.id.toString()));\n        this.seenCache = new SimpleTimeCache({ validityMs: opts.seenTTL });\n        this.publishedMessageIds = new SimpleTimeCache({ validityMs: opts.seenTTL });\n        if (options.msgIdFn != null) {\n            // Use custom function\n            this.msgIdFn = options.msgIdFn;\n        }\n        else {\n            switch (this.globalSignaturePolicy) {\n                case StrictSign:\n                    this.msgIdFn = msgIdFnStrictSign;\n                    break;\n                case StrictNoSign:\n                    this.msgIdFn = msgIdFnStrictNoSign;\n                    break;\n                default:\n                    throw new Error(`Invalid globalSignaturePolicy: ${this.globalSignaturePolicy}`);\n            }\n        }\n        if (options.fastMsgIdFn != null) {\n            this.fastMsgIdFn = options.fastMsgIdFn;\n            this.fastMsgIdCache = new SimpleTimeCache({ validityMs: opts.seenTTL });\n        }\n        // By default, gossipsub only provide a browser friendly function to convert Uint8Array message id to string.\n        this.msgIdToStrFn = options.msgIdToStrFn ?? messageIdToString;\n        this.mcache = options.messageCache ?? new MessageCache(opts.mcacheGossip, opts.mcacheLength, this.msgIdToStrFn);\n        if (options.dataTransform != null) {\n            this.dataTransform = options.dataTransform;\n        }\n        if (options.metricsRegister != null) {\n            if (options.metricsTopicStrToLabel == null) {\n                throw Error('Must set metricsTopicStrToLabel with metrics');\n            }\n            // in theory, each topic has its own meshMessageDeliveriesWindow param\n            // however in lodestar, we configure it mostly the same so just pick the max of positive ones\n            // (some topics have meshMessageDeliveriesWindow as 0)\n            const maxMeshMessageDeliveriesWindowMs = Math.max(...Object.values(opts.scoreParams.topics).map((topicParam) => topicParam.meshMessageDeliveriesWindow), constants.DEFAULT_METRIC_MESH_MESSAGE_DELIVERIES_WINDOWS);\n            const metrics = getMetrics(options.metricsRegister, options.metricsTopicStrToLabel, {\n                gossipPromiseExpireSec: this.opts.gossipsubIWantFollowupMs / 1000,\n                behaviourPenaltyThreshold: opts.scoreParams.behaviourPenaltyThreshold,\n                maxMeshMessageDeliveriesWindowSec: maxMeshMessageDeliveriesWindowMs / 1000\n            });\n            metrics.mcacheSize.addCollect(() => { this.onScrapeMetrics(metrics); });\n            for (const protocol of this.protocols) {\n                metrics.protocolsEnabled.set({ protocol }, 1);\n            }\n            this.metrics = metrics;\n        }\n        else {\n            this.metrics = null;\n        }\n        this.gossipTracer = new IWantTracer(this.opts.gossipsubIWantFollowupMs, this.msgIdToStrFn, this.metrics);\n        /**\n         * libp2p\n         */\n        this.score = new PeerScore(this.opts.scoreParams, this.metrics, this.components.logger, {\n            scoreCacheValidityMs: opts.heartbeatInterval\n        });\n        this.maxInboundStreams = options.maxInboundStreams;\n        this.maxOutboundStreams = options.maxOutboundStreams;\n        this.runOnLimitedConnection = options.runOnLimitedConnection;\n        this.allowedTopics = (opts.allowedTopics != null) ? new Set(opts.allowedTopics) : null;\n    }\n    [Symbol.toStringTag] = '@chainsafe/libp2p-gossipsub';\n    [serviceCapabilities] = [\n        '@libp2p/pubsub'\n    ];\n    [serviceDependencies] = [\n        '@libp2p/identify'\n    ];\n    getPeers() {\n        return [...this.peers.values()];\n    }\n    isStarted() {\n        return this.status.code === GossipStatusCode.started;\n    }\n    // LIFECYCLE METHODS\n    /**\n     * Mounts the gossipsub protocol onto the libp2p node and sends our\n     * our subscriptions to every peer connected\n     */\n    async start() {\n        // From pubsub\n        if (this.isStarted()) {\n            return;\n        }\n        this.log('starting');\n        this.publishConfig = getPublishConfigFromPeerId(this.globalSignaturePolicy, this.components.peerId, this.components.privateKey);\n        // Create the outbound inflight queue\n        // This ensures that outbound stream creation happens sequentially\n        this.outboundInflightQueue = pushable({ objectMode: true });\n        pipe(this.outboundInflightQueue, async (source) => {\n            for await (const { peerId, connection } of source) {\n                await this.createOutboundStream(peerId, connection);\n            }\n        }).catch((e) => { this.log.error('outbound inflight queue error', e); });\n        // set direct peer addresses in the address book\n        await Promise.all(this.opts.directPeers.map(async (p) => {\n            await this.components.peerStore.merge(p.id, {\n                multiaddrs: p.addrs\n            });\n        }));\n        const registrar = this.components.registrar;\n        // Incoming streams\n        // Called after a peer dials us\n        await Promise.all(this.protocols.map(async (protocol) => registrar.handle(protocol, this.onIncomingStream.bind(this), {\n            maxInboundStreams: this.maxInboundStreams,\n            maxOutboundStreams: this.maxOutboundStreams,\n            runOnLimitedConnection: this.runOnLimitedConnection\n        })));\n        // # How does Gossipsub interact with libp2p? Rough guide from Mar 2022\n        //\n        // ## Setup:\n        // Gossipsub requests libp2p to callback, TBD\n        //\n        // `this.libp2p.handle()` registers a handler for `/meshsub/1.1.0` and other Gossipsub protocols\n        // The handler callback is registered in libp2p Upgrader.protocols map.\n        //\n        // Upgrader receives an inbound connection from some transport and (`Upgrader.upgradeInbound`):\n        // - Adds encryption (NOISE in our case)\n        // - Multiplex stream\n        // - Create a muxer and register that for each new stream call Upgrader.protocols handler\n        //\n        // ## Topology\n        // - new instance of Topology (unlinked to libp2p) with handlers\n        // - registar.register(topology)\n        // register protocol with topology\n        // Topology callbacks called on connection manager changes\n        const topology = {\n            onConnect: this.onPeerConnected.bind(this),\n            onDisconnect: this.onPeerDisconnected.bind(this),\n            notifyOnLimitedConnection: this.runOnLimitedConnection\n        };\n        const registrarTopologyIds = await Promise.all(this.protocols.map(async (protocol) => registrar.register(protocol, topology)));\n        // Schedule to start heartbeat after `GossipsubHeartbeatInitialDelay`\n        const heartbeatTimeout = setTimeout(this.runHeartbeat, constants.GossipsubHeartbeatInitialDelay);\n        // Then, run heartbeat every `heartbeatInterval` offset by `GossipsubHeartbeatInitialDelay`\n        this.status = {\n            code: GossipStatusCode.started,\n            registrarTopologyIds,\n            heartbeatTimeout,\n            hearbeatStartMs: Date.now() + constants.GossipsubHeartbeatInitialDelay\n        };\n        this.score.start();\n        // connect to direct peers\n        this.directPeerInitial = setTimeout(() => {\n            Promise.resolve()\n                .then(async () => {\n                await Promise.all(Array.from(this.direct).map(async (id) => this.connect(id)));\n            })\n                .catch((err) => {\n                this.log(err);\n            });\n        }, constants.GossipsubDirectConnectInitialDelay);\n        if (this.opts.tagMeshPeers) {\n            this.addEventListener('gossipsub:graft', this.tagMeshPeer);\n            this.addEventListener('gossipsub:prune', this.untagMeshPeer);\n        }\n        this.log('started');\n    }\n    /**\n     * Unmounts the gossipsub protocol and shuts down every connection\n     */\n    async stop() {\n        this.log('stopping');\n        // From pubsub\n        if (this.status.code !== GossipStatusCode.started) {\n            return;\n        }\n        const { registrarTopologyIds } = this.status;\n        this.status = { code: GossipStatusCode.stopped };\n        if (this.opts.tagMeshPeers) {\n            this.removeEventListener('gossipsub:graft', this.tagMeshPeer);\n            this.removeEventListener('gossipsub:prune', this.untagMeshPeer);\n        }\n        // unregister protocol and handlers\n        const registrar = this.components.registrar;\n        await Promise.all(this.protocols.map(async (protocol) => registrar.unhandle(protocol)));\n        registrarTopologyIds.forEach((id) => { registrar.unregister(id); });\n        this.outboundInflightQueue.end();\n        const closePromises = [];\n        for (const outboundStream of this.streamsOutbound.values()) {\n            closePromises.push(outboundStream.close());\n        }\n        this.streamsOutbound.clear();\n        for (const inboundStream of this.streamsInbound.values()) {\n            closePromises.push(inboundStream.close());\n        }\n        this.streamsInbound.clear();\n        await Promise.all(closePromises);\n        this.peers.clear();\n        this.subscriptions.clear();\n        // Gossipsub\n        if (this.heartbeatTimer != null) {\n            this.heartbeatTimer.cancel();\n            this.heartbeatTimer = null;\n        }\n        this.score.stop();\n        this.mesh.clear();\n        this.fanout.clear();\n        this.fanoutLastpub.clear();\n        this.gossip.clear();\n        this.control.clear();\n        this.peerhave.clear();\n        this.iasked.clear();\n        this.backoff.clear();\n        this.outbound.clear();\n        this.gossipTracer.clear();\n        this.seenCache.clear();\n        if (this.fastMsgIdCache != null) {\n            this.fastMsgIdCache.clear();\n        }\n        if (this.directPeerInitial != null) {\n            clearTimeout(this.directPeerInitial);\n        }\n        this.idontwantCounts.clear();\n        this.idontwants.clear();\n        this.log('stopped');\n    }\n    /** FOR DEBUG ONLY - Dump peer stats for all peers. Data is cloned, safe to mutate */\n    dumpPeerScoreStats() {\n        return this.score.dumpPeerScoreStats();\n    }\n    /**\n     * On an inbound stream opened\n     */\n    onIncomingStream(stream, connection) {\n        if (!this.isStarted()) {\n            return;\n        }\n        const peerId = connection.remotePeer;\n        // add peer to router\n        this.addPeer(peerId, connection.direction, connection.remoteAddr);\n        // create inbound stream\n        this.createInboundStream(peerId, stream);\n        // attempt to create outbound stream\n        this.outboundInflightQueue.push({ peerId, connection });\n    }\n    /**\n     * Registrar notifies an established connection with pubsub protocol\n     */\n    onPeerConnected(peerId, connection) {\n        this.metrics?.newConnectionCount.inc({ status: connection.status });\n        // libp2p may emit a closed connection and never issue peer:disconnect event\n        // see https://github.com/ChainSafe/js-libp2p-gossipsub/issues/398\n        if (!this.isStarted() || connection.status !== 'open') {\n            return;\n        }\n        this.addPeer(peerId, connection.direction, connection.remoteAddr);\n        this.outboundInflightQueue.push({ peerId, connection });\n    }\n    /**\n     * Registrar notifies a closing connection with pubsub protocol\n     */\n    onPeerDisconnected(peerId) {\n        this.log('connection ended %p', peerId);\n        this.removePeer(peerId);\n    }\n    async createOutboundStream(peerId, connection) {\n        if (!this.isStarted()) {\n            return;\n        }\n        const id = peerId.toString();\n        if (!this.peers.has(id)) {\n            return;\n        }\n        // TODO make this behavior more robust\n        // This behavior is different than for inbound streams\n        // If an outbound stream already exists, don't create a new stream\n        if (this.streamsOutbound.has(id)) {\n            return;\n        }\n        try {\n            const stream = new OutboundStream(await connection.newStream(this.protocols, {\n                runOnLimitedConnection: this.runOnLimitedConnection\n            }), (e) => { this.log.error('outbound pipe error', e); }, { maxBufferSize: this.opts.maxOutboundBufferSize });\n            this.log('create outbound stream %p', peerId);\n            this.streamsOutbound.set(id, stream);\n            const protocol = stream.protocol;\n            if (protocol === constants.FloodsubID) {\n                this.floodsubPeers.add(id);\n            }\n            this.metrics?.peersPerProtocol.inc({ protocol }, 1);\n            // Immediately send own subscriptions via the newly attached stream\n            if (this.subscriptions.size > 0) {\n                this.log('send subscriptions to', id);\n                this.sendSubscriptions(id, Array.from(this.subscriptions), true);\n            }\n        }\n        catch (e) {\n            this.log.error('createOutboundStream error', e);\n        }\n    }\n    createInboundStream(peerId, stream) {\n        if (!this.isStarted()) {\n            return;\n        }\n        const id = peerId.toString();\n        if (!this.peers.has(id)) {\n            return;\n        }\n        // TODO make this behavior more robust\n        // This behavior is different than for outbound streams\n        // If a peer initiates a new inbound connection\n        // we assume that one is the new canonical inbound stream\n        const priorInboundStream = this.streamsInbound.get(id);\n        if (priorInboundStream !== undefined) {\n            this.log('replacing existing inbound steam %s', id);\n            priorInboundStream.close().catch((err) => { this.log.error(err); });\n        }\n        this.log('create inbound stream %s', id);\n        const inboundStream = new InboundStream(stream, { maxDataLength: this.opts.maxInboundDataLength });\n        this.streamsInbound.set(id, inboundStream);\n        this.pipePeerReadStream(peerId, inboundStream.source).catch((err) => { this.log(err); });\n    }\n    /**\n     * Add a peer to the router\n     */\n    addPeer(peerId, direction, addr) {\n        const id = peerId.toString();\n        if (!this.peers.has(id)) {\n            this.peers.set(id, peerId);\n            // Add to peer scoring\n            this.score.addPeer(id);\n            const currentIP = multiaddrToIPStr(addr);\n            if (currentIP !== null) {\n                this.score.addIP(id, currentIP);\n            }\n            else {\n                this.log('Added peer has no IP in current address %s %s', id, addr.toString());\n            }\n            // track the connection direction. Don't allow to unset outbound\n            if (!this.outbound.has(id)) {\n                this.outbound.set(id, direction === 'outbound');\n            }\n        }\n    }\n    /**\n     * Removes a peer from the router\n     */\n    removePeer(peerId) {\n        const id = peerId.toString();\n        if (!this.peers.has(id)) {\n            return;\n        }\n        // delete peer\n        this.log('delete peer %p', peerId);\n        this.peers.delete(id);\n        const outboundStream = this.streamsOutbound.get(id);\n        const inboundStream = this.streamsInbound.get(id);\n        if (outboundStream != null) {\n            this.metrics?.peersPerProtocol.inc({ protocol: outboundStream.protocol }, -1);\n        }\n        // close streams\n        outboundStream?.close().catch((err) => { this.log.error(err); });\n        inboundStream?.close().catch((err) => { this.log.error(err); });\n        // remove streams\n        this.streamsOutbound.delete(id);\n        this.streamsInbound.delete(id);\n        // remove peer from topics map\n        for (const peers of this.topics.values()) {\n            peers.delete(id);\n        }\n        // Remove this peer from the mesh\n        for (const [topicStr, peers] of this.mesh) {\n            if (peers.delete(id)) {\n                this.metrics?.onRemoveFromMesh(topicStr, ChurnReason.Dc, 1);\n            }\n        }\n        // Remove this peer from the fanout\n        for (const peers of this.fanout.values()) {\n            peers.delete(id);\n        }\n        // Remove from floodsubPeers\n        this.floodsubPeers.delete(id);\n        // Remove from gossip mapping\n        this.gossip.delete(id);\n        // Remove from control mapping\n        this.control.delete(id);\n        // Remove from backoff mapping\n        this.outbound.delete(id);\n        // Remove from idontwant tracking\n        this.idontwantCounts.delete(id);\n        this.idontwants.delete(id);\n        // Remove from peer scoring\n        this.score.removePeer(id);\n        this.acceptFromWhitelist.delete(id);\n    }\n    // API METHODS\n    get started() {\n        return this.status.code === GossipStatusCode.started;\n    }\n    /**\n     * Get a the peer-ids in a topic mesh\n     */\n    getMeshPeers(topic) {\n        const peersInTopic = this.mesh.get(topic);\n        return (peersInTopic != null) ? Array.from(peersInTopic) : [];\n    }\n    /**\n     * Get a list of the peer-ids that are subscribed to one topic.\n     */\n    getSubscribers(topic) {\n        const peersInTopic = this.topics.get(topic);\n        return ((peersInTopic != null) ? Array.from(peersInTopic) : []).map((str) => this.peers.get(str) ?? peerIdFromString(str));\n    }\n    /**\n     * Get the list of topics which the peer is subscribed to.\n     */\n    getTopics() {\n        return Array.from(this.subscriptions);\n    }\n    // TODO: Reviewing Pubsub API\n    // MESSAGE METHODS\n    /**\n     * Responsible for processing each RPC message received by other peers.\n     */\n    async pipePeerReadStream(peerId, stream) {\n        try {\n            await pipe(stream, async (source) => {\n                for await (const data of source) {\n                    try {\n                        // TODO: Check max gossip message size, before decodeRpc()\n                        const rpcBytes = data.subarray();\n                        // Note: This function may throw, it must be wrapped in a try {} catch {} to prevent closing the stream.\n                        // TODO: What should we do if the entire RPC is invalid?\n                        const rpc = RPC.decode(rpcBytes, {\n                            limits: {\n                                subscriptions: this.decodeRpcLimits.maxSubscriptions,\n                                messages: this.decodeRpcLimits.maxMessages,\n                                control$: {\n                                    ihave: this.decodeRpcLimits.maxIhaveMessageIDs,\n                                    iwant: this.decodeRpcLimits.maxIwantMessageIDs,\n                                    graft: this.decodeRpcLimits.maxControlMessages,\n                                    prune: this.decodeRpcLimits.maxControlMessages,\n                                    prune$: {\n                                        peers: this.decodeRpcLimits.maxPeerInfos\n                                    },\n                                    idontwant: this.decodeRpcLimits.maxControlMessages,\n                                    idontwant$: {\n                                        messageIDs: this.decodeRpcLimits.maxIdontwantMessageIDs\n                                    }\n                                }\n                            }\n                        });\n                        this.metrics?.onRpcRecv(rpc, rpcBytes.length);\n                        // Since processRpc may be overridden entirely in unsafe ways,\n                        // the simplest/safest option here is to wrap in a function and capture all errors\n                        // to prevent a top-level unhandled exception\n                        // This processing of rpc messages should happen without awaiting full validation/execution of prior messages\n                        if (this.opts.awaitRpcHandler) {\n                            try {\n                                await this.handleReceivedRpc(peerId, rpc);\n                            }\n                            catch (err) {\n                                this.metrics?.onRpcRecvError();\n                                this.log(err);\n                            }\n                        }\n                        else {\n                            this.handleReceivedRpc(peerId, rpc).catch((err) => {\n                                this.metrics?.onRpcRecvError();\n                                this.log(err);\n                            });\n                        }\n                    }\n                    catch (e) {\n                        this.metrics?.onRpcDataError();\n                        this.log(e);\n                    }\n                }\n            });\n        }\n        catch (err) {\n            this.metrics?.onPeerReadStreamError();\n            this.handlePeerReadStreamError(err, peerId);\n        }\n    }\n    /**\n     * Handle error when read stream pipe throws, less of the functional use but more\n     * to for testing purposes to spy on the error handling\n     */\n    handlePeerReadStreamError(err, peerId) {\n        this.log.error(err);\n        this.onPeerDisconnected(peerId);\n    }\n    /**\n     * Handles an rpc request from a peer\n     */\n    async handleReceivedRpc(from, rpc) {\n        // Check if peer is graylisted in which case we ignore the event\n        if (!this.acceptFrom(from.toString())) {\n            this.log('received message from unacceptable peer %p', from);\n            this.metrics?.rpcRecvNotAccepted.inc();\n            return;\n        }\n        const subscriptions = (rpc.subscriptions != null) ? rpc.subscriptions.length : 0;\n        const messages = (rpc.messages != null) ? rpc.messages.length : 0;\n        let ihave = 0;\n        let iwant = 0;\n        let graft = 0;\n        let prune = 0;\n        if (rpc.control != null) {\n            if (rpc.control.ihave != null) {\n                ihave = rpc.control.ihave.length;\n            }\n            if (rpc.control.iwant != null) {\n                iwant = rpc.control.iwant.length;\n            }\n            if (rpc.control.graft != null) {\n                graft = rpc.control.graft.length;\n            }\n            if (rpc.control.prune != null) {\n                prune = rpc.control.prune.length;\n            }\n        }\n        this.log(`rpc.from ${from.toString()} subscriptions ${subscriptions} messages ${messages} ihave ${ihave} iwant ${iwant} graft ${graft} prune ${prune}`);\n        // Handle received subscriptions\n        if ((rpc.subscriptions != null) && rpc.subscriptions.length > 0) {\n            // update peer subscriptions\n            const subscriptions = [];\n            rpc.subscriptions.forEach((subOpt) => {\n                const topic = subOpt.topic;\n                const subscribe = subOpt.subscribe === true;\n                if (topic != null) {\n                    if ((this.allowedTopics != null) && !this.allowedTopics.has(topic)) {\n                        // Not allowed: subscription data-structures are not bounded by topic count\n                        // TODO: Should apply behaviour penalties?\n                        return;\n                    }\n                    this.handleReceivedSubscription(from, topic, subscribe);\n                    subscriptions.push({ topic, subscribe });\n                }\n            });\n            this.safeDispatchEvent('subscription-change', {\n                detail: { peerId: from, subscriptions }\n            });\n        }\n        // Handle messages\n        // TODO: (up to limit)\n        for (const message of rpc.messages) {\n            if ((this.allowedTopics != null) && !this.allowedTopics.has(message.topic)) {\n                // Not allowed: message cache data-structures are not bounded by topic count\n                // TODO: Should apply behaviour penalties?\n                continue;\n            }\n            const handleReceivedMessagePromise = this.handleReceivedMessage(from, message)\n                // Should never throw, but handle just in case\n                .catch((err) => {\n                this.metrics?.onMsgRecvError(message.topic);\n                this.log(err);\n            });\n            if (this.opts.awaitRpcMessageHandler) {\n                await handleReceivedMessagePromise;\n            }\n        }\n        // Handle control messages\n        if (rpc.control != null) {\n            await this.handleControlMessage(from.toString(), rpc.control);\n        }\n    }\n    /**\n     * Handles a subscription change from a peer\n     */\n    handleReceivedSubscription(from, topic, subscribe) {\n        this.log('subscription update from %p topic %s', from, topic);\n        let topicSet = this.topics.get(topic);\n        if (topicSet == null) {\n            topicSet = new Set();\n            this.topics.set(topic, topicSet);\n        }\n        if (subscribe) {\n            // subscribe peer to new topic\n            topicSet.add(from.toString());\n        }\n        else {\n            // unsubscribe from existing topic\n            topicSet.delete(from.toString());\n        }\n        // TODO: rust-libp2p has A LOT more logic here\n    }\n    /**\n     * Handles a newly received message from an RPC.\n     * May forward to all peers in the mesh.\n     */\n    async handleReceivedMessage(from, rpcMsg) {\n        this.metrics?.onMsgRecvPreValidation(rpcMsg.topic);\n        const validationResult = await this.validateReceivedMessage(from, rpcMsg);\n        this.metrics?.onPrevalidationResult(rpcMsg.topic, validationResult.code);\n        const validationCode = validationResult.code;\n        switch (validationCode) {\n            case MessageStatus.duplicate:\n                // Report the duplicate\n                this.score.duplicateMessage(from.toString(), validationResult.msgIdStr, rpcMsg.topic);\n                // due to the collision of fastMsgIdFn, 2 different messages may end up the same fastMsgId\n                // so we need to also mark the duplicate message as delivered or the promise is not resolved\n                // and peer gets penalized. See https://github.com/ChainSafe/js-libp2p-gossipsub/pull/385\n                this.gossipTracer.deliverMessage(validationResult.msgIdStr, true);\n                this.mcache.observeDuplicate(validationResult.msgIdStr, from.toString());\n                return;\n            case MessageStatus.invalid:\n                // invalid messages received\n                // metrics.register_invalid_message(&raw_message.topic)\n                // Tell peer_score about reject\n                // Reject the original source, and any duplicates we've seen from other peers.\n                if (validationResult.msgIdStr != null) {\n                    const msgIdStr = validationResult.msgIdStr;\n                    this.score.rejectMessage(from.toString(), msgIdStr, rpcMsg.topic, validationResult.reason);\n                    this.gossipTracer.rejectMessage(msgIdStr, validationResult.reason);\n                }\n                else {\n                    this.score.rejectInvalidMessage(from.toString(), rpcMsg.topic);\n                }\n                this.metrics?.onMsgRecvInvalid(rpcMsg.topic, validationResult);\n                return;\n            case MessageStatus.valid:\n                // Tells score that message arrived (but is maybe not fully validated yet).\n                // Consider the message as delivered for gossip promises.\n                this.score.validateMessage(validationResult.messageId.msgIdStr);\n                this.gossipTracer.deliverMessage(validationResult.messageId.msgIdStr);\n                // Add the message to our memcache\n                // if no validation is required, mark the message as validated\n                this.mcache.put(validationResult.messageId, rpcMsg, !this.opts.asyncValidation);\n                // Dispatch the message to the user if we are subscribed to the topic\n                if (this.subscriptions.has(rpcMsg.topic)) {\n                    const isFromSelf = this.components.peerId.equals(from);\n                    if (!isFromSelf || this.opts.emitSelf) {\n                        super.dispatchEvent(new CustomEvent('gossipsub:message', {\n                            detail: {\n                                propagationSource: from,\n                                msgId: validationResult.messageId.msgIdStr,\n                                msg: validationResult.msg\n                            }\n                        }));\n                        // TODO: Add option to switch between emit per topic or all messages in one\n                        super.dispatchEvent(new CustomEvent('message', { detail: validationResult.msg }));\n                    }\n                }\n                // Forward the message to mesh peers, if no validation is required\n                // If asyncValidation is ON, expect the app layer to call reportMessageValidationResult(), then forward\n                if (!this.opts.asyncValidation) {\n                    // TODO: in rust-libp2p\n                    // .forward_msg(&msg_id, raw_message, Some(propagation_source))\n                    this.forwardMessage(validationResult.messageId.msgIdStr, rpcMsg, from.toString());\n                }\n                break;\n            default:\n                throw new Error(`Invalid validation result: ${validationCode}`);\n        }\n    }\n    /**\n     * Handles a newly received message from an RPC.\n     * May forward to all peers in the mesh.\n     */\n    async validateReceivedMessage(propagationSource, rpcMsg) {\n        // Fast message ID stuff\n        const fastMsgIdStr = this.fastMsgIdFn?.(rpcMsg);\n        const msgIdCached = fastMsgIdStr !== undefined ? this.fastMsgIdCache?.get(fastMsgIdStr) : undefined;\n        if (msgIdCached != null) {\n            // This message has been seen previously. Ignore it\n            return { code: MessageStatus.duplicate, msgIdStr: msgIdCached };\n        }\n        // Perform basic validation on message and convert to RawGossipsubMessage for fastMsgIdFn()\n        const validationResult = await validateToRawMessage(this.globalSignaturePolicy, rpcMsg);\n        if (!validationResult.valid) {\n            return { code: MessageStatus.invalid, reason: RejectReason.Error, error: validationResult.error };\n        }\n        const msg = validationResult.message;\n        // Try and perform the data transform to the message. If it fails, consider it invalid.\n        try {\n            if (this.dataTransform != null) {\n                msg.data = this.dataTransform.inboundTransform(rpcMsg.topic, msg.data);\n            }\n        }\n        catch (e) {\n            this.log('Invalid message, transform failed', e);\n            return { code: MessageStatus.invalid, reason: RejectReason.Error, error: ValidateError.TransformFailed };\n        }\n        // TODO: Check if message is from a blacklisted source or propagation origin\n        // - Reject any message from a blacklisted peer\n        // - Also reject any message that originated from a blacklisted peer\n        // - reject messages claiming to be from ourselves but not locally published\n        // Calculate the message id on the transformed data.\n        const msgId = await this.msgIdFn(msg);\n        const msgIdStr = this.msgIdToStrFn(msgId);\n        const messageId = { msgId, msgIdStr };\n        // Add the message to the duplicate caches\n        if (fastMsgIdStr !== undefined && (this.fastMsgIdCache != null)) {\n            const collision = this.fastMsgIdCache.put(fastMsgIdStr, msgIdStr);\n            if (collision) {\n                this.metrics?.fastMsgIdCacheCollision.inc();\n            }\n        }\n        if (this.seenCache.has(msgIdStr)) {\n            return { code: MessageStatus.duplicate, msgIdStr };\n        }\n        else {\n            this.seenCache.put(msgIdStr);\n        }\n        // possibly send IDONTWANTs to mesh peers\n        if ((rpcMsg.data?.length ?? 0) >= this.opts.idontwantMinDataSize) {\n            this.sendIDontWants(msgId, rpcMsg.topic, propagationSource.toString());\n        }\n        // (Optional) Provide custom validation here with dynamic validators per topic\n        // NOTE: This custom topicValidator() must resolve fast (< 100ms) to allow scores\n        // to not penalize peers for long validation times.\n        const topicValidator = this.topicValidators.get(rpcMsg.topic);\n        if (topicValidator != null) {\n            let acceptance;\n            // Use try {} catch {} in case topicValidator() is synchronous\n            try {\n                acceptance = await topicValidator(propagationSource, msg);\n            }\n            catch (e) {\n                const errCode = e.code;\n                if (errCode === constants.ERR_TOPIC_VALIDATOR_IGNORE) {\n                    acceptance = TopicValidatorResult.Ignore;\n                }\n                if (errCode === constants.ERR_TOPIC_VALIDATOR_REJECT) {\n                    acceptance = TopicValidatorResult.Reject;\n                }\n                else {\n                    acceptance = TopicValidatorResult.Ignore;\n                }\n            }\n            if (acceptance !== TopicValidatorResult.Accept) {\n                return { code: MessageStatus.invalid, reason: rejectReasonFromAcceptance(acceptance), msgIdStr };\n            }\n        }\n        return { code: MessageStatus.valid, messageId, msg };\n    }\n    /**\n     * Return score of a peer.\n     */\n    getScore(peerId) {\n        return this.score.score(peerId);\n    }\n    /**\n     * Send an rpc object to a peer with subscriptions\n     */\n    sendSubscriptions(toPeer, topics, subscribe) {\n        this.sendRpc(toPeer, {\n            subscriptions: topics.map((topic) => ({ topic, subscribe })),\n            messages: []\n        });\n    }\n    /**\n     * Handles an rpc control message from a peer\n     */\n    async handleControlMessage(id, controlMsg) {\n        if (controlMsg === undefined) {\n            return;\n        }\n        const iwant = (controlMsg.ihave?.length > 0) ? this.handleIHave(id, controlMsg.ihave) : [];\n        const ihave = (controlMsg.iwant?.length > 0) ? this.handleIWant(id, controlMsg.iwant) : [];\n        const prune = (controlMsg.graft?.length > 0) ? await this.handleGraft(id, controlMsg.graft) : [];\n        (controlMsg.prune?.length > 0) && (await this.handlePrune(id, controlMsg.prune));\n        (controlMsg.idontwant?.length > 0) && this.handleIdontwant(id, controlMsg.idontwant);\n        if ((iwant.length === 0) && (ihave.length === 0) && (prune.length === 0)) {\n            return;\n        }\n        const sent = this.sendRpc(id, createGossipRpc(ihave, { iwant, prune }));\n        const iwantMessageIds = iwant[0]?.messageIDs;\n        if (iwantMessageIds != null) {\n            if (sent) {\n                this.gossipTracer.addPromise(id, iwantMessageIds);\n            }\n            else {\n                this.metrics?.iwantPromiseUntracked.inc(1);\n            }\n        }\n    }\n    /**\n     * Whether to accept a message from a peer\n     */\n    acceptFrom(id) {\n        if (this.direct.has(id)) {\n            return true;\n        }\n        const now = Date.now();\n        const entry = this.acceptFromWhitelist.get(id);\n        if ((entry != null) && entry.messagesAccepted < ACCEPT_FROM_WHITELIST_MAX_MESSAGES && entry.acceptUntil >= now) {\n            entry.messagesAccepted += 1;\n            return true;\n        }\n        const score = this.score.score(id);\n        if (score >= ACCEPT_FROM_WHITELIST_THRESHOLD_SCORE) {\n            // peer is unlikely to be able to drop its score to `graylistThreshold`\n            // after 128 messages or 1s\n            this.acceptFromWhitelist.set(id, {\n                messagesAccepted: 0,\n                acceptUntil: now + ACCEPT_FROM_WHITELIST_DURATION_MS\n            });\n        }\n        else {\n            this.acceptFromWhitelist.delete(id);\n        }\n        return score >= this.opts.scoreThresholds.graylistThreshold;\n    }\n    /**\n     * Handles IHAVE messages\n     */\n    handleIHave(id, ihave) {\n        if (ihave.length === 0) {\n            return [];\n        }\n        // we ignore IHAVE gossip from any peer whose score is below the gossips threshold\n        const score = this.score.score(id);\n        if (score < this.opts.scoreThresholds.gossipThreshold) {\n            this.log('IHAVE: ignoring peer %s with score below threshold [ score = %d ]', id, score);\n            this.metrics?.ihaveRcvIgnored.inc({ reason: IHaveIgnoreReason.LowScore });\n            return [];\n        }\n        // IHAVE flood protection\n        const peerhave = (this.peerhave.get(id) ?? 0) + 1;\n        this.peerhave.set(id, peerhave);\n        if (peerhave > constants.GossipsubMaxIHaveMessages) {\n            this.log('IHAVE: peer %s has advertised too many times (%d) within this heartbeat interval; ignoring', id, peerhave);\n            this.metrics?.ihaveRcvIgnored.inc({ reason: IHaveIgnoreReason.MaxIhave });\n            return [];\n        }\n        const iasked = this.iasked.get(id) ?? 0;\n        if (iasked >= constants.GossipsubMaxIHaveLength) {\n            this.log('IHAVE: peer %s has already advertised too many messages (%d); ignoring', id, iasked);\n            this.metrics?.ihaveRcvIgnored.inc({ reason: IHaveIgnoreReason.MaxIasked });\n            return [];\n        }\n        // string msgId => msgId\n        const iwant = new Map();\n        ihave.forEach(({ topicID, messageIDs }) => {\n            if (topicID == null || (messageIDs == null) || !this.mesh.has(topicID)) {\n                return;\n            }\n            let idonthave = 0;\n            messageIDs.forEach((msgId) => {\n                const msgIdStr = this.msgIdToStrFn(msgId);\n                if (!this.seenCache.has(msgIdStr)) {\n                    iwant.set(msgIdStr, msgId);\n                    idonthave++;\n                }\n            });\n            this.metrics?.onIhaveRcv(topicID, messageIDs.length, idonthave);\n        });\n        if (iwant.size === 0) {\n            return [];\n        }\n        let iask = iwant.size;\n        if (iask + iasked > constants.GossipsubMaxIHaveLength) {\n            iask = constants.GossipsubMaxIHaveLength - iasked;\n        }\n        this.log('IHAVE: Asking for %d out of %d messages from %s', iask, iwant.size, id);\n        let iwantList = Array.from(iwant.values());\n        // ask in random order\n        shuffle(iwantList);\n        // truncate to the messages we are actually asking for and update the iasked counter\n        iwantList = iwantList.slice(0, iask);\n        this.iasked.set(id, iasked + iask);\n        // do not add gossipTracer promise here until a successful sendRpc()\n        return [\n            {\n                messageIDs: iwantList\n            }\n        ];\n    }\n    /**\n     * Handles IWANT messages\n     * Returns messages to send back to peer\n     */\n    handleIWant(id, iwant) {\n        if (iwant.length === 0) {\n            return [];\n        }\n        // we don't respond to IWANT requests from any per whose score is below the gossip threshold\n        const score = this.score.score(id);\n        if (score < this.opts.scoreThresholds.gossipThreshold) {\n            this.log('IWANT: ignoring peer %s with score below threshold [score = %d]', id, score);\n            return [];\n        }\n        const ihave = new Map();\n        const iwantByTopic = new Map();\n        let iwantDonthave = 0;\n        iwant.forEach(({ messageIDs }) => {\n            messageIDs?.forEach((msgId) => {\n                const msgIdStr = this.msgIdToStrFn(msgId);\n                const entry = this.mcache.getWithIWantCount(msgIdStr, id);\n                if (entry == null) {\n                    iwantDonthave++;\n                    return;\n                }\n                iwantByTopic.set(entry.msg.topic, 1 + (iwantByTopic.get(entry.msg.topic) ?? 0));\n                if (entry.count > constants.GossipsubGossipRetransmission) {\n                    this.log('IWANT: Peer %s has asked for message %s too many times: ignoring request', id, msgId);\n                    return;\n                }\n                ihave.set(msgIdStr, entry.msg);\n            });\n        });\n        this.metrics?.onIwantRcv(iwantByTopic, iwantDonthave);\n        if (ihave.size === 0) {\n            this.log('IWANT: Could not provide any wanted messages to %s', id);\n            return [];\n        }\n        this.log('IWANT: Sending %d messages to %s', ihave.size, id);\n        return Array.from(ihave.values());\n    }\n    /**\n     * Handles Graft messages\n     */\n    async handleGraft(id, graft) {\n        const prune = [];\n        const score = this.score.score(id);\n        const now = Date.now();\n        let doPX = this.opts.doPX;\n        graft.forEach(({ topicID }) => {\n            if (topicID == null) {\n                return;\n            }\n            const peersInMesh = this.mesh.get(topicID);\n            if (peersInMesh == null) {\n                // don't do PX when there is an unknown topic to avoid leaking our peers\n                doPX = false;\n                // spam hardening: ignore GRAFTs for unknown topics\n                return;\n            }\n            // check if peer is already in the mesh; if so do nothing\n            if (peersInMesh.has(id)) {\n                return;\n            }\n            const backoffExpiry = this.backoff.get(topicID)?.get(id);\n            // This if/else chain contains the various cases of valid (and semi-valid) GRAFTs\n            // Most of these cases result in a PRUNE immediately being sent in response\n            // we don't GRAFT to/from direct peers; complain loudly if this happens\n            if (this.direct.has(id)) {\n                this.log('GRAFT: ignoring request from direct peer %s', id);\n                // this is possibly a bug from a non-reciprical configuration; send a PRUNE\n                prune.push(topicID);\n                // but don't px\n                doPX = false;\n                // make sure we are not backing off that peer\n            }\n            else if (typeof backoffExpiry === 'number' && now < backoffExpiry) {\n                this.log('GRAFT: ignoring backed off peer %s', id);\n                // add behavioral penalty\n                this.score.addPenalty(id, 1, ScorePenalty.GraftBackoff);\n                // no PX\n                doPX = false;\n                // check the flood cutoff -- is the GRAFT coming too fast?\n                const floodCutoff = backoffExpiry + this.opts.graftFloodThreshold - this.opts.pruneBackoff;\n                if (now < floodCutoff) {\n                    // extra penalty\n                    this.score.addPenalty(id, 1, ScorePenalty.GraftBackoff);\n                }\n                // refresh the backoff\n                this.addBackoff(id, topicID);\n                prune.push(topicID);\n                // check the score\n            }\n            else if (score < 0) {\n                // we don't GRAFT peers with negative score\n                this.log('GRAFT: ignoring peer %s with negative score: score=%d, topic=%s', id, score, topicID);\n                // we do send them PRUNE however, because it's a matter of protocol correctness\n                prune.push(topicID);\n                // but we won't PX to them\n                doPX = false;\n                // add/refresh backoff so that we don't reGRAFT too early even if the score decays\n                this.addBackoff(id, topicID);\n                // check the number of mesh peers; if it is at (or over) Dhi, we only accept grafts\n                // from peers with outbound connections; this is a defensive check to restrict potential\n                // mesh takeover attacks combined with love bombing\n            }\n            else if (peersInMesh.size >= this.opts.Dhi && !(this.outbound.get(id) ?? false)) {\n                prune.push(topicID);\n                this.addBackoff(id, topicID);\n                // valid graft\n            }\n            else {\n                this.log('GRAFT: Add mesh link from %s in %s', id, topicID);\n                this.score.graft(id, topicID);\n                peersInMesh.add(id);\n                this.metrics?.onAddToMesh(topicID, InclusionReason.Subscribed, 1);\n            }\n            this.safeDispatchEvent('gossipsub:graft', { detail: { peerId: id, topic: topicID, direction: 'inbound' } });\n        });\n        if (prune.length === 0) {\n            return [];\n        }\n        const onUnsubscribe = false;\n        return Promise.all(prune.map(async (topic) => this.makePrune(id, topic, doPX, onUnsubscribe)));\n    }\n    /**\n     * Handles Prune messages\n     */\n    async handlePrune(id, prune) {\n        const score = this.score.score(id);\n        for (const { topicID, backoff, peers } of prune) {\n            if (topicID == null) {\n                continue;\n            }\n            const peersInMesh = this.mesh.get(topicID);\n            if (peersInMesh == null) {\n                return;\n            }\n            this.log('PRUNE: Remove mesh link to %s in %s', id, topicID);\n            this.score.prune(id, topicID);\n            if (peersInMesh.has(id)) {\n                peersInMesh.delete(id);\n                this.metrics?.onRemoveFromMesh(topicID, ChurnReason.Prune, 1);\n            }\n            // is there a backoff specified by the peer? if so obey it\n            if (typeof backoff === 'number' && backoff > 0) {\n                this.doAddBackoff(id, topicID, backoff * 1000);\n            }\n            else {\n                this.addBackoff(id, topicID);\n            }\n            // PX\n            if ((peers != null) && (peers.length > 0)) {\n                // we ignore PX from peers with insufficient scores\n                if (score < this.opts.scoreThresholds.acceptPXThreshold) {\n                    this.log('PRUNE: ignoring PX from peer %s with insufficient score [score = %d, topic = %s]', id, score, topicID);\n                }\n                else {\n                    await this.pxConnect(peers);\n                }\n            }\n            this.safeDispatchEvent('gossipsub:prune', { detail: { peerId: id, topic: topicID, direction: 'inbound' } });\n        }\n    }\n    handleIdontwant(id, idontwant) {\n        let idontwantCount = this.idontwantCounts.get(id) ?? 0;\n        // return early if we have already received too many IDONTWANT messages from the peer\n        if (idontwantCount >= this.opts.idontwantMaxMessages) {\n            return;\n        }\n        const startIdontwantCount = idontwantCount;\n        let idontwants = this.idontwants.get(id);\n        if (idontwants == null) {\n            idontwants = new Map();\n            this.idontwants.set(id, idontwants);\n        }\n        let idonthave = 0;\n        // eslint-disable-next-line no-labels\n        out: for (const { messageIDs } of idontwant) {\n            for (const msgId of messageIDs) {\n                if (idontwantCount >= this.opts.idontwantMaxMessages) {\n                    // eslint-disable-next-line no-labels\n                    break out;\n                }\n                idontwantCount++;\n                const msgIdStr = this.msgIdToStrFn(msgId);\n                idontwants.set(msgIdStr, this.heartbeatTicks);\n                if (!this.mcache.msgs.has(msgIdStr)) {\n                    idonthave++;\n                }\n            }\n        }\n        this.idontwantCounts.set(id, idontwantCount);\n        const total = idontwantCount - startIdontwantCount;\n        this.metrics?.onIdontwantRcv(total, idonthave);\n    }\n    /**\n     * Add standard backoff log for a peer in a topic\n     */\n    addBackoff(id, topic) {\n        this.doAddBackoff(id, topic, this.opts.pruneBackoff);\n    }\n    /**\n     * Add backoff expiry interval for a peer in a topic\n     *\n     * @param id\n     * @param topic\n     * @param intervalMs - backoff duration in milliseconds\n     */\n    doAddBackoff(id, topic, intervalMs) {\n        let backoff = this.backoff.get(topic);\n        if (backoff == null) {\n            backoff = new Map();\n            this.backoff.set(topic, backoff);\n        }\n        const expire = Date.now() + intervalMs;\n        const existingExpire = backoff.get(id) ?? 0;\n        if (existingExpire < expire) {\n            backoff.set(id, expire);\n        }\n    }\n    /**\n     * Apply penalties from broken IHAVE/IWANT promises\n     */\n    applyIwantPenalties() {\n        this.gossipTracer.getBrokenPromises().forEach((count, p) => {\n            this.log(\"peer %s didn't follow up in %d IWANT requests; adding penalty\", p, count);\n            this.score.addPenalty(p, count, ScorePenalty.BrokenPromise);\n        });\n    }\n    /**\n     * Clear expired backoff expiries\n     */\n    clearBackoff() {\n        // we only clear once every GossipsubPruneBackoffTicks ticks to avoid iterating over the maps too much\n        if (this.heartbeatTicks % constants.GossipsubPruneBackoffTicks !== 0) {\n            return;\n        }\n        const now = Date.now();\n        this.backoff.forEach((backoff, topic) => {\n            backoff.forEach((expire, id) => {\n                // add some slack time to the expiration, see https://github.com/libp2p/specs/pull/289\n                if (expire + BACKOFF_SLACK * this.opts.heartbeatInterval < now) {\n                    backoff.delete(id);\n                }\n            });\n            if (backoff.size === 0) {\n                this.backoff.delete(topic);\n            }\n        });\n    }\n    /**\n     * Maybe reconnect to direct peers\n     */\n    async directConnect() {\n        const toconnect = [];\n        this.direct.forEach((id) => {\n            if (!this.streamsOutbound.has(id)) {\n                toconnect.push(id);\n            }\n        });\n        await Promise.all(toconnect.map(async (id) => this.connect(id)));\n    }\n    /**\n     * Maybe attempt connection given signed peer records\n     */\n    async pxConnect(peers) {\n        if (peers.length > this.opts.prunePeers) {\n            shuffle(peers);\n            peers = peers.slice(0, this.opts.prunePeers);\n        }\n        const toconnect = [];\n        await Promise.all(peers.map(async (pi) => {\n            if (pi.peerID == null) {\n                return;\n            }\n            const peer = peerIdFromMultihash(Digest.decode(pi.peerID));\n            const p = peer.toString();\n            if (this.peers.has(p)) {\n                return;\n            }\n            if (pi.signedPeerRecord == null) {\n                toconnect.push(p);\n                return;\n            }\n            // The peer sent us a signed record\n            // This is not a record from the peer who sent the record, but another peer who is connected with it\n            // Ensure that it is valid\n            try {\n                if (!(await this.components.peerStore.consumePeerRecord(pi.signedPeerRecord, {\n                    expectedPeer: peer\n                }))) {\n                    this.log('bogus peer record obtained through px: could not add peer record to address book');\n                    return;\n                }\n                toconnect.push(p);\n            }\n            catch (e) {\n                this.log('bogus peer record obtained through px: invalid signature or not a peer record');\n            }\n        }));\n        if (toconnect.length === 0) {\n            return;\n        }\n        await Promise.all(toconnect.map(async (id) => this.connect(id)));\n    }\n    /**\n     * Connect to a peer using the gossipsub protocol\n     */\n    async connect(id) {\n        this.log('Initiating connection with %s', id);\n        const peerId = peerIdFromString(id);\n        const connection = await this.components.connectionManager.openConnection(peerId);\n        for (const protocol of this.protocols) {\n            for (const topology of this.components.registrar.getTopologies(protocol)) {\n                topology.onConnect?.(peerId, connection);\n            }\n        }\n    }\n    /**\n     * Subscribes to a topic\n     */\n    subscribe(topic) {\n        if (this.status.code !== GossipStatusCode.started) {\n            throw new Error('Pubsub has not started');\n        }\n        if (!this.subscriptions.has(topic)) {\n            this.subscriptions.add(topic);\n            for (const peerId of this.peers.keys()) {\n                this.sendSubscriptions(peerId, [topic], true);\n            }\n        }\n        this.join(topic);\n    }\n    /**\n     * Unsubscribe to a topic\n     */\n    unsubscribe(topic) {\n        if (this.status.code !== GossipStatusCode.started) {\n            throw new Error('Pubsub is not started');\n        }\n        const wasSubscribed = this.subscriptions.delete(topic);\n        this.log('unsubscribe from %s - am subscribed %s', topic, wasSubscribed);\n        if (wasSubscribed) {\n            for (const peerId of this.peers.keys()) {\n                this.sendSubscriptions(peerId, [topic], false);\n            }\n        }\n        this.leave(topic);\n    }\n    /**\n     * Join topic\n     */\n    join(topic) {\n        if (this.status.code !== GossipStatusCode.started) {\n            throw new Error('Gossipsub has not started');\n        }\n        // if we are already in the mesh, return\n        if (this.mesh.has(topic)) {\n            return;\n        }\n        this.log('JOIN %s', topic);\n        this.metrics?.onJoin(topic);\n        const toAdd = new Set();\n        const backoff = this.backoff.get(topic);\n        // check if we have mesh_n peers in fanout[topic] and add them to the mesh if we do,\n        // removing the fanout entry.\n        const fanoutPeers = this.fanout.get(topic);\n        if (fanoutPeers != null) {\n            // Remove fanout entry and the last published time\n            this.fanout.delete(topic);\n            this.fanoutLastpub.delete(topic);\n            // remove explicit peers, peers with negative scores, and backoffed peers\n            fanoutPeers.forEach((id) => {\n                if (!this.direct.has(id) && this.score.score(id) >= 0 && backoff?.has(id) !== true) {\n                    toAdd.add(id);\n                }\n            });\n            this.metrics?.onAddToMesh(topic, InclusionReason.Fanout, toAdd.size);\n        }\n        // check if we need to get more peers, which we randomly select\n        if (toAdd.size < this.opts.D) {\n            const fanoutCount = toAdd.size;\n            const newPeers = this.getRandomGossipPeers(topic, this.opts.D, (id) => \n            // filter direct peers and peers with negative score\n            !toAdd.has(id) && !this.direct.has(id) && this.score.score(id) >= 0 && backoff?.has(id) !== true);\n            newPeers.forEach((peer) => {\n                toAdd.add(peer);\n            });\n            this.metrics?.onAddToMesh(topic, InclusionReason.Random, toAdd.size - fanoutCount);\n        }\n        this.mesh.set(topic, toAdd);\n        toAdd.forEach((id) => {\n            this.log('JOIN: Add mesh link to %s in %s', id, topic);\n            this.sendGraft(id, topic);\n            // rust-libp2p\n            // - peer_score.graft()\n            // - Self::control_pool_add()\n            // - peer_added_to_mesh()\n        });\n    }\n    /**\n     * Leave topic\n     */\n    leave(topic) {\n        if (this.status.code !== GossipStatusCode.started) {\n            throw new Error('Gossipsub has not started');\n        }\n        this.log('LEAVE %s', topic);\n        this.metrics?.onLeave(topic);\n        // Send PRUNE to mesh peers\n        const meshPeers = this.mesh.get(topic);\n        if (meshPeers != null) {\n            Promise.all(Array.from(meshPeers).map(async (id) => {\n                this.log('LEAVE: Remove mesh link to %s in %s', id, topic);\n                await this.sendPrune(id, topic);\n            })).catch((err) => {\n                this.log('Error sending prunes to mesh peers', err);\n            });\n            this.mesh.delete(topic);\n        }\n    }\n    selectPeersToForward(topic, propagationSource, excludePeers) {\n        const tosend = new Set();\n        // Add explicit peers\n        const peersInTopic = this.topics.get(topic);\n        if (peersInTopic != null) {\n            this.direct.forEach((peer) => {\n                if (peersInTopic.has(peer) && propagationSource !== peer && !(excludePeers?.has(peer) ?? false)) {\n                    tosend.add(peer);\n                }\n            });\n            // As of Mar 2022, spec + golang-libp2p include this while rust-libp2p does not\n            // rust-libp2p: https://github.com/libp2p/rust-libp2p/blob/6cc3b4ec52c922bfcf562a29b5805c3150e37c75/protocols/gossipsub/src/behaviour.rs#L2693\n            // spec: https://github.com/libp2p/specs/blob/10712c55ab309086a52eec7d25f294df4fa96528/pubsub/gossipsub/gossipsub-v1.0.md?plain=1#L361\n            this.floodsubPeers.forEach((peer) => {\n                if (peersInTopic.has(peer) &&\n                    propagationSource !== peer &&\n                    !(excludePeers?.has(peer) ?? false) &&\n                    this.score.score(peer) >= this.opts.scoreThresholds.publishThreshold) {\n                    tosend.add(peer);\n                }\n            });\n        }\n        // add mesh peers\n        const meshPeers = this.mesh.get(topic);\n        if ((meshPeers != null) && meshPeers.size > 0) {\n            meshPeers.forEach((peer) => {\n                if (propagationSource !== peer && !(excludePeers?.has(peer) ?? false)) {\n                    tosend.add(peer);\n                }\n            });\n        }\n        return tosend;\n    }\n    selectPeersToPublish(topic) {\n        const tosend = new Set();\n        const tosendCount = {\n            direct: 0,\n            floodsub: 0,\n            mesh: 0,\n            fanout: 0\n        };\n        const peersInTopic = this.topics.get(topic);\n        if (peersInTopic != null) {\n            // flood-publish behavior\n            // send to direct peers and _all_ peers meeting the publishThreshold\n            if (this.opts.floodPublish) {\n                peersInTopic.forEach((id) => {\n                    if (this.direct.has(id)) {\n                        tosend.add(id);\n                        tosendCount.direct++;\n                    }\n                    else if (this.score.score(id) >= this.opts.scoreThresholds.publishThreshold) {\n                        tosend.add(id);\n                        tosendCount.floodsub++;\n                    }\n                });\n            }\n            else {\n                // non-flood-publish behavior\n                // send to direct peers, subscribed floodsub peers\n                // and some mesh peers above publishThreshold\n                // direct peers (if subscribed)\n                this.direct.forEach((id) => {\n                    if (peersInTopic.has(id)) {\n                        tosend.add(id);\n                        tosendCount.direct++;\n                    }\n                });\n                // floodsub peers\n                // Note: if there are no floodsub peers, we save a loop through peersInTopic Map\n                this.floodsubPeers.forEach((id) => {\n                    if (peersInTopic.has(id) && this.score.score(id) >= this.opts.scoreThresholds.publishThreshold) {\n                        tosend.add(id);\n                        tosendCount.floodsub++;\n                    }\n                });\n                // Gossipsub peers handling\n                const meshPeers = this.mesh.get(topic);\n                if ((meshPeers != null) && meshPeers.size > 0) {\n                    meshPeers.forEach((peer) => {\n                        tosend.add(peer);\n                        tosendCount.mesh++;\n                    });\n                    // We want to publish to at least `D` peers.\n                    // If there are insufficient peers in the mesh, publish to other topic peers\n                    if (meshPeers.size < this.opts.D) {\n                        // pick additional topic peers above the publishThreshold\n                        const topicPeers = this.getRandomGossipPeers(topic, this.opts.D - meshPeers.size, (id) => {\n                            return !meshPeers.has(id) && !this.direct.has(id) && !this.floodsubPeers.has(id) && this.score.score(id) >= this.opts.scoreThresholds.publishThreshold;\n                        });\n                        topicPeers.forEach((peer) => {\n                            tosend.add(peer);\n                            tosendCount.mesh++;\n                        });\n                    }\n                }\n                else {\n                    // We are not in the mesh for topic, use fanout peers\n                    const fanoutPeers = this.fanout.get(topic);\n                    if ((fanoutPeers != null) && fanoutPeers.size > 0) {\n                        fanoutPeers.forEach((peer) => {\n                            tosend.add(peer);\n                            tosendCount.fanout++;\n                        });\n                    }\n                    else {\n                        // We have no fanout peers, select mesh_n of them and add them to the fanout\n                        // If we are not in the fanout, then pick peers in topic above the publishThreshold\n                        const newFanoutPeers = this.getRandomGossipPeers(topic, this.opts.D, (id) => {\n                            return this.score.score(id) >= this.opts.scoreThresholds.publishThreshold;\n                        });\n                        // eslint-disable-next-line max-depth\n                        if (newFanoutPeers.size > 0) {\n                            this.fanout.set(topic, newFanoutPeers);\n                            newFanoutPeers.forEach((peer) => {\n                                tosend.add(peer);\n                                tosendCount.fanout++;\n                            });\n                        }\n                    }\n                    // We are publishing to fanout peers - update the time we published\n                    this.fanoutLastpub.set(topic, Date.now());\n                }\n            }\n        }\n        return { tosend, tosendCount };\n    }\n    /**\n     * Forwards a message from our peers.\n     *\n     * For messages published by us (the app layer), this class uses `publish`\n     */\n    forwardMessage(msgIdStr, rawMsg, propagationSource, excludePeers) {\n        // message is fully validated inform peer_score\n        if (propagationSource != null) {\n            this.score.deliverMessage(propagationSource, msgIdStr, rawMsg.topic);\n        }\n        const tosend = this.selectPeersToForward(rawMsg.topic, propagationSource, excludePeers);\n        // Note: Don't throw if tosend is empty, we can have a mesh with a single peer\n        // forward the message to peers\n        tosend.forEach((id) => {\n            // sendRpc may mutate RPC message on piggyback, create a new message for each peer\n            this.sendRpc(id, createGossipRpc([rawMsg]));\n        });\n        this.metrics?.onForwardMsg(rawMsg.topic, tosend.size);\n    }\n    /**\n     * App layer publishes a message to peers, return number of peers this message is published to\n     * Note: `async` due to crypto only if `StrictSign`, otherwise it's a sync fn.\n     *\n     * For messages not from us, this class uses `forwardMessage`.\n     */\n    async publish(topic, data, opts) {\n        const startMs = Date.now();\n        const transformedData = (this.dataTransform != null) ? this.dataTransform.outboundTransform(topic, data) : data;\n        if (this.publishConfig == null) {\n            throw Error('PublishError.Uninitialized');\n        }\n        // Prepare raw message with user's publishConfig\n        const { raw: rawMsg, msg } = await buildRawMessage(this.publishConfig, topic, data, transformedData);\n        // calculate the message id from the un-transformed data\n        const msgId = await this.msgIdFn(msg);\n        const msgIdStr = this.msgIdToStrFn(msgId);\n        // Current publish opt takes precedence global opts, while preserving false value\n        const ignoreDuplicatePublishError = opts?.ignoreDuplicatePublishError ?? this.opts.ignoreDuplicatePublishError;\n        if (this.seenCache.has(msgIdStr)) {\n            // This message has already been seen. We don't re-publish messages that have already\n            // been published on the network.\n            if (ignoreDuplicatePublishError) {\n                this.metrics?.onPublishDuplicateMsg(topic);\n                return { recipients: [] };\n            }\n            throw Error('PublishError.Duplicate');\n        }\n        const { tosend, tosendCount } = this.selectPeersToPublish(topic);\n        const willSendToSelf = this.opts.emitSelf && this.subscriptions.has(topic);\n        // Current publish opt takes precedence global opts, while preserving false value\n        const allowPublishToZeroTopicPeers = opts?.allowPublishToZeroTopicPeers ?? this.opts.allowPublishToZeroTopicPeers;\n        if (tosend.size === 0 && !allowPublishToZeroTopicPeers && !willSendToSelf) {\n            throw Error('PublishError.NoPeersSubscribedToTopic');\n        }\n        // If the message isn't a duplicate and we have sent it to some peers add it to the\n        // duplicate cache and memcache.\n        this.seenCache.put(msgIdStr);\n        // all published messages are valid\n        this.mcache.put({ msgId, msgIdStr }, rawMsg, true);\n        // Consider the message as delivered for gossip promises.\n        this.gossipTracer.deliverMessage(msgIdStr);\n        // If the message is anonymous or has a random author add it to the published message ids cache.\n        this.publishedMessageIds.put(msgIdStr);\n        const batchPublish = opts?.batchPublish ?? this.opts.batchPublish;\n        const rpc = createGossipRpc([rawMsg]);\n        if (batchPublish) {\n            this.sendRpcInBatch(tosend, rpc);\n        }\n        else {\n            // Send to set of peers aggregated from direct, mesh, fanout\n            for (const id of tosend) {\n                // sendRpc may mutate RPC message on piggyback, create a new message for each peer\n                const sent = this.sendRpc(id, rpc);\n                // did not actually send the message\n                if (!sent) {\n                    tosend.delete(id);\n                }\n            }\n        }\n        const durationMs = Date.now() - startMs;\n        this.metrics?.onPublishMsg(topic, tosendCount, tosend.size, rawMsg.data != null ? rawMsg.data.length : 0, durationMs);\n        // Dispatch the message to the user if we are subscribed to the topic\n        if (willSendToSelf) {\n            tosend.add(this.components.peerId.toString());\n            super.dispatchEvent(new CustomEvent('gossipsub:message', {\n                detail: {\n                    propagationSource: this.components.peerId,\n                    msgId: msgIdStr,\n                    msg\n                }\n            }));\n            // TODO: Add option to switch between emit per topic or all messages in one\n            super.dispatchEvent(new CustomEvent('message', { detail: msg }));\n        }\n        return {\n            recipients: Array.from(tosend.values()).map((str) => this.peers.get(str) ?? peerIdFromString(str))\n        };\n    }\n    /**\n     * Send the same data in batch to tosend list without considering cached control messages\n     * This is not only faster but also avoid allocating memory for each peer\n     * see https://github.com/ChainSafe/js-libp2p-gossipsub/issues/344\n     */\n    sendRpcInBatch(tosend, rpc) {\n        const rpcBytes = RPC.encode(rpc);\n        const prefixedData = encode.single(rpcBytes);\n        for (const id of tosend) {\n            const outboundStream = this.streamsOutbound.get(id);\n            if (outboundStream == null) {\n                this.log(`Cannot send RPC to ${id} as there is no open stream to it available`);\n                tosend.delete(id);\n                continue;\n            }\n            try {\n                outboundStream.pushPrefixed(prefixedData);\n            }\n            catch (e) {\n                tosend.delete(id);\n                this.log.error(`Cannot send rpc to ${id}`, e);\n            }\n            this.metrics?.onRpcSent(rpc, rpcBytes.length);\n        }\n    }\n    /**\n     * This function should be called when `asyncValidation` is `true` after\n     * the message got validated by the caller. Messages are stored in the `mcache` and\n     * validation is expected to be fast enough that the messages should still exist in the cache.\n     * There are three possible validation outcomes and the outcome is given in acceptance.\n     *\n     * If acceptance = `MessageAcceptance.Accept` the message will get propagated to the\n     * network. The `propagation_source` parameter indicates who the message was received by and\n     * will not be forwarded back to that peer.\n     *\n     * If acceptance = `MessageAcceptance.Reject` the message will be deleted from the memcache\n     * and the P₄ penalty will be applied to the `propagationSource`.\n     *\n     * If acceptance = `MessageAcceptance.Ignore` the message will be deleted from the memcache\n     * but no P₄ penalty will be applied.\n     *\n     * This function will return true if the message was found in the cache and false if was not\n     * in the cache anymore.\n     *\n     * This should only be called once per message.\n     */\n    reportMessageValidationResult(msgId, propagationSource, acceptance) {\n        let cacheEntry;\n        if (acceptance === TopicValidatorResult.Accept) {\n            cacheEntry = this.mcache.validate(msgId);\n            if (cacheEntry != null) {\n                const { message: rawMsg, originatingPeers } = cacheEntry;\n                // message is fully validated inform peer_score\n                this.score.deliverMessage(propagationSource, msgId, rawMsg.topic);\n                this.forwardMessage(msgId, cacheEntry.message, propagationSource, originatingPeers);\n            }\n            // else, Message not in cache. Ignoring forwarding\n        }\n        else {\n            // Not valid\n            cacheEntry = this.mcache.remove(msgId);\n            if (cacheEntry != null) {\n                const rejectReason = rejectReasonFromAcceptance(acceptance);\n                const { message: rawMsg, originatingPeers } = cacheEntry;\n                // Tell peer_score about reject\n                // Reject the original source, and any duplicates we've seen from other peers.\n                this.score.rejectMessage(propagationSource, msgId, rawMsg.topic, rejectReason);\n                for (const peer of originatingPeers) {\n                    this.score.rejectMessage(peer, msgId, rawMsg.topic, rejectReason);\n                }\n            }\n            // else, Message not in cache. Ignoring forwarding\n        }\n        const firstSeenTimestampMs = this.score.messageFirstSeenTimestampMs(msgId);\n        this.metrics?.onReportValidation(cacheEntry, acceptance, firstSeenTimestampMs);\n    }\n    /**\n     * Sends a GRAFT message to a peer\n     */\n    sendGraft(id, topic) {\n        const graft = [\n            {\n                topicID: topic\n            }\n        ];\n        const out = createGossipRpc([], { graft });\n        this.sendRpc(id, out);\n    }\n    /**\n     * Sends a PRUNE message to a peer\n     */\n    async sendPrune(id, topic) {\n        // this is only called from leave() function\n        const onUnsubscribe = true;\n        const prune = [await this.makePrune(id, topic, this.opts.doPX, onUnsubscribe)];\n        const out = createGossipRpc([], { prune });\n        this.sendRpc(id, out);\n    }\n    sendIDontWants(msgId, topic, source) {\n        const ids = this.mesh.get(topic);\n        if (ids == null) {\n            return;\n        }\n        // don't send IDONTWANT to:\n        // - the source\n        // - peers that don't support v1.2\n        const tosend = new Set(ids);\n        tosend.delete(source);\n        for (const id of tosend) {\n            if (this.streamsOutbound.get(id)?.protocol !== constants.GossipsubIDv12) {\n                tosend.delete(id);\n            }\n        }\n        const idontwantRpc = createGossipRpc([], { idontwant: [{ messageIDs: [msgId] }] });\n        this.sendRpcInBatch(tosend, idontwantRpc);\n    }\n    /**\n     * Send an rpc object to a peer\n     */\n    sendRpc(id, rpc) {\n        const outboundStream = this.streamsOutbound.get(id);\n        if (outboundStream == null) {\n            this.log(`Cannot send RPC to ${id} as there is no open stream to it available`);\n            return false;\n        }\n        // piggyback control message retries\n        const ctrl = this.control.get(id);\n        if (ctrl != null) {\n            this.piggybackControl(id, rpc, ctrl);\n            this.control.delete(id);\n        }\n        // piggyback gossip\n        const ihave = this.gossip.get(id);\n        if (ihave != null) {\n            this.piggybackGossip(id, rpc, ihave);\n            this.gossip.delete(id);\n        }\n        const rpcBytes = RPC.encode(rpc);\n        try {\n            outboundStream.push(rpcBytes);\n        }\n        catch (e) {\n            this.log.error(`Cannot send rpc to ${id}`, e);\n            // if the peer had control messages or gossip, re-attach\n            if (ctrl != null) {\n                this.control.set(id, ctrl);\n            }\n            if (ihave != null) {\n                this.gossip.set(id, ihave);\n            }\n            return false;\n        }\n        this.metrics?.onRpcSent(rpc, rpcBytes.length);\n        if (rpc.control?.graft != null) {\n            for (const topic of rpc.control?.graft) {\n                if (topic.topicID != null) {\n                    this.safeDispatchEvent('gossipsub:graft', { detail: { peerId: id, topic: topic.topicID, direction: 'outbound' } });\n                }\n            }\n        }\n        if (rpc.control?.prune != null) {\n            for (const topic of rpc.control?.prune) {\n                if (topic.topicID != null) {\n                    this.safeDispatchEvent('gossipsub:prune', { detail: { peerId: id, topic: topic.topicID, direction: 'outbound' } });\n                }\n            }\n        }\n        return true;\n    }\n    /** Mutates `outRpc` adding graft and prune control messages */\n    piggybackControl(id, outRpc, ctrl) {\n        const rpc = ensureControl(outRpc);\n        for (const graft of ctrl.graft) {\n            if (graft.topicID != null && (this.mesh.get(graft.topicID)?.has(id) ?? false)) {\n                rpc.control.graft.push(graft);\n            }\n        }\n        for (const prune of ctrl.prune) {\n            if (prune.topicID != null && !(this.mesh.get(prune.topicID)?.has(id) ?? false)) {\n                rpc.control.prune.push(prune);\n            }\n        }\n    }\n    /** Mutates `outRpc` adding ihave control messages */\n    piggybackGossip(id, outRpc, ihave) {\n        const rpc = ensureControl(outRpc);\n        rpc.control.ihave = ihave;\n    }\n    /**\n     * Send graft and prune messages\n     *\n     * @param tograft - peer id => topic[]\n     * @param toprune - peer id => topic[]\n     */\n    async sendGraftPrune(tograft, toprune, noPX) {\n        const doPX = this.opts.doPX;\n        const onUnsubscribe = false;\n        for (const [id, topics] of tograft) {\n            const graft = topics.map((topicID) => ({ topicID }));\n            let prune = [];\n            // If a peer also has prunes, process them now\n            const pruning = toprune.get(id);\n            if (pruning != null) {\n                prune = await Promise.all(pruning.map(async (topicID) => this.makePrune(id, topicID, doPX && !(noPX.get(id) ?? false), onUnsubscribe)));\n                toprune.delete(id);\n            }\n            this.sendRpc(id, createGossipRpc([], { graft, prune }));\n        }\n        for (const [id, topics] of toprune) {\n            const prune = await Promise.all(topics.map(async (topicID) => this.makePrune(id, topicID, doPX && !(noPX.get(id) ?? false), onUnsubscribe)));\n            this.sendRpc(id, createGossipRpc([], { prune }));\n        }\n    }\n    /**\n     * Emits gossip - Send IHAVE messages to a random set of gossip peers\n     */\n    emitGossip(peersToGossipByTopic) {\n        const gossipIDsByTopic = this.mcache.getGossipIDs(new Set(peersToGossipByTopic.keys()));\n        for (const [topic, peersToGossip] of peersToGossipByTopic) {\n            this.doEmitGossip(topic, peersToGossip, gossipIDsByTopic.get(topic) ?? []);\n        }\n    }\n    /**\n     * Send gossip messages to GossipFactor peers above threshold with a minimum of D_lazy\n     * Peers are randomly selected from the heartbeat which exclude mesh + fanout peers\n     * We also exclude direct peers, as there is no reason to emit gossip to them\n     *\n     * @param topic\n     * @param candidateToGossip - peers to gossip\n     * @param messageIDs - message ids to gossip\n     */\n    doEmitGossip(topic, candidateToGossip, messageIDs) {\n        if (messageIDs.length === 0) {\n            return;\n        }\n        // shuffle to emit in random order\n        shuffle(messageIDs);\n        // if we are emitting more than GossipsubMaxIHaveLength ids, truncate the list\n        if (messageIDs.length > constants.GossipsubMaxIHaveLength) {\n            // we do the truncation (with shuffling) per peer below\n            this.log('too many messages for gossip; will truncate IHAVE list (%d messages)', messageIDs.length);\n        }\n        if (candidateToGossip.size === 0) {\n            return;\n        }\n        let target = this.opts.Dlazy;\n        const gossipFactor = this.opts.gossipFactor;\n        const factor = gossipFactor * candidateToGossip.size;\n        let peersToGossip = candidateToGossip;\n        if (factor > target) {\n            target = factor;\n        }\n        if (target > peersToGossip.size) {\n            target = peersToGossip.size;\n        }\n        else {\n            // only shuffle if needed\n            peersToGossip = shuffle(Array.from(peersToGossip)).slice(0, target);\n        }\n        // Emit the IHAVE gossip to the selected peers up to the target\n        peersToGossip.forEach((id) => {\n            let peerMessageIDs = messageIDs;\n            if (messageIDs.length > constants.GossipsubMaxIHaveLength) {\n                // shuffle and slice message IDs per peer so that we emit a different set for each peer\n                // we have enough reduncancy in the system that this will significantly increase the message\n                // coverage when we do truncate\n                peerMessageIDs = shuffle(peerMessageIDs.slice()).slice(0, constants.GossipsubMaxIHaveLength);\n            }\n            this.pushGossip(id, {\n                topicID: topic,\n                messageIDs: peerMessageIDs\n            });\n        });\n    }\n    /**\n     * Flush gossip and control messages\n     */\n    flush() {\n        // send gossip first, which will also piggyback control\n        for (const [peer, ihave] of this.gossip.entries()) {\n            this.gossip.delete(peer);\n            this.sendRpc(peer, createGossipRpc([], { ihave }));\n        }\n        // send the remaining control messages\n        for (const [peer, control] of this.control.entries()) {\n            this.control.delete(peer);\n            const out = createGossipRpc([], { graft: control.graft, prune: control.prune });\n            this.sendRpc(peer, out);\n        }\n    }\n    /**\n     * Adds new IHAVE messages to pending gossip\n     */\n    pushGossip(id, controlIHaveMsgs) {\n        this.log('Add gossip to %s', id);\n        const gossip = this.gossip.get(id) ?? [];\n        this.gossip.set(id, gossip.concat(controlIHaveMsgs));\n    }\n    /**\n     * Make a PRUNE control message for a peer in a topic\n     */\n    async makePrune(id, topic, doPX, onUnsubscribe) {\n        this.score.prune(id, topic);\n        if (this.streamsOutbound.get(id)?.protocol === constants.GossipsubIDv10) {\n            // Gossipsub v1.0 -- no backoff, the peer won't be able to parse it anyway\n            return {\n                topicID: topic,\n                peers: []\n            };\n        }\n        // backoff is measured in seconds\n        // GossipsubPruneBackoff and GossipsubUnsubscribeBackoff are measured in milliseconds\n        // The protobuf has it as a uint64\n        const backoffMs = onUnsubscribe ? this.opts.unsubcribeBackoff : this.opts.pruneBackoff;\n        const backoff = backoffMs / 1000;\n        this.doAddBackoff(id, topic, backoffMs);\n        if (!doPX) {\n            return {\n                topicID: topic,\n                peers: [],\n                backoff\n            };\n        }\n        // select peers for Peer eXchange\n        const peers = this.getRandomGossipPeers(topic, this.opts.prunePeers, (xid) => {\n            return xid !== id && this.score.score(xid) >= 0;\n        });\n        const px = await Promise.all(Array.from(peers).map(async (peerId) => {\n            // see if we have a signed record to send back; if we don't, just send\n            // the peer ID and let the pruned peer find them in the DHT -- we can't trust\n            // unsigned address records through PX anyways\n            // Finding signed records in the DHT is not supported at the time of writing in js-libp2p\n            const id = this.peers.get(peerId) ?? peerIdFromString(peerId);\n            let peerInfo;\n            try {\n                peerInfo = await this.components.peerStore.get(id);\n            }\n            catch (err) {\n                if (err.name !== 'NotFoundError') {\n                    throw err;\n                }\n            }\n            return {\n                peerID: id.toMultihash().bytes,\n                signedPeerRecord: peerInfo?.peerRecordEnvelope\n            };\n        }));\n        return {\n            topicID: topic,\n            peers: px,\n            backoff\n        };\n    }\n    runHeartbeat = () => {\n        const timer = this.metrics?.heartbeatDuration.startTimer();\n        this.heartbeat()\n            .catch((err) => {\n            this.log('Error running heartbeat', err);\n        })\n            .finally(() => {\n            if (timer != null) {\n                timer();\n            }\n            // Schedule the next run if still in started status\n            if (this.status.code === GossipStatusCode.started) {\n                // Clear previous timeout before overwriting `status.heartbeatTimeout`, it should be completed tho.\n                clearTimeout(this.status.heartbeatTimeout);\n                // NodeJS setInterval function is innexact, calls drift by a few miliseconds on each call.\n                // To run the heartbeat precisely setTimeout() must be used recomputing the delay on every loop.\n                let msToNextHeartbeat = this.opts.heartbeatInterval - ((Date.now() - this.status.hearbeatStartMs) % this.opts.heartbeatInterval);\n                // If too close to next heartbeat, skip one\n                if (msToNextHeartbeat < this.opts.heartbeatInterval * 0.25) {\n                    msToNextHeartbeat += this.opts.heartbeatInterval;\n                    this.metrics?.heartbeatSkipped.inc();\n                }\n                this.status.heartbeatTimeout = setTimeout(this.runHeartbeat, msToNextHeartbeat);\n            }\n        });\n    };\n    /**\n     * Maintains the mesh and fanout maps in gossipsub.\n     */\n    async heartbeat() {\n        const { D, Dlo, Dhi, Dscore, Dout, fanoutTTL } = this.opts;\n        this.heartbeatTicks++;\n        // cache scores throught the heartbeat\n        const scores = new Map();\n        const getScore = (id) => {\n            let s = scores.get(id);\n            if (s === undefined) {\n                s = this.score.score(id);\n                scores.set(id, s);\n            }\n            return s;\n        };\n        // peer id => topic[]\n        const tograft = new Map();\n        // peer id => topic[]\n        const toprune = new Map();\n        // peer id => don't px\n        const noPX = new Map();\n        // clean up expired backoffs\n        this.clearBackoff();\n        // clean up peerhave/iasked counters\n        this.peerhave.clear();\n        this.metrics?.cacheSize.set({ cache: 'iasked' }, this.iasked.size);\n        this.iasked.clear();\n        // apply IWANT request penalties\n        this.applyIwantPenalties();\n        // clean up IDONTWANT counters\n        this.idontwantCounts.clear();\n        // clean up old tracked IDONTWANTs\n        for (const idontwants of this.idontwants.values()) {\n            for (const [msgId, heartbeatTick] of idontwants) {\n                if (this.heartbeatTicks - heartbeatTick >= this.opts.mcacheLength) {\n                    idontwants.delete(msgId);\n                }\n            }\n        }\n        // ensure direct peers are connected\n        if (this.heartbeatTicks % this.opts.directConnectTicks === 0) {\n            // we only do this every few ticks to allow pending connections to complete and account for restarts/downtime\n            await this.directConnect();\n        }\n        // EXTRA: Prune caches\n        this.fastMsgIdCache?.prune();\n        this.seenCache.prune();\n        this.gossipTracer.prune();\n        this.publishedMessageIds.prune();\n        /**\n         * Instead of calling getRandomGossipPeers multiple times to:\n         * + get more mesh peers\n         * + more outbound peers\n         * + oppportunistic grafting\n         * + emitGossip\n         *\n         * We want to loop through the topic peers only a single time and prepare gossip peers for all topics to improve the performance\n         */\n        const peersToGossipByTopic = new Map();\n        // maintain the mesh for topics we have joined\n        // eslint-disable-next-line complexity\n        this.mesh.forEach((peers, topic) => {\n            const peersInTopic = this.topics.get(topic);\n            const candidateMeshPeers = new Set();\n            const peersToGossip = new Set();\n            peersToGossipByTopic.set(topic, peersToGossip);\n            if (peersInTopic != null) {\n                const shuffledPeers = shuffle(Array.from(peersInTopic));\n                const backoff = this.backoff.get(topic);\n                for (const id of shuffledPeers) {\n                    const peerStreams = this.streamsOutbound.get(id);\n                    if ((peerStreams != null) &&\n                        this.protocols.includes(peerStreams.protocol) &&\n                        !peers.has(id) &&\n                        !this.direct.has(id)) {\n                        const score = getScore(id);\n                        if (backoff?.has(id) !== true && score >= 0) {\n                            candidateMeshPeers.add(id);\n                        }\n                        // instead of having to find gossip peers after heartbeat which require another loop\n                        // we prepare peers to gossip in a topic within heartbeat to improve performance\n                        if (score >= this.opts.scoreThresholds.gossipThreshold) {\n                            peersToGossip.add(id);\n                        }\n                    }\n                }\n            }\n            // prune/graft helper functions (defined per topic)\n            const prunePeer = (id, reason) => {\n                this.log('HEARTBEAT: Remove mesh link to %s in %s', id, topic);\n                // no need to update peer score here as we do it in makePrune\n                // add prune backoff record\n                this.addBackoff(id, topic);\n                // remove peer from mesh\n                peers.delete(id);\n                // after pruning a peer from mesh, we want to gossip topic to it if its score meet the gossip threshold\n                if (getScore(id) >= this.opts.scoreThresholds.gossipThreshold) {\n                    peersToGossip.add(id);\n                }\n                this.metrics?.onRemoveFromMesh(topic, reason, 1);\n                // add to toprune\n                const topics = toprune.get(id);\n                if (topics == null) {\n                    toprune.set(id, [topic]);\n                }\n                else {\n                    topics.push(topic);\n                }\n            };\n            const graftPeer = (id, reason) => {\n                this.log('HEARTBEAT: Add mesh link to %s in %s', id, topic);\n                // update peer score\n                this.score.graft(id, topic);\n                // add peer to mesh\n                peers.add(id);\n                // when we add a new mesh peer, we don't want to gossip messages to it\n                peersToGossip.delete(id);\n                this.metrics?.onAddToMesh(topic, reason, 1);\n                // add to tograft\n                const topics = tograft.get(id);\n                if (topics == null) {\n                    tograft.set(id, [topic]);\n                }\n                else {\n                    topics.push(topic);\n                }\n            };\n            // drop all peers with negative score, without PX\n            peers.forEach((id) => {\n                const score = getScore(id);\n                // Record the score\n                if (score < 0) {\n                    this.log('HEARTBEAT: Prune peer %s with negative score: score=%d, topic=%s', id, score, topic);\n                    prunePeer(id, ChurnReason.BadScore);\n                    noPX.set(id, true);\n                }\n            });\n            // do we have enough peers?\n            if (peers.size < Dlo) {\n                const ineed = D - peers.size;\n                // slice up to first `ineed` items and remove them from candidateMeshPeers\n                // same to `const newMeshPeers = candidateMeshPeers.slice(0, ineed)`\n                const newMeshPeers = removeFirstNItemsFromSet(candidateMeshPeers, ineed);\n                newMeshPeers.forEach((p) => {\n                    graftPeer(p, InclusionReason.NotEnough);\n                });\n            }\n            // do we have to many peers?\n            if (peers.size > Dhi) {\n                let peersArray = Array.from(peers);\n                // sort by score\n                peersArray.sort((a, b) => getScore(b) - getScore(a));\n                // We keep the first D_score peers by score and the remaining up to D randomly\n                // under the constraint that we keep D_out peers in the mesh (if we have that many)\n                peersArray = peersArray.slice(0, Dscore).concat(shuffle(peersArray.slice(Dscore)));\n                // count the outbound peers we are keeping\n                let outbound = 0;\n                peersArray.slice(0, D).forEach((p) => {\n                    if (this.outbound.get(p) ?? false) {\n                        outbound++;\n                    }\n                });\n                // if it's less than D_out, bubble up some outbound peers from the random selection\n                if (outbound < Dout) {\n                    const rotate = (i) => {\n                        // rotate the peersArray to the right and put the ith peer in the front\n                        const p = peersArray[i];\n                        for (let j = i; j > 0; j--) {\n                            peersArray[j] = peersArray[j - 1];\n                        }\n                        peersArray[0] = p;\n                    };\n                    // first bubble up all outbound peers already in the selection to the front\n                    if (outbound > 0) {\n                        let ihave = outbound;\n                        for (let i = 1; i < D && ihave > 0; i++) {\n                            // eslint-disable-next-line max-depth\n                            if (this.outbound.get(peersArray[i]) ?? false) {\n                                rotate(i);\n                                ihave--;\n                            }\n                        }\n                    }\n                    // now bubble up enough outbound peers outside the selection to the front\n                    let ineed = D - outbound;\n                    for (let i = D; i < peersArray.length && ineed > 0; i++) {\n                        if (this.outbound.get(peersArray[i]) ?? false) {\n                            rotate(i);\n                            ineed--;\n                        }\n                    }\n                }\n                // prune the excess peers\n                peersArray.slice(D).forEach((p) => {\n                    prunePeer(p, ChurnReason.Excess);\n                });\n            }\n            // do we have enough outbound peers?\n            if (peers.size >= Dlo) {\n                // count the outbound peers we have\n                let outbound = 0;\n                peers.forEach((p) => {\n                    if (this.outbound.get(p) ?? false) {\n                        outbound++;\n                    }\n                });\n                // if it's less than D_out, select some peers with outbound connections and graft them\n                if (outbound < Dout) {\n                    const ineed = Dout - outbound;\n                    const newMeshPeers = removeItemsFromSet(candidateMeshPeers, ineed, (id) => this.outbound.get(id) === true);\n                    newMeshPeers.forEach((p) => {\n                        graftPeer(p, InclusionReason.Outbound);\n                    });\n                }\n            }\n            // should we try to improve the mesh with opportunistic grafting?\n            if (this.heartbeatTicks % this.opts.opportunisticGraftTicks === 0 && peers.size > 1) {\n                // Opportunistic grafting works as follows: we check the median score of peers in the\n                // mesh; if this score is below the opportunisticGraftThreshold, we select a few peers at\n                // random with score over the median.\n                // The intention is to (slowly) improve an underperforming mesh by introducing good\n                // scoring peers that may have been gossiping at us. This allows us to get out of sticky\n                // situations where we are stuck with poor peers and also recover from churn of good peers.\n                // now compute the median peer score in the mesh\n                const peersList = Array.from(peers).sort((a, b) => getScore(a) - getScore(b));\n                const medianIndex = Math.floor(peers.size / 2);\n                const medianScore = getScore(peersList[medianIndex]);\n                // if the median score is below the threshold, select a better peer (if any) and GRAFT\n                if (medianScore < this.opts.scoreThresholds.opportunisticGraftThreshold) {\n                    const ineed = this.opts.opportunisticGraftPeers;\n                    const newMeshPeers = removeItemsFromSet(candidateMeshPeers, ineed, (id) => getScore(id) > medianScore);\n                    for (const id of newMeshPeers) {\n                        this.log('HEARTBEAT: Opportunistically graft peer %s on topic %s', id, topic);\n                        graftPeer(id, InclusionReason.Opportunistic);\n                    }\n                }\n            }\n        });\n        // expire fanout for topics we haven't published to in a while\n        const now = Date.now();\n        this.fanoutLastpub.forEach((lastpb, topic) => {\n            if (lastpb + fanoutTTL < now) {\n                this.fanout.delete(topic);\n                this.fanoutLastpub.delete(topic);\n            }\n        });\n        // maintain our fanout for topics we are publishing but we have not joined\n        this.fanout.forEach((fanoutPeers, topic) => {\n            // checks whether our peers are still in the topic and have a score above the publish threshold\n            const topicPeers = this.topics.get(topic);\n            fanoutPeers.forEach((id) => {\n                if (!(topicPeers?.has(id) ?? false) || getScore(id) < this.opts.scoreThresholds.publishThreshold) {\n                    fanoutPeers.delete(id);\n                }\n            });\n            const peersInTopic = this.topics.get(topic);\n            const candidateFanoutPeers = [];\n            // the fanout map contains topics to which we are not subscribed.\n            const peersToGossip = new Set();\n            peersToGossipByTopic.set(topic, peersToGossip);\n            if (peersInTopic != null) {\n                const shuffledPeers = shuffle(Array.from(peersInTopic));\n                for (const id of shuffledPeers) {\n                    const peerStreams = this.streamsOutbound.get(id);\n                    if ((peerStreams != null) &&\n                        this.protocols.includes(peerStreams.protocol) &&\n                        !fanoutPeers.has(id) &&\n                        !this.direct.has(id)) {\n                        const score = getScore(id);\n                        if (score >= this.opts.scoreThresholds.publishThreshold) {\n                            candidateFanoutPeers.push(id);\n                        }\n                        // instead of having to find gossip peers after heartbeat which require another loop\n                        // we prepare peers to gossip in a topic within heartbeat to improve performance\n                        if (score >= this.opts.scoreThresholds.gossipThreshold) {\n                            peersToGossip.add(id);\n                        }\n                    }\n                }\n            }\n            // do we need more peers?\n            if (fanoutPeers.size < D) {\n                const ineed = D - fanoutPeers.size;\n                candidateFanoutPeers.slice(0, ineed).forEach((id) => {\n                    fanoutPeers.add(id);\n                    peersToGossip?.delete(id);\n                });\n            }\n        });\n        this.emitGossip(peersToGossipByTopic);\n        // send coalesced GRAFT/PRUNE messages (will piggyback gossip)\n        await this.sendGraftPrune(tograft, toprune, noPX);\n        // flush pending gossip that wasn't piggybacked above\n        this.flush();\n        // advance the message history window\n        this.mcache.shift();\n        this.dispatchEvent(new CustomEvent('gossipsub:heartbeat'));\n    }\n    /**\n     * Given a topic, returns up to count peers subscribed to that topic\n     * that pass an optional filter function\n     *\n     * @param topic\n     * @param count\n     * @param filter - a function to filter acceptable peers\n     */\n    getRandomGossipPeers(topic, count, filter = () => true) {\n        const peersInTopic = this.topics.get(topic);\n        if (peersInTopic == null) {\n            return new Set();\n        }\n        // Adds all peers using our protocol\n        // that also pass the filter function\n        let peers = [];\n        peersInTopic.forEach((id) => {\n            const peerStreams = this.streamsOutbound.get(id);\n            if (peerStreams == null) {\n                return;\n            }\n            if (this.protocols.includes(peerStreams.protocol) && filter(id)) {\n                peers.push(id);\n            }\n        });\n        // Pseudo-randomly shuffles peers\n        peers = shuffle(peers);\n        if (count > 0 && peers.length > count) {\n            peers = peers.slice(0, count);\n        }\n        return new Set(peers);\n    }\n    onScrapeMetrics(metrics) {\n        /* Data structure sizes */\n        metrics.mcacheSize.set(this.mcache.size);\n        metrics.mcacheNotValidatedCount.set(this.mcache.notValidatedCount);\n        // Arbitrary size\n        metrics.cacheSize.set({ cache: 'direct' }, this.direct.size);\n        metrics.cacheSize.set({ cache: 'seenCache' }, this.seenCache.size);\n        metrics.cacheSize.set({ cache: 'fastMsgIdCache' }, this.fastMsgIdCache?.size ?? 0);\n        metrics.cacheSize.set({ cache: 'publishedMessageIds' }, this.publishedMessageIds.size);\n        metrics.cacheSize.set({ cache: 'mcache' }, this.mcache.size);\n        metrics.cacheSize.set({ cache: 'score' }, this.score.size);\n        metrics.cacheSize.set({ cache: 'gossipTracer.promises' }, this.gossipTracer.size);\n        metrics.cacheSize.set({ cache: 'gossipTracer.requests' }, this.gossipTracer.requestMsByMsgSize);\n        // Bounded by topic\n        metrics.cacheSize.set({ cache: 'topics' }, this.topics.size);\n        metrics.cacheSize.set({ cache: 'subscriptions' }, this.subscriptions.size);\n        metrics.cacheSize.set({ cache: 'mesh' }, this.mesh.size);\n        metrics.cacheSize.set({ cache: 'fanout' }, this.fanout.size);\n        // Bounded by peer\n        metrics.cacheSize.set({ cache: 'peers' }, this.peers.size);\n        metrics.cacheSize.set({ cache: 'streamsOutbound' }, this.streamsOutbound.size);\n        metrics.cacheSize.set({ cache: 'streamsInbound' }, this.streamsInbound.size);\n        metrics.cacheSize.set({ cache: 'acceptFromWhitelist' }, this.acceptFromWhitelist.size);\n        metrics.cacheSize.set({ cache: 'gossip' }, this.gossip.size);\n        metrics.cacheSize.set({ cache: 'control' }, this.control.size);\n        metrics.cacheSize.set({ cache: 'peerhave' }, this.peerhave.size);\n        metrics.cacheSize.set({ cache: 'outbound' }, this.outbound.size);\n        // 2D nested data structure\n        let backoffSize = 0;\n        const now = Date.now();\n        metrics.connectedPeersBackoffSec.reset();\n        for (const backoff of this.backoff.values()) {\n            backoffSize += backoff.size;\n            for (const [peer, expiredMs] of backoff.entries()) {\n                if (this.peers.has(peer)) {\n                    metrics.connectedPeersBackoffSec.observe(Math.max(0, expiredMs - now) / 1000);\n                }\n            }\n        }\n        metrics.cacheSize.set({ cache: 'backoff' }, backoffSize);\n        let idontwantsCount = 0;\n        for (const idontwant of this.idontwants.values()) {\n            idontwantsCount += idontwant.size;\n        }\n        metrics.cacheSize.set({ cache: 'idontwants' }, idontwantsCount);\n        // Peer counts\n        for (const [topicStr, peers] of this.topics) {\n            metrics.topicPeersCount.set({ topicStr }, peers.size);\n        }\n        for (const [topicStr, peers] of this.mesh) {\n            metrics.meshPeerCounts.set({ topicStr }, peers.size);\n        }\n        // Peer scores\n        const scores = [];\n        const scoreByPeer = new Map();\n        metrics.behaviourPenalty.reset();\n        for (const peerIdStr of this.peers.keys()) {\n            const score = this.score.score(peerIdStr);\n            scores.push(score);\n            scoreByPeer.set(peerIdStr, score);\n            metrics.behaviourPenalty.observe(this.score.peerStats.get(peerIdStr)?.behaviourPenalty ?? 0);\n        }\n        metrics.registerScores(scores, this.opts.scoreThresholds);\n        // Breakdown score per mesh topicLabel\n        metrics.registerScorePerMesh(this.mesh, scoreByPeer);\n        // Breakdown on each score weight\n        const sw = computeAllPeersScoreWeights(this.peers.keys(), this.score.peerStats, this.score.params, this.score.peerIPs, metrics.topicStrToLabel);\n        metrics.registerScoreWeights(sw);\n    }\n    tagMeshPeer = (evt) => {\n        const { peerId, topic } = evt.detail;\n        this.components.peerStore.merge(this.peers.get(peerId) ?? peerIdFromString(peerId), {\n            tags: {\n                [topic]: {\n                    value: 100\n                }\n            }\n        }).catch((err) => { this.log.error('Error tagging peer %s with topic %s', peerId, topic, err); });\n    };\n    untagMeshPeer = (evt) => {\n        const { peerId, topic } = evt.detail;\n        this.components.peerStore.merge(this.peers.get(peerId) ?? peerIdFromString(peerId), {\n            tags: {\n                [topic]: undefined\n            }\n        }).catch((err) => { this.log.error('Error untagging peer %s with topic %s', peerId, topic, err); });\n    };\n}\n//# sourceMappingURL=gossipsub.js.map","import * as constants from './constants.js';\nimport { GossipSub as GossipSubClass } from \"./gossipsub.js\";\nimport { MessageCache } from './message-cache.js';\n/**\n * On the producing side:\n * - Build messages with the signature, key (from may be enough for certain inlineable public key types), from and seqno fields.\n *\n * On the consuming side:\n * - Enforce the fields to be present, reject otherwise.\n * - Propagate only if the fields are valid and signature can be verified, reject otherwise.\n */\nexport const StrictSign = 'StrictSign';\n/**\n * On the producing side:\n * - Build messages without the signature, key, from and seqno fields.\n * - The corresponding protobuf key-value pairs are absent from the marshaled message, not just empty.\n *\n * On the consuming side:\n * - Enforce the fields to be absent, reject otherwise.\n * - Propagate only if the fields are absent, reject otherwise.\n * - A message_id function will not be able to use the above fields, and should instead rely on the data field. A commonplace strategy is to calculate a hash.\n */\nexport const StrictNoSign = 'StrictNoSign';\nexport var TopicValidatorResult;\n(function (TopicValidatorResult) {\n    /**\n     * The message is considered valid, and it should be delivered and forwarded to the network\n     */\n    TopicValidatorResult[\"Accept\"] = \"accept\";\n    /**\n     * The message is neither delivered nor forwarded to the network\n     */\n    TopicValidatorResult[\"Ignore\"] = \"ignore\";\n    /**\n     * The message is considered invalid, and it should be rejected\n     */\n    TopicValidatorResult[\"Reject\"] = \"reject\";\n})(TopicValidatorResult || (TopicValidatorResult = {}));\nexport const multicodec = constants.GossipsubIDv12;\nexport function gossipsub(init = {}) {\n    return (components) => new GossipSubClass(components, init);\n}\n//# sourceMappingURL=index.js.map","import { decodeMessage, encodeMessage, MaxLengthError, message } from 'protons-runtime';\nimport { alloc as uint8ArrayAlloc } from 'uint8arrays/alloc';\nexport var Peer;\n(function (Peer) {\n    let _codec;\n    Peer.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if ((obj.publicKey != null && obj.publicKey.byteLength > 0)) {\n                    w.uint32(10);\n                    w.bytes(obj.publicKey);\n                }\n                if (obj.addrs != null) {\n                    for (const value of obj.addrs) {\n                        w.uint32(18);\n                        w.bytes(value);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    publicKey: uint8ArrayAlloc(0),\n                    addrs: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.publicKey = reader.bytes();\n                            break;\n                        }\n                        case 2: {\n                            if (opts.limits?.addrs != null && obj.addrs.length === opts.limits.addrs) {\n                                throw new MaxLengthError('Decode error - map field \"addrs\" had too many elements');\n                            }\n                            obj.addrs.push(reader.bytes());\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    Peer.encode = (obj) => {\n        return encodeMessage(obj, Peer.codec());\n    };\n    Peer.decode = (buf, opts) => {\n        return decodeMessage(buf, Peer.codec(), opts);\n    };\n})(Peer || (Peer = {}));\n//# sourceMappingURL=peer.js.map","/**\n * @packageDocumentation\n *\n * When the discovery module is started by libp2p it subscribes to the discovery pubsub topic(s)\n *\n * It will immediately broadcast your peer data via pubsub and repeat the broadcast on the configured `interval`\n *\n * ## Security Considerations\n *\n * It is worth noting that this module does not include any message signing for broadcasts. The reason for this is that libp2p-pubsub supports message signing and enables it by default, which means the message you received has been verified to be from the originator, so we can trust that the peer information we have received is indeed from the peer who owns it. This doesn't mean the peer can't falsify its own records, but this module isn't currently concerned with that scenario.\n *\n * ## Requirements\n *\n * This module *MUST* be used on a libp2p node that is running [Pubsub](https://github.com/libp2p/js-libp2p-pubsub). If Pubsub does not exist, or is not running, this module will not work.\n *\n * To run a PubSub service, include a `pubsub` implementation in your services map such as `@chainsafe/libp2p-gossipsub`.\n *\n * For more information see the [docs on customizing libp2p](https://github.com/libp2p/js-libp2p/blob/main/doc/CONFIGURATION.md#customizing-libp2p).\n *\n * @example Usage in js-libp2p\n *\n * See the [js-libp2p configuration docs](https://github.com/libp2p/js-libp2p/blob/main/doc/CONFIGURATION.md#customizing-peer-discovery) for how to include this module as a peer discovery module in js-libp2p.\n *\n * If you are only interested in listening to the global pubsub topic the minimal configuration for using this with libp2p is:\n *\n * ```ts\n * import { createLibp2p } from 'libp2p'\n * import { websockets } from '@libp2p/websockets'\n * import { yamux } from '@chainsafe/libp2p-yamux'\n * import { noise } from '@chainsafe/libp2p-noise'\n * import { gossipsub } from '@chainsafe/libp2p-gossipsub'\n * import { pubsubPeerDiscovery } from '@libp2p/pubsub-peer-discovery'\n * import { identify } from 'libp2p/identify'\n *\n * const node = await createLibp2p({\n *   transports: [\n *     websockets()\n *   ], // Any libp2p transport(s) can be used\n *   streamMuxers: [\n *     yamux()\n *   ],\n *   connectionEncryption: [\n *     noise()\n *   ],\n *   peerDiscovery: [\n *     pubsubPeerDiscovery()\n *   ],\n *   services: {\n *     pubsub: gossipsub(),\n *     identify: identify()\n *   }\n * })\n * ```\n *\n * @example Customizing Pubsub Peer Discovery\n *\n * There are a few options you can use to customize `Pubsub Peer Discovery`. You can see the detailed [options](#options) below.\n *\n * ```ts\n * // ... Other imports from above\n * import PubSubPeerDiscovery from '@libp2p/pubsub-peer-discovery'\n *\n * // Custom topics\n * const topics = [\n *   `myApp._peer-discovery._p2p._pubsub`, // It's recommended but not required to extend the global space\n *   '_peer-discovery._p2p._pubsub' // Include if you want to participate in the global space\n * ]\n *\n * const node = await createLibp2p({\n *   // ...\n *   peerDiscovery: [\n *     pubsubPeerDiscovery({\n *       interval: 10000,\n *       topics: topics, // defaults to ['_peer-discovery._p2p._pubsub']\n *       listenOnly: false\n *     })\n *   ]\n * })\n * ```\n *\n * ## Options\n *\n * | Name       | Type            | Description                                                                                                    |\n * | ---------- | --------------- | -------------------------------------------------------------------------------------------------------------- |\n * | interval   | `number`        | How often (in `ms`), after initial broadcast, your node should broadcast your peer data. Default (`10000ms`)   |\n * | topics     | `Array<string>` | An Array of topic strings. If set, the default topic will not be used and must be included explicitly here     |\n * | listenOnly | `boolean`       | If true it will not broadcast peer data. Dont set this unless you have a specific reason to. Default (`false`) |\n *\n * ## Default Topic\n *\n * The default pubsub topic the module subscribes to is `_peer-discovery._p2p._pubsub`, which is also set on `PubsubPeerDiscovery.TOPIC`.\n */\nimport { publicKeyFromProtobuf, publicKeyToProtobuf } from '@libp2p/crypto/keys';\nimport { TypedEventEmitter, peerDiscoverySymbol } from '@libp2p/interface';\nimport { peerIdFromPublicKey } from '@libp2p/peer-id';\nimport { multiaddr } from '@multiformats/multiaddr';\nimport { Peer as PBPeer } from './peer.js';\nexport const TOPIC = '_peer-discovery._p2p._pubsub';\n/**\n * A Peer Discovery Service that leverages libp2p Pubsub to find peers.\n */\nexport class PubSubPeerDiscovery extends TypedEventEmitter {\n    [peerDiscoverySymbol] = true;\n    [Symbol.toStringTag] = '@libp2p/pubsub-peer-discovery';\n    interval;\n    listenOnly;\n    topics;\n    intervalId;\n    components;\n    log;\n    constructor(components, init = {}) {\n        super();\n        const { interval, topics, listenOnly } = init;\n        this.components = components;\n        this.interval = interval ?? 10000;\n        this.listenOnly = listenOnly ?? false;\n        this.log = components.logger.forComponent('libp2p:discovery:pubsub');\n        // Ensure we have topics\n        if (Array.isArray(topics) && topics.length > 0) {\n            this.topics = topics;\n        }\n        else {\n            this.topics = [TOPIC];\n        }\n        this._onMessage = this._onMessage.bind(this);\n    }\n    isStarted() {\n        return this.intervalId != null;\n    }\n    start() {\n    }\n    /**\n     * Subscribes to the discovery topic on `libp2p.pubsub` and performs a broadcast\n     * immediately, and every `this.interval`\n     */\n    afterStart() {\n        if (this.intervalId != null) {\n            return;\n        }\n        const pubsub = this.components.pubsub;\n        if (pubsub == null) {\n            throw new Error('PubSub not configured');\n        }\n        // Subscribe to pubsub\n        for (const topic of this.topics) {\n            pubsub.subscribe(topic);\n            pubsub.addEventListener('message', this._onMessage);\n        }\n        // Don't broadcast if we are only listening\n        if (this.listenOnly) {\n            return;\n        }\n        // Broadcast immediately, and then run on interval\n        this._broadcast();\n        // Periodically publish our own information\n        this.intervalId = setInterval(() => {\n            this._broadcast();\n        }, this.interval);\n    }\n    beforeStop() {\n        const pubsub = this.components.pubsub;\n        if (pubsub == null) {\n            throw new Error('PubSub not configured');\n        }\n        for (const topic of this.topics) {\n            pubsub.unsubscribe(topic);\n            pubsub.removeEventListener('message', this._onMessage);\n        }\n    }\n    /**\n     * Unsubscribes from the discovery topic\n     */\n    stop() {\n        if (this.intervalId != null) {\n            clearInterval(this.intervalId);\n            this.intervalId = undefined;\n        }\n    }\n    /**\n     * Performs a broadcast via Pubsub publish\n     */\n    _broadcast() {\n        const peerId = this.components.peerId;\n        if (peerId.publicKey == null) {\n            throw new Error('PeerId was missing public key');\n        }\n        const peer = {\n            publicKey: publicKeyToProtobuf(peerId.publicKey),\n            addrs: this.components.addressManager.getAddresses().map(ma => ma.bytes)\n        };\n        const encodedPeer = PBPeer.encode(peer);\n        const pubsub = this.components.pubsub;\n        if (pubsub == null) {\n            throw new Error('PubSub not configured');\n        }\n        for (const topic of this.topics) {\n            if (pubsub.getSubscribers(topic).length === 0) {\n                this.log('skipping broadcasting our peer data on topic %s because there are no peers present', topic);\n                continue;\n            }\n            this.log('broadcasting our peer data on topic %s', topic);\n            void pubsub.publish(topic, encodedPeer);\n        }\n    }\n    /**\n     * Handles incoming pubsub messages for our discovery topic\n     */\n    _onMessage(event) {\n        if (!this.isStarted()) {\n            return;\n        }\n        const message = event.detail;\n        if (!this.topics.includes(message.topic)) {\n            return;\n        }\n        try {\n            const peer = PBPeer.decode(message.data);\n            const publicKey = publicKeyFromProtobuf(peer.publicKey);\n            const peerId = peerIdFromPublicKey(publicKey);\n            // Ignore if we received our own response\n            if (peerId.equals(this.components.peerId)) {\n                return;\n            }\n            this.log('discovered peer %p on %s', peerId, message.topic);\n            this.safeDispatchEvent('peer', {\n                detail: {\n                    id: peerId,\n                    multiaddrs: peer.addrs.map(b => multiaddr(b))\n                }\n            });\n        }\n        catch (err) {\n            this.log.error('error handling incoming message', err);\n        }\n    }\n}\nexport function pubsubPeerDiscovery(init = {}) {\n    return (components) => new PubSubPeerDiscovery(components, init);\n}\n//# sourceMappingURL=index.js.map","export default {}",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/*globals window, global, require*/\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\n\t    var crypto;\n\n\t    // Native crypto from window (Browser)\n\t    if (typeof window !== 'undefined' && window.crypto) {\n\t        crypto = window.crypto;\n\t    }\n\n\t    // Native crypto in web worker (Browser)\n\t    if (typeof self !== 'undefined' && self.crypto) {\n\t        crypto = self.crypto;\n\t    }\n\n\t    // Native crypto from worker\n\t    if (typeof globalThis !== 'undefined' && globalThis.crypto) {\n\t        crypto = globalThis.crypto;\n\t    }\n\n\t    // Native (experimental IE 11) crypto from window (Browser)\n\t    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n\t        crypto = window.msCrypto;\n\t    }\n\n\t    // Native crypto from global (NodeJS)\n\t    if (!crypto && typeof global !== 'undefined' && global.crypto) {\n\t        crypto = global.crypto;\n\t    }\n\n\t    // Native crypto import via require (NodeJS)\n\t    if (!crypto && typeof require === 'function') {\n\t        try {\n\t            crypto = require('crypto');\n\t        } catch (err) {}\n\t    }\n\n\t    /*\n\t     * Cryptographically secure pseudorandom number generator\n\t     *\n\t     * As Math.random() is cryptographically not safe to use\n\t     */\n\t    var cryptoSecureRandomInt = function () {\n\t        if (crypto) {\n\t            // Use getRandomValues method (Browser)\n\t            if (typeof crypto.getRandomValues === 'function') {\n\t                try {\n\t                    return crypto.getRandomValues(new Uint32Array(1))[0];\n\t                } catch (err) {}\n\t            }\n\n\t            // Use randomBytes method (NodeJS)\n\t            if (typeof crypto.randomBytes === 'function') {\n\t                try {\n\t                    return crypto.randomBytes(4).readInt32LE();\n\t                } catch (err) {}\n\t            }\n\t        }\n\n\t        throw new Error('Native crypto module could not be used to get secure random number.');\n\t    };\n\n\t    /*\n\t     * Local polyfill of Object.create\n\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {}\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }());\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var j = 0; j < thatSigBytes; j += 4) {\n\t                    thisWords[(thisSigBytes + j) >>> 2] = thatWords[j >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            for (var i = 0; i < nBytes; i += 4) {\n\t                words.push(cryptoSecureRandomInt());\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            var processedWords;\n\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var X32WordArray = C_lib.WordArray;\n\n\t    /**\n\t     * x64 namespace.\n\t     */\n\t    var C_x64 = C.x64 = {};\n\n\t    /**\n\t     * A 64-bit word.\n\t     */\n\t    var X64Word = C_x64.Word = Base.extend({\n\t        /**\n\t         * Initializes a newly created 64-bit word.\n\t         *\n\t         * @param {number} high The high 32 bits.\n\t         * @param {number} low The low 32 bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);\n\t         */\n\t        init: function (high, low) {\n\t            this.high = high;\n\t            this.low = low;\n\t        }\n\n\t        /**\n\t         * Bitwise NOTs this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after negating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var negated = x64Word.not();\n\t         */\n\t        // not: function () {\n\t            // var high = ~this.high;\n\t            // var low = ~this.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise ANDs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to AND with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after ANDing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var anded = x64Word.and(anotherX64Word);\n\t         */\n\t        // and: function (word) {\n\t            // var high = this.high & word.high;\n\t            // var low = this.low & word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise ORs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to OR with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after ORing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var ored = x64Word.or(anotherX64Word);\n\t         */\n\t        // or: function (word) {\n\t            // var high = this.high | word.high;\n\t            // var low = this.low | word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise XORs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to XOR with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after XORing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var xored = x64Word.xor(anotherX64Word);\n\t         */\n\t        // xor: function (word) {\n\t            // var high = this.high ^ word.high;\n\t            // var low = this.low ^ word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Shifts this word n bits to the left.\n\t         *\n\t         * @param {number} n The number of bits to shift.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after shifting.\n\t         *\n\t         * @example\n\t         *\n\t         *     var shifted = x64Word.shiftL(25);\n\t         */\n\t        // shiftL: function (n) {\n\t            // if (n < 32) {\n\t                // var high = (this.high << n) | (this.low >>> (32 - n));\n\t                // var low = this.low << n;\n\t            // } else {\n\t                // var high = this.low << (n - 32);\n\t                // var low = 0;\n\t            // }\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Shifts this word n bits to the right.\n\t         *\n\t         * @param {number} n The number of bits to shift.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after shifting.\n\t         *\n\t         * @example\n\t         *\n\t         *     var shifted = x64Word.shiftR(7);\n\t         */\n\t        // shiftR: function (n) {\n\t            // if (n < 32) {\n\t                // var low = (this.low >>> n) | (this.high << (32 - n));\n\t                // var high = this.high >>> n;\n\t            // } else {\n\t                // var low = this.high >>> (n - 32);\n\t                // var high = 0;\n\t            // }\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Rotates this word n bits to the left.\n\t         *\n\t         * @param {number} n The number of bits to rotate.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after rotating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var rotated = x64Word.rotL(25);\n\t         */\n\t        // rotL: function (n) {\n\t            // return this.shiftL(n).or(this.shiftR(64 - n));\n\t        // },\n\n\t        /**\n\t         * Rotates this word n bits to the right.\n\t         *\n\t         * @param {number} n The number of bits to rotate.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after rotating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var rotated = x64Word.rotR(7);\n\t         */\n\t        // rotR: function (n) {\n\t            // return this.shiftR(n).or(this.shiftL(64 - n));\n\t        // },\n\n\t        /**\n\t         * Adds this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to add with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after adding.\n\t         *\n\t         * @example\n\t         *\n\t         *     var added = x64Word.add(anotherX64Word);\n\t         */\n\t        // add: function (word) {\n\t            // var low = (this.low + word.low) | 0;\n\t            // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;\n\t            // var high = (this.high + word.high + carry) | 0;\n\n\t            // return X64Word.create(high, low);\n\t        // }\n\t    });\n\n\t    /**\n\t     * An array of 64-bit words.\n\t     *\n\t     * @property {Array} words The array of CryptoJS.x64.Word objects.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var X64WordArray = C_x64.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create();\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t         *     ]);\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t         *     ], 10);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 8;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this 64-bit word array to a 32-bit word array.\n\t         *\n\t         * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var x32WordArray = x64WordArray.toX32();\n\t         */\n\t        toX32: function () {\n\t            // Shortcuts\n\t            var x64Words = this.words;\n\t            var x64WordsLength = x64Words.length;\n\n\t            // Convert\n\t            var x32Words = [];\n\t            for (var i = 0; i < x64WordsLength; i++) {\n\t                var x64Word = x64Words[i];\n\t                x32Words.push(x64Word.high);\n\t                x32Words.push(x64Word.low);\n\t            }\n\n\t            return X32WordArray.create(x32Words, this.sigBytes);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {X64WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = x64WordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\n\t            // Clone \"words\" array\n\t            var words = clone.words = this.words.slice(0);\n\n\t            // Clone each X64Word object\n\t            var wordsLength = words.length;\n\t            for (var i = 0; i < wordsLength; i++) {\n\t                words[i] = words[i].clone();\n\t            }\n\n\t            return clone;\n\t        }\n\t    });\n\t}());\n\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Check if typed arrays are supported\n\t    if (typeof ArrayBuffer != 'function') {\n\t        return;\n\t    }\n\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\n\t    // Reference original init\n\t    var superInit = WordArray.init;\n\n\t    // Augment WordArray.init to handle typed arrays\n\t    var subInit = WordArray.init = function (typedArray) {\n\t        // Convert buffers to uint8\n\t        if (typedArray instanceof ArrayBuffer) {\n\t            typedArray = new Uint8Array(typedArray);\n\t        }\n\n\t        // Convert other array views to uint8\n\t        if (\n\t            typedArray instanceof Int8Array ||\n\t            (typeof Uint8ClampedArray !== \"undefined\" && typedArray instanceof Uint8ClampedArray) ||\n\t            typedArray instanceof Int16Array ||\n\t            typedArray instanceof Uint16Array ||\n\t            typedArray instanceof Int32Array ||\n\t            typedArray instanceof Uint32Array ||\n\t            typedArray instanceof Float32Array ||\n\t            typedArray instanceof Float64Array\n\t        ) {\n\t            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n\t        }\n\n\t        // Handle Uint8Array\n\t        if (typedArray instanceof Uint8Array) {\n\t            // Shortcut\n\t            var typedArrayByteLength = typedArray.byteLength;\n\n\t            // Extract bytes\n\t            var words = [];\n\t            for (var i = 0; i < typedArrayByteLength; i++) {\n\t                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n\t            }\n\n\t            // Initialize this word array\n\t            superInit.call(this, words, typedArrayByteLength);\n\t        } else {\n\t            // Else call normal init\n\t            superInit.apply(this, arguments);\n\t        }\n\t    };\n\n\t    subInit.prototype = WordArray;\n\t}());\n\n\n\treturn CryptoJS.lib.WordArray;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * UTF-16 BE encoding strategy.\n\t     */\n\t    var Utf16BE = C_enc.Utf16 = C_enc.Utf16BE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 BE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 BE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = (words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff;\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 BE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 BE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= utf16Str.charCodeAt(i) << (16 - (i % 2) * 16);\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-16 LE encoding strategy.\n\t     */\n\t    C_enc.Utf16LE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 LE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 LE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = swapEndian((words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff);\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 LE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 LE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << (16 - (i % 2) * 16));\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    function swapEndian(word) {\n\t        return ((word << 8) & 0xff00ff00) | ((word >>> 8) & 0x00ff00ff);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Utf16;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64 encoding strategy.\n\t     */\n\t    var Base64 = C_enc.Base64 = {\n\t        /**\n\t         * Converts a word array to a Base64 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Base64 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64 string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t         */\n\t        parse: function (base64Str) {\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                    reverseMap = this._reverseMap = [];\n\t                    for (var j = 0; j < map.length; j++) {\n\t                        reverseMap[map.charCodeAt(j)] = j;\n\t                    }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t      var words = [];\n\t      var nBytes = 0;\n\t      for (var i = 0; i < base64StrLength; i++) {\n\t          if (i % 4) {\n\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t              var bitsCombined = bits1 | bits2;\n\t              words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n\t              nBytes++;\n\t          }\n\t      }\n\t      return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64url encoding strategy.\n\t     */\n\t    var Base64url = C_enc.Base64url = {\n\t        /**\n\t         * Converts a word array to a Base64url string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @param {boolean} urlSafe Whether to use url safe\n\t         *\n\t         * @return {string} The Base64url string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64url.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray, urlSafe) {\n\t            if (urlSafe === undefined) {\n\t                urlSafe = true\n\t            }\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = urlSafe ? this._safe_map : this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64url string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64url string.\n\t         *\n\t         * @param {boolean} urlSafe Whether to use url safe\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64url.parse(base64String);\n\t         */\n\t        parse: function (base64Str, urlSafe) {\n\t            if (urlSafe === undefined) {\n\t                urlSafe = true\n\t            }\n\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = urlSafe ? this._safe_map : this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                reverseMap = this._reverseMap = [];\n\t                for (var j = 0; j < map.length; j++) {\n\t                    reverseMap[map.charCodeAt(j)] = j;\n\t                }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n\t        _safe_map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t        var words = [];\n\t        var nBytes = 0;\n\t        for (var i = 0; i < base64StrLength; i++) {\n\t            if (i % 4) {\n\t                var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t                var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t                var bitsCombined = bits1 | bits2;\n\t                words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n\t                nBytes++;\n\t            }\n\t        }\n\t        return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64url;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var T = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        for (var i = 0; i < 64; i++) {\n\t            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n\t        }\n\t    }());\n\n\t    /**\n\t     * MD5 hash algorithm.\n\t     */\n\t    var MD5 = C_algo.MD5 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var M_offset_0  = M[offset + 0];\n\t            var M_offset_1  = M[offset + 1];\n\t            var M_offset_2  = M[offset + 2];\n\t            var M_offset_3  = M[offset + 3];\n\t            var M_offset_4  = M[offset + 4];\n\t            var M_offset_5  = M[offset + 5];\n\t            var M_offset_6  = M[offset + 6];\n\t            var M_offset_7  = M[offset + 7];\n\t            var M_offset_8  = M[offset + 8];\n\t            var M_offset_9  = M[offset + 9];\n\t            var M_offset_10 = M[offset + 10];\n\t            var M_offset_11 = M[offset + 11];\n\t            var M_offset_12 = M[offset + 12];\n\t            var M_offset_13 = M[offset + 13];\n\t            var M_offset_14 = M[offset + 14];\n\t            var M_offset_15 = M[offset + 15];\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\n\t            // Computation\n\t            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);\n\t            d = FF(d, a, b, c, M_offset_1,  12, T[1]);\n\t            c = FF(c, d, a, b, M_offset_2,  17, T[2]);\n\t            b = FF(b, c, d, a, M_offset_3,  22, T[3]);\n\t            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);\n\t            d = FF(d, a, b, c, M_offset_5,  12, T[5]);\n\t            c = FF(c, d, a, b, M_offset_6,  17, T[6]);\n\t            b = FF(b, c, d, a, M_offset_7,  22, T[7]);\n\t            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);\n\t            d = FF(d, a, b, c, M_offset_9,  12, T[9]);\n\t            c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n\t            b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n\t            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);\n\t            d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n\t            c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n\t            b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n\t            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);\n\t            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);\n\t            c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n\t            b = GG(b, c, d, a, M_offset_0,  20, T[19]);\n\t            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);\n\t            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);\n\t            c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n\t            b = GG(b, c, d, a, M_offset_4,  20, T[23]);\n\t            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);\n\t            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);\n\t            c = GG(c, d, a, b, M_offset_3,  14, T[26]);\n\t            b = GG(b, c, d, a, M_offset_8,  20, T[27]);\n\t            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);\n\t            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);\n\t            c = GG(c, d, a, b, M_offset_7,  14, T[30]);\n\t            b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n\t            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);\n\t            d = HH(d, a, b, c, M_offset_8,  11, T[33]);\n\t            c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n\t            b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n\t            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);\n\t            d = HH(d, a, b, c, M_offset_4,  11, T[37]);\n\t            c = HH(c, d, a, b, M_offset_7,  16, T[38]);\n\t            b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n\t            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);\n\t            d = HH(d, a, b, c, M_offset_0,  11, T[41]);\n\t            c = HH(c, d, a, b, M_offset_3,  16, T[42]);\n\t            b = HH(b, c, d, a, M_offset_6,  23, T[43]);\n\t            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);\n\t            d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n\t            c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n\t            b = HH(b, c, d, a, M_offset_2,  23, T[47]);\n\n\t            a = II(a, b, c, d, M_offset_0,  6,  T[48]);\n\t            d = II(d, a, b, c, M_offset_7,  10, T[49]);\n\t            c = II(c, d, a, b, M_offset_14, 15, T[50]);\n\t            b = II(b, c, d, a, M_offset_5,  21, T[51]);\n\t            a = II(a, b, c, d, M_offset_12, 6,  T[52]);\n\t            d = II(d, a, b, c, M_offset_3,  10, T[53]);\n\t            c = II(c, d, a, b, M_offset_10, 15, T[54]);\n\t            b = II(b, c, d, a, M_offset_1,  21, T[55]);\n\t            a = II(a, b, c, d, M_offset_8,  6,  T[56]);\n\t            d = II(d, a, b, c, M_offset_15, 10, T[57]);\n\t            c = II(c, d, a, b, M_offset_6,  15, T[58]);\n\t            b = II(b, c, d, a, M_offset_13, 21, T[59]);\n\t            a = II(a, b, c, d, M_offset_4,  6,  T[60]);\n\t            d = II(d, a, b, c, M_offset_11, 10, T[61]);\n\t            c = II(c, d, a, b, M_offset_2,  15, T[62]);\n\t            b = II(b, c, d, a, M_offset_9,  21, T[63]);\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\n\t            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n\t            var nBitsTotalL = nBitsTotal;\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n\t                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)\n\t            );\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)\n\t            );\n\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    function FF(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & c) | (~b & d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function GG(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & d) | (c & ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function HH(a, b, c, d, x, s, t) {\n\t        var n = a + (b ^ c ^ d) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function II(a, b, c, d, x, s, t) {\n\t        var n = a + (c ^ (b | ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.MD5('message');\n\t     *     var hash = CryptoJS.MD5(wordArray);\n\t     */\n\t    C.MD5 = Hasher._createHelper(MD5);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacMD5(message, key);\n\t     */\n\t    C.HmacMD5 = Hasher._createHmacHelper(MD5);\n\t}(Math));\n\n\n\treturn CryptoJS.MD5;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-1 hash algorithm.\n\t     */\n\t    var SHA1 = C_algo.SHA1 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476,\n\t                0xc3d2e1f0\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\n\t            // Computation\n\t            for (var i = 0; i < 80; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n\t                    W[i] = (n << 1) | (n >>> 31);\n\t                }\n\n\t                var t = ((a << 5) | (a >>> 27)) + e + W[i];\n\t                if (i < 20) {\n\t                    t += ((b & c) | (~b & d)) + 0x5a827999;\n\t                } else if (i < 40) {\n\t                    t += (b ^ c ^ d) + 0x6ed9eba1;\n\t                } else if (i < 60) {\n\t                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\n\t                } else /* if (i < 80) */ {\n\t                    t += (b ^ c ^ d) - 0x359d3e2a;\n\t                }\n\n\t                e = d;\n\t                d = c;\n\t                c = (b << 30) | (b >>> 2);\n\t                b = a;\n\t                a = t;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA1('message');\n\t     *     var hash = CryptoJS.SHA1(wordArray);\n\t     */\n\t    C.SHA1 = Hasher._createHelper(SHA1);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA1(message, key);\n\t     */\n\t    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\n\t}());\n\n\n\treturn CryptoJS.SHA1;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha256\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha256\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA256 = C_algo.SHA256;\n\n\t    /**\n\t     * SHA-224 hash algorithm.\n\t     */\n\t    var SHA224 = C_algo.SHA224 = SHA256.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n\t                0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA256._doFinalize.call(this);\n\n\t            hash.sigBytes -= 4;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA224('message');\n\t     *     var hash = CryptoJS.SHA224(wordArray);\n\t     */\n\t    C.SHA224 = SHA256._createHelper(SHA224);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA224(message, key);\n\t     */\n\t    C.HmacSHA224 = SHA256._createHmacHelper(SHA224);\n\t}());\n\n\n\treturn CryptoJS.SHA224;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var X64WordArray = C_x64.WordArray;\n\t    var C_algo = C.algo;\n\n\t    function X64Word_create() {\n\t        return X64Word.create.apply(X64Word, arguments);\n\t    }\n\n\t    // Constants\n\t    var K = [\n\t        X64Word_create(0x428a2f98, 0xd728ae22), X64Word_create(0x71374491, 0x23ef65cd),\n\t        X64Word_create(0xb5c0fbcf, 0xec4d3b2f), X64Word_create(0xe9b5dba5, 0x8189dbbc),\n\t        X64Word_create(0x3956c25b, 0xf348b538), X64Word_create(0x59f111f1, 0xb605d019),\n\t        X64Word_create(0x923f82a4, 0xaf194f9b), X64Word_create(0xab1c5ed5, 0xda6d8118),\n\t        X64Word_create(0xd807aa98, 0xa3030242), X64Word_create(0x12835b01, 0x45706fbe),\n\t        X64Word_create(0x243185be, 0x4ee4b28c), X64Word_create(0x550c7dc3, 0xd5ffb4e2),\n\t        X64Word_create(0x72be5d74, 0xf27b896f), X64Word_create(0x80deb1fe, 0x3b1696b1),\n\t        X64Word_create(0x9bdc06a7, 0x25c71235), X64Word_create(0xc19bf174, 0xcf692694),\n\t        X64Word_create(0xe49b69c1, 0x9ef14ad2), X64Word_create(0xefbe4786, 0x384f25e3),\n\t        X64Word_create(0x0fc19dc6, 0x8b8cd5b5), X64Word_create(0x240ca1cc, 0x77ac9c65),\n\t        X64Word_create(0x2de92c6f, 0x592b0275), X64Word_create(0x4a7484aa, 0x6ea6e483),\n\t        X64Word_create(0x5cb0a9dc, 0xbd41fbd4), X64Word_create(0x76f988da, 0x831153b5),\n\t        X64Word_create(0x983e5152, 0xee66dfab), X64Word_create(0xa831c66d, 0x2db43210),\n\t        X64Word_create(0xb00327c8, 0x98fb213f), X64Word_create(0xbf597fc7, 0xbeef0ee4),\n\t        X64Word_create(0xc6e00bf3, 0x3da88fc2), X64Word_create(0xd5a79147, 0x930aa725),\n\t        X64Word_create(0x06ca6351, 0xe003826f), X64Word_create(0x14292967, 0x0a0e6e70),\n\t        X64Word_create(0x27b70a85, 0x46d22ffc), X64Word_create(0x2e1b2138, 0x5c26c926),\n\t        X64Word_create(0x4d2c6dfc, 0x5ac42aed), X64Word_create(0x53380d13, 0x9d95b3df),\n\t        X64Word_create(0x650a7354, 0x8baf63de), X64Word_create(0x766a0abb, 0x3c77b2a8),\n\t        X64Word_create(0x81c2c92e, 0x47edaee6), X64Word_create(0x92722c85, 0x1482353b),\n\t        X64Word_create(0xa2bfe8a1, 0x4cf10364), X64Word_create(0xa81a664b, 0xbc423001),\n\t        X64Word_create(0xc24b8b70, 0xd0f89791), X64Word_create(0xc76c51a3, 0x0654be30),\n\t        X64Word_create(0xd192e819, 0xd6ef5218), X64Word_create(0xd6990624, 0x5565a910),\n\t        X64Word_create(0xf40e3585, 0x5771202a), X64Word_create(0x106aa070, 0x32bbd1b8),\n\t        X64Word_create(0x19a4c116, 0xb8d2d0c8), X64Word_create(0x1e376c08, 0x5141ab53),\n\t        X64Word_create(0x2748774c, 0xdf8eeb99), X64Word_create(0x34b0bcb5, 0xe19b48a8),\n\t        X64Word_create(0x391c0cb3, 0xc5c95a63), X64Word_create(0x4ed8aa4a, 0xe3418acb),\n\t        X64Word_create(0x5b9cca4f, 0x7763e373), X64Word_create(0x682e6ff3, 0xd6b2b8a3),\n\t        X64Word_create(0x748f82ee, 0x5defb2fc), X64Word_create(0x78a5636f, 0x43172f60),\n\t        X64Word_create(0x84c87814, 0xa1f0ab72), X64Word_create(0x8cc70208, 0x1a6439ec),\n\t        X64Word_create(0x90befffa, 0x23631e28), X64Word_create(0xa4506ceb, 0xde82bde9),\n\t        X64Word_create(0xbef9a3f7, 0xb2c67915), X64Word_create(0xc67178f2, 0xe372532b),\n\t        X64Word_create(0xca273ece, 0xea26619c), X64Word_create(0xd186b8c7, 0x21c0c207),\n\t        X64Word_create(0xeada7dd6, 0xcde0eb1e), X64Word_create(0xf57d4f7f, 0xee6ed178),\n\t        X64Word_create(0x06f067aa, 0x72176fba), X64Word_create(0x0a637dc5, 0xa2c898a6),\n\t        X64Word_create(0x113f9804, 0xbef90dae), X64Word_create(0x1b710b35, 0x131c471b),\n\t        X64Word_create(0x28db77f5, 0x23047d84), X64Word_create(0x32caab7b, 0x40c72493),\n\t        X64Word_create(0x3c9ebe0a, 0x15c9bebc), X64Word_create(0x431d67c4, 0x9c100d4c),\n\t        X64Word_create(0x4cc5d4be, 0xcb3e42b6), X64Word_create(0x597f299c, 0xfc657e2a),\n\t        X64Word_create(0x5fcb6fab, 0x3ad6faec), X64Word_create(0x6c44198c, 0x4a475817)\n\t    ];\n\n\t    // Reusable objects\n\t    var W = [];\n\t    (function () {\n\t        for (var i = 0; i < 80; i++) {\n\t            W[i] = X64Word_create();\n\t        }\n\t    }());\n\n\t    /**\n\t     * SHA-512 hash algorithm.\n\t     */\n\t    var SHA512 = C_algo.SHA512 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new X64WordArray.init([\n\t                new X64Word.init(0x6a09e667, 0xf3bcc908), new X64Word.init(0xbb67ae85, 0x84caa73b),\n\t                new X64Word.init(0x3c6ef372, 0xfe94f82b), new X64Word.init(0xa54ff53a, 0x5f1d36f1),\n\t                new X64Word.init(0x510e527f, 0xade682d1), new X64Word.init(0x9b05688c, 0x2b3e6c1f),\n\t                new X64Word.init(0x1f83d9ab, 0xfb41bd6b), new X64Word.init(0x5be0cd19, 0x137e2179)\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var H0 = H[0];\n\t            var H1 = H[1];\n\t            var H2 = H[2];\n\t            var H3 = H[3];\n\t            var H4 = H[4];\n\t            var H5 = H[5];\n\t            var H6 = H[6];\n\t            var H7 = H[7];\n\n\t            var H0h = H0.high;\n\t            var H0l = H0.low;\n\t            var H1h = H1.high;\n\t            var H1l = H1.low;\n\t            var H2h = H2.high;\n\t            var H2l = H2.low;\n\t            var H3h = H3.high;\n\t            var H3l = H3.low;\n\t            var H4h = H4.high;\n\t            var H4l = H4.low;\n\t            var H5h = H5.high;\n\t            var H5l = H5.low;\n\t            var H6h = H6.high;\n\t            var H6l = H6.low;\n\t            var H7h = H7.high;\n\t            var H7l = H7.low;\n\n\t            // Working variables\n\t            var ah = H0h;\n\t            var al = H0l;\n\t            var bh = H1h;\n\t            var bl = H1l;\n\t            var ch = H2h;\n\t            var cl = H2l;\n\t            var dh = H3h;\n\t            var dl = H3l;\n\t            var eh = H4h;\n\t            var el = H4l;\n\t            var fh = H5h;\n\t            var fl = H5l;\n\t            var gh = H6h;\n\t            var gl = H6l;\n\t            var hh = H7h;\n\t            var hl = H7l;\n\n\t            // Rounds\n\t            for (var i = 0; i < 80; i++) {\n\t                var Wil;\n\t                var Wih;\n\n\t                // Shortcut\n\t                var Wi = W[i];\n\n\t                // Extend message\n\t                if (i < 16) {\n\t                    Wih = Wi.high = M[offset + i * 2]     | 0;\n\t                    Wil = Wi.low  = M[offset + i * 2 + 1] | 0;\n\t                } else {\n\t                    // Gamma0\n\t                    var gamma0x  = W[i - 15];\n\t                    var gamma0xh = gamma0x.high;\n\t                    var gamma0xl = gamma0x.low;\n\t                    var gamma0h  = ((gamma0xh >>> 1) | (gamma0xl << 31)) ^ ((gamma0xh >>> 8) | (gamma0xl << 24)) ^ (gamma0xh >>> 7);\n\t                    var gamma0l  = ((gamma0xl >>> 1) | (gamma0xh << 31)) ^ ((gamma0xl >>> 8) | (gamma0xh << 24)) ^ ((gamma0xl >>> 7) | (gamma0xh << 25));\n\n\t                    // Gamma1\n\t                    var gamma1x  = W[i - 2];\n\t                    var gamma1xh = gamma1x.high;\n\t                    var gamma1xl = gamma1x.low;\n\t                    var gamma1h  = ((gamma1xh >>> 19) | (gamma1xl << 13)) ^ ((gamma1xh << 3) | (gamma1xl >>> 29)) ^ (gamma1xh >>> 6);\n\t                    var gamma1l  = ((gamma1xl >>> 19) | (gamma1xh << 13)) ^ ((gamma1xl << 3) | (gamma1xh >>> 29)) ^ ((gamma1xl >>> 6) | (gamma1xh << 26));\n\n\t                    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n\t                    var Wi7  = W[i - 7];\n\t                    var Wi7h = Wi7.high;\n\t                    var Wi7l = Wi7.low;\n\n\t                    var Wi16  = W[i - 16];\n\t                    var Wi16h = Wi16.high;\n\t                    var Wi16l = Wi16.low;\n\n\t                    Wil = gamma0l + Wi7l;\n\t                    Wih = gamma0h + Wi7h + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0);\n\t                    Wil = Wil + gamma1l;\n\t                    Wih = Wih + gamma1h + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0);\n\t                    Wil = Wil + Wi16l;\n\t                    Wih = Wih + Wi16h + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0);\n\n\t                    Wi.high = Wih;\n\t                    Wi.low  = Wil;\n\t                }\n\n\t                var chh  = (eh & fh) ^ (~eh & gh);\n\t                var chl  = (el & fl) ^ (~el & gl);\n\t                var majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);\n\t                var majl = (al & bl) ^ (al & cl) ^ (bl & cl);\n\n\t                var sigma0h = ((ah >>> 28) | (al << 4))  ^ ((ah << 30)  | (al >>> 2)) ^ ((ah << 25) | (al >>> 7));\n\t                var sigma0l = ((al >>> 28) | (ah << 4))  ^ ((al << 30)  | (ah >>> 2)) ^ ((al << 25) | (ah >>> 7));\n\t                var sigma1h = ((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9));\n\t                var sigma1l = ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9));\n\n\t                // t1 = h + sigma1 + ch + K[i] + W[i]\n\t                var Ki  = K[i];\n\t                var Kih = Ki.high;\n\t                var Kil = Ki.low;\n\n\t                var t1l = hl + sigma1l;\n\t                var t1h = hh + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0);\n\t                var t1l = t1l + chl;\n\t                var t1h = t1h + chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0);\n\t                var t1l = t1l + Kil;\n\t                var t1h = t1h + Kih + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0);\n\t                var t1l = t1l + Wil;\n\t                var t1h = t1h + Wih + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0);\n\n\t                // t2 = sigma0 + maj\n\t                var t2l = sigma0l + majl;\n\t                var t2h = sigma0h + majh + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0);\n\n\t                // Update working variables\n\t                hh = gh;\n\t                hl = gl;\n\t                gh = fh;\n\t                gl = fl;\n\t                fh = eh;\n\t                fl = el;\n\t                el = (dl + t1l) | 0;\n\t                eh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;\n\t                dh = ch;\n\t                dl = cl;\n\t                ch = bh;\n\t                cl = bl;\n\t                bh = ah;\n\t                bl = al;\n\t                al = (t1l + t2l) | 0;\n\t                ah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H0l = H0.low  = (H0l + al);\n\t            H0.high = (H0h + ah + ((H0l >>> 0) < (al >>> 0) ? 1 : 0));\n\t            H1l = H1.low  = (H1l + bl);\n\t            H1.high = (H1h + bh + ((H1l >>> 0) < (bl >>> 0) ? 1 : 0));\n\t            H2l = H2.low  = (H2l + cl);\n\t            H2.high = (H2h + ch + ((H2l >>> 0) < (cl >>> 0) ? 1 : 0));\n\t            H3l = H3.low  = (H3l + dl);\n\t            H3.high = (H3h + dh + ((H3l >>> 0) < (dl >>> 0) ? 1 : 0));\n\t            H4l = H4.low  = (H4l + el);\n\t            H4.high = (H4h + eh + ((H4l >>> 0) < (el >>> 0) ? 1 : 0));\n\t            H5l = H5.low  = (H5l + fl);\n\t            H5.high = (H5h + fh + ((H5l >>> 0) < (fl >>> 0) ? 1 : 0));\n\t            H6l = H6.low  = (H6l + gl);\n\t            H6.high = (H6h + gh + ((H6l >>> 0) < (gl >>> 0) ? 1 : 0));\n\t            H7l = H7.low  = (H7l + hl);\n\t            H7.high = (H7h + hh + ((H7l >>> 0) < (hl >>> 0) ? 1 : 0));\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 31] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Convert hash to 32-bit word array before returning\n\t            var hash = this._hash.toX32();\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        },\n\n\t        blockSize: 1024/32\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA512('message');\n\t     *     var hash = CryptoJS.SHA512(wordArray);\n\t     */\n\t    C.SHA512 = Hasher._createHelper(SHA512);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA512(message, key);\n\t     */\n\t    C.HmacSHA512 = Hasher._createHmacHelper(SHA512);\n\t}());\n\n\n\treturn CryptoJS.SHA512;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"), require(\"./sha512\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\", \"./sha512\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var X64WordArray = C_x64.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA512 = C_algo.SHA512;\n\n\t    /**\n\t     * SHA-384 hash algorithm.\n\t     */\n\t    var SHA384 = C_algo.SHA384 = SHA512.extend({\n\t        _doReset: function () {\n\t            this._hash = new X64WordArray.init([\n\t                new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507),\n\t                new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939),\n\t                new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511),\n\t                new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA512._doFinalize.call(this);\n\n\t            hash.sigBytes -= 16;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA384('message');\n\t     *     var hash = CryptoJS.SHA384(wordArray);\n\t     */\n\t    C.SHA384 = SHA512._createHelper(SHA384);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA384(message, key);\n\t     */\n\t    C.HmacSHA384 = SHA512._createHmacHelper(SHA384);\n\t}());\n\n\n\treturn CryptoJS.SHA384;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var C_algo = C.algo;\n\n\t    // Constants tables\n\t    var RHO_OFFSETS = [];\n\t    var PI_INDEXES  = [];\n\t    var ROUND_CONSTANTS = [];\n\n\t    // Compute Constants\n\t    (function () {\n\t        // Compute rho offset constants\n\t        var x = 1, y = 0;\n\t        for (var t = 0; t < 24; t++) {\n\t            RHO_OFFSETS[x + 5 * y] = ((t + 1) * (t + 2) / 2) % 64;\n\n\t            var newX = y % 5;\n\t            var newY = (2 * x + 3 * y) % 5;\n\t            x = newX;\n\t            y = newY;\n\t        }\n\n\t        // Compute pi index constants\n\t        for (var x = 0; x < 5; x++) {\n\t            for (var y = 0; y < 5; y++) {\n\t                PI_INDEXES[x + 5 * y] = y + ((2 * x + 3 * y) % 5) * 5;\n\t            }\n\t        }\n\n\t        // Compute round constants\n\t        var LFSR = 0x01;\n\t        for (var i = 0; i < 24; i++) {\n\t            var roundConstantMsw = 0;\n\t            var roundConstantLsw = 0;\n\n\t            for (var j = 0; j < 7; j++) {\n\t                if (LFSR & 0x01) {\n\t                    var bitPosition = (1 << j) - 1;\n\t                    if (bitPosition < 32) {\n\t                        roundConstantLsw ^= 1 << bitPosition;\n\t                    } else /* if (bitPosition >= 32) */ {\n\t                        roundConstantMsw ^= 1 << (bitPosition - 32);\n\t                    }\n\t                }\n\n\t                // Compute next LFSR\n\t                if (LFSR & 0x80) {\n\t                    // Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1\n\t                    LFSR = (LFSR << 1) ^ 0x71;\n\t                } else {\n\t                    LFSR <<= 1;\n\t                }\n\t            }\n\n\t            ROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);\n\t        }\n\t    }());\n\n\t    // Reusable objects for temporary values\n\t    var T = [];\n\t    (function () {\n\t        for (var i = 0; i < 25; i++) {\n\t            T[i] = X64Word.create();\n\t        }\n\t    }());\n\n\t    /**\n\t     * SHA-3 hash algorithm.\n\t     */\n\t    var SHA3 = C_algo.SHA3 = Hasher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} outputLength\n\t         *   The desired number of bits in the output hash.\n\t         *   Only values permitted are: 224, 256, 384, 512.\n\t         *   Default: 512\n\t         */\n\t        cfg: Hasher.cfg.extend({\n\t            outputLength: 512\n\t        }),\n\n\t        _doReset: function () {\n\t            var state = this._state = []\n\t            for (var i = 0; i < 25; i++) {\n\t                state[i] = new X64Word.init();\n\t            }\n\n\t            this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcuts\n\t            var state = this._state;\n\t            var nBlockSizeLanes = this.blockSize / 2;\n\n\t            // Absorb\n\t            for (var i = 0; i < nBlockSizeLanes; i++) {\n\t                // Shortcuts\n\t                var M2i  = M[offset + 2 * i];\n\t                var M2i1 = M[offset + 2 * i + 1];\n\n\t                // Swap endian\n\t                M2i = (\n\t                    (((M2i << 8)  | (M2i >>> 24)) & 0x00ff00ff) |\n\t                    (((M2i << 24) | (M2i >>> 8))  & 0xff00ff00)\n\t                );\n\t                M2i1 = (\n\t                    (((M2i1 << 8)  | (M2i1 >>> 24)) & 0x00ff00ff) |\n\t                    (((M2i1 << 24) | (M2i1 >>> 8))  & 0xff00ff00)\n\t                );\n\n\t                // Absorb message into state\n\t                var lane = state[i];\n\t                lane.high ^= M2i1;\n\t                lane.low  ^= M2i;\n\t            }\n\n\t            // Rounds\n\t            for (var round = 0; round < 24; round++) {\n\t                // Theta\n\t                for (var x = 0; x < 5; x++) {\n\t                    // Mix column lanes\n\t                    var tMsw = 0, tLsw = 0;\n\t                    for (var y = 0; y < 5; y++) {\n\t                        var lane = state[x + 5 * y];\n\t                        tMsw ^= lane.high;\n\t                        tLsw ^= lane.low;\n\t                    }\n\n\t                    // Temporary values\n\t                    var Tx = T[x];\n\t                    Tx.high = tMsw;\n\t                    Tx.low  = tLsw;\n\t                }\n\t                for (var x = 0; x < 5; x++) {\n\t                    // Shortcuts\n\t                    var Tx4 = T[(x + 4) % 5];\n\t                    var Tx1 = T[(x + 1) % 5];\n\t                    var Tx1Msw = Tx1.high;\n\t                    var Tx1Lsw = Tx1.low;\n\n\t                    // Mix surrounding columns\n\t                    var tMsw = Tx4.high ^ ((Tx1Msw << 1) | (Tx1Lsw >>> 31));\n\t                    var tLsw = Tx4.low  ^ ((Tx1Lsw << 1) | (Tx1Msw >>> 31));\n\t                    for (var y = 0; y < 5; y++) {\n\t                        var lane = state[x + 5 * y];\n\t                        lane.high ^= tMsw;\n\t                        lane.low  ^= tLsw;\n\t                    }\n\t                }\n\n\t                // Rho Pi\n\t                for (var laneIndex = 1; laneIndex < 25; laneIndex++) {\n\t                    var tMsw;\n\t                    var tLsw;\n\n\t                    // Shortcuts\n\t                    var lane = state[laneIndex];\n\t                    var laneMsw = lane.high;\n\t                    var laneLsw = lane.low;\n\t                    var rhoOffset = RHO_OFFSETS[laneIndex];\n\n\t                    // Rotate lanes\n\t                    if (rhoOffset < 32) {\n\t                        tMsw = (laneMsw << rhoOffset) | (laneLsw >>> (32 - rhoOffset));\n\t                        tLsw = (laneLsw << rhoOffset) | (laneMsw >>> (32 - rhoOffset));\n\t                    } else /* if (rhoOffset >= 32) */ {\n\t                        tMsw = (laneLsw << (rhoOffset - 32)) | (laneMsw >>> (64 - rhoOffset));\n\t                        tLsw = (laneMsw << (rhoOffset - 32)) | (laneLsw >>> (64 - rhoOffset));\n\t                    }\n\n\t                    // Transpose lanes\n\t                    var TPiLane = T[PI_INDEXES[laneIndex]];\n\t                    TPiLane.high = tMsw;\n\t                    TPiLane.low  = tLsw;\n\t                }\n\n\t                // Rho pi at x = y = 0\n\t                var T0 = T[0];\n\t                var state0 = state[0];\n\t                T0.high = state0.high;\n\t                T0.low  = state0.low;\n\n\t                // Chi\n\t                for (var x = 0; x < 5; x++) {\n\t                    for (var y = 0; y < 5; y++) {\n\t                        // Shortcuts\n\t                        var laneIndex = x + 5 * y;\n\t                        var lane = state[laneIndex];\n\t                        var TLane = T[laneIndex];\n\t                        var Tx1Lane = T[((x + 1) % 5) + 5 * y];\n\t                        var Tx2Lane = T[((x + 2) % 5) + 5 * y];\n\n\t                        // Mix rows\n\t                        lane.high = TLane.high ^ (~Tx1Lane.high & Tx2Lane.high);\n\t                        lane.low  = TLane.low  ^ (~Tx1Lane.low  & Tx2Lane.low);\n\t                    }\n\t                }\n\n\t                // Iota\n\t                var lane = state[0];\n\t                var roundConstant = ROUND_CONSTANTS[round];\n\t                lane.high ^= roundConstant.high;\n\t                lane.low  ^= roundConstant.low;\n\t            }\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\t            var blockSizeBits = this.blockSize * 32;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x1 << (24 - nBitsLeft % 32);\n\t            dataWords[((Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits) >>> 5) - 1] |= 0x80;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var state = this._state;\n\t            var outputLengthBytes = this.cfg.outputLength / 8;\n\t            var outputLengthLanes = outputLengthBytes / 8;\n\n\t            // Squeeze\n\t            var hashWords = [];\n\t            for (var i = 0; i < outputLengthLanes; i++) {\n\t                // Shortcuts\n\t                var lane = state[i];\n\t                var laneMsw = lane.high;\n\t                var laneLsw = lane.low;\n\n\t                // Swap endian\n\t                laneMsw = (\n\t                    (((laneMsw << 8)  | (laneMsw >>> 24)) & 0x00ff00ff) |\n\t                    (((laneMsw << 24) | (laneMsw >>> 8))  & 0xff00ff00)\n\t                );\n\t                laneLsw = (\n\t                    (((laneLsw << 8)  | (laneLsw >>> 24)) & 0x00ff00ff) |\n\t                    (((laneLsw << 24) | (laneLsw >>> 8))  & 0xff00ff00)\n\t                );\n\n\t                // Squeeze state to retrieve hash\n\t                hashWords.push(laneLsw);\n\t                hashWords.push(laneMsw);\n\t            }\n\n\t            // Return final computed hash\n\t            return new WordArray.init(hashWords, outputLengthBytes);\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\n\t            var state = clone._state = this._state.slice(0);\n\t            for (var i = 0; i < 25; i++) {\n\t                state[i] = state[i].clone();\n\t            }\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA3('message');\n\t     *     var hash = CryptoJS.SHA3(wordArray);\n\t     */\n\t    C.SHA3 = Hasher._createHelper(SHA3);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA3(message, key);\n\t     */\n\t    C.HmacSHA3 = Hasher._createHmacHelper(SHA3);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA3;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/** @preserve\n\t(c) 2012 by Cédric Mesnil. All rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n\t    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\t    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n\tTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t*/\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var _zl = WordArray.create([\n\t        0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n\t        7,  4, 13,  1, 10,  6, 15,  3, 12,  0,  9,  5,  2, 14, 11,  8,\n\t        3, 10, 14,  4,  9, 15,  8,  1,  2,  7,  0,  6, 13, 11,  5, 12,\n\t        1,  9, 11, 10,  0,  8, 12,  4, 13,  3,  7, 15, 14,  5,  6,  2,\n\t        4,  0,  5,  9,  7, 12,  2, 10, 14,  1,  3,  8, 11,  6, 15, 13]);\n\t    var _zr = WordArray.create([\n\t        5, 14,  7,  0,  9,  2, 11,  4, 13,  6, 15,  8,  1, 10,  3, 12,\n\t        6, 11,  3,  7,  0, 13,  5, 10, 14, 15,  8, 12,  4,  9,  1,  2,\n\t        15,  5,  1,  3,  7, 14,  6,  9, 11,  8, 12,  2, 10,  0,  4, 13,\n\t        8,  6,  4,  1,  3, 11, 15,  0,  5, 12,  2, 13,  9,  7, 10, 14,\n\t        12, 15, 10,  4,  1,  5,  8,  7,  6,  2, 13, 14,  0,  3,  9, 11]);\n\t    var _sl = WordArray.create([\n\t         11, 14, 15, 12,  5,  8,  7,  9, 11, 13, 14, 15,  6,  7,  9,  8,\n\t        7, 6,   8, 13, 11,  9,  7, 15,  7, 12, 15,  9, 11,  7, 13, 12,\n\t        11, 13,  6,  7, 14,  9, 13, 15, 14,  8, 13,  6,  5, 12,  7,  5,\n\t          11, 12, 14, 15, 14, 15,  9,  8,  9, 14,  5,  6,  8,  6,  5, 12,\n\t        9, 15,  5, 11,  6,  8, 13, 12,  5, 12, 13, 14, 11,  8,  5,  6 ]);\n\t    var _sr = WordArray.create([\n\t        8,  9,  9, 11, 13, 15, 15,  5,  7,  7,  8, 11, 14, 14, 12,  6,\n\t        9, 13, 15,  7, 12,  8,  9, 11,  7,  7, 12,  7,  6, 15, 13, 11,\n\t        9,  7, 15, 11,  8,  6,  6, 14, 12, 13,  5, 14, 13, 13,  7,  5,\n\t        15,  5,  8, 11, 14, 14,  6, 14,  6,  9, 12,  9, 12,  5, 15,  8,\n\t        8,  5, 12,  9, 12,  5, 14,  6,  8, 13,  6,  5, 15, 13, 11, 11 ]);\n\n\t    var _hl =  WordArray.create([ 0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);\n\t    var _hr =  WordArray.create([ 0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);\n\n\t    /**\n\t     * RIPEMD160 hash algorithm.\n\t     */\n\t    var RIPEMD160 = C_algo.RIPEMD160 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash  = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                // Swap\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\t            // Shortcut\n\t            var H  = this._hash.words;\n\t            var hl = _hl.words;\n\t            var hr = _hr.words;\n\t            var zl = _zl.words;\n\t            var zr = _zr.words;\n\t            var sl = _sl.words;\n\t            var sr = _sr.words;\n\n\t            // Working variables\n\t            var al, bl, cl, dl, el;\n\t            var ar, br, cr, dr, er;\n\n\t            ar = al = H[0];\n\t            br = bl = H[1];\n\t            cr = cl = H[2];\n\t            dr = dl = H[3];\n\t            er = el = H[4];\n\t            // Computation\n\t            var t;\n\t            for (var i = 0; i < 80; i += 1) {\n\t                t = (al +  M[offset+zl[i]])|0;\n\t                if (i<16){\n\t\t            t +=  f1(bl,cl,dl) + hl[0];\n\t                } else if (i<32) {\n\t\t            t +=  f2(bl,cl,dl) + hl[1];\n\t                } else if (i<48) {\n\t\t            t +=  f3(bl,cl,dl) + hl[2];\n\t                } else if (i<64) {\n\t\t            t +=  f4(bl,cl,dl) + hl[3];\n\t                } else {// if (i<80) {\n\t\t            t +=  f5(bl,cl,dl) + hl[4];\n\t                }\n\t                t = t|0;\n\t                t =  rotl(t,sl[i]);\n\t                t = (t+el)|0;\n\t                al = el;\n\t                el = dl;\n\t                dl = rotl(cl, 10);\n\t                cl = bl;\n\t                bl = t;\n\n\t                t = (ar + M[offset+zr[i]])|0;\n\t                if (i<16){\n\t\t            t +=  f5(br,cr,dr) + hr[0];\n\t                } else if (i<32) {\n\t\t            t +=  f4(br,cr,dr) + hr[1];\n\t                } else if (i<48) {\n\t\t            t +=  f3(br,cr,dr) + hr[2];\n\t                } else if (i<64) {\n\t\t            t +=  f2(br,cr,dr) + hr[3];\n\t                } else {// if (i<80) {\n\t\t            t +=  f1(br,cr,dr) + hr[4];\n\t                }\n\t                t = t|0;\n\t                t =  rotl(t,sr[i]) ;\n\t                t = (t+er)|0;\n\t                ar = er;\n\t                er = dr;\n\t                dr = rotl(cr, 10);\n\t                cr = br;\n\t                br = t;\n\t            }\n\t            // Intermediate hash value\n\t            t    = (H[1] + cl + dr)|0;\n\t            H[1] = (H[2] + dl + er)|0;\n\t            H[2] = (H[3] + el + ar)|0;\n\t            H[3] = (H[4] + al + br)|0;\n\t            H[4] = (H[0] + bl + cr)|0;\n\t            H[0] =  t;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotal << 8)  | (nBitsTotal >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotal << 24) | (nBitsTotal >>> 8))  & 0xff00ff00)\n\t            );\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 5; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                // Swap\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\n\t    function f1(x, y, z) {\n\t        return ((x) ^ (y) ^ (z));\n\n\t    }\n\n\t    function f2(x, y, z) {\n\t        return (((x)&(y)) | ((~x)&(z)));\n\t    }\n\n\t    function f3(x, y, z) {\n\t        return (((x) | (~(y))) ^ (z));\n\t    }\n\n\t    function f4(x, y, z) {\n\t        return (((x) & (z)) | ((y)&(~(z))));\n\t    }\n\n\t    function f5(x, y, z) {\n\t        return ((x) ^ ((y) |(~(z))));\n\n\t    }\n\n\t    function rotl(x,n) {\n\t        return (x<<n) | (x>>>(32-n));\n\t    }\n\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.RIPEMD160('message');\n\t     *     var hash = CryptoJS.RIPEMD160(wordArray);\n\t     */\n\t    C.RIPEMD160 = Hasher._createHelper(RIPEMD160);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacRIPEMD160(message, key);\n\t     */\n\t    C.HmacRIPEMD160 = Hasher._createHmacHelper(RIPEMD160);\n\t}(Math));\n\n\n\treturn CryptoJS.RIPEMD160;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * HMAC algorithm.\n\t     */\n\t    var HMAC = C_algo.HMAC = Base.extend({\n\t        /**\n\t         * Initializes a newly created HMAC.\n\t         *\n\t         * @param {Hasher} hasher The hash algorithm to use.\n\t         * @param {WordArray|string} key The secret key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n\t         */\n\t        init: function (hasher, key) {\n\t            // Init hasher\n\t            hasher = this._hasher = new hasher.init();\n\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof key == 'string') {\n\t                key = Utf8.parse(key);\n\t            }\n\n\t            // Shortcuts\n\t            var hasherBlockSize = hasher.blockSize;\n\t            var hasherBlockSizeBytes = hasherBlockSize * 4;\n\n\t            // Allow arbitrary length keys\n\t            if (key.sigBytes > hasherBlockSizeBytes) {\n\t                key = hasher.finalize(key);\n\t            }\n\n\t            // Clamp excess bits\n\t            key.clamp();\n\n\t            // Clone key for inner and outer pads\n\t            var oKey = this._oKey = key.clone();\n\t            var iKey = this._iKey = key.clone();\n\n\t            // Shortcuts\n\t            var oKeyWords = oKey.words;\n\t            var iKeyWords = iKey.words;\n\n\t            // XOR keys with pad constants\n\t            for (var i = 0; i < hasherBlockSize; i++) {\n\t                oKeyWords[i] ^= 0x5c5c5c5c;\n\t                iKeyWords[i] ^= 0x36363636;\n\t            }\n\t            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this HMAC to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Reset\n\t            hasher.reset();\n\t            hasher.update(this._iKey);\n\t        },\n\n\t        /**\n\t         * Updates this HMAC with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {HMAC} This HMAC instance.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.update('message');\n\t         *     hmacHasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            this._hasher.update(messageUpdate);\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the HMAC computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The HMAC.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmac = hmacHasher.finalize();\n\t         *     var hmac = hmacHasher.finalize('message');\n\t         *     var hmac = hmacHasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Compute HMAC\n\t            var innerHash = hasher.finalize(messageUpdate);\n\t            hasher.reset();\n\t            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n\t            return hmac;\n\t        }\n\t    });\n\t}());\n\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha256\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha256\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA256 = C_algo.SHA256;\n\t    var HMAC = C_algo.HMAC;\n\n\t    /**\n\t     * Password-Based Key Derivation Function 2 algorithm.\n\t     */\n\t    var PBKDF2 = C_algo.PBKDF2 = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hasher to use. Default: SHA256\n\t         * @property {number} iterations The number of iterations to perform. Default: 250000\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: SHA256,\n\t            iterations: 250000\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create();\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Computes the Password-Based Key Derivation Function 2.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init HMAC\n\t            var hmac = HMAC.create(cfg.hasher, password);\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\t            var blockIndex = WordArray.create([0x00000001]);\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var blockIndexWords = blockIndex.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                var block = hmac.update(salt).finalize(blockIndex);\n\t                hmac.reset();\n\n\t                // Shortcuts\n\t                var blockWords = block.words;\n\t                var blockWordsLength = blockWords.length;\n\n\t                // Iterations\n\t                var intermediate = block;\n\t                for (var i = 1; i < iterations; i++) {\n\t                    intermediate = hmac.finalize(intermediate);\n\t                    hmac.reset();\n\n\t                    // Shortcut\n\t                    var intermediateWords = intermediate.words;\n\n\t                    // XOR intermediate with block\n\t                    for (var j = 0; j < blockWordsLength; j++) {\n\t                        blockWords[j] ^= intermediateWords[j];\n\t                    }\n\t                }\n\n\t                derivedKey.concat(block);\n\t                blockIndexWords[0]++;\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Computes the Password-Based Key Derivation Function 2.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.PBKDF2(password, salt);\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.PBKDF2 = function (password, salt, cfg) {\n\t        return PBKDF2.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.PBKDF2;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha1\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha1\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var MD5 = C_algo.MD5;\n\n\t    /**\n\t     * This key derivation function is meant to conform with EVP_BytesToKey.\n\t     * www.openssl.org/docs/crypto/EVP_BytesToKey.html\n\t     */\n\t    var EvpKDF = C_algo.EvpKDF = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hash algorithm to use. Default: MD5\n\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: MD5,\n\t            iterations: 1\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create();\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Derives a key from a password.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            var block;\n\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init hasher\n\t            var hasher = cfg.hasher.create();\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                if (block) {\n\t                    hasher.update(block);\n\t                }\n\t                block = hasher.update(password).finalize(salt);\n\t                hasher.reset();\n\n\t                // Iterations\n\t                for (var i = 1; i < iterations; i++) {\n\t                    block = hasher.finalize(block);\n\t                    hasher.reset();\n\t                }\n\n\t                derivedKey.concat(block);\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Derives a key from a password.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.EvpKDF(password, salt);\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.EvpKDF = function (password, salt, cfg) {\n\t        return EvpKDF.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.EvpKDF;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./evpkdf\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./evpkdf\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher core components.\n\t */\n\tCryptoJS.lib.Cipher || (function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var Base64 = C_enc.Base64;\n\t    var C_algo = C.algo;\n\t    var EvpKDF = C_algo.EvpKDF;\n\n\t    /**\n\t     * Abstract base cipher template.\n\t     *\n\t     * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\n\t     * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\n\t     * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\n\t     * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\n\t     */\n\t    var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {WordArray} iv The IV to use for this operation.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Creates this cipher in encryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createEncryptor: function (key, cfg) {\n\t            return this.create(this._ENC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Creates this cipher in decryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createDecryptor: function (key, cfg) {\n\t            return this.create(this._DEC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created cipher.\n\t         *\n\t         * @param {number} xformMode Either the encryption or decryption transormation mode constant.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });\n\t         */\n\t        init: function (xformMode, key, cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Store transform mode and key\n\t            this._xformMode = xformMode;\n\t            this._key = key;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this cipher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     cipher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-cipher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Adds data to be encrypted or decrypted.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.process('data');\n\t         *     var encrypted = cipher.process(wordArray);\n\t         */\n\t        process: function (dataUpdate) {\n\t            // Append\n\t            this._append(dataUpdate);\n\n\t            // Process available blocks\n\t            return this._process();\n\t        },\n\n\t        /**\n\t         * Finalizes the encryption or decryption process.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after final processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.finalize();\n\t         *     var encrypted = cipher.finalize('data');\n\t         *     var encrypted = cipher.finalize(wordArray);\n\t         */\n\t        finalize: function (dataUpdate) {\n\t            // Final data update\n\t            if (dataUpdate) {\n\t                this._append(dataUpdate);\n\t            }\n\n\t            // Perform concrete-cipher logic\n\t            var finalProcessedData = this._doFinalize();\n\n\t            return finalProcessedData;\n\t        },\n\n\t        keySize: 128/32,\n\n\t        ivSize: 128/32,\n\n\t        _ENC_XFORM_MODE: 1,\n\n\t        _DEC_XFORM_MODE: 2,\n\n\t        /**\n\t         * Creates shortcut functions to a cipher's object interface.\n\t         *\n\t         * @param {Cipher} cipher The cipher to create a helper for.\n\t         *\n\t         * @return {Object} An object with encrypt and decrypt shortcut functions.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\n\t         */\n\t        _createHelper: (function () {\n\t            function selectCipherStrategy(key) {\n\t                if (typeof key == 'string') {\n\t                    return PasswordBasedCipher;\n\t                } else {\n\t                    return SerializableCipher;\n\t                }\n\t            }\n\n\t            return function (cipher) {\n\t                return {\n\t                    encrypt: function (message, key, cfg) {\n\t                        return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);\n\t                    },\n\n\t                    decrypt: function (ciphertext, key, cfg) {\n\t                        return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);\n\t                    }\n\t                };\n\t            };\n\t        }())\n\t    });\n\n\t    /**\n\t     * Abstract base stream cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\n\t     */\n\t    var StreamCipher = C_lib.StreamCipher = Cipher.extend({\n\t        _doFinalize: function () {\n\t            // Process partial blocks\n\t            var finalProcessedBlocks = this._process(!!'flush');\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 1\n\t    });\n\n\t    /**\n\t     * Mode namespace.\n\t     */\n\t    var C_mode = C.mode = {};\n\n\t    /**\n\t     * Abstract base block cipher mode template.\n\t     */\n\t    var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({\n\t        /**\n\t         * Creates this mode for encryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\n\t         */\n\t        createEncryptor: function (cipher, iv) {\n\t            return this.Encryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Creates this mode for decryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\n\t         */\n\t        createDecryptor: function (cipher, iv) {\n\t            return this.Decryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created mode.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\n\t         */\n\t        init: function (cipher, iv) {\n\t            this._cipher = cipher;\n\t            this._iv = iv;\n\t        }\n\t    });\n\n\t    /**\n\t     * Cipher Block Chaining mode.\n\t     */\n\t    var CBC = C_mode.CBC = (function () {\n\t        /**\n\t         * Abstract base CBC mode.\n\t         */\n\t        var CBC = BlockCipherMode.extend();\n\n\t        /**\n\t         * CBC encryptor.\n\t         */\n\t        CBC.Encryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // XOR and encrypt\n\t                xorBlock.call(this, words, offset, blockSize);\n\t                cipher.encryptBlock(words, offset);\n\n\t                // Remember this block to use with next block\n\t                this._prevBlock = words.slice(offset, offset + blockSize);\n\t            }\n\t        });\n\n\t        /**\n\t         * CBC decryptor.\n\t         */\n\t        CBC.Decryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // Remember this block to use with next block\n\t                var thisBlock = words.slice(offset, offset + blockSize);\n\n\t                // Decrypt and XOR\n\t                cipher.decryptBlock(words, offset);\n\t                xorBlock.call(this, words, offset, blockSize);\n\n\t                // This block becomes the previous block\n\t                this._prevBlock = thisBlock;\n\t            }\n\t        });\n\n\t        function xorBlock(words, offset, blockSize) {\n\t            var block;\n\n\t            // Shortcut\n\t            var iv = this._iv;\n\n\t            // Choose mixing block\n\t            if (iv) {\n\t                block = iv;\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            } else {\n\t                block = this._prevBlock;\n\t            }\n\n\t            // XOR blocks\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= block[i];\n\t            }\n\t        }\n\n\t        return CBC;\n\t    }());\n\n\t    /**\n\t     * Padding namespace.\n\t     */\n\t    var C_pad = C.pad = {};\n\n\t    /**\n\t     * PKCS #5/7 padding strategy.\n\t     */\n\t    var Pkcs7 = C_pad.Pkcs7 = {\n\t        /**\n\t         * Pads data using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to pad.\n\t         * @param {number} blockSize The multiple that the data should be padded to.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\n\t         */\n\t        pad: function (data, blockSize) {\n\t            // Shortcut\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count padding bytes\n\t            var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t            // Create padding word\n\t            var paddingWord = (nPaddingBytes << 24) | (nPaddingBytes << 16) | (nPaddingBytes << 8) | nPaddingBytes;\n\n\t            // Create padding\n\t            var paddingWords = [];\n\t            for (var i = 0; i < nPaddingBytes; i += 4) {\n\t                paddingWords.push(paddingWord);\n\t            }\n\t            var padding = WordArray.create(paddingWords, nPaddingBytes);\n\n\t            // Add padding\n\t            data.concat(padding);\n\t        },\n\n\t        /**\n\t         * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to unpad.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.unpad(wordArray);\n\t         */\n\t        unpad: function (data) {\n\t            // Get number of padding bytes from last byte\n\t            var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t            // Remove padding\n\t            data.sigBytes -= nPaddingBytes;\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract base block cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\n\t     */\n\t    var BlockCipher = C_lib.BlockCipher = Cipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Mode} mode The block mode to use. Default: CBC\n\t         * @property {Padding} padding The padding strategy to use. Default: Pkcs7\n\t         */\n\t        cfg: Cipher.cfg.extend({\n\t            mode: CBC,\n\t            padding: Pkcs7\n\t        }),\n\n\t        reset: function () {\n\t            var modeCreator;\n\n\t            // Reset cipher\n\t            Cipher.reset.call(this);\n\n\t            // Shortcuts\n\t            var cfg = this.cfg;\n\t            var iv = cfg.iv;\n\t            var mode = cfg.mode;\n\n\t            // Reset block mode\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                modeCreator = mode.createEncryptor;\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                modeCreator = mode.createDecryptor;\n\t                // Keep at least one block in the buffer for unpadding\n\t                this._minBufferSize = 1;\n\t            }\n\n\t            if (this._mode && this._mode.__creator == modeCreator) {\n\t                this._mode.init(this, iv && iv.words);\n\t            } else {\n\t                this._mode = modeCreator.call(mode, this, iv && iv.words);\n\t                this._mode.__creator = modeCreator;\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (words, offset) {\n\t            this._mode.processBlock(words, offset);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var finalProcessedBlocks;\n\n\t            // Shortcut\n\t            var padding = this.cfg.padding;\n\n\t            // Finalize\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                // Pad data\n\t                padding.pad(this._data, this.blockSize);\n\n\t                // Process final blocks\n\t                finalProcessedBlocks = this._process(!!'flush');\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                // Process final blocks\n\t                finalProcessedBlocks = this._process(!!'flush');\n\n\t                // Unpad data\n\t                padding.unpad(finalProcessedBlocks);\n\t            }\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 128/32\n\t    });\n\n\t    /**\n\t     * A collection of cipher parameters.\n\t     *\n\t     * @property {WordArray} ciphertext The raw ciphertext.\n\t     * @property {WordArray} key The key to this ciphertext.\n\t     * @property {WordArray} iv The IV used in the ciphering operation.\n\t     * @property {WordArray} salt The salt used with a key derivation function.\n\t     * @property {Cipher} algorithm The cipher algorithm.\n\t     * @property {Mode} mode The block mode used in the ciphering operation.\n\t     * @property {Padding} padding The padding scheme used in the ciphering operation.\n\t     * @property {number} blockSize The block size of the cipher.\n\t     * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.\n\t     */\n\t    var CipherParams = C_lib.CipherParams = Base.extend({\n\t        /**\n\t         * Initializes a newly created cipher params object.\n\t         *\n\t         * @param {Object} cipherParams An object with any of the possible cipher parameters.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.lib.CipherParams.create({\n\t         *         ciphertext: ciphertextWordArray,\n\t         *         key: keyWordArray,\n\t         *         iv: ivWordArray,\n\t         *         salt: saltWordArray,\n\t         *         algorithm: CryptoJS.algo.AES,\n\t         *         mode: CryptoJS.mode.CBC,\n\t         *         padding: CryptoJS.pad.PKCS7,\n\t         *         blockSize: 4,\n\t         *         formatter: CryptoJS.format.OpenSSL\n\t         *     });\n\t         */\n\t        init: function (cipherParams) {\n\t            this.mixIn(cipherParams);\n\t        },\n\n\t        /**\n\t         * Converts this cipher params object to a string.\n\t         *\n\t         * @param {Format} formatter (Optional) The formatting strategy to use.\n\t         *\n\t         * @return {string} The stringified cipher params.\n\t         *\n\t         * @throws Error If neither the formatter nor the default formatter is set.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = cipherParams + '';\n\t         *     var string = cipherParams.toString();\n\t         *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\n\t         */\n\t        toString: function (formatter) {\n\t            return (formatter || this.formatter).stringify(this);\n\t        }\n\t    });\n\n\t    /**\n\t     * Format namespace.\n\t     */\n\t    var C_format = C.format = {};\n\n\t    /**\n\t     * OpenSSL formatting strategy.\n\t     */\n\t    var OpenSSLFormatter = C_format.OpenSSL = {\n\t        /**\n\t         * Converts a cipher params object to an OpenSSL-compatible string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The OpenSSL-compatible string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            var wordArray;\n\n\t            // Shortcuts\n\t            var ciphertext = cipherParams.ciphertext;\n\t            var salt = cipherParams.salt;\n\n\t            // Format\n\t            if (salt) {\n\t                wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\n\t            } else {\n\t                wordArray = ciphertext;\n\t            }\n\n\t            return wordArray.toString(Base64);\n\t        },\n\n\t        /**\n\t         * Converts an OpenSSL-compatible string to a cipher params object.\n\t         *\n\t         * @param {string} openSSLStr The OpenSSL-compatible string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\n\t         */\n\t        parse: function (openSSLStr) {\n\t            var salt;\n\n\t            // Parse base64\n\t            var ciphertext = Base64.parse(openSSLStr);\n\n\t            // Shortcut\n\t            var ciphertextWords = ciphertext.words;\n\n\t            // Test for salt\n\t            if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {\n\t                // Extract salt\n\t                salt = WordArray.create(ciphertextWords.slice(2, 4));\n\n\t                // Remove salt from ciphertext\n\t                ciphertextWords.splice(0, 4);\n\t                ciphertext.sigBytes -= 16;\n\t            }\n\n\t            return CipherParams.create({ ciphertext: ciphertext, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A cipher wrapper that returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var SerializableCipher = C_lib.SerializableCipher = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL\n\t         */\n\t        cfg: Base.extend({\n\t            format: OpenSSLFormatter\n\t        }),\n\n\t        /**\n\t         * Encrypts a message.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Encrypt\n\t            var encryptor = cipher.createEncryptor(key, cfg);\n\t            var ciphertext = encryptor.finalize(message);\n\n\t            // Shortcut\n\t            var cipherCfg = encryptor.cfg;\n\n\t            // Create and return serializable cipher params\n\t            return CipherParams.create({\n\t                ciphertext: ciphertext,\n\t                key: key,\n\t                iv: cipherCfg.iv,\n\t                algorithm: cipher,\n\t                mode: cipherCfg.mode,\n\t                padding: cipherCfg.padding,\n\t                blockSize: cipher.blockSize,\n\t                formatter: cfg.format\n\t            });\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Decrypt\n\t            var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);\n\n\t            return plaintext;\n\t        },\n\n\t        /**\n\t         * Converts serialized ciphertext to CipherParams,\n\t         * else assumed CipherParams already and returns ciphertext unchanged.\n\t         *\n\t         * @param {CipherParams|string} ciphertext The ciphertext.\n\t         * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\n\t         *\n\t         * @return {CipherParams} The unserialized ciphertext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);\n\t         */\n\t        _parse: function (ciphertext, format) {\n\t            if (typeof ciphertext == 'string') {\n\t                return format.parse(ciphertext, this);\n\t            } else {\n\t                return ciphertext;\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Key derivation function namespace.\n\t     */\n\t    var C_kdf = C.kdf = {};\n\n\t    /**\n\t     * OpenSSL key derivation function.\n\t     */\n\t    var OpenSSLKdf = C_kdf.OpenSSL = {\n\t        /**\n\t         * Derives a key and IV from a password.\n\t         *\n\t         * @param {string} password The password to derive from.\n\t         * @param {number} keySize The size in words of the key to generate.\n\t         * @param {number} ivSize The size in words of the IV to generate.\n\t         * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\n\t         *\n\t         * @return {CipherParams} A cipher params object with the key, IV, and salt.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\n\t         */\n\t        execute: function (password, keySize, ivSize, salt, hasher) {\n\t            // Generate random salt\n\t            if (!salt) {\n\t                salt = WordArray.random(64/8);\n\t            }\n\n\t            // Derive key and IV\n\t            if (!hasher) {\n\t                var key = EvpKDF.create({ keySize: keySize + ivSize }).compute(password, salt);\n\t            } else {\n\t                var key = EvpKDF.create({ keySize: keySize + ivSize, hasher: hasher }).compute(password, salt);\n\t            }\n\n\n\t            // Separate key and IV\n\t            var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\n\t            key.sigBytes = keySize * 4;\n\n\t            // Return params\n\t            return CipherParams.create({ key: key, iv: iv, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A serializable cipher wrapper that derives the key from a password,\n\t     * and returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL\n\t         */\n\t        cfg: SerializableCipher.cfg.extend({\n\t            kdf: OpenSSLKdf\n\t        }),\n\n\t        /**\n\t         * Encrypts a message using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, cfg.salt, cfg.hasher);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Encrypt\n\t            var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);\n\n\t            // Mix in derived params\n\t            ciphertext.mixIn(derivedParams);\n\n\t            return ciphertext;\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt, cfg.hasher);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Decrypt\n\t            var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);\n\n\t            return plaintext;\n\t        }\n\t    });\n\t}());\n\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher Feedback block mode.\n\t */\n\tCryptoJS.mode.CFB = (function () {\n\t    var CFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    CFB.Encryptor = CFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher;\n\t            var blockSize = cipher.blockSize;\n\n\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n\t            // Remember this block to use with next block\n\t            this._prevBlock = words.slice(offset, offset + blockSize);\n\t        }\n\t    });\n\n\t    CFB.Decryptor = CFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher;\n\t            var blockSize = cipher.blockSize;\n\n\t            // Remember this block to use with next block\n\t            var thisBlock = words.slice(offset, offset + blockSize);\n\n\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n\t            // This block becomes the previous block\n\t            this._prevBlock = thisBlock;\n\t        }\n\t    });\n\n\t    function generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {\n\t        var keystream;\n\n\t        // Shortcut\n\t        var iv = this._iv;\n\n\t        // Generate keystream\n\t        if (iv) {\n\t            keystream = iv.slice(0);\n\n\t            // Remove IV for subsequent blocks\n\t            this._iv = undefined;\n\t        } else {\n\t            keystream = this._prevBlock;\n\t        }\n\t        cipher.encryptBlock(keystream, 0);\n\n\t        // Encrypt\n\t        for (var i = 0; i < blockSize; i++) {\n\t            words[offset + i] ^= keystream[i];\n\t        }\n\t    }\n\n\t    return CFB;\n\t}());\n\n\n\treturn CryptoJS.mode.CFB;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Counter block mode.\n\t */\n\tCryptoJS.mode.CTR = (function () {\n\t    var CTR = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = CTR.Encryptor = CTR.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            var keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Increment counter\n\t            counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTR.Decryptor = Encryptor;\n\n\t    return CTR;\n\t}());\n\n\n\treturn CryptoJS.mode.CTR;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/** @preserve\n\t * Counter block mode compatible with  Dr Brian Gladman fileenc.c\n\t * derived from CryptoJS.mode.CTR\n\t * Jan Hruby jhruby.web@gmail.com\n\t */\n\tCryptoJS.mode.CTRGladman = (function () {\n\t    var CTRGladman = CryptoJS.lib.BlockCipherMode.extend();\n\n\t\tfunction incWord(word)\n\t\t{\n\t\t\tif (((word >> 24) & 0xff) === 0xff) { //overflow\n\t\t\tvar b1 = (word >> 16)&0xff;\n\t\t\tvar b2 = (word >> 8)&0xff;\n\t\t\tvar b3 = word & 0xff;\n\n\t\t\tif (b1 === 0xff) // overflow b1\n\t\t\t{\n\t\t\tb1 = 0;\n\t\t\tif (b2 === 0xff)\n\t\t\t{\n\t\t\t\tb2 = 0;\n\t\t\t\tif (b3 === 0xff)\n\t\t\t\t{\n\t\t\t\t\tb3 = 0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t++b3;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t++b2;\n\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t++b1;\n\t\t\t}\n\n\t\t\tword = 0;\n\t\t\tword += (b1 << 16);\n\t\t\tword += (b2 << 8);\n\t\t\tword += b3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\tword += (0x01 << 24);\n\t\t\t}\n\t\t\treturn word;\n\t\t}\n\n\t\tfunction incCounter(counter)\n\t\t{\n\t\t\tif ((counter[0] = incWord(counter[0])) === 0)\n\t\t\t{\n\t\t\t\t// encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8\n\t\t\t\tcounter[1] = incWord(counter[1]);\n\t\t\t}\n\t\t\treturn counter;\n\t\t}\n\n\t    var Encryptor = CTRGladman.Encryptor = CTRGladman.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\n\t\t\t\tincCounter(counter);\n\n\t\t\t\tvar keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTRGladman.Decryptor = Encryptor;\n\n\t    return CTRGladman;\n\t}());\n\n\n\n\n\treturn CryptoJS.mode.CTRGladman;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Output Feedback block mode.\n\t */\n\tCryptoJS.mode.OFB = (function () {\n\t    var OFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = OFB.Encryptor = OFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var keystream = this._keystream;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                keystream = this._keystream = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    OFB.Decryptor = Encryptor;\n\n\t    return OFB;\n\t}());\n\n\n\treturn CryptoJS.mode.OFB;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Electronic Codebook block mode.\n\t */\n\tCryptoJS.mode.ECB = (function () {\n\t    var ECB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    ECB.Encryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.encryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    ECB.Decryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.decryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    return ECB;\n\t}());\n\n\n\treturn CryptoJS.mode.ECB;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ANSI X.923 padding strategy.\n\t */\n\tCryptoJS.pad.AnsiX923 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcuts\n\t        var dataSigBytes = data.sigBytes;\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;\n\n\t        // Compute last byte position\n\t        var lastBytePos = dataSigBytes + nPaddingBytes - 1;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.words[lastBytePos >>> 2] |= nPaddingBytes << (24 - (lastBytePos % 4) * 8);\n\t        data.sigBytes += nPaddingBytes;\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Ansix923;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ISO 10126 padding strategy.\n\t */\n\tCryptoJS.pad.Iso10126 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcut\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t        // Pad\n\t        data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - 1)).\n\t             concat(CryptoJS.lib.WordArray.create([nPaddingBytes << 24], 1));\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Iso10126;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ISO/IEC 9797-1 Padding Method 2.\n\t */\n\tCryptoJS.pad.Iso97971 = {\n\t    pad: function (data, blockSize) {\n\t        // Add 0x80 byte\n\t        data.concat(CryptoJS.lib.WordArray.create([0x80000000], 1));\n\n\t        // Zero pad the rest\n\t        CryptoJS.pad.ZeroPadding.pad(data, blockSize);\n\t    },\n\n\t    unpad: function (data) {\n\t        // Remove zero padding\n\t        CryptoJS.pad.ZeroPadding.unpad(data);\n\n\t        // Remove one more byte -- the 0x80 byte\n\t        data.sigBytes--;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Iso97971;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Zero padding strategy.\n\t */\n\tCryptoJS.pad.ZeroPadding = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcut\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.sigBytes += blockSizeBytes - ((data.sigBytes % blockSizeBytes) || blockSizeBytes);\n\t    },\n\n\t    unpad: function (data) {\n\t        // Shortcut\n\t        var dataWords = data.words;\n\n\t        // Unpad\n\t        var i = data.sigBytes - 1;\n\t        for (var i = data.sigBytes - 1; i >= 0; i--) {\n\t            if (((dataWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff)) {\n\t                data.sigBytes = i + 1;\n\t                break;\n\t            }\n\t        }\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.ZeroPadding;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * A noop padding strategy.\n\t */\n\tCryptoJS.pad.NoPadding = {\n\t    pad: function () {\n\t    },\n\n\t    unpad: function () {\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.NoPadding;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var CipherParams = C_lib.CipherParams;\n\t    var C_enc = C.enc;\n\t    var Hex = C_enc.Hex;\n\t    var C_format = C.format;\n\n\t    var HexFormatter = C_format.Hex = {\n\t        /**\n\t         * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The hexadecimally encoded string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            return cipherParams.ciphertext.toString(Hex);\n\t        },\n\n\t        /**\n\t         * Converts a hexadecimally encoded ciphertext string to a cipher params object.\n\t         *\n\t         * @param {string} input The hexadecimally encoded string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.Hex.parse(hexString);\n\t         */\n\t        parse: function (input) {\n\t            var ciphertext = Hex.parse(input);\n\t            return CipherParams.create({ ciphertext: ciphertext });\n\t        }\n\t    };\n\t}());\n\n\n\treturn CryptoJS.format.Hex;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Lookup tables\n\t    var SBOX = [];\n\t    var INV_SBOX = [];\n\t    var SUB_MIX_0 = [];\n\t    var SUB_MIX_1 = [];\n\t    var SUB_MIX_2 = [];\n\t    var SUB_MIX_3 = [];\n\t    var INV_SUB_MIX_0 = [];\n\t    var INV_SUB_MIX_1 = [];\n\t    var INV_SUB_MIX_2 = [];\n\t    var INV_SUB_MIX_3 = [];\n\n\t    // Compute lookup tables\n\t    (function () {\n\t        // Compute double table\n\t        var d = [];\n\t        for (var i = 0; i < 256; i++) {\n\t            if (i < 128) {\n\t                d[i] = i << 1;\n\t            } else {\n\t                d[i] = (i << 1) ^ 0x11b;\n\t            }\n\t        }\n\n\t        // Walk GF(2^8)\n\t        var x = 0;\n\t        var xi = 0;\n\t        for (var i = 0; i < 256; i++) {\n\t            // Compute sbox\n\t            var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n\t            sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n\t            SBOX[x] = sx;\n\t            INV_SBOX[sx] = x;\n\n\t            // Compute multiplication\n\t            var x2 = d[x];\n\t            var x4 = d[x2];\n\t            var x8 = d[x4];\n\n\t            // Compute sub bytes, mix columns tables\n\t            var t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n\t            SUB_MIX_0[x] = (t << 24) | (t >>> 8);\n\t            SUB_MIX_1[x] = (t << 16) | (t >>> 16);\n\t            SUB_MIX_2[x] = (t << 8)  | (t >>> 24);\n\t            SUB_MIX_3[x] = t;\n\n\t            // Compute inv sub bytes, inv mix columns tables\n\t            var t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n\t            INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);\n\t            INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);\n\t            INV_SUB_MIX_2[sx] = (t << 8)  | (t >>> 24);\n\t            INV_SUB_MIX_3[sx] = t;\n\n\t            // Compute next counter\n\t            if (!x) {\n\t                x = xi = 1;\n\t            } else {\n\t                x = x2 ^ d[d[d[x8 ^ x2]]];\n\t                xi ^= d[d[xi]];\n\t            }\n\t        }\n\t    }());\n\n\t    // Precomputed Rcon lookup\n\t    var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\n\t    /**\n\t     * AES block cipher algorithm.\n\t     */\n\t    var AES = C_algo.AES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            var t;\n\n\t            // Skip reset of nRounds has been set before and key did not change\n\t            if (this._nRounds && this._keyPriorReset === this._key) {\n\t                return;\n\t            }\n\n\t            // Shortcuts\n\t            var key = this._keyPriorReset = this._key;\n\t            var keyWords = key.words;\n\t            var keySize = key.sigBytes / 4;\n\n\t            // Compute number of rounds\n\t            var nRounds = this._nRounds = keySize + 6;\n\n\t            // Compute number of key schedule rows\n\t            var ksRows = (nRounds + 1) * 4;\n\n\t            // Compute key schedule\n\t            var keySchedule = this._keySchedule = [];\n\t            for (var ksRow = 0; ksRow < ksRows; ksRow++) {\n\t                if (ksRow < keySize) {\n\t                    keySchedule[ksRow] = keyWords[ksRow];\n\t                } else {\n\t                    t = keySchedule[ksRow - 1];\n\n\t                    if (!(ksRow % keySize)) {\n\t                        // Rot word\n\t                        t = (t << 8) | (t >>> 24);\n\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\n\t                        // Mix Rcon\n\t                        t ^= RCON[(ksRow / keySize) | 0] << 24;\n\t                    } else if (keySize > 6 && ksRow % keySize == 4) {\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\t                    }\n\n\t                    keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\n\t                }\n\t            }\n\n\t            // Compute inv key schedule\n\t            var invKeySchedule = this._invKeySchedule = [];\n\t            for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n\t                var ksRow = ksRows - invKsRow;\n\n\t                if (invKsRow % 4) {\n\t                    var t = keySchedule[ksRow];\n\t                } else {\n\t                    var t = keySchedule[ksRow - 4];\n\t                }\n\n\t                if (invKsRow < 4 || ksRow <= 4) {\n\t                    invKeySchedule[invKsRow] = t;\n\t                } else {\n\t                    invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[(t >>> 16) & 0xff]] ^\n\t                                               INV_SUB_MIX_2[SBOX[(t >>> 8) & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];\n\t                }\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            // Swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\n\t            this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);\n\n\t            // Inv swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\t        },\n\n\t        _doCryptBlock: function (M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\n\t            // Shortcut\n\t            var nRounds = this._nRounds;\n\n\t            // Get input, add round key\n\t            var s0 = M[offset]     ^ keySchedule[0];\n\t            var s1 = M[offset + 1] ^ keySchedule[1];\n\t            var s2 = M[offset + 2] ^ keySchedule[2];\n\t            var s3 = M[offset + 3] ^ keySchedule[3];\n\n\t            // Key schedule row counter\n\t            var ksRow = 4;\n\n\t            // Rounds\n\t            for (var round = 1; round < nRounds; round++) {\n\t                // Shift rows, sub bytes, mix columns, add round key\n\t                var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[(s1 >>> 16) & 0xff] ^ SUB_MIX_2[(s2 >>> 8) & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];\n\t                var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[(s2 >>> 16) & 0xff] ^ SUB_MIX_2[(s3 >>> 8) & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];\n\t                var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[(s3 >>> 16) & 0xff] ^ SUB_MIX_2[(s0 >>> 8) & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];\n\t                var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[(s0 >>> 16) & 0xff] ^ SUB_MIX_2[(s1 >>> 8) & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];\n\n\t                // Update state\n\t                s0 = t0;\n\t                s1 = t1;\n\t                s2 = t2;\n\t                s3 = t3;\n\t            }\n\n\t            // Shift rows, sub bytes, add round key\n\t            var t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];\n\n\t            // Set output\n\t            M[offset]     = t0;\n\t            M[offset + 1] = t1;\n\t            M[offset + 2] = t2;\n\t            M[offset + 3] = t3;\n\t        },\n\n\t        keySize: 256/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.AES = BlockCipher._createHelper(AES);\n\t}());\n\n\n\treturn CryptoJS.AES;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Permuted Choice 1 constants\n\t    var PC1 = [\n\t        57, 49, 41, 33, 25, 17, 9,  1,\n\t        58, 50, 42, 34, 26, 18, 10, 2,\n\t        59, 51, 43, 35, 27, 19, 11, 3,\n\t        60, 52, 44, 36, 63, 55, 47, 39,\n\t        31, 23, 15, 7,  62, 54, 46, 38,\n\t        30, 22, 14, 6,  61, 53, 45, 37,\n\t        29, 21, 13, 5,  28, 20, 12, 4\n\t    ];\n\n\t    // Permuted Choice 2 constants\n\t    var PC2 = [\n\t        14, 17, 11, 24, 1,  5,\n\t        3,  28, 15, 6,  21, 10,\n\t        23, 19, 12, 4,  26, 8,\n\t        16, 7,  27, 20, 13, 2,\n\t        41, 52, 31, 37, 47, 55,\n\t        30, 40, 51, 45, 33, 48,\n\t        44, 49, 39, 56, 34, 53,\n\t        46, 42, 50, 36, 29, 32\n\t    ];\n\n\t    // Cumulative bit shift constants\n\t    var BIT_SHIFTS = [1,  2,  4,  6,  8,  10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];\n\n\t    // SBOXes and round permutation constants\n\t    var SBOX_P = [\n\t        {\n\t            0x0: 0x808200,\n\t            0x10000000: 0x8000,\n\t            0x20000000: 0x808002,\n\t            0x30000000: 0x2,\n\t            0x40000000: 0x200,\n\t            0x50000000: 0x808202,\n\t            0x60000000: 0x800202,\n\t            0x70000000: 0x800000,\n\t            0x80000000: 0x202,\n\t            0x90000000: 0x800200,\n\t            0xa0000000: 0x8200,\n\t            0xb0000000: 0x808000,\n\t            0xc0000000: 0x8002,\n\t            0xd0000000: 0x800002,\n\t            0xe0000000: 0x0,\n\t            0xf0000000: 0x8202,\n\t            0x8000000: 0x0,\n\t            0x18000000: 0x808202,\n\t            0x28000000: 0x8202,\n\t            0x38000000: 0x8000,\n\t            0x48000000: 0x808200,\n\t            0x58000000: 0x200,\n\t            0x68000000: 0x808002,\n\t            0x78000000: 0x2,\n\t            0x88000000: 0x800200,\n\t            0x98000000: 0x8200,\n\t            0xa8000000: 0x808000,\n\t            0xb8000000: 0x800202,\n\t            0xc8000000: 0x800002,\n\t            0xd8000000: 0x8002,\n\t            0xe8000000: 0x202,\n\t            0xf8000000: 0x800000,\n\t            0x1: 0x8000,\n\t            0x10000001: 0x2,\n\t            0x20000001: 0x808200,\n\t            0x30000001: 0x800000,\n\t            0x40000001: 0x808002,\n\t            0x50000001: 0x8200,\n\t            0x60000001: 0x200,\n\t            0x70000001: 0x800202,\n\t            0x80000001: 0x808202,\n\t            0x90000001: 0x808000,\n\t            0xa0000001: 0x800002,\n\t            0xb0000001: 0x8202,\n\t            0xc0000001: 0x202,\n\t            0xd0000001: 0x800200,\n\t            0xe0000001: 0x8002,\n\t            0xf0000001: 0x0,\n\t            0x8000001: 0x808202,\n\t            0x18000001: 0x808000,\n\t            0x28000001: 0x800000,\n\t            0x38000001: 0x200,\n\t            0x48000001: 0x8000,\n\t            0x58000001: 0x800002,\n\t            0x68000001: 0x2,\n\t            0x78000001: 0x8202,\n\t            0x88000001: 0x8002,\n\t            0x98000001: 0x800202,\n\t            0xa8000001: 0x202,\n\t            0xb8000001: 0x808200,\n\t            0xc8000001: 0x800200,\n\t            0xd8000001: 0x0,\n\t            0xe8000001: 0x8200,\n\t            0xf8000001: 0x808002\n\t        },\n\t        {\n\t            0x0: 0x40084010,\n\t            0x1000000: 0x4000,\n\t            0x2000000: 0x80000,\n\t            0x3000000: 0x40080010,\n\t            0x4000000: 0x40000010,\n\t            0x5000000: 0x40084000,\n\t            0x6000000: 0x40004000,\n\t            0x7000000: 0x10,\n\t            0x8000000: 0x84000,\n\t            0x9000000: 0x40004010,\n\t            0xa000000: 0x40000000,\n\t            0xb000000: 0x84010,\n\t            0xc000000: 0x80010,\n\t            0xd000000: 0x0,\n\t            0xe000000: 0x4010,\n\t            0xf000000: 0x40080000,\n\t            0x800000: 0x40004000,\n\t            0x1800000: 0x84010,\n\t            0x2800000: 0x10,\n\t            0x3800000: 0x40004010,\n\t            0x4800000: 0x40084010,\n\t            0x5800000: 0x40000000,\n\t            0x6800000: 0x80000,\n\t            0x7800000: 0x40080010,\n\t            0x8800000: 0x80010,\n\t            0x9800000: 0x0,\n\t            0xa800000: 0x4000,\n\t            0xb800000: 0x40080000,\n\t            0xc800000: 0x40000010,\n\t            0xd800000: 0x84000,\n\t            0xe800000: 0x40084000,\n\t            0xf800000: 0x4010,\n\t            0x10000000: 0x0,\n\t            0x11000000: 0x40080010,\n\t            0x12000000: 0x40004010,\n\t            0x13000000: 0x40084000,\n\t            0x14000000: 0x40080000,\n\t            0x15000000: 0x10,\n\t            0x16000000: 0x84010,\n\t            0x17000000: 0x4000,\n\t            0x18000000: 0x4010,\n\t            0x19000000: 0x80000,\n\t            0x1a000000: 0x80010,\n\t            0x1b000000: 0x40000010,\n\t            0x1c000000: 0x84000,\n\t            0x1d000000: 0x40004000,\n\t            0x1e000000: 0x40000000,\n\t            0x1f000000: 0x40084010,\n\t            0x10800000: 0x84010,\n\t            0x11800000: 0x80000,\n\t            0x12800000: 0x40080000,\n\t            0x13800000: 0x4000,\n\t            0x14800000: 0x40004000,\n\t            0x15800000: 0x40084010,\n\t            0x16800000: 0x10,\n\t            0x17800000: 0x40000000,\n\t            0x18800000: 0x40084000,\n\t            0x19800000: 0x40000010,\n\t            0x1a800000: 0x40004010,\n\t            0x1b800000: 0x80010,\n\t            0x1c800000: 0x0,\n\t            0x1d800000: 0x4010,\n\t            0x1e800000: 0x40080010,\n\t            0x1f800000: 0x84000\n\t        },\n\t        {\n\t            0x0: 0x104,\n\t            0x100000: 0x0,\n\t            0x200000: 0x4000100,\n\t            0x300000: 0x10104,\n\t            0x400000: 0x10004,\n\t            0x500000: 0x4000004,\n\t            0x600000: 0x4010104,\n\t            0x700000: 0x4010000,\n\t            0x800000: 0x4000000,\n\t            0x900000: 0x4010100,\n\t            0xa00000: 0x10100,\n\t            0xb00000: 0x4010004,\n\t            0xc00000: 0x4000104,\n\t            0xd00000: 0x10000,\n\t            0xe00000: 0x4,\n\t            0xf00000: 0x100,\n\t            0x80000: 0x4010100,\n\t            0x180000: 0x4010004,\n\t            0x280000: 0x0,\n\t            0x380000: 0x4000100,\n\t            0x480000: 0x4000004,\n\t            0x580000: 0x10000,\n\t            0x680000: 0x10004,\n\t            0x780000: 0x104,\n\t            0x880000: 0x4,\n\t            0x980000: 0x100,\n\t            0xa80000: 0x4010000,\n\t            0xb80000: 0x10104,\n\t            0xc80000: 0x10100,\n\t            0xd80000: 0x4000104,\n\t            0xe80000: 0x4010104,\n\t            0xf80000: 0x4000000,\n\t            0x1000000: 0x4010100,\n\t            0x1100000: 0x10004,\n\t            0x1200000: 0x10000,\n\t            0x1300000: 0x4000100,\n\t            0x1400000: 0x100,\n\t            0x1500000: 0x4010104,\n\t            0x1600000: 0x4000004,\n\t            0x1700000: 0x0,\n\t            0x1800000: 0x4000104,\n\t            0x1900000: 0x4000000,\n\t            0x1a00000: 0x4,\n\t            0x1b00000: 0x10100,\n\t            0x1c00000: 0x4010000,\n\t            0x1d00000: 0x104,\n\t            0x1e00000: 0x10104,\n\t            0x1f00000: 0x4010004,\n\t            0x1080000: 0x4000000,\n\t            0x1180000: 0x104,\n\t            0x1280000: 0x4010100,\n\t            0x1380000: 0x0,\n\t            0x1480000: 0x10004,\n\t            0x1580000: 0x4000100,\n\t            0x1680000: 0x100,\n\t            0x1780000: 0x4010004,\n\t            0x1880000: 0x10000,\n\t            0x1980000: 0x4010104,\n\t            0x1a80000: 0x10104,\n\t            0x1b80000: 0x4000004,\n\t            0x1c80000: 0x4000104,\n\t            0x1d80000: 0x4010000,\n\t            0x1e80000: 0x4,\n\t            0x1f80000: 0x10100\n\t        },\n\t        {\n\t            0x0: 0x80401000,\n\t            0x10000: 0x80001040,\n\t            0x20000: 0x401040,\n\t            0x30000: 0x80400000,\n\t            0x40000: 0x0,\n\t            0x50000: 0x401000,\n\t            0x60000: 0x80000040,\n\t            0x70000: 0x400040,\n\t            0x80000: 0x80000000,\n\t            0x90000: 0x400000,\n\t            0xa0000: 0x40,\n\t            0xb0000: 0x80001000,\n\t            0xc0000: 0x80400040,\n\t            0xd0000: 0x1040,\n\t            0xe0000: 0x1000,\n\t            0xf0000: 0x80401040,\n\t            0x8000: 0x80001040,\n\t            0x18000: 0x40,\n\t            0x28000: 0x80400040,\n\t            0x38000: 0x80001000,\n\t            0x48000: 0x401000,\n\t            0x58000: 0x80401040,\n\t            0x68000: 0x0,\n\t            0x78000: 0x80400000,\n\t            0x88000: 0x1000,\n\t            0x98000: 0x80401000,\n\t            0xa8000: 0x400000,\n\t            0xb8000: 0x1040,\n\t            0xc8000: 0x80000000,\n\t            0xd8000: 0x400040,\n\t            0xe8000: 0x401040,\n\t            0xf8000: 0x80000040,\n\t            0x100000: 0x400040,\n\t            0x110000: 0x401000,\n\t            0x120000: 0x80000040,\n\t            0x130000: 0x0,\n\t            0x140000: 0x1040,\n\t            0x150000: 0x80400040,\n\t            0x160000: 0x80401000,\n\t            0x170000: 0x80001040,\n\t            0x180000: 0x80401040,\n\t            0x190000: 0x80000000,\n\t            0x1a0000: 0x80400000,\n\t            0x1b0000: 0x401040,\n\t            0x1c0000: 0x80001000,\n\t            0x1d0000: 0x400000,\n\t            0x1e0000: 0x40,\n\t            0x1f0000: 0x1000,\n\t            0x108000: 0x80400000,\n\t            0x118000: 0x80401040,\n\t            0x128000: 0x0,\n\t            0x138000: 0x401000,\n\t            0x148000: 0x400040,\n\t            0x158000: 0x80000000,\n\t            0x168000: 0x80001040,\n\t            0x178000: 0x40,\n\t            0x188000: 0x80000040,\n\t            0x198000: 0x1000,\n\t            0x1a8000: 0x80001000,\n\t            0x1b8000: 0x80400040,\n\t            0x1c8000: 0x1040,\n\t            0x1d8000: 0x80401000,\n\t            0x1e8000: 0x400000,\n\t            0x1f8000: 0x401040\n\t        },\n\t        {\n\t            0x0: 0x80,\n\t            0x1000: 0x1040000,\n\t            0x2000: 0x40000,\n\t            0x3000: 0x20000000,\n\t            0x4000: 0x20040080,\n\t            0x5000: 0x1000080,\n\t            0x6000: 0x21000080,\n\t            0x7000: 0x40080,\n\t            0x8000: 0x1000000,\n\t            0x9000: 0x20040000,\n\t            0xa000: 0x20000080,\n\t            0xb000: 0x21040080,\n\t            0xc000: 0x21040000,\n\t            0xd000: 0x0,\n\t            0xe000: 0x1040080,\n\t            0xf000: 0x21000000,\n\t            0x800: 0x1040080,\n\t            0x1800: 0x21000080,\n\t            0x2800: 0x80,\n\t            0x3800: 0x1040000,\n\t            0x4800: 0x40000,\n\t            0x5800: 0x20040080,\n\t            0x6800: 0x21040000,\n\t            0x7800: 0x20000000,\n\t            0x8800: 0x20040000,\n\t            0x9800: 0x0,\n\t            0xa800: 0x21040080,\n\t            0xb800: 0x1000080,\n\t            0xc800: 0x20000080,\n\t            0xd800: 0x21000000,\n\t            0xe800: 0x1000000,\n\t            0xf800: 0x40080,\n\t            0x10000: 0x40000,\n\t            0x11000: 0x80,\n\t            0x12000: 0x20000000,\n\t            0x13000: 0x21000080,\n\t            0x14000: 0x1000080,\n\t            0x15000: 0x21040000,\n\t            0x16000: 0x20040080,\n\t            0x17000: 0x1000000,\n\t            0x18000: 0x21040080,\n\t            0x19000: 0x21000000,\n\t            0x1a000: 0x1040000,\n\t            0x1b000: 0x20040000,\n\t            0x1c000: 0x40080,\n\t            0x1d000: 0x20000080,\n\t            0x1e000: 0x0,\n\t            0x1f000: 0x1040080,\n\t            0x10800: 0x21000080,\n\t            0x11800: 0x1000000,\n\t            0x12800: 0x1040000,\n\t            0x13800: 0x20040080,\n\t            0x14800: 0x20000000,\n\t            0x15800: 0x1040080,\n\t            0x16800: 0x80,\n\t            0x17800: 0x21040000,\n\t            0x18800: 0x40080,\n\t            0x19800: 0x21040080,\n\t            0x1a800: 0x0,\n\t            0x1b800: 0x21000000,\n\t            0x1c800: 0x1000080,\n\t            0x1d800: 0x40000,\n\t            0x1e800: 0x20040000,\n\t            0x1f800: 0x20000080\n\t        },\n\t        {\n\t            0x0: 0x10000008,\n\t            0x100: 0x2000,\n\t            0x200: 0x10200000,\n\t            0x300: 0x10202008,\n\t            0x400: 0x10002000,\n\t            0x500: 0x200000,\n\t            0x600: 0x200008,\n\t            0x700: 0x10000000,\n\t            0x800: 0x0,\n\t            0x900: 0x10002008,\n\t            0xa00: 0x202000,\n\t            0xb00: 0x8,\n\t            0xc00: 0x10200008,\n\t            0xd00: 0x202008,\n\t            0xe00: 0x2008,\n\t            0xf00: 0x10202000,\n\t            0x80: 0x10200000,\n\t            0x180: 0x10202008,\n\t            0x280: 0x8,\n\t            0x380: 0x200000,\n\t            0x480: 0x202008,\n\t            0x580: 0x10000008,\n\t            0x680: 0x10002000,\n\t            0x780: 0x2008,\n\t            0x880: 0x200008,\n\t            0x980: 0x2000,\n\t            0xa80: 0x10002008,\n\t            0xb80: 0x10200008,\n\t            0xc80: 0x0,\n\t            0xd80: 0x10202000,\n\t            0xe80: 0x202000,\n\t            0xf80: 0x10000000,\n\t            0x1000: 0x10002000,\n\t            0x1100: 0x10200008,\n\t            0x1200: 0x10202008,\n\t            0x1300: 0x2008,\n\t            0x1400: 0x200000,\n\t            0x1500: 0x10000000,\n\t            0x1600: 0x10000008,\n\t            0x1700: 0x202000,\n\t            0x1800: 0x202008,\n\t            0x1900: 0x0,\n\t            0x1a00: 0x8,\n\t            0x1b00: 0x10200000,\n\t            0x1c00: 0x2000,\n\t            0x1d00: 0x10002008,\n\t            0x1e00: 0x10202000,\n\t            0x1f00: 0x200008,\n\t            0x1080: 0x8,\n\t            0x1180: 0x202000,\n\t            0x1280: 0x200000,\n\t            0x1380: 0x10000008,\n\t            0x1480: 0x10002000,\n\t            0x1580: 0x2008,\n\t            0x1680: 0x10202008,\n\t            0x1780: 0x10200000,\n\t            0x1880: 0x10202000,\n\t            0x1980: 0x10200008,\n\t            0x1a80: 0x2000,\n\t            0x1b80: 0x202008,\n\t            0x1c80: 0x200008,\n\t            0x1d80: 0x0,\n\t            0x1e80: 0x10000000,\n\t            0x1f80: 0x10002008\n\t        },\n\t        {\n\t            0x0: 0x100000,\n\t            0x10: 0x2000401,\n\t            0x20: 0x400,\n\t            0x30: 0x100401,\n\t            0x40: 0x2100401,\n\t            0x50: 0x0,\n\t            0x60: 0x1,\n\t            0x70: 0x2100001,\n\t            0x80: 0x2000400,\n\t            0x90: 0x100001,\n\t            0xa0: 0x2000001,\n\t            0xb0: 0x2100400,\n\t            0xc0: 0x2100000,\n\t            0xd0: 0x401,\n\t            0xe0: 0x100400,\n\t            0xf0: 0x2000000,\n\t            0x8: 0x2100001,\n\t            0x18: 0x0,\n\t            0x28: 0x2000401,\n\t            0x38: 0x2100400,\n\t            0x48: 0x100000,\n\t            0x58: 0x2000001,\n\t            0x68: 0x2000000,\n\t            0x78: 0x401,\n\t            0x88: 0x100401,\n\t            0x98: 0x2000400,\n\t            0xa8: 0x2100000,\n\t            0xb8: 0x100001,\n\t            0xc8: 0x400,\n\t            0xd8: 0x2100401,\n\t            0xe8: 0x1,\n\t            0xf8: 0x100400,\n\t            0x100: 0x2000000,\n\t            0x110: 0x100000,\n\t            0x120: 0x2000401,\n\t            0x130: 0x2100001,\n\t            0x140: 0x100001,\n\t            0x150: 0x2000400,\n\t            0x160: 0x2100400,\n\t            0x170: 0x100401,\n\t            0x180: 0x401,\n\t            0x190: 0x2100401,\n\t            0x1a0: 0x100400,\n\t            0x1b0: 0x1,\n\t            0x1c0: 0x0,\n\t            0x1d0: 0x2100000,\n\t            0x1e0: 0x2000001,\n\t            0x1f0: 0x400,\n\t            0x108: 0x100400,\n\t            0x118: 0x2000401,\n\t            0x128: 0x2100001,\n\t            0x138: 0x1,\n\t            0x148: 0x2000000,\n\t            0x158: 0x100000,\n\t            0x168: 0x401,\n\t            0x178: 0x2100400,\n\t            0x188: 0x2000001,\n\t            0x198: 0x2100000,\n\t            0x1a8: 0x0,\n\t            0x1b8: 0x2100401,\n\t            0x1c8: 0x100401,\n\t            0x1d8: 0x400,\n\t            0x1e8: 0x2000400,\n\t            0x1f8: 0x100001\n\t        },\n\t        {\n\t            0x0: 0x8000820,\n\t            0x1: 0x20000,\n\t            0x2: 0x8000000,\n\t            0x3: 0x20,\n\t            0x4: 0x20020,\n\t            0x5: 0x8020820,\n\t            0x6: 0x8020800,\n\t            0x7: 0x800,\n\t            0x8: 0x8020000,\n\t            0x9: 0x8000800,\n\t            0xa: 0x20800,\n\t            0xb: 0x8020020,\n\t            0xc: 0x820,\n\t            0xd: 0x0,\n\t            0xe: 0x8000020,\n\t            0xf: 0x20820,\n\t            0x80000000: 0x800,\n\t            0x80000001: 0x8020820,\n\t            0x80000002: 0x8000820,\n\t            0x80000003: 0x8000000,\n\t            0x80000004: 0x8020000,\n\t            0x80000005: 0x20800,\n\t            0x80000006: 0x20820,\n\t            0x80000007: 0x20,\n\t            0x80000008: 0x8000020,\n\t            0x80000009: 0x820,\n\t            0x8000000a: 0x20020,\n\t            0x8000000b: 0x8020800,\n\t            0x8000000c: 0x0,\n\t            0x8000000d: 0x8020020,\n\t            0x8000000e: 0x8000800,\n\t            0x8000000f: 0x20000,\n\t            0x10: 0x20820,\n\t            0x11: 0x8020800,\n\t            0x12: 0x20,\n\t            0x13: 0x800,\n\t            0x14: 0x8000800,\n\t            0x15: 0x8000020,\n\t            0x16: 0x8020020,\n\t            0x17: 0x20000,\n\t            0x18: 0x0,\n\t            0x19: 0x20020,\n\t            0x1a: 0x8020000,\n\t            0x1b: 0x8000820,\n\t            0x1c: 0x8020820,\n\t            0x1d: 0x20800,\n\t            0x1e: 0x820,\n\t            0x1f: 0x8000000,\n\t            0x80000010: 0x20000,\n\t            0x80000011: 0x800,\n\t            0x80000012: 0x8020020,\n\t            0x80000013: 0x20820,\n\t            0x80000014: 0x20,\n\t            0x80000015: 0x8020000,\n\t            0x80000016: 0x8000000,\n\t            0x80000017: 0x8000820,\n\t            0x80000018: 0x8020820,\n\t            0x80000019: 0x8000020,\n\t            0x8000001a: 0x8000800,\n\t            0x8000001b: 0x0,\n\t            0x8000001c: 0x20800,\n\t            0x8000001d: 0x820,\n\t            0x8000001e: 0x20020,\n\t            0x8000001f: 0x8020800\n\t        }\n\t    ];\n\n\t    // Masks that select the SBOX input\n\t    var SBOX_MASK = [\n\t        0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000,\n\t        0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f\n\t    ];\n\n\t    /**\n\t     * DES block cipher algorithm.\n\t     */\n\t    var DES = C_algo.DES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\n\t            // Select 56 bits according to PC1\n\t            var keyBits = [];\n\t            for (var i = 0; i < 56; i++) {\n\t                var keyBitPos = PC1[i] - 1;\n\t                keyBits[i] = (keyWords[keyBitPos >>> 5] >>> (31 - keyBitPos % 32)) & 1;\n\t            }\n\n\t            // Assemble 16 subkeys\n\t            var subKeys = this._subKeys = [];\n\t            for (var nSubKey = 0; nSubKey < 16; nSubKey++) {\n\t                // Create subkey\n\t                var subKey = subKeys[nSubKey] = [];\n\n\t                // Shortcut\n\t                var bitShift = BIT_SHIFTS[nSubKey];\n\n\t                // Select 48 bits according to PC2\n\t                for (var i = 0; i < 24; i++) {\n\t                    // Select from the left 28 key bits\n\t                    subKey[(i / 6) | 0] |= keyBits[((PC2[i] - 1) + bitShift) % 28] << (31 - i % 6);\n\n\t                    // Select from the right 28 key bits\n\t                    subKey[4 + ((i / 6) | 0)] |= keyBits[28 + (((PC2[i + 24] - 1) + bitShift) % 28)] << (31 - i % 6);\n\t                }\n\n\t                // Since each subkey is applied to an expanded 32-bit input,\n\t                // the subkey can be broken into 8 values scaled to 32-bits,\n\t                // which allows the key to be used without expansion\n\t                subKey[0] = (subKey[0] << 1) | (subKey[0] >>> 31);\n\t                for (var i = 1; i < 7; i++) {\n\t                    subKey[i] = subKey[i] >>> ((i - 1) * 4 + 3);\n\t                }\n\t                subKey[7] = (subKey[7] << 5) | (subKey[7] >>> 27);\n\t            }\n\n\t            // Compute inverse subkeys\n\t            var invSubKeys = this._invSubKeys = [];\n\t            for (var i = 0; i < 16; i++) {\n\t                invSubKeys[i] = subKeys[15 - i];\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._subKeys);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._invSubKeys);\n\t        },\n\n\t        _doCryptBlock: function (M, offset, subKeys) {\n\t            // Get input\n\t            this._lBlock = M[offset];\n\t            this._rBlock = M[offset + 1];\n\n\t            // Initial permutation\n\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t            exchangeRL.call(this, 2,  0x33333333);\n\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t            exchangeLR.call(this, 1,  0x55555555);\n\n\t            // Rounds\n\t            for (var round = 0; round < 16; round++) {\n\t                // Shortcuts\n\t                var subKey = subKeys[round];\n\t                var lBlock = this._lBlock;\n\t                var rBlock = this._rBlock;\n\n\t                // Feistel function\n\t                var f = 0;\n\t                for (var i = 0; i < 8; i++) {\n\t                    f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];\n\t                }\n\t                this._lBlock = rBlock;\n\t                this._rBlock = lBlock ^ f;\n\t            }\n\n\t            // Undo swap from last round\n\t            var t = this._lBlock;\n\t            this._lBlock = this._rBlock;\n\t            this._rBlock = t;\n\n\t            // Final permutation\n\t            exchangeLR.call(this, 1,  0x55555555);\n\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t            exchangeRL.call(this, 2,  0x33333333);\n\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\n\t            // Set output\n\t            M[offset] = this._lBlock;\n\t            M[offset + 1] = this._rBlock;\n\t        },\n\n\t        keySize: 64/32,\n\n\t        ivSize: 64/32,\n\n\t        blockSize: 64/32\n\t    });\n\n\t    // Swap bits across the left and right words\n\t    function exchangeLR(offset, mask) {\n\t        var t = ((this._lBlock >>> offset) ^ this._rBlock) & mask;\n\t        this._rBlock ^= t;\n\t        this._lBlock ^= t << offset;\n\t    }\n\n\t    function exchangeRL(offset, mask) {\n\t        var t = ((this._rBlock >>> offset) ^ this._lBlock) & mask;\n\t        this._lBlock ^= t;\n\t        this._rBlock ^= t << offset;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.DES = BlockCipher._createHelper(DES);\n\n\t    /**\n\t     * Triple-DES block cipher algorithm.\n\t     */\n\t    var TripleDES = C_algo.TripleDES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\t            // Make sure the key length is valid (64, 128 or >= 192 bit)\n\t            if (keyWords.length !== 2 && keyWords.length !== 4 && keyWords.length < 6) {\n\t                throw new Error('Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.');\n\t            }\n\n\t            // Extend the key according to the keying options defined in 3DES standard\n\t            var key1 = keyWords.slice(0, 2);\n\t            var key2 = keyWords.length < 4 ? keyWords.slice(0, 2) : keyWords.slice(2, 4);\n\t            var key3 = keyWords.length < 6 ? keyWords.slice(0, 2) : keyWords.slice(4, 6);\n\n\t            // Create DES instances\n\t            this._des1 = DES.createEncryptor(WordArray.create(key1));\n\t            this._des2 = DES.createEncryptor(WordArray.create(key2));\n\t            this._des3 = DES.createEncryptor(WordArray.create(key3));\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._des1.encryptBlock(M, offset);\n\t            this._des2.decryptBlock(M, offset);\n\t            this._des3.encryptBlock(M, offset);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            this._des3.decryptBlock(M, offset);\n\t            this._des2.encryptBlock(M, offset);\n\t            this._des1.decryptBlock(M, offset);\n\t        },\n\n\t        keySize: 192/32,\n\n\t        ivSize: 64/32,\n\n\t        blockSize: 64/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.TripleDES = BlockCipher._createHelper(TripleDES);\n\t}());\n\n\n\treturn CryptoJS.TripleDES;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * RC4 stream cipher algorithm.\n\t     */\n\t    var RC4 = C_algo.RC4 = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\t            var keySigBytes = key.sigBytes;\n\n\t            // Init sbox\n\t            var S = this._S = [];\n\t            for (var i = 0; i < 256; i++) {\n\t                S[i] = i;\n\t            }\n\n\t            // Key setup\n\t            for (var i = 0, j = 0; i < 256; i++) {\n\t                var keyByteIndex = i % keySigBytes;\n\t                var keyByte = (keyWords[keyByteIndex >>> 2] >>> (24 - (keyByteIndex % 4) * 8)) & 0xff;\n\n\t                j = (j + S[i] + keyByte) % 256;\n\n\t                // Swap\n\t                var t = S[i];\n\t                S[i] = S[j];\n\t                S[j] = t;\n\t            }\n\n\t            // Counters\n\t            this._i = this._j = 0;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            M[offset] ^= generateKeystreamWord.call(this);\n\t        },\n\n\t        keySize: 256/32,\n\n\t        ivSize: 0\n\t    });\n\n\t    function generateKeystreamWord() {\n\t        // Shortcuts\n\t        var S = this._S;\n\t        var i = this._i;\n\t        var j = this._j;\n\n\t        // Generate keystream word\n\t        var keystreamWord = 0;\n\t        for (var n = 0; n < 4; n++) {\n\t            i = (i + 1) % 256;\n\t            j = (j + S[i]) % 256;\n\n\t            // Swap\n\t            var t = S[i];\n\t            S[i] = S[j];\n\t            S[j] = t;\n\n\t            keystreamWord |= S[(S[i] + S[j]) % 256] << (24 - n * 8);\n\t        }\n\n\t        // Update counters\n\t        this._i = i;\n\t        this._j = j;\n\n\t        return keystreamWord;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4 = StreamCipher._createHelper(RC4);\n\n\t    /**\n\t     * Modified RC4 stream cipher algorithm.\n\t     */\n\t    var RC4Drop = C_algo.RC4Drop = RC4.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} drop The number of keystream words to drop. Default 192\n\t         */\n\t        cfg: RC4.cfg.extend({\n\t            drop: 192\n\t        }),\n\n\t        _doReset: function () {\n\t            RC4._doReset.call(this);\n\n\t            // Drop\n\t            for (var i = this.cfg.drop; i > 0; i--) {\n\t                generateKeystreamWord.call(this);\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4Drop = StreamCipher._createHelper(RC4Drop);\n\t}());\n\n\n\treturn CryptoJS.RC4;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm\n\t     */\n\t    var Rabbit = C_algo.Rabbit = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                K[i] = (((K[i] << 8)  | (K[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((K[i] << 24) | (K[i] >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.Rabbit = StreamCipher._createHelper(Rabbit);\n\t}());\n\n\n\treturn CryptoJS.Rabbit;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm.\n\t     *\n\t     * This is a legacy version that neglected to convert the key to little-endian.\n\t     * This error doesn't affect the cipher's security,\n\t     * but it does affect its compatibility with other implementations.\n\t     */\n\t    var RabbitLegacy = C_algo.RabbitLegacy = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RabbitLegacy = StreamCipher._createHelper(RabbitLegacy);\n\t}());\n\n\n\treturn CryptoJS.RabbitLegacy;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    const N = 16;\n\n\t    //Origin pbox and sbox, derived from PI\n\t    const ORIG_P = [\n\t        0x243F6A88, 0x85A308D3, 0x13198A2E, 0x03707344,\n\t        0xA4093822, 0x299F31D0, 0x082EFA98, 0xEC4E6C89,\n\t        0x452821E6, 0x38D01377, 0xBE5466CF, 0x34E90C6C,\n\t        0xC0AC29B7, 0xC97C50DD, 0x3F84D5B5, 0xB5470917,\n\t        0x9216D5D9, 0x8979FB1B\n\t    ];\n\n\t    const ORIG_S = [\n\t        [   0xD1310BA6, 0x98DFB5AC, 0x2FFD72DB, 0xD01ADFB7,\n\t            0xB8E1AFED, 0x6A267E96, 0xBA7C9045, 0xF12C7F99,\n\t            0x24A19947, 0xB3916CF7, 0x0801F2E2, 0x858EFC16,\n\t            0x636920D8, 0x71574E69, 0xA458FEA3, 0xF4933D7E,\n\t            0x0D95748F, 0x728EB658, 0x718BCD58, 0x82154AEE,\n\t            0x7B54A41D, 0xC25A59B5, 0x9C30D539, 0x2AF26013,\n\t            0xC5D1B023, 0x286085F0, 0xCA417918, 0xB8DB38EF,\n\t            0x8E79DCB0, 0x603A180E, 0x6C9E0E8B, 0xB01E8A3E,\n\t            0xD71577C1, 0xBD314B27, 0x78AF2FDA, 0x55605C60,\n\t            0xE65525F3, 0xAA55AB94, 0x57489862, 0x63E81440,\n\t            0x55CA396A, 0x2AAB10B6, 0xB4CC5C34, 0x1141E8CE,\n\t            0xA15486AF, 0x7C72E993, 0xB3EE1411, 0x636FBC2A,\n\t            0x2BA9C55D, 0x741831F6, 0xCE5C3E16, 0x9B87931E,\n\t            0xAFD6BA33, 0x6C24CF5C, 0x7A325381, 0x28958677,\n\t            0x3B8F4898, 0x6B4BB9AF, 0xC4BFE81B, 0x66282193,\n\t            0x61D809CC, 0xFB21A991, 0x487CAC60, 0x5DEC8032,\n\t            0xEF845D5D, 0xE98575B1, 0xDC262302, 0xEB651B88,\n\t            0x23893E81, 0xD396ACC5, 0x0F6D6FF3, 0x83F44239,\n\t            0x2E0B4482, 0xA4842004, 0x69C8F04A, 0x9E1F9B5E,\n\t            0x21C66842, 0xF6E96C9A, 0x670C9C61, 0xABD388F0,\n\t            0x6A51A0D2, 0xD8542F68, 0x960FA728, 0xAB5133A3,\n\t            0x6EEF0B6C, 0x137A3BE4, 0xBA3BF050, 0x7EFB2A98,\n\t            0xA1F1651D, 0x39AF0176, 0x66CA593E, 0x82430E88,\n\t            0x8CEE8619, 0x456F9FB4, 0x7D84A5C3, 0x3B8B5EBE,\n\t            0xE06F75D8, 0x85C12073, 0x401A449F, 0x56C16AA6,\n\t            0x4ED3AA62, 0x363F7706, 0x1BFEDF72, 0x429B023D,\n\t            0x37D0D724, 0xD00A1248, 0xDB0FEAD3, 0x49F1C09B,\n\t            0x075372C9, 0x80991B7B, 0x25D479D8, 0xF6E8DEF7,\n\t            0xE3FE501A, 0xB6794C3B, 0x976CE0BD, 0x04C006BA,\n\t            0xC1A94FB6, 0x409F60C4, 0x5E5C9EC2, 0x196A2463,\n\t            0x68FB6FAF, 0x3E6C53B5, 0x1339B2EB, 0x3B52EC6F,\n\t            0x6DFC511F, 0x9B30952C, 0xCC814544, 0xAF5EBD09,\n\t            0xBEE3D004, 0xDE334AFD, 0x660F2807, 0x192E4BB3,\n\t            0xC0CBA857, 0x45C8740F, 0xD20B5F39, 0xB9D3FBDB,\n\t            0x5579C0BD, 0x1A60320A, 0xD6A100C6, 0x402C7279,\n\t            0x679F25FE, 0xFB1FA3CC, 0x8EA5E9F8, 0xDB3222F8,\n\t            0x3C7516DF, 0xFD616B15, 0x2F501EC8, 0xAD0552AB,\n\t            0x323DB5FA, 0xFD238760, 0x53317B48, 0x3E00DF82,\n\t            0x9E5C57BB, 0xCA6F8CA0, 0x1A87562E, 0xDF1769DB,\n\t            0xD542A8F6, 0x287EFFC3, 0xAC6732C6, 0x8C4F5573,\n\t            0x695B27B0, 0xBBCA58C8, 0xE1FFA35D, 0xB8F011A0,\n\t            0x10FA3D98, 0xFD2183B8, 0x4AFCB56C, 0x2DD1D35B,\n\t            0x9A53E479, 0xB6F84565, 0xD28E49BC, 0x4BFB9790,\n\t            0xE1DDF2DA, 0xA4CB7E33, 0x62FB1341, 0xCEE4C6E8,\n\t            0xEF20CADA, 0x36774C01, 0xD07E9EFE, 0x2BF11FB4,\n\t            0x95DBDA4D, 0xAE909198, 0xEAAD8E71, 0x6B93D5A0,\n\t            0xD08ED1D0, 0xAFC725E0, 0x8E3C5B2F, 0x8E7594B7,\n\t            0x8FF6E2FB, 0xF2122B64, 0x8888B812, 0x900DF01C,\n\t            0x4FAD5EA0, 0x688FC31C, 0xD1CFF191, 0xB3A8C1AD,\n\t            0x2F2F2218, 0xBE0E1777, 0xEA752DFE, 0x8B021FA1,\n\t            0xE5A0CC0F, 0xB56F74E8, 0x18ACF3D6, 0xCE89E299,\n\t            0xB4A84FE0, 0xFD13E0B7, 0x7CC43B81, 0xD2ADA8D9,\n\t            0x165FA266, 0x80957705, 0x93CC7314, 0x211A1477,\n\t            0xE6AD2065, 0x77B5FA86, 0xC75442F5, 0xFB9D35CF,\n\t            0xEBCDAF0C, 0x7B3E89A0, 0xD6411BD3, 0xAE1E7E49,\n\t            0x00250E2D, 0x2071B35E, 0x226800BB, 0x57B8E0AF,\n\t            0x2464369B, 0xF009B91E, 0x5563911D, 0x59DFA6AA,\n\t            0x78C14389, 0xD95A537F, 0x207D5BA2, 0x02E5B9C5,\n\t            0x83260376, 0x6295CFA9, 0x11C81968, 0x4E734A41,\n\t            0xB3472DCA, 0x7B14A94A, 0x1B510052, 0x9A532915,\n\t            0xD60F573F, 0xBC9BC6E4, 0x2B60A476, 0x81E67400,\n\t            0x08BA6FB5, 0x571BE91F, 0xF296EC6B, 0x2A0DD915,\n\t            0xB6636521, 0xE7B9F9B6, 0xFF34052E, 0xC5855664,\n\t            0x53B02D5D, 0xA99F8FA1, 0x08BA4799, 0x6E85076A   ],\n\t        [   0x4B7A70E9, 0xB5B32944, 0xDB75092E, 0xC4192623,\n\t            0xAD6EA6B0, 0x49A7DF7D, 0x9CEE60B8, 0x8FEDB266,\n\t            0xECAA8C71, 0x699A17FF, 0x5664526C, 0xC2B19EE1,\n\t            0x193602A5, 0x75094C29, 0xA0591340, 0xE4183A3E,\n\t            0x3F54989A, 0x5B429D65, 0x6B8FE4D6, 0x99F73FD6,\n\t            0xA1D29C07, 0xEFE830F5, 0x4D2D38E6, 0xF0255DC1,\n\t            0x4CDD2086, 0x8470EB26, 0x6382E9C6, 0x021ECC5E,\n\t            0x09686B3F, 0x3EBAEFC9, 0x3C971814, 0x6B6A70A1,\n\t            0x687F3584, 0x52A0E286, 0xB79C5305, 0xAA500737,\n\t            0x3E07841C, 0x7FDEAE5C, 0x8E7D44EC, 0x5716F2B8,\n\t            0xB03ADA37, 0xF0500C0D, 0xF01C1F04, 0x0200B3FF,\n\t            0xAE0CF51A, 0x3CB574B2, 0x25837A58, 0xDC0921BD,\n\t            0xD19113F9, 0x7CA92FF6, 0x94324773, 0x22F54701,\n\t            0x3AE5E581, 0x37C2DADC, 0xC8B57634, 0x9AF3DDA7,\n\t            0xA9446146, 0x0FD0030E, 0xECC8C73E, 0xA4751E41,\n\t            0xE238CD99, 0x3BEA0E2F, 0x3280BBA1, 0x183EB331,\n\t            0x4E548B38, 0x4F6DB908, 0x6F420D03, 0xF60A04BF,\n\t            0x2CB81290, 0x24977C79, 0x5679B072, 0xBCAF89AF,\n\t            0xDE9A771F, 0xD9930810, 0xB38BAE12, 0xDCCF3F2E,\n\t            0x5512721F, 0x2E6B7124, 0x501ADDE6, 0x9F84CD87,\n\t            0x7A584718, 0x7408DA17, 0xBC9F9ABC, 0xE94B7D8C,\n\t            0xEC7AEC3A, 0xDB851DFA, 0x63094366, 0xC464C3D2,\n\t            0xEF1C1847, 0x3215D908, 0xDD433B37, 0x24C2BA16,\n\t            0x12A14D43, 0x2A65C451, 0x50940002, 0x133AE4DD,\n\t            0x71DFF89E, 0x10314E55, 0x81AC77D6, 0x5F11199B,\n\t            0x043556F1, 0xD7A3C76B, 0x3C11183B, 0x5924A509,\n\t            0xF28FE6ED, 0x97F1FBFA, 0x9EBABF2C, 0x1E153C6E,\n\t            0x86E34570, 0xEAE96FB1, 0x860E5E0A, 0x5A3E2AB3,\n\t            0x771FE71C, 0x4E3D06FA, 0x2965DCB9, 0x99E71D0F,\n\t            0x803E89D6, 0x5266C825, 0x2E4CC978, 0x9C10B36A,\n\t            0xC6150EBA, 0x94E2EA78, 0xA5FC3C53, 0x1E0A2DF4,\n\t            0xF2F74EA7, 0x361D2B3D, 0x1939260F, 0x19C27960,\n\t            0x5223A708, 0xF71312B6, 0xEBADFE6E, 0xEAC31F66,\n\t            0xE3BC4595, 0xA67BC883, 0xB17F37D1, 0x018CFF28,\n\t            0xC332DDEF, 0xBE6C5AA5, 0x65582185, 0x68AB9802,\n\t            0xEECEA50F, 0xDB2F953B, 0x2AEF7DAD, 0x5B6E2F84,\n\t            0x1521B628, 0x29076170, 0xECDD4775, 0x619F1510,\n\t            0x13CCA830, 0xEB61BD96, 0x0334FE1E, 0xAA0363CF,\n\t            0xB5735C90, 0x4C70A239, 0xD59E9E0B, 0xCBAADE14,\n\t            0xEECC86BC, 0x60622CA7, 0x9CAB5CAB, 0xB2F3846E,\n\t            0x648B1EAF, 0x19BDF0CA, 0xA02369B9, 0x655ABB50,\n\t            0x40685A32, 0x3C2AB4B3, 0x319EE9D5, 0xC021B8F7,\n\t            0x9B540B19, 0x875FA099, 0x95F7997E, 0x623D7DA8,\n\t            0xF837889A, 0x97E32D77, 0x11ED935F, 0x16681281,\n\t            0x0E358829, 0xC7E61FD6, 0x96DEDFA1, 0x7858BA99,\n\t            0x57F584A5, 0x1B227263, 0x9B83C3FF, 0x1AC24696,\n\t            0xCDB30AEB, 0x532E3054, 0x8FD948E4, 0x6DBC3128,\n\t            0x58EBF2EF, 0x34C6FFEA, 0xFE28ED61, 0xEE7C3C73,\n\t            0x5D4A14D9, 0xE864B7E3, 0x42105D14, 0x203E13E0,\n\t            0x45EEE2B6, 0xA3AAABEA, 0xDB6C4F15, 0xFACB4FD0,\n\t            0xC742F442, 0xEF6ABBB5, 0x654F3B1D, 0x41CD2105,\n\t            0xD81E799E, 0x86854DC7, 0xE44B476A, 0x3D816250,\n\t            0xCF62A1F2, 0x5B8D2646, 0xFC8883A0, 0xC1C7B6A3,\n\t            0x7F1524C3, 0x69CB7492, 0x47848A0B, 0x5692B285,\n\t            0x095BBF00, 0xAD19489D, 0x1462B174, 0x23820E00,\n\t            0x58428D2A, 0x0C55F5EA, 0x1DADF43E, 0x233F7061,\n\t            0x3372F092, 0x8D937E41, 0xD65FECF1, 0x6C223BDB,\n\t            0x7CDE3759, 0xCBEE7460, 0x4085F2A7, 0xCE77326E,\n\t            0xA6078084, 0x19F8509E, 0xE8EFD855, 0x61D99735,\n\t            0xA969A7AA, 0xC50C06C2, 0x5A04ABFC, 0x800BCADC,\n\t            0x9E447A2E, 0xC3453484, 0xFDD56705, 0x0E1E9EC9,\n\t            0xDB73DBD3, 0x105588CD, 0x675FDA79, 0xE3674340,\n\t            0xC5C43465, 0x713E38D8, 0x3D28F89E, 0xF16DFF20,\n\t            0x153E21E7, 0x8FB03D4A, 0xE6E39F2B, 0xDB83ADF7   ],\n\t        [   0xE93D5A68, 0x948140F7, 0xF64C261C, 0x94692934,\n\t            0x411520F7, 0x7602D4F7, 0xBCF46B2E, 0xD4A20068,\n\t            0xD4082471, 0x3320F46A, 0x43B7D4B7, 0x500061AF,\n\t            0x1E39F62E, 0x97244546, 0x14214F74, 0xBF8B8840,\n\t            0x4D95FC1D, 0x96B591AF, 0x70F4DDD3, 0x66A02F45,\n\t            0xBFBC09EC, 0x03BD9785, 0x7FAC6DD0, 0x31CB8504,\n\t            0x96EB27B3, 0x55FD3941, 0xDA2547E6, 0xABCA0A9A,\n\t            0x28507825, 0x530429F4, 0x0A2C86DA, 0xE9B66DFB,\n\t            0x68DC1462, 0xD7486900, 0x680EC0A4, 0x27A18DEE,\n\t            0x4F3FFEA2, 0xE887AD8C, 0xB58CE006, 0x7AF4D6B6,\n\t            0xAACE1E7C, 0xD3375FEC, 0xCE78A399, 0x406B2A42,\n\t            0x20FE9E35, 0xD9F385B9, 0xEE39D7AB, 0x3B124E8B,\n\t            0x1DC9FAF7, 0x4B6D1856, 0x26A36631, 0xEAE397B2,\n\t            0x3A6EFA74, 0xDD5B4332, 0x6841E7F7, 0xCA7820FB,\n\t            0xFB0AF54E, 0xD8FEB397, 0x454056AC, 0xBA489527,\n\t            0x55533A3A, 0x20838D87, 0xFE6BA9B7, 0xD096954B,\n\t            0x55A867BC, 0xA1159A58, 0xCCA92963, 0x99E1DB33,\n\t            0xA62A4A56, 0x3F3125F9, 0x5EF47E1C, 0x9029317C,\n\t            0xFDF8E802, 0x04272F70, 0x80BB155C, 0x05282CE3,\n\t            0x95C11548, 0xE4C66D22, 0x48C1133F, 0xC70F86DC,\n\t            0x07F9C9EE, 0x41041F0F, 0x404779A4, 0x5D886E17,\n\t            0x325F51EB, 0xD59BC0D1, 0xF2BCC18F, 0x41113564,\n\t            0x257B7834, 0x602A9C60, 0xDFF8E8A3, 0x1F636C1B,\n\t            0x0E12B4C2, 0x02E1329E, 0xAF664FD1, 0xCAD18115,\n\t            0x6B2395E0, 0x333E92E1, 0x3B240B62, 0xEEBEB922,\n\t            0x85B2A20E, 0xE6BA0D99, 0xDE720C8C, 0x2DA2F728,\n\t            0xD0127845, 0x95B794FD, 0x647D0862, 0xE7CCF5F0,\n\t            0x5449A36F, 0x877D48FA, 0xC39DFD27, 0xF33E8D1E,\n\t            0x0A476341, 0x992EFF74, 0x3A6F6EAB, 0xF4F8FD37,\n\t            0xA812DC60, 0xA1EBDDF8, 0x991BE14C, 0xDB6E6B0D,\n\t            0xC67B5510, 0x6D672C37, 0x2765D43B, 0xDCD0E804,\n\t            0xF1290DC7, 0xCC00FFA3, 0xB5390F92, 0x690FED0B,\n\t            0x667B9FFB, 0xCEDB7D9C, 0xA091CF0B, 0xD9155EA3,\n\t            0xBB132F88, 0x515BAD24, 0x7B9479BF, 0x763BD6EB,\n\t            0x37392EB3, 0xCC115979, 0x8026E297, 0xF42E312D,\n\t            0x6842ADA7, 0xC66A2B3B, 0x12754CCC, 0x782EF11C,\n\t            0x6A124237, 0xB79251E7, 0x06A1BBE6, 0x4BFB6350,\n\t            0x1A6B1018, 0x11CAEDFA, 0x3D25BDD8, 0xE2E1C3C9,\n\t            0x44421659, 0x0A121386, 0xD90CEC6E, 0xD5ABEA2A,\n\t            0x64AF674E, 0xDA86A85F, 0xBEBFE988, 0x64E4C3FE,\n\t            0x9DBC8057, 0xF0F7C086, 0x60787BF8, 0x6003604D,\n\t            0xD1FD8346, 0xF6381FB0, 0x7745AE04, 0xD736FCCC,\n\t            0x83426B33, 0xF01EAB71, 0xB0804187, 0x3C005E5F,\n\t            0x77A057BE, 0xBDE8AE24, 0x55464299, 0xBF582E61,\n\t            0x4E58F48F, 0xF2DDFDA2, 0xF474EF38, 0x8789BDC2,\n\t            0x5366F9C3, 0xC8B38E74, 0xB475F255, 0x46FCD9B9,\n\t            0x7AEB2661, 0x8B1DDF84, 0x846A0E79, 0x915F95E2,\n\t            0x466E598E, 0x20B45770, 0x8CD55591, 0xC902DE4C,\n\t            0xB90BACE1, 0xBB8205D0, 0x11A86248, 0x7574A99E,\n\t            0xB77F19B6, 0xE0A9DC09, 0x662D09A1, 0xC4324633,\n\t            0xE85A1F02, 0x09F0BE8C, 0x4A99A025, 0x1D6EFE10,\n\t            0x1AB93D1D, 0x0BA5A4DF, 0xA186F20F, 0x2868F169,\n\t            0xDCB7DA83, 0x573906FE, 0xA1E2CE9B, 0x4FCD7F52,\n\t            0x50115E01, 0xA70683FA, 0xA002B5C4, 0x0DE6D027,\n\t            0x9AF88C27, 0x773F8641, 0xC3604C06, 0x61A806B5,\n\t            0xF0177A28, 0xC0F586E0, 0x006058AA, 0x30DC7D62,\n\t            0x11E69ED7, 0x2338EA63, 0x53C2DD94, 0xC2C21634,\n\t            0xBBCBEE56, 0x90BCB6DE, 0xEBFC7DA1, 0xCE591D76,\n\t            0x6F05E409, 0x4B7C0188, 0x39720A3D, 0x7C927C24,\n\t            0x86E3725F, 0x724D9DB9, 0x1AC15BB4, 0xD39EB8FC,\n\t            0xED545578, 0x08FCA5B5, 0xD83D7CD3, 0x4DAD0FC4,\n\t            0x1E50EF5E, 0xB161E6F8, 0xA28514D9, 0x6C51133C,\n\t            0x6FD5C7E7, 0x56E14EC4, 0x362ABFCE, 0xDDC6C837,\n\t            0xD79A3234, 0x92638212, 0x670EFA8E, 0x406000E0  ],\n\t        [   0x3A39CE37, 0xD3FAF5CF, 0xABC27737, 0x5AC52D1B,\n\t            0x5CB0679E, 0x4FA33742, 0xD3822740, 0x99BC9BBE,\n\t            0xD5118E9D, 0xBF0F7315, 0xD62D1C7E, 0xC700C47B,\n\t            0xB78C1B6B, 0x21A19045, 0xB26EB1BE, 0x6A366EB4,\n\t            0x5748AB2F, 0xBC946E79, 0xC6A376D2, 0x6549C2C8,\n\t            0x530FF8EE, 0x468DDE7D, 0xD5730A1D, 0x4CD04DC6,\n\t            0x2939BBDB, 0xA9BA4650, 0xAC9526E8, 0xBE5EE304,\n\t            0xA1FAD5F0, 0x6A2D519A, 0x63EF8CE2, 0x9A86EE22,\n\t            0xC089C2B8, 0x43242EF6, 0xA51E03AA, 0x9CF2D0A4,\n\t            0x83C061BA, 0x9BE96A4D, 0x8FE51550, 0xBA645BD6,\n\t            0x2826A2F9, 0xA73A3AE1, 0x4BA99586, 0xEF5562E9,\n\t            0xC72FEFD3, 0xF752F7DA, 0x3F046F69, 0x77FA0A59,\n\t            0x80E4A915, 0x87B08601, 0x9B09E6AD, 0x3B3EE593,\n\t            0xE990FD5A, 0x9E34D797, 0x2CF0B7D9, 0x022B8B51,\n\t            0x96D5AC3A, 0x017DA67D, 0xD1CF3ED6, 0x7C7D2D28,\n\t            0x1F9F25CF, 0xADF2B89B, 0x5AD6B472, 0x5A88F54C,\n\t            0xE029AC71, 0xE019A5E6, 0x47B0ACFD, 0xED93FA9B,\n\t            0xE8D3C48D, 0x283B57CC, 0xF8D56629, 0x79132E28,\n\t            0x785F0191, 0xED756055, 0xF7960E44, 0xE3D35E8C,\n\t            0x15056DD4, 0x88F46DBA, 0x03A16125, 0x0564F0BD,\n\t            0xC3EB9E15, 0x3C9057A2, 0x97271AEC, 0xA93A072A,\n\t            0x1B3F6D9B, 0x1E6321F5, 0xF59C66FB, 0x26DCF319,\n\t            0x7533D928, 0xB155FDF5, 0x03563482, 0x8ABA3CBB,\n\t            0x28517711, 0xC20AD9F8, 0xABCC5167, 0xCCAD925F,\n\t            0x4DE81751, 0x3830DC8E, 0x379D5862, 0x9320F991,\n\t            0xEA7A90C2, 0xFB3E7BCE, 0x5121CE64, 0x774FBE32,\n\t            0xA8B6E37E, 0xC3293D46, 0x48DE5369, 0x6413E680,\n\t            0xA2AE0810, 0xDD6DB224, 0x69852DFD, 0x09072166,\n\t            0xB39A460A, 0x6445C0DD, 0x586CDECF, 0x1C20C8AE,\n\t            0x5BBEF7DD, 0x1B588D40, 0xCCD2017F, 0x6BB4E3BB,\n\t            0xDDA26A7E, 0x3A59FF45, 0x3E350A44, 0xBCB4CDD5,\n\t            0x72EACEA8, 0xFA6484BB, 0x8D6612AE, 0xBF3C6F47,\n\t            0xD29BE463, 0x542F5D9E, 0xAEC2771B, 0xF64E6370,\n\t            0x740E0D8D, 0xE75B1357, 0xF8721671, 0xAF537D5D,\n\t            0x4040CB08, 0x4EB4E2CC, 0x34D2466A, 0x0115AF84,\n\t            0xE1B00428, 0x95983A1D, 0x06B89FB4, 0xCE6EA048,\n\t            0x6F3F3B82, 0x3520AB82, 0x011A1D4B, 0x277227F8,\n\t            0x611560B1, 0xE7933FDC, 0xBB3A792B, 0x344525BD,\n\t            0xA08839E1, 0x51CE794B, 0x2F32C9B7, 0xA01FBAC9,\n\t            0xE01CC87E, 0xBCC7D1F6, 0xCF0111C3, 0xA1E8AAC7,\n\t            0x1A908749, 0xD44FBD9A, 0xD0DADECB, 0xD50ADA38,\n\t            0x0339C32A, 0xC6913667, 0x8DF9317C, 0xE0B12B4F,\n\t            0xF79E59B7, 0x43F5BB3A, 0xF2D519FF, 0x27D9459C,\n\t            0xBF97222C, 0x15E6FC2A, 0x0F91FC71, 0x9B941525,\n\t            0xFAE59361, 0xCEB69CEB, 0xC2A86459, 0x12BAA8D1,\n\t            0xB6C1075E, 0xE3056A0C, 0x10D25065, 0xCB03A442,\n\t            0xE0EC6E0E, 0x1698DB3B, 0x4C98A0BE, 0x3278E964,\n\t            0x9F1F9532, 0xE0D392DF, 0xD3A0342B, 0x8971F21E,\n\t            0x1B0A7441, 0x4BA3348C, 0xC5BE7120, 0xC37632D8,\n\t            0xDF359F8D, 0x9B992F2E, 0xE60B6F47, 0x0FE3F11D,\n\t            0xE54CDA54, 0x1EDAD891, 0xCE6279CF, 0xCD3E7E6F,\n\t            0x1618B166, 0xFD2C1D05, 0x848FD2C5, 0xF6FB2299,\n\t            0xF523F357, 0xA6327623, 0x93A83531, 0x56CCCD02,\n\t            0xACF08162, 0x5A75EBB5, 0x6E163697, 0x88D273CC,\n\t            0xDE966292, 0x81B949D0, 0x4C50901B, 0x71C65614,\n\t            0xE6C6C7BD, 0x327A140A, 0x45E1D006, 0xC3F27B9A,\n\t            0xC9AA53FD, 0x62A80F00, 0xBB25BFE2, 0x35BDD2F6,\n\t            0x71126905, 0xB2040222, 0xB6CBCF7C, 0xCD769C2B,\n\t            0x53113EC0, 0x1640E3D3, 0x38ABBD60, 0x2547ADF0,\n\t            0xBA38209C, 0xF746CE76, 0x77AFA1C5, 0x20756060,\n\t            0x85CBFE4E, 0x8AE88DD8, 0x7AAAF9B0, 0x4CF9AA7E,\n\t            0x1948C25C, 0x02FB8A8C, 0x01C36AE4, 0xD6EBE1F9,\n\t            0x90D4F869, 0xA65CDEA0, 0x3F09252D, 0xC208E69F,\n\t            0xB74E6132, 0xCE77E25B, 0x578FDFE3, 0x3AC372E6  ]\n\t    ];\n\n\t    var BLOWFISH_CTX = {\n\t        pbox: [],\n\t        sbox: []\n\t    }\n\n\t    function F(ctx, x){\n\t        let a = (x >> 24) & 0xFF;\n\t        let b = (x >> 16) & 0xFF;\n\t        let c = (x >> 8) & 0xFF;\n\t        let d = x & 0xFF;\n\n\t        let y = ctx.sbox[0][a] + ctx.sbox[1][b];\n\t        y = y ^ ctx.sbox[2][c];\n\t        y = y + ctx.sbox[3][d];\n\n\t        return y;\n\t    }\n\n\t    function BlowFish_Encrypt(ctx, left, right){\n\t        let Xl = left;\n\t        let Xr = right;\n\t        let temp;\n\n\t        for(let i = 0; i < N; ++i){\n\t            Xl = Xl ^ ctx.pbox[i];\n\t            Xr = F(ctx, Xl) ^ Xr;\n\n\t            temp = Xl;\n\t            Xl = Xr;\n\t            Xr = temp;\n\t        }\n\n\t        temp = Xl;\n\t        Xl = Xr;\n\t        Xr = temp;\n\n\t        Xr = Xr ^ ctx.pbox[N];\n\t        Xl = Xl ^ ctx.pbox[N + 1];\n\n\t        return {left: Xl, right: Xr};\n\t    }\n\n\t    function BlowFish_Decrypt(ctx, left, right){\n\t        let Xl = left;\n\t        let Xr = right;\n\t        let temp;\n\n\t        for(let i = N + 1; i > 1; --i){\n\t            Xl = Xl ^ ctx.pbox[i];\n\t            Xr = F(ctx, Xl) ^ Xr;\n\n\t            temp = Xl;\n\t            Xl = Xr;\n\t            Xr = temp;\n\t        }\n\n\t        temp = Xl;\n\t        Xl = Xr;\n\t        Xr = temp;\n\n\t        Xr = Xr ^ ctx.pbox[1];\n\t        Xl = Xl ^ ctx.pbox[0];\n\n\t        return {left: Xl, right: Xr};\n\t    }\n\n\t    /**\n\t     * Initialization ctx's pbox and sbox.\n\t     *\n\t     * @param {Object} ctx The object has pbox and sbox.\n\t     * @param {Array} key An array of 32-bit words.\n\t     * @param {int} keysize The length of the key.\n\t     *\n\t     * @example\n\t     *\n\t     *     BlowFishInit(BLOWFISH_CTX, key, 128/32);\n\t     */\n\t    function BlowFishInit(ctx, key, keysize)\n\t    {\n\t        for(let Row = 0; Row < 4; Row++)\n\t        {\n\t            ctx.sbox[Row] = [];\n\t            for(let Col = 0; Col < 256; Col++)\n\t            {\n\t                ctx.sbox[Row][Col] = ORIG_S[Row][Col];\n\t            }\n\t        }\n\n\t        let keyIndex = 0;\n\t        for(let index = 0; index < N + 2; index++)\n\t        {\n\t            ctx.pbox[index] = ORIG_P[index] ^ key[keyIndex];\n\t            keyIndex++;\n\t            if(keyIndex >= keysize)\n\t            {\n\t                keyIndex = 0;\n\t            }\n\t        }\n\n\t        let Data1 = 0;\n\t        let Data2 = 0;\n\t        let res = 0;\n\t        for(let i = 0; i < N + 2; i += 2)\n\t        {\n\t            res = BlowFish_Encrypt(ctx, Data1, Data2);\n\t            Data1 = res.left;\n\t            Data2 = res.right;\n\t            ctx.pbox[i] = Data1;\n\t            ctx.pbox[i + 1] = Data2;\n\t        }\n\n\t        for(let i = 0; i < 4; i++)\n\t        {\n\t            for(let j = 0; j < 256; j += 2)\n\t            {\n\t                res = BlowFish_Encrypt(ctx, Data1, Data2);\n\t                Data1 = res.left;\n\t                Data2 = res.right;\n\t                ctx.sbox[i][j] = Data1;\n\t                ctx.sbox[i][j + 1] = Data2;\n\t            }\n\t        }\n\n\t        return true;\n\t    }\n\n\t    /**\n\t     * Blowfish block cipher algorithm.\n\t     */\n\t    var Blowfish = C_algo.Blowfish = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Skip reset of nRounds has been set before and key did not change\n\t            if (this._keyPriorReset === this._key) {\n\t                return;\n\t            }\n\n\t            // Shortcuts\n\t            var key = this._keyPriorReset = this._key;\n\t            var keyWords = key.words;\n\t            var keySize = key.sigBytes / 4;\n\n\t            //Initialization pbox and sbox\n\t            BlowFishInit(BLOWFISH_CTX, keyWords, keySize);\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            var res = BlowFish_Encrypt(BLOWFISH_CTX, M[offset], M[offset + 1]);\n\t            M[offset] = res.left;\n\t            M[offset + 1] = res.right;\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            var res = BlowFish_Decrypt(BLOWFISH_CTX, M[offset], M[offset + 1]);\n\t            M[offset] = res.left;\n\t            M[offset + 1] = res.right;\n\t        },\n\n\t        blockSize: 64/32,\n\n\t        keySize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.Blowfish.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.Blowfish.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.Blowfish = BlockCipher._createHelper(Blowfish);\n\t}());\n\n\n\treturn CryptoJS.Blowfish;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"), require(\"./lib-typedarrays\"), require(\"./enc-utf16\"), require(\"./enc-base64\"), require(\"./enc-base64url\"), require(\"./md5\"), require(\"./sha1\"), require(\"./sha256\"), require(\"./sha224\"), require(\"./sha512\"), require(\"./sha384\"), require(\"./sha3\"), require(\"./ripemd160\"), require(\"./hmac\"), require(\"./pbkdf2\"), require(\"./evpkdf\"), require(\"./cipher-core\"), require(\"./mode-cfb\"), require(\"./mode-ctr\"), require(\"./mode-ctr-gladman\"), require(\"./mode-ofb\"), require(\"./mode-ecb\"), require(\"./pad-ansix923\"), require(\"./pad-iso10126\"), require(\"./pad-iso97971\"), require(\"./pad-zeropadding\"), require(\"./pad-nopadding\"), require(\"./format-hex\"), require(\"./aes\"), require(\"./tripledes\"), require(\"./rc4\"), require(\"./rabbit\"), require(\"./rabbit-legacy\"), require(\"./blowfish\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\", \"./lib-typedarrays\", \"./enc-utf16\", \"./enc-base64\", \"./enc-base64url\", \"./md5\", \"./sha1\", \"./sha256\", \"./sha224\", \"./sha512\", \"./sha384\", \"./sha3\", \"./ripemd160\", \"./hmac\", \"./pbkdf2\", \"./evpkdf\", \"./cipher-core\", \"./mode-cfb\", \"./mode-ctr\", \"./mode-ctr-gladman\", \"./mode-ofb\", \"./mode-ecb\", \"./pad-ansix923\", \"./pad-iso10126\", \"./pad-iso97971\", \"./pad-zeropadding\", \"./pad-nopadding\", \"./format-hex\", \"./aes\", \"./tripledes\", \"./rc4\", \"./rabbit\", \"./rabbit-legacy\", \"./blowfish\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\treturn CryptoJS;\n\n}));","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    this.length = num === 0 ? 1 : this.length;\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  var i;\n  for (i = 0; i < naf.length; i += 1) {\n    naf[i] = 0;\n  }\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  var e;\n  var h;\n  var j;\n  if (this.curve.twisted) {\n    // E = a * C\n    e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      h = this.z.redSqr();\n      // J = F - 2 * H\n      j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    e = c.redAdd(d);\n    // H = (c * Z1)^2\n    h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n    this.y,\n    this.z,\n    this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821',\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf',\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695',\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9',\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36',\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f',\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999',\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09',\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d',\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088',\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d',\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8',\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a',\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453',\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160',\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0',\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6',\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589',\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17',\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda',\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd',\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2',\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6',\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f',\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01',\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3',\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f',\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7',\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78',\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1',\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150',\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82',\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc',\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b',\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51',\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45',\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120',\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84',\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d',\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d',\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8',\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8',\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac',\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f',\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962',\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907',\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec',\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d',\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414',\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd',\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0',\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811',\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1',\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c',\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73',\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd',\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405',\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589',\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e',\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27',\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1',\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482',\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945',\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573',\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82',\n      ],\n    ],\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672',\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6',\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da',\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37',\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b',\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81',\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58',\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77',\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a',\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c',\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67',\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402',\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55',\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482',\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82',\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396',\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49',\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf',\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a',\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7',\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933',\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a',\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6',\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37',\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e',\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6',\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476',\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40',\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61',\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683',\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5',\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b',\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417',\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868',\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a',\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6',\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996',\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e',\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d',\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2',\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e',\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437',\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311',\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4',\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575',\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d',\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d',\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629',\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06',\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374',\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee',\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1',\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b',\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661',\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6',\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e',\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d',\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc',\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4',\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c',\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b',\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913',\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154',\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865',\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc',\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224',\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e',\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6',\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511',\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b',\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2',\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c',\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3',\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d',\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700',\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4',\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196',\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4',\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257',\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13',\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096',\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38',\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f',\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448',\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a',\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4',\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437',\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7',\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d',\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a',\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54',\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77',\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517',\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10',\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125',\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e',\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1',\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2',\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423',\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8',\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758',\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375',\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d',\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec',\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0',\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c',\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4',\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f',\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649',\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826',\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5',\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87',\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b',\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc',\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c',\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f',\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a',\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46',\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f',\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03',\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08',\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8',\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373',\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3',\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8',\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1',\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9',\n      ],\n    ],\n  },\n};\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature, options) {\n  return this.ec.verify(msg, signature, this, undefined, options);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  if(buf[p.place] === 0x00) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  if ((data[p.place] & 128) !== 0) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  if ((data[p.place] & 128) !== 0) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly, bitLength) {\n  var byteLength;\n  if (BN.isBN(msg) || typeof msg === 'number') {\n    msg = new BN(msg, 16);\n    byteLength = msg.byteLength();\n  } else if (typeof msg === 'object') {\n    // BN assumes an array-like input and asserts length\n    byteLength = msg.length;\n    msg = new BN(msg, 16);\n  } else {\n    // BN converts the value to string\n    var str = msg.toString();\n    // HEX encoding\n    byteLength = (str.length + 1) >>> 1;\n    msg = new BN(str, 16);\n  }\n  // Allow overriding\n  if (typeof bitLength !== 'number') {\n    bitLength = byteLength * 8;\n  }\n  var delta = bitLength - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  if (typeof msg !== 'string' && typeof msg !== 'number' && !BN.isBN(msg)) {\n    assert(typeof msg === 'object' && msg && typeof msg.length === 'number',\n      'Expected message to be an array-like, a hex string, or a BN instance');\n    assert((msg.length >>> 0) === msg.length); // non-negative 32-bit integer\n    for (var i = 0; i < msg.length; i++) assert((msg[i] & 255) === msg[i]);\n  }\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(msg, false, options.msgBitLength);\n\n  // Would fail further checks, but let's make the error message clear\n  assert(!msg.isNeg(), 'Can not sign a negative message');\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Recheck nonce to be bijective to msg\n  assert((new BN(nonce)).eq(msg), 'Can not sign message');\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc, options) {\n  if (!options)\n    options = {};\n\n  msg = this._truncateToN(msg, false, options.msgBitLength);\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    assert(sig.length === eddsa.encodingLength * 2, 'Signature has invalid size');\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength),\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n","'use strict';\n\nvar hash = require('hash.js');\nvar curves = require('../curves');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  curve = curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n    .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  if (sig.S().gte(sig.eddsa.curve.n) || sig.S().isNeg()) {\n    return false;\n  }\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.9.3\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2023\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA3_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\n    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\n    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\n    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\n    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n  var CSHAKE_BYTEPAD = {\n    '128': 168,\n    '256': 136\n  };\n\n\n  var isArray = root.JS_SHA3_NO_NODE_JS || !Array.isArray\n    ? function (obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n      }\n    : Array.isArray;\n\n  var isView = (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView))\n    ? function (obj) {\n        return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n      }\n    : ArrayBuffer.isView;\n\n  // [message: string, isString: bool]\n  var formatMessage = function (message) {\n    var type = typeof message;\n    if (type === 'string') {\n      return [message, true];\n    }\n    if (type !== 'object' || message === null) {\n      throw new Error(INPUT_ERROR);\n    }\n    if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n      return [new Uint8Array(message), false];\n    }\n    if (!isArray(message) && !isView(message)) {\n      throw new Error(INPUT_ERROR);\n    }\n    return [message, false];\n  }\n\n  var empty = function (message) {\n    return formatMessage(message)[0].length === 0;\n  };\n\n  var cloneArray = function (array) {\n    var newArray = [];\n    for (var i = 0; i < array.length; ++i) {\n      newArray[i] = array[i];\n    }\n    return newArray;\n  }\n\n  var createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n  };\n\n  var createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n  };\n\n  var createCshakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits, n, s) {\n      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n    };\n  };\n\n  var createKmacOutputMethod = function (bits, padding, outputType) {\n    return function (key, message, outputBits, s) {\n      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n    };\n  };\n\n  var createOutputMethods = function (method, createMethod, bits, padding) {\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createMethod(bits, padding, type);\n    }\n    return method;\n  };\n\n  var createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n    method.create = function () {\n      return new Keccak(bits, padding, bits);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    return createOutputMethods(method, createOutputMethod, bits, padding);\n  };\n\n  var createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits) {\n      return new Keccak(bits, padding, outputBits);\n    };\n    method.update = function (message, outputBits) {\n      return method.create(outputBits).update(message);\n    };\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n  };\n\n  var createCshakeMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits, n, s) {\n      if (empty(n) && empty(s)) {\n        return methods['shake' + bits].create(outputBits);\n      } else {\n        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n      }\n    };\n    method.update = function (message, outputBits, n, s) {\n      return method.create(outputBits, n, s).update(message);\n    };\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n  };\n\n  var createKmacMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createKmacOutputMethod(bits, padding, 'hex');\n    method.create = function (key, outputBits, s) {\n      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n    };\n    method.update = function (key, message, outputBits, s) {\n      return method.create(key, outputBits, s).update(message);\n    };\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n  };\n\n  var algorithms = [\n    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n  ];\n\n  var methods = {}, methodNames = [];\n\n  for (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n    for (var j = 0; j < bits.length; ++j) {\n      var methodName = algorithm.name + '_' + bits[j];\n      methodNames.push(methodName);\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n      if (algorithm.name !== 'sha3') {\n        var newMethodName = algorithm.name + bits[j];\n        methodNames.push(newMethodName);\n        methods[newMethodName] = methods[methodName];\n      }\n    }\n  }\n\n  function Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.finalized = false;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = (1600 - (bits << 1)) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n      this.s[i] = 0;\n    }\n  }\n\n  Keccak.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n    var result = formatMessage(message);\n    message = result[0];\n    var isString = result[1];\n    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\n\n    while (index < length) {\n      if (this.reset) {\n        this.reset = false;\n        blocks[0] = this.block;\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n      if (isString) {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      } else {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      }\n      this.lastByteIndex = i;\n      if (i >= byteCount) {\n        this.start = i - byteCount;\n        this.block = blocks[blockCount];\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n        f(s);\n        this.reset = true;\n      } else {\n        this.start = i;\n      }\n    }\n    return this;\n  };\n\n  Keccak.prototype.encode = function (x, right) {\n    var o = x & 255, n = 1;\n    var bytes = [o];\n    x = x >> 8;\n    o = x & 255;\n    while (o > 0) {\n      bytes.unshift(o);\n      x = x >> 8;\n      o = x & 255;\n      ++n;\n    }\n    if (right) {\n      bytes.push(n);\n    } else {\n      bytes.unshift(n);\n    }\n    this.update(bytes);\n    return bytes.length;\n  };\n\n  Keccak.prototype.encodeString = function (str) {\n    var result = formatMessage(str);\n    str = result[0];\n    var isString = result[1];\n    var bytes = 0, length = str.length;\n    if (isString) {\n      for (var i = 0; i < str.length; ++i) {\n        var code = str.charCodeAt(i);\n        if (code < 0x80) {\n          bytes += 1;\n        } else if (code < 0x800) {\n          bytes += 2;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes += 3;\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\n          bytes += 4;\n        }\n      }\n    } else {\n      bytes = length;\n    }\n    bytes += this.encode(bytes * 8);\n    this.update(str);\n    return bytes;\n  };\n\n  Keccak.prototype.bytepad = function (strs, w) {\n    var bytes = this.encode(w);\n    for (var i = 0; i < strs.length; ++i) {\n      bytes += this.encodeString(strs[i]);\n    }\n    var paddingBytes = (w - bytes % w) % w;\n    var zeros = [];\n    zeros.length = paddingBytes;\n    this.update(zeros);\n    return this;\n  };\n\n  Keccak.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n    if (this.lastByteIndex === this.byteCount) {\n      blocks[0] = blocks[blockCount];\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n      s[i] ^= blocks[i];\n    }\n    f(s);\n  };\n\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var hex = '', block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        block = s[i];\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\n          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\n          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\n          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\n      }\n      if (j % blockCount === 0) {\n        s = cloneArray(s);\n        f(s);\n        i = 0;\n      }\n    }\n    if (extraBytes) {\n      block = s[i];\n      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\n      if (extraBytes > 1) {\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\n      }\n      if (extraBytes > 2) {\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\n      }\n    }\n    return hex;\n  };\n\n  Keccak.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n    if (extraBytes) {\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\n    } else {\n      buffer = new ArrayBuffer(bytes);\n    }\n    var array = new Uint32Array(buffer);\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        array[j] = s[i];\n      }\n      if (j % blockCount === 0) {\n        s = cloneArray(s);\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      array[j] = s[i];\n      buffer = buffer.slice(0, bytes);\n    }\n    return buffer;\n  };\n\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var array = [], offset, block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        array[offset + 1] = (block >> 8) & 0xFF;\n        array[offset + 2] = (block >> 16) & 0xFF;\n        array[offset + 3] = (block >> 24) & 0xFF;\n      }\n      if (j % blockCount === 0) {\n        s = cloneArray(s);\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      offset = j << 2;\n      block = s[i];\n      array[offset] = block & 0xFF;\n      if (extraBytes > 1) {\n        array[offset + 1] = (block >> 8) & 0xFF;\n      }\n      if (extraBytes > 2) {\n        array[offset + 2] = (block >> 16) & 0xFF;\n      }\n    }\n    return array;\n  };\n\n  function Kmac(bits, padding, outputBits) {\n    Keccak.call(this, bits, padding, outputBits);\n  }\n\n  Kmac.prototype = new Keccak();\n\n  Kmac.prototype.finalize = function () {\n    this.encode(this.outputBits, true);\n    return Keccak.prototype.finalize.call(this);\n  };\n\n  var f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\n      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\n      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\n      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n    for (n = 0; n < 48; n += 2) {\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n      s[0] ^= h;\n      s[1] ^= l;\n      s[10] ^= h;\n      s[11] ^= l;\n      s[20] ^= h;\n      s[21] ^= l;\n      s[30] ^= h;\n      s[31] ^= l;\n      s[40] ^= h;\n      s[41] ^= l;\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n      s[2] ^= h;\n      s[3] ^= l;\n      s[12] ^= h;\n      s[13] ^= l;\n      s[22] ^= h;\n      s[23] ^= l;\n      s[32] ^= h;\n      s[33] ^= l;\n      s[42] ^= h;\n      s[43] ^= l;\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n      s[4] ^= h;\n      s[5] ^= l;\n      s[14] ^= h;\n      s[15] ^= l;\n      s[24] ^= h;\n      s[25] ^= l;\n      s[34] ^= h;\n      s[35] ^= l;\n      s[44] ^= h;\n      s[45] ^= l;\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n      s[6] ^= h;\n      s[7] ^= l;\n      s[16] ^= h;\n      s[17] ^= l;\n      s[26] ^= h;\n      s[27] ^= l;\n      s[36] ^= h;\n      s[37] ^= l;\n      s[46] ^= h;\n      s[47] ^= l;\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n      s[8] ^= h;\n      s[9] ^= l;\n      s[18] ^= h;\n      s[19] ^= l;\n      s[28] ^= h;\n      s[29] ^= l;\n      s[38] ^= h;\n      s[39] ^= l;\n      s[48] ^= h;\n      s[49] ^= l;\n\n      b0 = s[0];\n      b1 = s[1];\n      b32 = (s[11] << 4) | (s[10] >>> 28);\n      b33 = (s[10] << 4) | (s[11] >>> 28);\n      b14 = (s[20] << 3) | (s[21] >>> 29);\n      b15 = (s[21] << 3) | (s[20] >>> 29);\n      b46 = (s[31] << 9) | (s[30] >>> 23);\n      b47 = (s[30] << 9) | (s[31] >>> 23);\n      b28 = (s[40] << 18) | (s[41] >>> 14);\n      b29 = (s[41] << 18) | (s[40] >>> 14);\n      b20 = (s[2] << 1) | (s[3] >>> 31);\n      b21 = (s[3] << 1) | (s[2] >>> 31);\n      b2 = (s[13] << 12) | (s[12] >>> 20);\n      b3 = (s[12] << 12) | (s[13] >>> 20);\n      b34 = (s[22] << 10) | (s[23] >>> 22);\n      b35 = (s[23] << 10) | (s[22] >>> 22);\n      b16 = (s[33] << 13) | (s[32] >>> 19);\n      b17 = (s[32] << 13) | (s[33] >>> 19);\n      b48 = (s[42] << 2) | (s[43] >>> 30);\n      b49 = (s[43] << 2) | (s[42] >>> 30);\n      b40 = (s[5] << 30) | (s[4] >>> 2);\n      b41 = (s[4] << 30) | (s[5] >>> 2);\n      b22 = (s[14] << 6) | (s[15] >>> 26);\n      b23 = (s[15] << 6) | (s[14] >>> 26);\n      b4 = (s[25] << 11) | (s[24] >>> 21);\n      b5 = (s[24] << 11) | (s[25] >>> 21);\n      b36 = (s[34] << 15) | (s[35] >>> 17);\n      b37 = (s[35] << 15) | (s[34] >>> 17);\n      b18 = (s[45] << 29) | (s[44] >>> 3);\n      b19 = (s[44] << 29) | (s[45] >>> 3);\n      b10 = (s[6] << 28) | (s[7] >>> 4);\n      b11 = (s[7] << 28) | (s[6] >>> 4);\n      b42 = (s[17] << 23) | (s[16] >>> 9);\n      b43 = (s[16] << 23) | (s[17] >>> 9);\n      b24 = (s[26] << 25) | (s[27] >>> 7);\n      b25 = (s[27] << 25) | (s[26] >>> 7);\n      b6 = (s[36] << 21) | (s[37] >>> 11);\n      b7 = (s[37] << 21) | (s[36] >>> 11);\n      b38 = (s[47] << 24) | (s[46] >>> 8);\n      b39 = (s[46] << 24) | (s[47] >>> 8);\n      b30 = (s[8] << 27) | (s[9] >>> 5);\n      b31 = (s[9] << 27) | (s[8] >>> 5);\n      b12 = (s[18] << 20) | (s[19] >>> 12);\n      b13 = (s[19] << 20) | (s[18] >>> 12);\n      b44 = (s[29] << 7) | (s[28] >>> 25);\n      b45 = (s[28] << 7) | (s[29] >>> 25);\n      b26 = (s[38] << 8) | (s[39] >>> 24);\n      b27 = (s[39] << 8) | (s[38] >>> 24);\n      b8 = (s[48] << 14) | (s[49] >>> 18);\n      b9 = (s[49] << 14) | (s[48] >>> 18);\n\n      s[0] = b0 ^ (~b2 & b4);\n      s[1] = b1 ^ (~b3 & b5);\n      s[10] = b10 ^ (~b12 & b14);\n      s[11] = b11 ^ (~b13 & b15);\n      s[20] = b20 ^ (~b22 & b24);\n      s[21] = b21 ^ (~b23 & b25);\n      s[30] = b30 ^ (~b32 & b34);\n      s[31] = b31 ^ (~b33 & b35);\n      s[40] = b40 ^ (~b42 & b44);\n      s[41] = b41 ^ (~b43 & b45);\n      s[2] = b2 ^ (~b4 & b6);\n      s[3] = b3 ^ (~b5 & b7);\n      s[12] = b12 ^ (~b14 & b16);\n      s[13] = b13 ^ (~b15 & b17);\n      s[22] = b22 ^ (~b24 & b26);\n      s[23] = b23 ^ (~b25 & b27);\n      s[32] = b32 ^ (~b34 & b36);\n      s[33] = b33 ^ (~b35 & b37);\n      s[42] = b42 ^ (~b44 & b46);\n      s[43] = b43 ^ (~b45 & b47);\n      s[4] = b4 ^ (~b6 & b8);\n      s[5] = b5 ^ (~b7 & b9);\n      s[14] = b14 ^ (~b16 & b18);\n      s[15] = b15 ^ (~b17 & b19);\n      s[24] = b24 ^ (~b26 & b28);\n      s[25] = b25 ^ (~b27 & b29);\n      s[34] = b34 ^ (~b36 & b38);\n      s[35] = b35 ^ (~b37 & b39);\n      s[44] = b44 ^ (~b46 & b48);\n      s[45] = b45 ^ (~b47 & b49);\n      s[6] = b6 ^ (~b8 & b0);\n      s[7] = b7 ^ (~b9 & b1);\n      s[16] = b16 ^ (~b18 & b10);\n      s[17] = b17 ^ (~b19 & b11);\n      s[26] = b26 ^ (~b28 & b20);\n      s[27] = b27 ^ (~b29 & b21);\n      s[36] = b36 ^ (~b38 & b30);\n      s[37] = b37 ^ (~b39 & b31);\n      s[46] = b46 ^ (~b48 & b40);\n      s[47] = b47 ^ (~b49 & b41);\n      s[8] = b8 ^ (~b0 & b2);\n      s[9] = b9 ^ (~b1 & b3);\n      s[18] = b18 ^ (~b10 & b12);\n      s[19] = b19 ^ (~b11 & b13);\n      s[28] = b28 ^ (~b20 & b22);\n      s[29] = b29 ^ (~b21 & b23);\n      s[38] = b38 ^ (~b30 & b32);\n      s[39] = b39 ^ (~b31 & b33);\n      s[48] = b48 ^ (~b40 & b42);\n      s[49] = b49 ^ (~b41 & b43);\n\n      s[0] ^= RC[n];\n      s[1] ^= RC[n + 1];\n    }\n  };\n\n  if (COMMON_JS) {\n    module.exports = methods;\n  } else {\n    for (i = 0; i < methodNames.length; ++i) {\n      root[methodNames[i]] = methods[methodNames[i]];\n    }\n    if (AMD) {\n      define(function () {\n        return methods;\n      });\n    }\n  }\n})();\n","var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, {\n      get: all[name],\n      enumerable: true,\n      configurable: true,\n      set: (newValue) => all[name] = () => newValue\n    });\n};\nvar __require = /* @__PURE__ */ ((x) => typeof require !== \"undefined\" ? require : typeof Proxy !== \"undefined\" ? new Proxy(x, {\n  get: (a, b) => (typeof require !== \"undefined\" ? require : a)[b]\n}) : x)(function(x) {\n  if (typeof require !== \"undefined\")\n    return require.apply(this, arguments);\n  throw Error('Dynamic require of \"' + x + '\" is not supported');\n});\n\n// node:buffer\nvar lookup = [];\nvar revLookup = [];\nvar code = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nfor (i = 0, len = code.length;i < len; ++i)\n  lookup[i] = code[i], revLookup[code.charCodeAt(i)] = i;\nvar i;\nvar len;\nrevLookup[45] = 62;\nrevLookup[95] = 63;\nfunction getLens(b64) {\n  var len2 = b64.length;\n  if (len2 % 4 > 0)\n    throw new Error(\"Invalid string. Length must be a multiple of 4\");\n  var validLen = b64.indexOf(\"=\");\n  if (validLen === -1)\n    validLen = len2;\n  var placeHoldersLen = validLen === len2 ? 0 : 4 - validLen % 4;\n  return [validLen, placeHoldersLen];\n}\nfunction _byteLength(validLen, placeHoldersLen) {\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\nfunction toByteArray(b64) {\n  var tmp, lens = getLens(b64), validLen = lens[0], placeHoldersLen = lens[1], arr = new Uint8Array(_byteLength(validLen, placeHoldersLen)), curByte = 0, len2 = placeHoldersLen > 0 ? validLen - 4 : validLen, i2;\n  for (i2 = 0;i2 < len2; i2 += 4)\n    tmp = revLookup[b64.charCodeAt(i2)] << 18 | revLookup[b64.charCodeAt(i2 + 1)] << 12 | revLookup[b64.charCodeAt(i2 + 2)] << 6 | revLookup[b64.charCodeAt(i2 + 3)], arr[curByte++] = tmp >> 16 & 255, arr[curByte++] = tmp >> 8 & 255, arr[curByte++] = tmp & 255;\n  if (placeHoldersLen === 2)\n    tmp = revLookup[b64.charCodeAt(i2)] << 2 | revLookup[b64.charCodeAt(i2 + 1)] >> 4, arr[curByte++] = tmp & 255;\n  if (placeHoldersLen === 1)\n    tmp = revLookup[b64.charCodeAt(i2)] << 10 | revLookup[b64.charCodeAt(i2 + 1)] << 4 | revLookup[b64.charCodeAt(i2 + 2)] >> 2, arr[curByte++] = tmp >> 8 & 255, arr[curByte++] = tmp & 255;\n  return arr;\n}\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 63] + lookup[num >> 12 & 63] + lookup[num >> 6 & 63] + lookup[num & 63];\n}\nfunction encodeChunk(uint8, start, end) {\n  var tmp, output = [];\n  for (var i2 = start;i2 < end; i2 += 3)\n    tmp = (uint8[i2] << 16 & 16711680) + (uint8[i2 + 1] << 8 & 65280) + (uint8[i2 + 2] & 255), output.push(tripletToBase64(tmp));\n  return output.join(\"\");\n}\nfunction fromByteArray(uint8) {\n  var tmp, len2 = uint8.length, extraBytes = len2 % 3, parts = [], maxChunkLength = 16383;\n  for (var i2 = 0, len22 = len2 - extraBytes;i2 < len22; i2 += maxChunkLength)\n    parts.push(encodeChunk(uint8, i2, i2 + maxChunkLength > len22 ? len22 : i2 + maxChunkLength));\n  if (extraBytes === 1)\n    tmp = uint8[len2 - 1], parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 63] + \"==\");\n  else if (extraBytes === 2)\n    tmp = (uint8[len2 - 2] << 8) + uint8[len2 - 1], parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 63] + lookup[tmp << 2 & 63] + \"=\");\n  return parts.join(\"\");\n}\nfunction read(buffer, offset, isLE, mLen, nBytes) {\n  var e, m, eLen = nBytes * 8 - mLen - 1, eMax = (1 << eLen) - 1, eBias = eMax >> 1, nBits = -7, i2 = isLE ? nBytes - 1 : 0, d = isLE ? -1 : 1, s = buffer[offset + i2];\n  i2 += d, e = s & (1 << -nBits) - 1, s >>= -nBits, nBits += eLen;\n  for (;nBits > 0; e = e * 256 + buffer[offset + i2], i2 += d, nBits -= 8)\n    ;\n  m = e & (1 << -nBits) - 1, e >>= -nBits, nBits += mLen;\n  for (;nBits > 0; m = m * 256 + buffer[offset + i2], i2 += d, nBits -= 8)\n    ;\n  if (e === 0)\n    e = 1 - eBias;\n  else if (e === eMax)\n    return m ? NaN : (s ? -1 : 1) * (1 / 0);\n  else\n    m = m + Math.pow(2, mLen), e = e - eBias;\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n}\nfunction write(buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c, eLen = nBytes * 8 - mLen - 1, eMax = (1 << eLen) - 1, eBias = eMax >> 1, rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, i2 = isLE ? 0 : nBytes - 1, d = isLE ? 1 : -1, s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  if (value = Math.abs(value), isNaN(value) || value === 1 / 0)\n    m = isNaN(value) ? 1 : 0, e = eMax;\n  else {\n    if (e = Math.floor(Math.log(value) / Math.LN2), value * (c = Math.pow(2, -e)) < 1)\n      e--, c *= 2;\n    if (e + eBias >= 1)\n      value += rt / c;\n    else\n      value += rt * Math.pow(2, 1 - eBias);\n    if (value * c >= 2)\n      e++, c /= 2;\n    if (e + eBias >= eMax)\n      m = 0, e = eMax;\n    else if (e + eBias >= 1)\n      m = (value * c - 1) * Math.pow(2, mLen), e = e + eBias;\n    else\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen), e = 0;\n  }\n  for (;mLen >= 8; buffer[offset + i2] = m & 255, i2 += d, m /= 256, mLen -= 8)\n    ;\n  e = e << mLen | m, eLen += mLen;\n  for (;eLen > 0; buffer[offset + i2] = e & 255, i2 += d, e /= 256, eLen -= 8)\n    ;\n  buffer[offset + i2 - d] |= s * 128;\n}\nvar customInspectSymbol = typeof Symbol === \"function\" && typeof Symbol.for === \"function\" ? Symbol.for(\"nodejs.util.inspect.custom\") : null;\nvar kMaxLength = 2147483647;\nvar btoa = globalThis.btoa;\nvar atob = globalThis.atob;\nvar File = globalThis.File;\nvar Blob2 = globalThis.Blob;\nfunction createBuffer(length) {\n  if (length > kMaxLength)\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');\n  let buf = new Uint8Array(length);\n  return Object.setPrototypeOf(buf, Buffer2.prototype), buf;\n}\nfunction E(sym, getMessage, Base) {\n  return class NodeError extends Base {\n    constructor() {\n      super();\n      Object.defineProperty(this, \"message\", { value: getMessage.apply(this, arguments), writable: true, configurable: true }), this.name = `${this.name} [${sym}]`, this.stack, delete this.name;\n    }\n    get code() {\n      return sym;\n    }\n    set code(value) {\n      Object.defineProperty(this, \"code\", { configurable: true, enumerable: true, value, writable: true });\n    }\n    toString() {\n      return `${this.name} [${sym}]: ${this.message}`;\n    }\n  };\n}\nvar ERR_BUFFER_OUT_OF_BOUNDS = E(\"ERR_BUFFER_OUT_OF_BOUNDS\", function(name) {\n  if (name)\n    return `${name} is outside of buffer bounds`;\n  return \"Attempt to access memory outside buffer bounds\";\n}, RangeError);\nvar ERR_INVALID_ARG_TYPE = E(\"ERR_INVALID_ARG_TYPE\", function(name, actual) {\n  return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`;\n}, TypeError);\nvar ERR_OUT_OF_RANGE = E(\"ERR_OUT_OF_RANGE\", function(str, range, input) {\n  let msg = `The value of \"${str}\" is out of range.`, received = input;\n  if (Number.isInteger(input) && Math.abs(input) > 4294967296)\n    received = addNumericalSeparator(String(input));\n  else if (typeof input === \"bigint\") {\n    if (received = String(input), input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32)))\n      received = addNumericalSeparator(received);\n    received += \"n\";\n  }\n  return msg += ` It must be ${range}. Received ${received}`, msg;\n}, RangeError);\nfunction Buffer2(arg, encodingOrOffset, length) {\n  if (typeof arg === \"number\") {\n    if (typeof encodingOrOffset === \"string\")\n      throw new TypeError('The \"string\" argument must be of type string. Received type number');\n    return allocUnsafe(arg);\n  }\n  return from(arg, encodingOrOffset, length);\n}\nObject.defineProperty(Buffer2.prototype, \"parent\", { enumerable: true, get: function() {\n  if (!Buffer2.isBuffer(this))\n    return;\n  return this.buffer;\n} });\nObject.defineProperty(Buffer2.prototype, \"offset\", { enumerable: true, get: function() {\n  if (!Buffer2.isBuffer(this))\n    return;\n  return this.byteOffset;\n} });\nBuffer2.poolSize = 8192;\nfunction from(value, encodingOrOffset, length) {\n  if (typeof value === \"string\")\n    return fromString(value, encodingOrOffset);\n  if (ArrayBuffer.isView(value))\n    return fromArrayView(value);\n  if (value == null)\n    throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \" + typeof value);\n  if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer))\n    return fromArrayBuffer(value, encodingOrOffset, length);\n  if (typeof SharedArrayBuffer !== \"undefined\" && (isInstance(value, SharedArrayBuffer) || value && isInstance(value.buffer, SharedArrayBuffer)))\n    return fromArrayBuffer(value, encodingOrOffset, length);\n  if (typeof value === \"number\")\n    throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n  let valueOf = value.valueOf && value.valueOf();\n  if (valueOf != null && valueOf !== value)\n    return Buffer2.from(valueOf, encodingOrOffset, length);\n  let b = fromObject(value);\n  if (b)\n    return b;\n  if (typeof Symbol !== \"undefined\" && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === \"function\")\n    return Buffer2.from(value[Symbol.toPrimitive](\"string\"), encodingOrOffset, length);\n  throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \" + typeof value);\n}\nBuffer2.from = function(value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length);\n};\nObject.setPrototypeOf(Buffer2.prototype, Uint8Array.prototype);\nObject.setPrototypeOf(Buffer2, Uint8Array);\nfunction assertSize(size) {\n  if (typeof size !== \"number\")\n    throw new TypeError('\"size\" argument must be of type number');\n  else if (size < 0)\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n}\nfunction alloc(size, fill, encoding) {\n  if (assertSize(size), size <= 0)\n    return createBuffer(size);\n  if (fill !== undefined)\n    return typeof encoding === \"string\" ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);\n  return createBuffer(size);\n}\nBuffer2.alloc = function(size, fill, encoding) {\n  return alloc(size, fill, encoding);\n};\nfunction allocUnsafe(size) {\n  return assertSize(size), createBuffer(size < 0 ? 0 : checked(size) | 0);\n}\nBuffer2.allocUnsafe = function(size) {\n  return allocUnsafe(size);\n};\nBuffer2.allocUnsafeSlow = function(size) {\n  return allocUnsafe(size);\n};\nfunction fromString(string, encoding) {\n  if (typeof encoding !== \"string\" || encoding === \"\")\n    encoding = \"utf8\";\n  if (!Buffer2.isEncoding(encoding))\n    throw new TypeError(\"Unknown encoding: \" + encoding);\n  let length = byteLength(string, encoding) | 0, buf = createBuffer(length), actual = buf.write(string, encoding);\n  if (actual !== length)\n    buf = buf.slice(0, actual);\n  return buf;\n}\nfunction fromArrayLike(array) {\n  let length = array.length < 0 ? 0 : checked(array.length) | 0, buf = createBuffer(length);\n  for (let i2 = 0;i2 < length; i2 += 1)\n    buf[i2] = array[i2] & 255;\n  return buf;\n}\nfunction fromArrayView(arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    let copy = new Uint8Array(arrayView);\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);\n  }\n  return fromArrayLike(arrayView);\n}\nfunction fromArrayBuffer(array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset)\n    throw new RangeError('\"offset\" is outside of buffer bounds');\n  if (array.byteLength < byteOffset + (length || 0))\n    throw new RangeError('\"length\" is outside of buffer bounds');\n  let buf;\n  if (byteOffset === undefined && length === undefined)\n    buf = new Uint8Array(array);\n  else if (length === undefined)\n    buf = new Uint8Array(array, byteOffset);\n  else\n    buf = new Uint8Array(array, byteOffset, length);\n  return Object.setPrototypeOf(buf, Buffer2.prototype), buf;\n}\nfunction fromObject(obj) {\n  if (Buffer2.isBuffer(obj)) {\n    let len2 = checked(obj.length) | 0, buf = createBuffer(len2);\n    if (buf.length === 0)\n      return buf;\n    return obj.copy(buf, 0, 0, len2), buf;\n  }\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== \"number\" || numberIsNaN(obj.length))\n      return createBuffer(0);\n    return fromArrayLike(obj);\n  }\n  if (obj.type === \"Buffer\" && Array.isArray(obj.data))\n    return fromArrayLike(obj.data);\n}\nfunction checked(length) {\n  if (length >= kMaxLength)\n    throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\" + kMaxLength.toString(16) + \" bytes\");\n  return length | 0;\n}\nBuffer2.isBuffer = function isBuffer(b) {\n  return b != null && b._isBuffer === true && b !== Buffer2.prototype;\n};\nBuffer2.compare = function compare(a, b) {\n  if (isInstance(a, Uint8Array))\n    a = Buffer2.from(a, a.offset, a.byteLength);\n  if (isInstance(b, Uint8Array))\n    b = Buffer2.from(b, b.offset, b.byteLength);\n  if (!Buffer2.isBuffer(a) || !Buffer2.isBuffer(b))\n    throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n  if (a === b)\n    return 0;\n  let x = a.length, y = b.length;\n  for (let i2 = 0, len2 = Math.min(x, y);i2 < len2; ++i2)\n    if (a[i2] !== b[i2]) {\n      x = a[i2], y = b[i2];\n      break;\n    }\n  if (x < y)\n    return -1;\n  if (y < x)\n    return 1;\n  return 0;\n};\nBuffer2.isEncoding = function isEncoding(encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case \"hex\":\n    case \"utf8\":\n    case \"utf-8\":\n    case \"ascii\":\n    case \"latin1\":\n    case \"binary\":\n    case \"base64\":\n    case \"ucs2\":\n    case \"ucs-2\":\n    case \"utf16le\":\n    case \"utf-16le\":\n      return true;\n    default:\n      return false;\n  }\n};\nBuffer2.concat = function concat(list, length) {\n  if (!Array.isArray(list))\n    throw new TypeError('\"list\" argument must be an Array of Buffers');\n  if (list.length === 0)\n    return Buffer2.alloc(0);\n  let i2;\n  if (length === undefined) {\n    length = 0;\n    for (i2 = 0;i2 < list.length; ++i2)\n      length += list[i2].length;\n  }\n  let buffer = Buffer2.allocUnsafe(length), pos = 0;\n  for (i2 = 0;i2 < list.length; ++i2) {\n    let buf = list[i2];\n    if (isInstance(buf, Uint8Array))\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer2.isBuffer(buf))\n          buf = Buffer2.from(buf);\n        buf.copy(buffer, pos);\n      } else\n        Uint8Array.prototype.set.call(buffer, buf, pos);\n    else if (!Buffer2.isBuffer(buf))\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    else\n      buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n  return buffer;\n};\nfunction byteLength(string, encoding) {\n  if (Buffer2.isBuffer(string))\n    return string.length;\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer))\n    return string.byteLength;\n  if (typeof string !== \"string\")\n    throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof string);\n  let len2 = string.length, mustMatch = arguments.length > 2 && arguments[2] === true;\n  if (!mustMatch && len2 === 0)\n    return 0;\n  let loweredCase = false;\n  for (;; )\n    switch (encoding) {\n      case \"ascii\":\n      case \"latin1\":\n      case \"binary\":\n        return len2;\n      case \"utf8\":\n      case \"utf-8\":\n        return utf8ToBytes(string).length;\n      case \"ucs2\":\n      case \"ucs-2\":\n      case \"utf16le\":\n      case \"utf-16le\":\n        return len2 * 2;\n      case \"hex\":\n        return len2 >>> 1;\n      case \"base64\":\n        return base64ToBytes(string).length;\n      default:\n        if (loweredCase)\n          return mustMatch ? -1 : utf8ToBytes(string).length;\n        encoding = (\"\" + encoding).toLowerCase(), loweredCase = true;\n    }\n}\nBuffer2.byteLength = byteLength;\nfunction slowToString(encoding, start, end) {\n  let loweredCase = false;\n  if (start === undefined || start < 0)\n    start = 0;\n  if (start > this.length)\n    return \"\";\n  if (end === undefined || end > this.length)\n    end = this.length;\n  if (end <= 0)\n    return \"\";\n  if (end >>>= 0, start >>>= 0, end <= start)\n    return \"\";\n  if (!encoding)\n    encoding = \"utf8\";\n  while (true)\n    switch (encoding) {\n      case \"hex\":\n        return hexSlice(this, start, end);\n      case \"utf8\":\n      case \"utf-8\":\n        return utf8Slice(this, start, end);\n      case \"ascii\":\n        return asciiSlice(this, start, end);\n      case \"latin1\":\n      case \"binary\":\n        return latin1Slice(this, start, end);\n      case \"base64\":\n        return base64Slice(this, start, end);\n      case \"ucs2\":\n      case \"ucs-2\":\n      case \"utf16le\":\n      case \"utf-16le\":\n        return utf16leSlice(this, start, end);\n      default:\n        if (loweredCase)\n          throw new TypeError(\"Unknown encoding: \" + encoding);\n        encoding = (encoding + \"\").toLowerCase(), loweredCase = true;\n    }\n}\nBuffer2.prototype._isBuffer = true;\nfunction swap(b, n, m) {\n  let i2 = b[n];\n  b[n] = b[m], b[m] = i2;\n}\nBuffer2.prototype.swap16 = function swap16() {\n  let len2 = this.length;\n  if (len2 % 2 !== 0)\n    throw new RangeError(\"Buffer size must be a multiple of 16-bits\");\n  for (let i2 = 0;i2 < len2; i2 += 2)\n    swap(this, i2, i2 + 1);\n  return this;\n};\nBuffer2.prototype.swap32 = function swap32() {\n  let len2 = this.length;\n  if (len2 % 4 !== 0)\n    throw new RangeError(\"Buffer size must be a multiple of 32-bits\");\n  for (let i2 = 0;i2 < len2; i2 += 4)\n    swap(this, i2, i2 + 3), swap(this, i2 + 1, i2 + 2);\n  return this;\n};\nBuffer2.prototype.swap64 = function swap64() {\n  let len2 = this.length;\n  if (len2 % 8 !== 0)\n    throw new RangeError(\"Buffer size must be a multiple of 64-bits\");\n  for (let i2 = 0;i2 < len2; i2 += 8)\n    swap(this, i2, i2 + 7), swap(this, i2 + 1, i2 + 6), swap(this, i2 + 2, i2 + 5), swap(this, i2 + 3, i2 + 4);\n  return this;\n};\nBuffer2.prototype.toString = function toString2() {\n  let length = this.length;\n  if (length === 0)\n    return \"\";\n  if (arguments.length === 0)\n    return utf8Slice(this, 0, length);\n  return slowToString.apply(this, arguments);\n};\nBuffer2.prototype.toLocaleString = Buffer2.prototype.toString;\nBuffer2.prototype.equals = function equals(b) {\n  if (!Buffer2.isBuffer(b))\n    throw new TypeError(\"Argument must be a Buffer\");\n  if (this === b)\n    return true;\n  return Buffer2.compare(this, b) === 0;\n};\nBuffer2.prototype.inspect = function inspect() {\n  let str = \"\", max = exports_buffer.INSPECT_MAX_BYTES;\n  if (str = this.toString(\"hex\", 0, max).replace(/(.{2})/g, \"$1 \").trim(), this.length > max)\n    str += \" ... \";\n  return \"<Buffer \" + str + \">\";\n};\nif (customInspectSymbol)\n  Buffer2.prototype[customInspectSymbol] = Buffer2.prototype.inspect;\nBuffer2.prototype.compare = function compare2(target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array))\n    target = Buffer2.from(target, target.offset, target.byteLength);\n  if (!Buffer2.isBuffer(target))\n    throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. Received type ' + typeof target);\n  if (start === undefined)\n    start = 0;\n  if (end === undefined)\n    end = target ? target.length : 0;\n  if (thisStart === undefined)\n    thisStart = 0;\n  if (thisEnd === undefined)\n    thisEnd = this.length;\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length)\n    throw new RangeError(\"out of range index\");\n  if (thisStart >= thisEnd && start >= end)\n    return 0;\n  if (thisStart >= thisEnd)\n    return -1;\n  if (start >= end)\n    return 1;\n  if (start >>>= 0, end >>>= 0, thisStart >>>= 0, thisEnd >>>= 0, this === target)\n    return 0;\n  let x = thisEnd - thisStart, y = end - start, len2 = Math.min(x, y), thisCopy = this.slice(thisStart, thisEnd), targetCopy = target.slice(start, end);\n  for (let i2 = 0;i2 < len2; ++i2)\n    if (thisCopy[i2] !== targetCopy[i2]) {\n      x = thisCopy[i2], y = targetCopy[i2];\n      break;\n    }\n  if (x < y)\n    return -1;\n  if (y < x)\n    return 1;\n  return 0;\n};\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n  if (buffer.length === 0)\n    return -1;\n  if (typeof byteOffset === \"string\")\n    encoding = byteOffset, byteOffset = 0;\n  else if (byteOffset > 2147483647)\n    byteOffset = 2147483647;\n  else if (byteOffset < -2147483648)\n    byteOffset = -2147483648;\n  if (byteOffset = +byteOffset, Number.isNaN(byteOffset))\n    byteOffset = dir ? 0 : buffer.length - 1;\n  if (byteOffset < 0)\n    byteOffset = buffer.length + byteOffset;\n  if (byteOffset >= buffer.length)\n    if (dir)\n      return -1;\n    else\n      byteOffset = buffer.length - 1;\n  else if (byteOffset < 0)\n    if (dir)\n      byteOffset = 0;\n    else\n      return -1;\n  if (typeof val === \"string\")\n    val = Buffer2.from(val, encoding);\n  if (Buffer2.isBuffer(val)) {\n    if (val.length === 0)\n      return -1;\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n  } else if (typeof val === \"number\") {\n    if (val = val & 255, typeof Uint8Array.prototype.indexOf === \"function\")\n      if (dir)\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n      else\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n  }\n  throw new TypeError(\"val must be string, number or Buffer\");\n}\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1, arrLength = arr.length, valLength = val.length;\n  if (encoding !== undefined) {\n    if (encoding = String(encoding).toLowerCase(), encoding === \"ucs2\" || encoding === \"ucs-2\" || encoding === \"utf16le\" || encoding === \"utf-16le\") {\n      if (arr.length < 2 || val.length < 2)\n        return -1;\n      indexSize = 2, arrLength /= 2, valLength /= 2, byteOffset /= 2;\n    }\n  }\n  function read2(buf, i22) {\n    if (indexSize === 1)\n      return buf[i22];\n    else\n      return buf.readUInt16BE(i22 * indexSize);\n  }\n  let i2;\n  if (dir) {\n    let foundIndex = -1;\n    for (i2 = byteOffset;i2 < arrLength; i2++)\n      if (read2(arr, i2) === read2(val, foundIndex === -1 ? 0 : i2 - foundIndex)) {\n        if (foundIndex === -1)\n          foundIndex = i2;\n        if (i2 - foundIndex + 1 === valLength)\n          return foundIndex * indexSize;\n      } else {\n        if (foundIndex !== -1)\n          i2 -= i2 - foundIndex;\n        foundIndex = -1;\n      }\n  } else {\n    if (byteOffset + valLength > arrLength)\n      byteOffset = arrLength - valLength;\n    for (i2 = byteOffset;i2 >= 0; i2--) {\n      let found = true;\n      for (let j = 0;j < valLength; j++)\n        if (read2(arr, i2 + j) !== read2(val, j)) {\n          found = false;\n          break;\n        }\n      if (found)\n        return i2;\n    }\n  }\n  return -1;\n}\nBuffer2.prototype.includes = function includes(val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1;\n};\nBuffer2.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\nBuffer2.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\nfunction hexWrite(buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  let remaining = buf.length - offset;\n  if (!length)\n    length = remaining;\n  else if (length = Number(length), length > remaining)\n    length = remaining;\n  let strLen = string.length;\n  if (length > strLen / 2)\n    length = strLen / 2;\n  let i2;\n  for (i2 = 0;i2 < length; ++i2) {\n    let parsed = parseInt(string.substr(i2 * 2, 2), 16);\n    if (numberIsNaN(parsed))\n      return i2;\n    buf[offset + i2] = parsed;\n  }\n  return i2;\n}\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\nfunction asciiWrite(buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length);\n}\nfunction base64Write(buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length);\n}\nfunction ucs2Write(buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\nBuffer2.prototype.write = function write2(string, offset, length, encoding) {\n  if (offset === undefined)\n    encoding = \"utf8\", length = this.length, offset = 0;\n  else if (length === undefined && typeof offset === \"string\")\n    encoding = offset, length = this.length, offset = 0;\n  else if (isFinite(offset))\n    if (offset = offset >>> 0, isFinite(length)) {\n      if (length = length >>> 0, encoding === undefined)\n        encoding = \"utf8\";\n    } else\n      encoding = length, length = undefined;\n  else\n    throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");\n  let remaining = this.length - offset;\n  if (length === undefined || length > remaining)\n    length = remaining;\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length)\n    throw new RangeError(\"Attempt to write outside buffer bounds\");\n  if (!encoding)\n    encoding = \"utf8\";\n  let loweredCase = false;\n  for (;; )\n    switch (encoding) {\n      case \"hex\":\n        return hexWrite(this, string, offset, length);\n      case \"utf8\":\n      case \"utf-8\":\n        return utf8Write(this, string, offset, length);\n      case \"ascii\":\n      case \"latin1\":\n      case \"binary\":\n        return asciiWrite(this, string, offset, length);\n      case \"base64\":\n        return base64Write(this, string, offset, length);\n      case \"ucs2\":\n      case \"ucs-2\":\n      case \"utf16le\":\n      case \"utf-16le\":\n        return ucs2Write(this, string, offset, length);\n      default:\n        if (loweredCase)\n          throw new TypeError(\"Unknown encoding: \" + encoding);\n        encoding = (\"\" + encoding).toLowerCase(), loweredCase = true;\n    }\n};\nBuffer2.prototype.toJSON = function toJSON() {\n  return { type: \"Buffer\", data: Array.prototype.slice.call(this._arr || this, 0) };\n};\nfunction base64Slice(buf, start, end) {\n  if (start === 0 && end === buf.length)\n    return fromByteArray(buf);\n  else\n    return fromByteArray(buf.slice(start, end));\n}\nfunction utf8Slice(buf, start, end) {\n  end = Math.min(buf.length, end);\n  let res = [], i2 = start;\n  while (i2 < end) {\n    let firstByte = buf[i2], codePoint = null, bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n    if (i2 + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint;\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 128)\n            codePoint = firstByte;\n          break;\n        case 2:\n          if (secondByte = buf[i2 + 1], (secondByte & 192) === 128) {\n            if (tempCodePoint = (firstByte & 31) << 6 | secondByte & 63, tempCodePoint > 127)\n              codePoint = tempCodePoint;\n          }\n          break;\n        case 3:\n          if (secondByte = buf[i2 + 1], thirdByte = buf[i2 + 2], (secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n            if (tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63, tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343))\n              codePoint = tempCodePoint;\n          }\n          break;\n        case 4:\n          if (secondByte = buf[i2 + 1], thirdByte = buf[i2 + 2], fourthByte = buf[i2 + 3], (secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n            if (tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63, tempCodePoint > 65535 && tempCodePoint < 1114112)\n              codePoint = tempCodePoint;\n          }\n      }\n    }\n    if (codePoint === null)\n      codePoint = 65533, bytesPerSequence = 1;\n    else if (codePoint > 65535)\n      codePoint -= 65536, res.push(codePoint >>> 10 & 1023 | 55296), codePoint = 56320 | codePoint & 1023;\n    res.push(codePoint), i2 += bytesPerSequence;\n  }\n  return decodeCodePointsArray(res);\n}\nvar MAX_ARGUMENTS_LENGTH = 4096;\nfunction decodeCodePointsArray(codePoints) {\n  let len2 = codePoints.length;\n  if (len2 <= MAX_ARGUMENTS_LENGTH)\n    return String.fromCharCode.apply(String, codePoints);\n  let res = \"\", i2 = 0;\n  while (i2 < len2)\n    res += String.fromCharCode.apply(String, codePoints.slice(i2, i2 += MAX_ARGUMENTS_LENGTH));\n  return res;\n}\nfunction asciiSlice(buf, start, end) {\n  let ret = \"\";\n  end = Math.min(buf.length, end);\n  for (let i2 = start;i2 < end; ++i2)\n    ret += String.fromCharCode(buf[i2] & 127);\n  return ret;\n}\nfunction latin1Slice(buf, start, end) {\n  let ret = \"\";\n  end = Math.min(buf.length, end);\n  for (let i2 = start;i2 < end; ++i2)\n    ret += String.fromCharCode(buf[i2]);\n  return ret;\n}\nfunction hexSlice(buf, start, end) {\n  let len2 = buf.length;\n  if (!start || start < 0)\n    start = 0;\n  if (!end || end < 0 || end > len2)\n    end = len2;\n  let out = \"\";\n  for (let i2 = start;i2 < end; ++i2)\n    out += hexSliceLookupTable[buf[i2]];\n  return out;\n}\nfunction utf16leSlice(buf, start, end) {\n  let bytes = buf.slice(start, end), res = \"\";\n  for (let i2 = 0;i2 < bytes.length - 1; i2 += 2)\n    res += String.fromCharCode(bytes[i2] + bytes[i2 + 1] * 256);\n  return res;\n}\nBuffer2.prototype.slice = function slice(start, end) {\n  let len2 = this.length;\n  if (start = ~~start, end = end === undefined ? len2 : ~~end, start < 0) {\n    if (start += len2, start < 0)\n      start = 0;\n  } else if (start > len2)\n    start = len2;\n  if (end < 0) {\n    if (end += len2, end < 0)\n      end = 0;\n  } else if (end > len2)\n    end = len2;\n  if (end < start)\n    end = start;\n  let newBuf = this.subarray(start, end);\n  return Object.setPrototypeOf(newBuf, Buffer2.prototype), newBuf;\n};\nfunction checkOffset(offset, ext, length) {\n  if (offset % 1 !== 0 || offset < 0)\n    throw new RangeError(\"offset is not uint\");\n  if (offset + ext > length)\n    throw new RangeError(\"Trying to access beyond buffer length\");\n}\nBuffer2.prototype.readUintLE = Buffer2.prototype.readUIntLE = function readUIntLE(offset, byteLength2, noAssert) {\n  if (offset = offset >>> 0, byteLength2 = byteLength2 >>> 0, !noAssert)\n    checkOffset(offset, byteLength2, this.length);\n  let val = this[offset], mul = 1, i2 = 0;\n  while (++i2 < byteLength2 && (mul *= 256))\n    val += this[offset + i2] * mul;\n  return val;\n};\nBuffer2.prototype.readUintBE = Buffer2.prototype.readUIntBE = function readUIntBE(offset, byteLength2, noAssert) {\n  if (offset = offset >>> 0, byteLength2 = byteLength2 >>> 0, !noAssert)\n    checkOffset(offset, byteLength2, this.length);\n  let val = this[offset + --byteLength2], mul = 1;\n  while (byteLength2 > 0 && (mul *= 256))\n    val += this[offset + --byteLength2] * mul;\n  return val;\n};\nBuffer2.prototype.readUint8 = Buffer2.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n  if (offset = offset >>> 0, !noAssert)\n    checkOffset(offset, 1, this.length);\n  return this[offset];\n};\nBuffer2.prototype.readUint16LE = Buffer2.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n  if (offset = offset >>> 0, !noAssert)\n    checkOffset(offset, 2, this.length);\n  return this[offset] | this[offset + 1] << 8;\n};\nBuffer2.prototype.readUint16BE = Buffer2.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n  if (offset = offset >>> 0, !noAssert)\n    checkOffset(offset, 2, this.length);\n  return this[offset] << 8 | this[offset + 1];\n};\nBuffer2.prototype.readUint32LE = Buffer2.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n  if (offset = offset >>> 0, !noAssert)\n    checkOffset(offset, 4, this.length);\n  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 16777216;\n};\nBuffer2.prototype.readUint32BE = Buffer2.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n  if (offset = offset >>> 0, !noAssert)\n    checkOffset(offset, 4, this.length);\n  return this[offset] * 16777216 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\nBuffer2.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE(offset) {\n  offset = offset >>> 0, validateNumber(offset, \"offset\");\n  let first = this[offset], last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset, this.length - 8);\n  let lo = first + this[++offset] * 256 + this[++offset] * 65536 + this[++offset] * 16777216, hi = this[++offset] + this[++offset] * 256 + this[++offset] * 65536 + last * 16777216;\n  return BigInt(lo) + (BigInt(hi) << BigInt(32));\n});\nBuffer2.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE(offset) {\n  offset = offset >>> 0, validateNumber(offset, \"offset\");\n  let first = this[offset], last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset, this.length - 8);\n  let hi = first * 16777216 + this[++offset] * 65536 + this[++offset] * 256 + this[++offset], lo = this[++offset] * 16777216 + this[++offset] * 65536 + this[++offset] * 256 + last;\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo);\n});\nBuffer2.prototype.readIntLE = function readIntLE(offset, byteLength2, noAssert) {\n  if (offset = offset >>> 0, byteLength2 = byteLength2 >>> 0, !noAssert)\n    checkOffset(offset, byteLength2, this.length);\n  let val = this[offset], mul = 1, i2 = 0;\n  while (++i2 < byteLength2 && (mul *= 256))\n    val += this[offset + i2] * mul;\n  if (mul *= 128, val >= mul)\n    val -= Math.pow(2, 8 * byteLength2);\n  return val;\n};\nBuffer2.prototype.readIntBE = function readIntBE(offset, byteLength2, noAssert) {\n  if (offset = offset >>> 0, byteLength2 = byteLength2 >>> 0, !noAssert)\n    checkOffset(offset, byteLength2, this.length);\n  let i2 = byteLength2, mul = 1, val = this[offset + --i2];\n  while (i2 > 0 && (mul *= 256))\n    val += this[offset + --i2] * mul;\n  if (mul *= 128, val >= mul)\n    val -= Math.pow(2, 8 * byteLength2);\n  return val;\n};\nBuffer2.prototype.readInt8 = function readInt8(offset, noAssert) {\n  if (offset = offset >>> 0, !noAssert)\n    checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 128))\n    return this[offset];\n  return (255 - this[offset] + 1) * -1;\n};\nBuffer2.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n  if (offset = offset >>> 0, !noAssert)\n    checkOffset(offset, 2, this.length);\n  let val = this[offset] | this[offset + 1] << 8;\n  return val & 32768 ? val | 4294901760 : val;\n};\nBuffer2.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n  if (offset = offset >>> 0, !noAssert)\n    checkOffset(offset, 2, this.length);\n  let val = this[offset + 1] | this[offset] << 8;\n  return val & 32768 ? val | 4294901760 : val;\n};\nBuffer2.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n  if (offset = offset >>> 0, !noAssert)\n    checkOffset(offset, 4, this.length);\n  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\nBuffer2.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n  if (offset = offset >>> 0, !noAssert)\n    checkOffset(offset, 4, this.length);\n  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\nBuffer2.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE(offset) {\n  offset = offset >>> 0, validateNumber(offset, \"offset\");\n  let first = this[offset], last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset, this.length - 8);\n  let val = this[offset + 4] + this[offset + 5] * 256 + this[offset + 6] * 65536 + (last << 24);\n  return (BigInt(val) << BigInt(32)) + BigInt(first + this[++offset] * 256 + this[++offset] * 65536 + this[++offset] * 16777216);\n});\nBuffer2.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE(offset) {\n  offset = offset >>> 0, validateNumber(offset, \"offset\");\n  let first = this[offset], last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset, this.length - 8);\n  let val = (first << 24) + this[++offset] * 65536 + this[++offset] * 256 + this[++offset];\n  return (BigInt(val) << BigInt(32)) + BigInt(this[++offset] * 16777216 + this[++offset] * 65536 + this[++offset] * 256 + last);\n});\nBuffer2.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n  if (offset = offset >>> 0, !noAssert)\n    checkOffset(offset, 4, this.length);\n  return read(this, offset, true, 23, 4);\n};\nBuffer2.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n  if (offset = offset >>> 0, !noAssert)\n    checkOffset(offset, 4, this.length);\n  return read(this, offset, false, 23, 4);\n};\nBuffer2.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n  if (offset = offset >>> 0, !noAssert)\n    checkOffset(offset, 8, this.length);\n  return read(this, offset, true, 52, 8);\n};\nBuffer2.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n  if (offset = offset >>> 0, !noAssert)\n    checkOffset(offset, 8, this.length);\n  return read(this, offset, false, 52, 8);\n};\nfunction checkInt(buf, value, offset, ext, max, min) {\n  if (!Buffer2.isBuffer(buf))\n    throw new TypeError('\"buffer\" argument must be a Buffer instance');\n  if (value > max || value < min)\n    throw new RangeError('\"value\" argument is out of bounds');\n  if (offset + ext > buf.length)\n    throw new RangeError(\"Index out of range\");\n}\nBuffer2.prototype.writeUintLE = Buffer2.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength2, noAssert) {\n  if (value = +value, offset = offset >>> 0, byteLength2 = byteLength2 >>> 0, !noAssert) {\n    let maxBytes = Math.pow(2, 8 * byteLength2) - 1;\n    checkInt(this, value, offset, byteLength2, maxBytes, 0);\n  }\n  let mul = 1, i2 = 0;\n  this[offset] = value & 255;\n  while (++i2 < byteLength2 && (mul *= 256))\n    this[offset + i2] = value / mul & 255;\n  return offset + byteLength2;\n};\nBuffer2.prototype.writeUintBE = Buffer2.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength2, noAssert) {\n  if (value = +value, offset = offset >>> 0, byteLength2 = byteLength2 >>> 0, !noAssert) {\n    let maxBytes = Math.pow(2, 8 * byteLength2) - 1;\n    checkInt(this, value, offset, byteLength2, maxBytes, 0);\n  }\n  let i2 = byteLength2 - 1, mul = 1;\n  this[offset + i2] = value & 255;\n  while (--i2 >= 0 && (mul *= 256))\n    this[offset + i2] = value / mul & 255;\n  return offset + byteLength2;\n};\nBuffer2.prototype.writeUint8 = Buffer2.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n  if (value = +value, offset = offset >>> 0, !noAssert)\n    checkInt(this, value, offset, 1, 255, 0);\n  return this[offset] = value & 255, offset + 1;\n};\nBuffer2.prototype.writeUint16LE = Buffer2.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n  if (value = +value, offset = offset >>> 0, !noAssert)\n    checkInt(this, value, offset, 2, 65535, 0);\n  return this[offset] = value & 255, this[offset + 1] = value >>> 8, offset + 2;\n};\nBuffer2.prototype.writeUint16BE = Buffer2.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n  if (value = +value, offset = offset >>> 0, !noAssert)\n    checkInt(this, value, offset, 2, 65535, 0);\n  return this[offset] = value >>> 8, this[offset + 1] = value & 255, offset + 2;\n};\nBuffer2.prototype.writeUint32LE = Buffer2.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n  if (value = +value, offset = offset >>> 0, !noAssert)\n    checkInt(this, value, offset, 4, 4294967295, 0);\n  return this[offset + 3] = value >>> 24, this[offset + 2] = value >>> 16, this[offset + 1] = value >>> 8, this[offset] = value & 255, offset + 4;\n};\nBuffer2.prototype.writeUint32BE = Buffer2.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n  if (value = +value, offset = offset >>> 0, !noAssert)\n    checkInt(this, value, offset, 4, 4294967295, 0);\n  return this[offset] = value >>> 24, this[offset + 1] = value >>> 16, this[offset + 2] = value >>> 8, this[offset + 3] = value & 255, offset + 4;\n};\nfunction wrtBigUInt64LE(buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7);\n  let lo = Number(value & BigInt(4294967295));\n  buf[offset++] = lo, lo = lo >> 8, buf[offset++] = lo, lo = lo >> 8, buf[offset++] = lo, lo = lo >> 8, buf[offset++] = lo;\n  let hi = Number(value >> BigInt(32) & BigInt(4294967295));\n  return buf[offset++] = hi, hi = hi >> 8, buf[offset++] = hi, hi = hi >> 8, buf[offset++] = hi, hi = hi >> 8, buf[offset++] = hi, offset;\n}\nfunction wrtBigUInt64BE(buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7);\n  let lo = Number(value & BigInt(4294967295));\n  buf[offset + 7] = lo, lo = lo >> 8, buf[offset + 6] = lo, lo = lo >> 8, buf[offset + 5] = lo, lo = lo >> 8, buf[offset + 4] = lo;\n  let hi = Number(value >> BigInt(32) & BigInt(4294967295));\n  return buf[offset + 3] = hi, hi = hi >> 8, buf[offset + 2] = hi, hi = hi >> 8, buf[offset + 1] = hi, hi = hi >> 8, buf[offset] = hi, offset + 8;\n}\nBuffer2.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE(value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt(\"0xffffffffffffffff\"));\n});\nBuffer2.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE(value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt(\"0xffffffffffffffff\"));\n});\nBuffer2.prototype.writeIntLE = function writeIntLE(value, offset, byteLength2, noAssert) {\n  if (value = +value, offset = offset >>> 0, !noAssert) {\n    let limit = Math.pow(2, 8 * byteLength2 - 1);\n    checkInt(this, value, offset, byteLength2, limit - 1, -limit);\n  }\n  let i2 = 0, mul = 1, sub = 0;\n  this[offset] = value & 255;\n  while (++i2 < byteLength2 && (mul *= 256)) {\n    if (value < 0 && sub === 0 && this[offset + i2 - 1] !== 0)\n      sub = 1;\n    this[offset + i2] = (value / mul >> 0) - sub & 255;\n  }\n  return offset + byteLength2;\n};\nBuffer2.prototype.writeIntBE = function writeIntBE(value, offset, byteLength2, noAssert) {\n  if (value = +value, offset = offset >>> 0, !noAssert) {\n    let limit = Math.pow(2, 8 * byteLength2 - 1);\n    checkInt(this, value, offset, byteLength2, limit - 1, -limit);\n  }\n  let i2 = byteLength2 - 1, mul = 1, sub = 0;\n  this[offset + i2] = value & 255;\n  while (--i2 >= 0 && (mul *= 256)) {\n    if (value < 0 && sub === 0 && this[offset + i2 + 1] !== 0)\n      sub = 1;\n    this[offset + i2] = (value / mul >> 0) - sub & 255;\n  }\n  return offset + byteLength2;\n};\nBuffer2.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n  if (value = +value, offset = offset >>> 0, !noAssert)\n    checkInt(this, value, offset, 1, 127, -128);\n  if (value < 0)\n    value = 255 + value + 1;\n  return this[offset] = value & 255, offset + 1;\n};\nBuffer2.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n  if (value = +value, offset = offset >>> 0, !noAssert)\n    checkInt(this, value, offset, 2, 32767, -32768);\n  return this[offset] = value & 255, this[offset + 1] = value >>> 8, offset + 2;\n};\nBuffer2.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n  if (value = +value, offset = offset >>> 0, !noAssert)\n    checkInt(this, value, offset, 2, 32767, -32768);\n  return this[offset] = value >>> 8, this[offset + 1] = value & 255, offset + 2;\n};\nBuffer2.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n  if (value = +value, offset = offset >>> 0, !noAssert)\n    checkInt(this, value, offset, 4, 2147483647, -2147483648);\n  return this[offset] = value & 255, this[offset + 1] = value >>> 8, this[offset + 2] = value >>> 16, this[offset + 3] = value >>> 24, offset + 4;\n};\nBuffer2.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n  if (value = +value, offset = offset >>> 0, !noAssert)\n    checkInt(this, value, offset, 4, 2147483647, -2147483648);\n  if (value < 0)\n    value = 4294967295 + value + 1;\n  return this[offset] = value >>> 24, this[offset + 1] = value >>> 16, this[offset + 2] = value >>> 8, this[offset + 3] = value & 255, offset + 4;\n};\nBuffer2.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE(value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt(\"0x8000000000000000\"), BigInt(\"0x7fffffffffffffff\"));\n});\nBuffer2.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE(value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt(\"0x8000000000000000\"), BigInt(\"0x7fffffffffffffff\"));\n});\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length)\n    throw new RangeError(\"Index out of range\");\n  if (offset < 0)\n    throw new RangeError(\"Index out of range\");\n}\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n  if (value = +value, offset = offset >>> 0, !noAssert)\n    checkIEEE754(buf, value, offset, 4, 340282346638528860000000000000000000000, -340282346638528860000000000000000000000);\n  return write(buf, value, offset, littleEndian, 23, 4), offset + 4;\n}\nBuffer2.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert);\n};\nBuffer2.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert);\n};\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n  if (value = +value, offset = offset >>> 0, !noAssert)\n    checkIEEE754(buf, value, offset, 8, 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, -179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000);\n  return write(buf, value, offset, littleEndian, 52, 8), offset + 8;\n}\nBuffer2.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert);\n};\nBuffer2.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert);\n};\nBuffer2.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!Buffer2.isBuffer(target))\n    throw new TypeError(\"argument should be a Buffer\");\n  if (!start)\n    start = 0;\n  if (!end && end !== 0)\n    end = this.length;\n  if (targetStart >= target.length)\n    targetStart = target.length;\n  if (!targetStart)\n    targetStart = 0;\n  if (end > 0 && end < start)\n    end = start;\n  if (end === start)\n    return 0;\n  if (target.length === 0 || this.length === 0)\n    return 0;\n  if (targetStart < 0)\n    throw new RangeError(\"targetStart out of bounds\");\n  if (start < 0 || start >= this.length)\n    throw new RangeError(\"Index out of range\");\n  if (end < 0)\n    throw new RangeError(\"sourceEnd out of bounds\");\n  if (end > this.length)\n    end = this.length;\n  if (target.length - targetStart < end - start)\n    end = target.length - targetStart + start;\n  let len2 = end - start;\n  if (this === target && typeof Uint8Array.prototype.copyWithin === \"function\")\n    this.copyWithin(targetStart, start, end);\n  else\n    Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);\n  return len2;\n};\nBuffer2.prototype.fill = function fill(val, start, end, encoding) {\n  if (typeof val === \"string\") {\n    if (typeof start === \"string\")\n      encoding = start, start = 0, end = this.length;\n    else if (typeof end === \"string\")\n      encoding = end, end = this.length;\n    if (encoding !== undefined && typeof encoding !== \"string\")\n      throw new TypeError(\"encoding must be a string\");\n    if (typeof encoding === \"string\" && !Buffer2.isEncoding(encoding))\n      throw new TypeError(\"Unknown encoding: \" + encoding);\n    if (val.length === 1) {\n      let code2 = val.charCodeAt(0);\n      if (encoding === \"utf8\" && code2 < 128 || encoding === \"latin1\")\n        val = code2;\n    }\n  } else if (typeof val === \"number\")\n    val = val & 255;\n  else if (typeof val === \"boolean\")\n    val = Number(val);\n  if (start < 0 || this.length < start || this.length < end)\n    throw new RangeError(\"Out of range index\");\n  if (end <= start)\n    return this;\n  if (start = start >>> 0, end = end === undefined ? this.length : end >>> 0, !val)\n    val = 0;\n  let i2;\n  if (typeof val === \"number\")\n    for (i2 = start;i2 < end; ++i2)\n      this[i2] = val;\n  else {\n    let bytes = Buffer2.isBuffer(val) ? val : Buffer2.from(val, encoding), len2 = bytes.length;\n    if (len2 === 0)\n      throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');\n    for (i2 = 0;i2 < end - start; ++i2)\n      this[i2 + start] = bytes[i2 % len2];\n  }\n  return this;\n};\nfunction addNumericalSeparator(val) {\n  let res = \"\", i2 = val.length, start = val[0] === \"-\" ? 1 : 0;\n  for (;i2 >= start + 4; i2 -= 3)\n    res = `_${val.slice(i2 - 3, i2)}${res}`;\n  return `${val.slice(0, i2)}${res}`;\n}\nfunction checkBounds(buf, offset, byteLength2) {\n  if (validateNumber(offset, \"offset\"), buf[offset] === undefined || buf[offset + byteLength2] === undefined)\n    boundsError(offset, buf.length - (byteLength2 + 1));\n}\nfunction checkIntBI(value, min, max, buf, offset, byteLength2) {\n  if (value > max || value < min) {\n    let n = typeof min === \"bigint\" ? \"n\" : \"\", range;\n    if (byteLength2 > 3)\n      if (min === 0 || min === BigInt(0))\n        range = `>= 0${n} and < 2${n} ** ${(byteLength2 + 1) * 8}${n}`;\n      else\n        range = `>= -(2${n} ** ${(byteLength2 + 1) * 8 - 1}${n}) and < 2 ** ${(byteLength2 + 1) * 8 - 1}${n}`;\n    else\n      range = `>= ${min}${n} and <= ${max}${n}`;\n    throw new ERR_OUT_OF_RANGE(\"value\", range, value);\n  }\n  checkBounds(buf, offset, byteLength2);\n}\nfunction validateNumber(value, name) {\n  if (typeof value !== \"number\")\n    throw new ERR_INVALID_ARG_TYPE(name, \"number\", value);\n}\nfunction boundsError(value, length, type) {\n  if (Math.floor(value) !== value)\n    throw validateNumber(value, type), new ERR_OUT_OF_RANGE(type || \"offset\", \"an integer\", value);\n  if (length < 0)\n    throw new ERR_BUFFER_OUT_OF_BOUNDS;\n  throw new ERR_OUT_OF_RANGE(type || \"offset\", `>= ${type ? 1 : 0} and <= ${length}`, value);\n}\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\nfunction base64clean(str) {\n  if (str = str.split(\"=\")[0], str = str.trim().replace(INVALID_BASE64_RE, \"\"), str.length < 2)\n    return \"\";\n  while (str.length % 4 !== 0)\n    str = str + \"=\";\n  return str;\n}\nfunction utf8ToBytes(string, units) {\n  units = units || 1 / 0;\n  let codePoint, length = string.length, leadSurrogate = null, bytes = [];\n  for (let i2 = 0;i2 < length; ++i2) {\n    if (codePoint = string.charCodeAt(i2), codePoint > 55295 && codePoint < 57344) {\n      if (!leadSurrogate) {\n        if (codePoint > 56319) {\n          if ((units -= 3) > -1)\n            bytes.push(239, 191, 189);\n          continue;\n        } else if (i2 + 1 === length) {\n          if ((units -= 3) > -1)\n            bytes.push(239, 191, 189);\n          continue;\n        }\n        leadSurrogate = codePoint;\n        continue;\n      }\n      if (codePoint < 56320) {\n        if ((units -= 3) > -1)\n          bytes.push(239, 191, 189);\n        leadSurrogate = codePoint;\n        continue;\n      }\n      codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;\n    } else if (leadSurrogate) {\n      if ((units -= 3) > -1)\n        bytes.push(239, 191, 189);\n    }\n    if (leadSurrogate = null, codePoint < 128) {\n      if ((units -= 1) < 0)\n        break;\n      bytes.push(codePoint);\n    } else if (codePoint < 2048) {\n      if ((units -= 2) < 0)\n        break;\n      bytes.push(codePoint >> 6 | 192, codePoint & 63 | 128);\n    } else if (codePoint < 65536) {\n      if ((units -= 3) < 0)\n        break;\n      bytes.push(codePoint >> 12 | 224, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n    } else if (codePoint < 1114112) {\n      if ((units -= 4) < 0)\n        break;\n      bytes.push(codePoint >> 18 | 240, codePoint >> 12 & 63 | 128, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n    } else\n      throw new Error(\"Invalid code point\");\n  }\n  return bytes;\n}\nfunction asciiToBytes(str) {\n  let byteArray = [];\n  for (let i2 = 0;i2 < str.length; ++i2)\n    byteArray.push(str.charCodeAt(i2) & 255);\n  return byteArray;\n}\nfunction utf16leToBytes(str, units) {\n  let c, hi, lo, byteArray = [];\n  for (let i2 = 0;i2 < str.length; ++i2) {\n    if ((units -= 2) < 0)\n      break;\n    c = str.charCodeAt(i2), hi = c >> 8, lo = c % 256, byteArray.push(lo), byteArray.push(hi);\n  }\n  return byteArray;\n}\nfunction base64ToBytes(str) {\n  return toByteArray(base64clean(str));\n}\nfunction blitBuffer(src, dst, offset, length) {\n  let i2;\n  for (i2 = 0;i2 < length; ++i2) {\n    if (i2 + offset >= dst.length || i2 >= src.length)\n      break;\n    dst[i2 + offset] = src[i2];\n  }\n  return i2;\n}\nfunction isInstance(obj, type) {\n  return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n}\nvar hexSliceLookupTable = function() {\n  let table = new Array(256);\n  for (let i2 = 0;i2 < 16; ++i2) {\n    let i16 = i2 * 16;\n    for (let j = 0;j < 16; ++j)\n      table[i16 + j] = \"0123456789abcdef\"[i2] + \"0123456789abcdef\"[j];\n  }\n  return table;\n}();\nfunction defineBigIntMethod(fn) {\n  return typeof BigInt === \"undefined\" ? BufferBigIntNotDefined : fn;\n}\nfunction BufferBigIntNotDefined() {\n  throw new Error(\"BigInt not supported\");\n}\nfunction notimpl(name) {\n  return () => {\n    throw new Error(name + \" is not implemented for node:buffer browser polyfill\");\n  };\n}\nvar resolveObjectURL = notimpl(\"resolveObjectURL\");\nvar isUtf8 = notimpl(\"isUtf8\");\nvar transcode = notimpl(\"transcode\");\n\n// src/wasm/kaspa.js\nvar exports_kaspa = {};\n__export(exports_kaspa, {\n  version: () => version,\n  verifyMessage: () => verifyMessage,\n  updateTransactionMass: () => updateTransactionMass,\n  sompiToKaspaStringWithSuffix: () => sompiToKaspaStringWithSuffix,\n  sompiToKaspaString: () => sompiToKaspaString,\n  signTransaction: () => signTransaction,\n  signScriptHash: () => signScriptHash,\n  signMessage: () => signMessage,\n  sha256dFromText: () => sha256dFromText,\n  sha256dFromBinary: () => sha256dFromBinary,\n  sha256FromText: () => sha256FromText,\n  sha256FromBinary: () => sha256FromBinary,\n  setLogLevel: () => setLogLevel,\n  setDefaultWalletFile: () => setDefaultWalletFile,\n  setDefaultStorageFolder: () => setDefaultStorageFolder,\n  presentPanicHookLogs: () => presentPanicHookLogs,\n  payToScriptHashSignatureScript: () => payToScriptHashSignatureScript,\n  payToScriptHashScript: () => payToScriptHashScript,\n  payToAddressScript: () => payToAddressScript,\n  maximumStandardTransactionMass: () => maximumStandardTransactionMass,\n  kaspaToSompi: () => kaspaToSompi,\n  isScriptPayToScriptHash: () => isScriptPayToScriptHash,\n  isScriptPayToPubkeyECDSA: () => isScriptPayToPubkeyECDSA,\n  isScriptPayToPubkey: () => isScriptPayToPubkey,\n  initWASM32Bindings: () => initWASM32Bindings,\n  initSync: () => initSync,\n  initConsolePanicHook: () => initConsolePanicHook,\n  initBrowserPanicHook: () => initBrowserPanicHook,\n  estimateTransactions: () => estimateTransactions,\n  encryptXChaCha20Poly1305: () => encryptXChaCha20Poly1305,\n  defer: () => defer,\n  default: () => kaspa_default,\n  decryptXChaCha20Poly1305: () => decryptXChaCha20Poly1305,\n  createTransactions: () => createTransactions,\n  createTransaction: () => createTransaction,\n  createMultisigAddress: () => createMultisigAddress,\n  createInputSignature: () => createInputSignature,\n  createAddress: () => createAddress,\n  calculateTransactionMass: () => calculateTransactionMass,\n  calculateTransactionFee: () => calculateTransactionFee,\n  calculateTarget: () => calculateTarget,\n  argon2sha256ivFromText: () => argon2sha256ivFromText,\n  argon2sha256ivFromBinary: () => argon2sha256ivFromBinary,\n  addressFromScriptPublicKey: () => addressFromScriptPublicKey,\n  XPub: () => XPub,\n  XPrv: () => XPrv,\n  XOnlyPublicKey: () => XOnlyPublicKey,\n  WriteStream: () => WriteStream,\n  WriteFileSyncOptions: () => WriteFileSyncOptions,\n  WasiOptions: () => WasiOptions,\n  WalletDescriptor: () => WalletDescriptor,\n  Wallet: () => Wallet,\n  UtxoProcessor: () => UtxoProcessor,\n  UtxoEntryReference: () => UtxoEntryReference,\n  UtxoEntry: () => UtxoEntry,\n  UtxoEntries: () => UtxoEntries,\n  UtxoContext: () => UtxoContext,\n  UserInfoOptions: () => UserInfoOptions,\n  TransactionUtxoEntry: () => TransactionUtxoEntry,\n  TransactionSigningHashECDSA: () => TransactionSigningHashECDSA,\n  TransactionSigningHash: () => TransactionSigningHash,\n  TransactionRecordNotification: () => TransactionRecordNotification,\n  TransactionRecord: () => TransactionRecord,\n  TransactionOutput: () => TransactionOutput,\n  TransactionOutpoint: () => TransactionOutpoint,\n  TransactionInput: () => TransactionInput,\n  Transaction: () => Transaction,\n  StreamTransformOptions: () => StreamTransformOptions,\n  Storage: () => Storage,\n  SighashType: () => SighashType,\n  SigHashType: () => SigHashType,\n  SetAadOptions: () => SetAadOptions,\n  ScriptPublicKey: () => ScriptPublicKey,\n  ScriptBuilder: () => ScriptBuilder,\n  RpcClient: () => RpcClient,\n  Resolver: () => Resolver,\n  ReadStream: () => ReadStream,\n  PublicKeyGenerator: () => PublicKeyGenerator,\n  PublicKey: () => PublicKey,\n  PrvKeyDataInfo: () => PrvKeyDataInfo,\n  ProcessSendOptions: () => ProcessSendOptions,\n  PrivateKeyGenerator: () => PrivateKeyGenerator,\n  PrivateKey: () => PrivateKey,\n  PoW: () => PoW,\n  PipeOptions: () => PipeOptions,\n  PendingTransaction: () => PendingTransaction,\n  PaymentOutputs: () => PaymentOutputs,\n  PaymentOutput: () => PaymentOutput,\n  PSKT: () => PSKT,\n  Opcodes: () => Opcodes,\n  NodeDescriptor: () => NodeDescriptor,\n  NewAddressKind: () => NewAddressKind,\n  NetworkType: () => NetworkType,\n  NetworkId: () => NetworkId,\n  NetServerOptions: () => NetServerOptions,\n  Mnemonic: () => Mnemonic,\n  MkdtempSyncOptions: () => MkdtempSyncOptions,\n  Language: () => Language,\n  Keypair: () => Keypair,\n  Header: () => Header,\n  Hash: () => Hash,\n  GetNameOptions: () => GetNameOptions,\n  GeneratorSummary: () => GeneratorSummary,\n  Generator: () => Generator,\n  FormatInputPathObject: () => FormatInputPathObject,\n  FeeSource: () => FeeSource,\n  Encoding: () => Encoding,\n  DerivationPath: () => DerivationPath,\n  CryptoBoxPublicKey: () => CryptoBoxPublicKey,\n  CryptoBoxPrivateKey: () => CryptoBoxPrivateKey,\n  CryptoBox: () => CryptoBox,\n  CreateWriteStreamOptions: () => CreateWriteStreamOptions,\n  CreateReadStreamOptions: () => CreateReadStreamOptions,\n  CreateHookCallbacks: () => CreateHookCallbacks,\n  ConsoleConstructorOptions: () => ConsoleConstructorOptions,\n  ConnectStrategy: () => ConnectStrategy,\n  BalanceStrings: () => BalanceStrings,\n  Balance: () => Balance,\n  AssertionErrorOptions: () => AssertionErrorOptions,\n  AppendFileOptions: () => AppendFileOptions,\n  AgentConstructorOptions: () => AgentConstructorOptions,\n  AddressVersion: () => AddressVersion,\n  Address: () => Address,\n  AccountsDiscoveryKind: () => AccountsDiscoveryKind,\n  AccountKind: () => AccountKind,\n  Aborted: () => Aborted,\n  Abortable: () => Abortable\n});\nvar wasm;\nvar heap = new Array(128).fill(undefined);\nheap.push(undefined, null, true, false);\nfunction getObject(idx) {\n  return heap[idx];\n}\nvar heap_next = heap.length;\nfunction addHeapObject(obj) {\n  if (heap_next === heap.length)\n    heap.push(heap.length + 1);\n  const idx = heap_next;\n  heap_next = heap[idx];\n  heap[idx] = obj;\n  return idx;\n}\nfunction handleError(f, args) {\n  try {\n    return f.apply(this, args);\n  } catch (e) {\n    wasm.__wbindgen_export_0(addHeapObject(e));\n  }\n}\nvar WASM_VECTOR_LEN = 0;\nvar cachedUint8ArrayMemory0 = null;\nfunction getUint8ArrayMemory0() {\n  if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.byteLength === 0) {\n    cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);\n  }\n  return cachedUint8ArrayMemory0;\n}\nvar cachedTextEncoder = typeof TextEncoder !== \"undefined\" ? new TextEncoder(\"utf-8\") : { encode: () => {\n  throw Error(\"TextEncoder not available\");\n} };\nvar encodeString = typeof cachedTextEncoder.encodeInto === \"function\" ? function(arg, view) {\n  return cachedTextEncoder.encodeInto(arg, view);\n} : function(arg, view) {\n  const buf = cachedTextEncoder.encode(arg);\n  view.set(buf);\n  return {\n    read: arg.length,\n    written: buf.length\n  };\n};\nfunction passStringToWasm0(arg, malloc, realloc) {\n  if (realloc === undefined) {\n    const buf = cachedTextEncoder.encode(arg);\n    const ptr2 = malloc(buf.length, 1) >>> 0;\n    getUint8ArrayMemory0().subarray(ptr2, ptr2 + buf.length).set(buf);\n    WASM_VECTOR_LEN = buf.length;\n    return ptr2;\n  }\n  let len2 = arg.length;\n  let ptr = malloc(len2, 1) >>> 0;\n  const mem = getUint8ArrayMemory0();\n  let offset = 0;\n  for (;offset < len2; offset++) {\n    const code2 = arg.charCodeAt(offset);\n    if (code2 > 127)\n      break;\n    mem[ptr + offset] = code2;\n  }\n  if (offset !== len2) {\n    if (offset !== 0) {\n      arg = arg.slice(offset);\n    }\n    ptr = realloc(ptr, len2, len2 = offset + arg.length * 3, 1) >>> 0;\n    const view = getUint8ArrayMemory0().subarray(ptr + offset, ptr + len2);\n    const ret = encodeString(arg, view);\n    offset += ret.written;\n    ptr = realloc(ptr, len2, offset, 1) >>> 0;\n  }\n  WASM_VECTOR_LEN = offset;\n  return ptr;\n}\nvar cachedDataViewMemory0 = null;\nfunction getDataViewMemory0() {\n  if (cachedDataViewMemory0 === null || cachedDataViewMemory0.buffer.detached === true || cachedDataViewMemory0.buffer.detached === undefined && cachedDataViewMemory0.buffer !== wasm.memory.buffer) {\n    cachedDataViewMemory0 = new DataView(wasm.memory.buffer);\n  }\n  return cachedDataViewMemory0;\n}\nvar cachedTextDecoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf-8\", { ignoreBOM: true, fatal: true }) : { decode: () => {\n  throw Error(\"TextDecoder not available\");\n} };\nif (typeof TextDecoder !== \"undefined\") {\n  cachedTextDecoder.decode();\n}\nfunction getStringFromWasm0(ptr, len2) {\n  ptr = ptr >>> 0;\n  return cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(ptr, ptr + len2));\n}\nfunction isLikeNone(x) {\n  return x === undefined || x === null;\n}\nfunction dropObject(idx) {\n  if (idx < 132)\n    return;\n  heap[idx] = heap_next;\n  heap_next = idx;\n}\nfunction takeObject(idx) {\n  const ret = getObject(idx);\n  dropObject(idx);\n  return ret;\n}\nfunction getArrayU8FromWasm0(ptr, len2) {\n  ptr = ptr >>> 0;\n  return getUint8ArrayMemory0().subarray(ptr / 1, ptr / 1 + len2);\n}\nvar CLOSURE_DTORS = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((state) => {\n  wasm.__wbindgen_export_4.get(state.dtor)(state.a, state.b);\n});\nfunction makeMutClosure(arg0, arg1, dtor, f) {\n  const state = { a: arg0, b: arg1, cnt: 1, dtor };\n  const real = (...args) => {\n    state.cnt++;\n    const a = state.a;\n    state.a = 0;\n    try {\n      return f(a, state.b, ...args);\n    } finally {\n      if (--state.cnt === 0) {\n        wasm.__wbindgen_export_4.get(state.dtor)(a, state.b);\n        CLOSURE_DTORS.unregister(state);\n      } else {\n        state.a = a;\n      }\n    }\n  };\n  real.original = state;\n  CLOSURE_DTORS.register(real, state, state);\n  return real;\n}\nfunction makeClosure(arg0, arg1, dtor, f) {\n  const state = { a: arg0, b: arg1, cnt: 1, dtor };\n  const real = (...args) => {\n    state.cnt++;\n    try {\n      return f(state.a, state.b, ...args);\n    } finally {\n      if (--state.cnt === 0) {\n        wasm.__wbindgen_export_4.get(state.dtor)(state.a, state.b);\n        state.a = 0;\n        CLOSURE_DTORS.unregister(state);\n      }\n    }\n  };\n  real.original = state;\n  CLOSURE_DTORS.register(real, state, state);\n  return real;\n}\nfunction debugString(val) {\n  const type = typeof val;\n  if (type == \"number\" || type == \"boolean\" || val == null) {\n    return `${val}`;\n  }\n  if (type == \"string\") {\n    return `\"${val}\"`;\n  }\n  if (type == \"symbol\") {\n    const description = val.description;\n    if (description == null) {\n      return \"Symbol\";\n    } else {\n      return `Symbol(${description})`;\n    }\n  }\n  if (type == \"function\") {\n    const name = val.name;\n    if (typeof name == \"string\" && name.length > 0) {\n      return `Function(${name})`;\n    } else {\n      return \"Function\";\n    }\n  }\n  if (Array.isArray(val)) {\n    const length = val.length;\n    let debug = \"[\";\n    if (length > 0) {\n      debug += debugString(val[0]);\n    }\n    for (let i2 = 1;i2 < length; i2++) {\n      debug += \", \" + debugString(val[i2]);\n    }\n    debug += \"]\";\n    return debug;\n  }\n  const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n  let className;\n  if (builtInMatches && builtInMatches.length > 1) {\n    className = builtInMatches[1];\n  } else {\n    return toString.call(val);\n  }\n  if (className == \"Object\") {\n    try {\n      return \"Object(\" + JSON.stringify(val) + \")\";\n    } catch (_) {\n      return \"Object\";\n    }\n  }\n  if (val instanceof Error) {\n    return `${val.name}: ${val.message}\n${val.stack}`;\n  }\n  return className;\n}\nfunction _assertClass(instance, klass) {\n  if (!(instance instanceof klass)) {\n    throw new Error(`expected instance of ${klass.name}`);\n  }\n}\nvar stack_pointer = 128;\nfunction addBorrowedObject(obj) {\n  if (stack_pointer == 1)\n    throw new Error(\"out of js stack\");\n  heap[--stack_pointer] = obj;\n  return stack_pointer;\n}\nfunction isScriptPayToScriptHash(script) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    wasm.isScriptPayToScriptHash(retptr, addHeapObject(script));\n    var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n    var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n    var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return r0 !== 0;\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\nfunction isScriptPayToPubkeyECDSA(script) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    wasm.isScriptPayToPubkeyECDSA(retptr, addHeapObject(script));\n    var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n    var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n    var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return r0 !== 0;\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\nfunction isScriptPayToPubkey(script) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    wasm.isScriptPayToPubkey(retptr, addHeapObject(script));\n    var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n    var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n    var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return r0 !== 0;\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\nfunction addressFromScriptPublicKey(script_public_key, network) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    wasm.addressFromScriptPublicKey(retptr, addBorrowedObject(script_public_key), addBorrowedObject(network));\n    var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n    var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n    var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n    heap[stack_pointer++] = undefined;\n    heap[stack_pointer++] = undefined;\n  }\n}\nfunction payToScriptHashSignatureScript(redeem_script, signature) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    wasm.payToScriptHashSignatureScript(retptr, addHeapObject(redeem_script), addHeapObject(signature));\n    var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n    var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n    var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\nfunction payToScriptHashScript(redeem_script) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    wasm.payToScriptHashScript(retptr, addHeapObject(redeem_script));\n    var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n    var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n    var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return ScriptPublicKey.__wrap(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\nfunction payToAddressScript(address) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    wasm.payToAddressScript(retptr, addBorrowedObject(address));\n    var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n    var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n    var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return ScriptPublicKey.__wrap(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n    heap[stack_pointer++] = undefined;\n  }\n}\nfunction calculateTarget(difficulty) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    wasm.calculateTarget(retptr, difficulty);\n    var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n    var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n    var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\nfunction argon2sha256ivFromText(text, byteLength2) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(text, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.argon2sha256ivFromText(retptr, ptr0, len0, byteLength2);\n    var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n    var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n    var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\nfunction argon2sha256ivFromBinary(data, hashLength) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    wasm.argon2sha256ivFromBinary(retptr, addHeapObject(data), hashLength);\n    var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n    var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n    var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\nfunction sha256dFromText(text) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(text, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.sha256dFromText(retptr, ptr0, len0);\n    var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n    var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n    var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\nfunction sha256dFromBinary(data) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    wasm.sha256dFromBinary(retptr, addHeapObject(data));\n    var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n    var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n    var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\nfunction sha256FromText(text) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(text, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.sha256FromText(retptr, ptr0, len0);\n    var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n    var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n    var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\nfunction sha256FromBinary(data) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    wasm.sha256FromBinary(retptr, addHeapObject(data));\n    var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n    var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n    var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\nfunction decryptXChaCha20Poly1305(base64string, password) {\n  let deferred4_0;\n  let deferred4_1;\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(base64string, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(password, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n    const len1 = WASM_VECTOR_LEN;\n    wasm.decryptXChaCha20Poly1305(retptr, ptr0, len0, ptr1, len1);\n    var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n    var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n    var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n    var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n    var ptr3 = r0;\n    var len3 = r1;\n    if (r3) {\n      ptr3 = 0;\n      len3 = 0;\n      throw takeObject(r2);\n    }\n    deferred4_0 = ptr3;\n    deferred4_1 = len3;\n    return getStringFromWasm0(ptr3, len3);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n    wasm.__wbindgen_export_3(deferred4_0, deferred4_1, 1);\n  }\n}\nfunction encryptXChaCha20Poly1305(plainText, password) {\n  let deferred4_0;\n  let deferred4_1;\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(plainText, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(password, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n    const len1 = WASM_VECTOR_LEN;\n    wasm.encryptXChaCha20Poly1305(retptr, ptr0, len0, ptr1, len1);\n    var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n    var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n    var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n    var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n    var ptr3 = r0;\n    var len3 = r1;\n    if (r3) {\n      ptr3 = 0;\n      len3 = 0;\n      throw takeObject(r2);\n    }\n    deferred4_0 = ptr3;\n    deferred4_1 = len3;\n    return getStringFromWasm0(ptr3, len3);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n    wasm.__wbindgen_export_3(deferred4_0, deferred4_1, 1);\n  }\n}\nfunction setDefaultStorageFolder(folder) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(folder, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.setDefaultStorageFolder(retptr, ptr0, len0);\n    var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n    var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n    if (r1) {\n      throw takeObject(r0);\n    }\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\nfunction setDefaultWalletFile(folder) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(folder, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.setDefaultWalletFile(retptr, ptr0, len0);\n    var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n    var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n    if (r1) {\n      throw takeObject(r0);\n    }\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\nfunction verifyMessage(value) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    wasm.verifyMessage(retptr, addHeapObject(value));\n    var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n    var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n    var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return r0 !== 0;\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\nfunction signMessage(value) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    wasm.signMessage(retptr, addHeapObject(value));\n    var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n    var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n    var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\nfunction createAddress(key, network, ecdsa, account_kind) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    let ptr0 = 0;\n    if (!isLikeNone(account_kind)) {\n      _assertClass(account_kind, AccountKind);\n      ptr0 = account_kind.__destroy_into_raw();\n    }\n    wasm.createAddress(retptr, addBorrowedObject(key), addBorrowedObject(network), isLikeNone(ecdsa) ? 16777215 : ecdsa ? 1 : 0, ptr0);\n    var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n    var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n    var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return Address.__wrap(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n    heap[stack_pointer++] = undefined;\n    heap[stack_pointer++] = undefined;\n  }\n}\nfunction createMultisigAddress(minimum_signatures, keys, network_type, ecdsa, account_kind) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    let ptr0 = 0;\n    if (!isLikeNone(account_kind)) {\n      _assertClass(account_kind, AccountKind);\n      ptr0 = account_kind.__destroy_into_raw();\n    }\n    wasm.createMultisigAddress(retptr, minimum_signatures, addBorrowedObject(keys), network_type, isLikeNone(ecdsa) ? 16777215 : ecdsa ? 1 : 0, ptr0);\n    var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n    var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n    var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return Address.__wrap(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n    heap[stack_pointer++] = undefined;\n  }\n}\nfunction sompiToKaspaStringWithSuffix(sompi, network) {\n  let deferred2_0;\n  let deferred2_1;\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    wasm.sompiToKaspaStringWithSuffix(retptr, addHeapObject(sompi), addBorrowedObject(network));\n    var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n    var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n    var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n    var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n    var ptr1 = r0;\n    var len1 = r1;\n    if (r3) {\n      ptr1 = 0;\n      len1 = 0;\n      throw takeObject(r2);\n    }\n    deferred2_0 = ptr1;\n    deferred2_1 = len1;\n    return getStringFromWasm0(ptr1, len1);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n    heap[stack_pointer++] = undefined;\n    wasm.__wbindgen_export_3(deferred2_0, deferred2_1, 1);\n  }\n}\nfunction sompiToKaspaString(sompi) {\n  let deferred2_0;\n  let deferred2_1;\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    wasm.sompiToKaspaString(retptr, addHeapObject(sompi));\n    var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n    var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n    var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n    var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n    var ptr1 = r0;\n    var len1 = r1;\n    if (r3) {\n      ptr1 = 0;\n      len1 = 0;\n      throw takeObject(r2);\n    }\n    deferred2_0 = ptr1;\n    deferred2_1 = len1;\n    return getStringFromWasm0(ptr1, len1);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n    wasm.__wbindgen_export_3(deferred2_0, deferred2_1, 1);\n  }\n}\nfunction kaspaToSompi(kaspa) {\n  const ptr0 = passStringToWasm0(kaspa, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n  const len0 = WASM_VECTOR_LEN;\n  const ret = wasm.kaspaToSompi(ptr0, len0);\n  return takeObject(ret);\n}\nfunction estimateTransactions(settings) {\n  const ret = wasm.estimateTransactions(addHeapObject(settings));\n  return takeObject(ret);\n}\nfunction createTransactions(settings) {\n  const ret = wasm.createTransactions(addHeapObject(settings));\n  return takeObject(ret);\n}\nfunction createTransaction(utxo_entry_source, outputs, priority_fee, payload, sig_op_count) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    wasm.createTransaction(retptr, addHeapObject(utxo_entry_source), addHeapObject(outputs), addHeapObject(priority_fee), isLikeNone(payload) ? 0 : addHeapObject(payload), isLikeNone(sig_op_count) ? 16777215 : sig_op_count);\n    var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n    var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n    var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return Transaction.__wrap(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\nfunction calculateTransactionFee(network_id, tx, minimum_signatures) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-32);\n    wasm.calculateTransactionFee(retptr, addHeapObject(network_id), addBorrowedObject(tx), isLikeNone(minimum_signatures) ? 16777215 : minimum_signatures);\n    var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n    var r2 = getDataViewMemory0().getBigInt64(retptr + 8 * 1, true);\n    var r4 = getDataViewMemory0().getInt32(retptr + 4 * 4, true);\n    var r5 = getDataViewMemory0().getInt32(retptr + 4 * 5, true);\n    if (r5) {\n      throw takeObject(r4);\n    }\n    return r0 === 0 ? undefined : BigInt.asUintN(64, r2);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(32);\n    heap[stack_pointer++] = undefined;\n  }\n}\nfunction updateTransactionMass(network_id, tx, minimum_signatures) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    _assertClass(tx, Transaction);\n    wasm.updateTransactionMass(retptr, addHeapObject(network_id), tx.__wbg_ptr, isLikeNone(minimum_signatures) ? 16777215 : minimum_signatures);\n    var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n    var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n    var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return r0 !== 0;\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\nfunction calculateTransactionMass(network_id, tx, minimum_signatures) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    wasm.calculateTransactionMass(retptr, addHeapObject(network_id), addBorrowedObject(tx), isLikeNone(minimum_signatures) ? 16777215 : minimum_signatures);\n    var r0 = getDataViewMemory0().getBigInt64(retptr + 8 * 0, true);\n    var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n    var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n    if (r3) {\n      throw takeObject(r2);\n    }\n    return BigInt.asUintN(64, r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n    heap[stack_pointer++] = undefined;\n  }\n}\nfunction maximumStandardTransactionMass() {\n  const ret = wasm.maximumStandardTransactionMass();\n  return BigInt.asUintN(64, ret);\n}\nfunction signScriptHash(script_hash, privkey) {\n  let deferred2_0;\n  let deferred2_1;\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    _assertClass(privkey, PrivateKey);\n    wasm.signScriptHash(retptr, addHeapObject(script_hash), privkey.__wbg_ptr);\n    var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n    var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n    var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n    var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n    var ptr1 = r0;\n    var len1 = r1;\n    if (r3) {\n      ptr1 = 0;\n      len1 = 0;\n      throw takeObject(r2);\n    }\n    deferred2_0 = ptr1;\n    deferred2_1 = len1;\n    return getStringFromWasm0(ptr1, len1);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n    wasm.__wbindgen_export_3(deferred2_0, deferred2_1, 1);\n  }\n}\nfunction createInputSignature(tx, input_index, private_key, sighash_type) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    _assertClass(tx, Transaction);\n    _assertClass(private_key, PrivateKey);\n    wasm.createInputSignature(retptr, tx.__wbg_ptr, input_index, private_key.__wbg_ptr, isLikeNone(sighash_type) ? 6 : sighash_type);\n    var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n    var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n    var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\nfunction signTransaction(tx, signer, verify_sig) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    _assertClass(tx, Transaction);\n    wasm.signTransaction(retptr, tx.__wbg_ptr, addBorrowedObject(signer), verify_sig);\n    var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n    var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n    var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return Transaction.__wrap(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n    heap[stack_pointer++] = undefined;\n  }\n}\nfunction version() {\n  let deferred1_0;\n  let deferred1_1;\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    wasm.version(retptr);\n    var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n    var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n    deferred1_0 = r0;\n    deferred1_1 = r1;\n    return getStringFromWasm0(r0, r1);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n    wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n  }\n}\nfunction passArrayJsValueToWasm0(array, malloc) {\n  const ptr = malloc(array.length * 4, 4) >>> 0;\n  const mem = getDataViewMemory0();\n  for (let i2 = 0;i2 < array.length; i2++) {\n    mem.setUint32(ptr + 4 * i2, addHeapObject(array[i2]), true);\n  }\n  WASM_VECTOR_LEN = array.length;\n  return ptr;\n}\nfunction getArrayJsValueFromWasm0(ptr, len2) {\n  ptr = ptr >>> 0;\n  const mem = getDataViewMemory0();\n  const result = [];\n  for (let i2 = ptr;i2 < ptr + 4 * len2; i2 += 4) {\n    result.push(takeObject(mem.getUint32(i2, true)));\n  }\n  return result;\n}\nfunction setLogLevel(level) {\n  wasm.setLogLevel(addHeapObject(level));\n}\nfunction initConsolePanicHook() {\n  wasm.initConsolePanicHook();\n}\nfunction initBrowserPanicHook() {\n  wasm.initBrowserPanicHook();\n}\nfunction presentPanicHookLogs() {\n  wasm.presentPanicHookLogs();\n}\nfunction defer() {\n  const ret = wasm.defer();\n  return takeObject(ret);\n}\nfunction initWASM32Bindings(config) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    wasm.initWASM32Bindings(retptr, addHeapObject(config));\n    var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n    var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n    if (r1) {\n      throw takeObject(r0);\n    }\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\nfunction __wbg_adapter_62(arg0, arg1) {\n  wasm.__wbindgen_export_5(arg0, arg1);\n}\nfunction __wbg_adapter_65(arg0, arg1, arg2) {\n  wasm.__wbindgen_export_6(arg0, arg1, addHeapObject(arg2));\n}\nfunction __wbg_adapter_68(arg0, arg1, arg2) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    wasm.__wbindgen_export_7(retptr, arg0, arg1, addHeapObject(arg2));\n    var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n    var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n    if (r1) {\n      throw takeObject(r0);\n    }\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\nfunction __wbg_adapter_71(arg0, arg1) {\n  wasm.__wbindgen_export_8(arg0, arg1);\n}\nfunction __wbg_adapter_74(arg0, arg1, arg2) {\n  wasm.__wbindgen_export_9(arg0, arg1, addHeapObject(arg2));\n}\nfunction __wbg_adapter_81(arg0, arg1) {\n  wasm.__wbindgen_export_10(arg0, arg1);\n}\nfunction __wbg_adapter_84(arg0, arg1, arg2) {\n  wasm.__wbindgen_export_11(arg0, arg1, addHeapObject(arg2));\n}\nfunction __wbg_adapter_91(arg0, arg1, arg2) {\n  wasm.__wbindgen_export_12(arg0, arg1, addHeapObject(arg2));\n}\nfunction __wbg_adapter_94(arg0, arg1, arg2) {\n  wasm.__wbindgen_export_13(arg0, arg1, arg2);\n}\nfunction __wbg_adapter_97(arg0, arg1, arg2) {\n  wasm.__wbindgen_export_13(arg0, arg1, addHeapObject(arg2));\n}\nfunction __wbg_adapter_100(arg0, arg1) {\n  wasm.__wbindgen_export_14(arg0, arg1);\n}\nfunction __wbg_adapter_103(arg0, arg1, arg2, arg3) {\n  const ret = wasm.__wbindgen_export_15(arg0, arg1, addHeapObject(arg2), arg3);\n  return takeObject(ret);\n}\nfunction __wbg_adapter_106(arg0, arg1, arg2) {\n  wasm.__wbindgen_export_16(arg0, arg1, addHeapObject(arg2));\n}\nfunction __wbg_adapter_113(arg0, arg1) {\n  wasm.__wbindgen_export_17(arg0, arg1);\n}\nfunction __wbg_adapter_220(arg0, arg1, arg2, arg3) {\n  wasm.__wbindgen_export_18(arg0, arg1, addHeapObject(arg2), addHeapObject(arg3));\n}\nvar AccountsDiscoveryKind = Object.freeze({\n  Bip44: 0,\n  \"0\": \"Bip44\"\n});\nvar AddressVersion = Object.freeze({\n  PubKey: 0,\n  \"0\": \"PubKey\",\n  PubKeyECDSA: 1,\n  \"1\": \"PubKeyECDSA\",\n  ScriptHash: 8,\n  \"8\": \"ScriptHash\"\n});\nvar ConnectStrategy = Object.freeze({\n  Retry: 0,\n  \"0\": \"Retry\",\n  Fallback: 1,\n  \"1\": \"Fallback\"\n});\nvar Encoding = Object.freeze({\n  Borsh: 0,\n  \"0\": \"Borsh\",\n  SerdeJson: 1,\n  \"1\": \"SerdeJson\"\n});\nvar FeeSource = Object.freeze({\n  SenderPays: 0,\n  \"0\": \"SenderPays\",\n  ReceiverPays: 1,\n  \"1\": \"ReceiverPays\"\n});\nvar Language = Object.freeze({\n  English: 0,\n  \"0\": \"English\"\n});\nvar NetworkType = Object.freeze({\n  Mainnet: 0,\n  \"0\": \"Mainnet\",\n  Testnet: 1,\n  \"1\": \"Testnet\",\n  Devnet: 2,\n  \"2\": \"Devnet\",\n  Simnet: 3,\n  \"3\": \"Simnet\"\n});\nvar NewAddressKind = Object.freeze({\n  Receive: 0,\n  \"0\": \"Receive\",\n  Change: 1,\n  \"1\": \"Change\"\n});\nvar Opcodes = Object.freeze({\n  OpFalse: 0,\n  \"0\": \"OpFalse\",\n  OpData1: 1,\n  \"1\": \"OpData1\",\n  OpData2: 2,\n  \"2\": \"OpData2\",\n  OpData3: 3,\n  \"3\": \"OpData3\",\n  OpData4: 4,\n  \"4\": \"OpData4\",\n  OpData5: 5,\n  \"5\": \"OpData5\",\n  OpData6: 6,\n  \"6\": \"OpData6\",\n  OpData7: 7,\n  \"7\": \"OpData7\",\n  OpData8: 8,\n  \"8\": \"OpData8\",\n  OpData9: 9,\n  \"9\": \"OpData9\",\n  OpData10: 10,\n  \"10\": \"OpData10\",\n  OpData11: 11,\n  \"11\": \"OpData11\",\n  OpData12: 12,\n  \"12\": \"OpData12\",\n  OpData13: 13,\n  \"13\": \"OpData13\",\n  OpData14: 14,\n  \"14\": \"OpData14\",\n  OpData15: 15,\n  \"15\": \"OpData15\",\n  OpData16: 16,\n  \"16\": \"OpData16\",\n  OpData17: 17,\n  \"17\": \"OpData17\",\n  OpData18: 18,\n  \"18\": \"OpData18\",\n  OpData19: 19,\n  \"19\": \"OpData19\",\n  OpData20: 20,\n  \"20\": \"OpData20\",\n  OpData21: 21,\n  \"21\": \"OpData21\",\n  OpData22: 22,\n  \"22\": \"OpData22\",\n  OpData23: 23,\n  \"23\": \"OpData23\",\n  OpData24: 24,\n  \"24\": \"OpData24\",\n  OpData25: 25,\n  \"25\": \"OpData25\",\n  OpData26: 26,\n  \"26\": \"OpData26\",\n  OpData27: 27,\n  \"27\": \"OpData27\",\n  OpData28: 28,\n  \"28\": \"OpData28\",\n  OpData29: 29,\n  \"29\": \"OpData29\",\n  OpData30: 30,\n  \"30\": \"OpData30\",\n  OpData31: 31,\n  \"31\": \"OpData31\",\n  OpData32: 32,\n  \"32\": \"OpData32\",\n  OpData33: 33,\n  \"33\": \"OpData33\",\n  OpData34: 34,\n  \"34\": \"OpData34\",\n  OpData35: 35,\n  \"35\": \"OpData35\",\n  OpData36: 36,\n  \"36\": \"OpData36\",\n  OpData37: 37,\n  \"37\": \"OpData37\",\n  OpData38: 38,\n  \"38\": \"OpData38\",\n  OpData39: 39,\n  \"39\": \"OpData39\",\n  OpData40: 40,\n  \"40\": \"OpData40\",\n  OpData41: 41,\n  \"41\": \"OpData41\",\n  OpData42: 42,\n  \"42\": \"OpData42\",\n  OpData43: 43,\n  \"43\": \"OpData43\",\n  OpData44: 44,\n  \"44\": \"OpData44\",\n  OpData45: 45,\n  \"45\": \"OpData45\",\n  OpData46: 46,\n  \"46\": \"OpData46\",\n  OpData47: 47,\n  \"47\": \"OpData47\",\n  OpData48: 48,\n  \"48\": \"OpData48\",\n  OpData49: 49,\n  \"49\": \"OpData49\",\n  OpData50: 50,\n  \"50\": \"OpData50\",\n  OpData51: 51,\n  \"51\": \"OpData51\",\n  OpData52: 52,\n  \"52\": \"OpData52\",\n  OpData53: 53,\n  \"53\": \"OpData53\",\n  OpData54: 54,\n  \"54\": \"OpData54\",\n  OpData55: 55,\n  \"55\": \"OpData55\",\n  OpData56: 56,\n  \"56\": \"OpData56\",\n  OpData57: 57,\n  \"57\": \"OpData57\",\n  OpData58: 58,\n  \"58\": \"OpData58\",\n  OpData59: 59,\n  \"59\": \"OpData59\",\n  OpData60: 60,\n  \"60\": \"OpData60\",\n  OpData61: 61,\n  \"61\": \"OpData61\",\n  OpData62: 62,\n  \"62\": \"OpData62\",\n  OpData63: 63,\n  \"63\": \"OpData63\",\n  OpData64: 64,\n  \"64\": \"OpData64\",\n  OpData65: 65,\n  \"65\": \"OpData65\",\n  OpData66: 66,\n  \"66\": \"OpData66\",\n  OpData67: 67,\n  \"67\": \"OpData67\",\n  OpData68: 68,\n  \"68\": \"OpData68\",\n  OpData69: 69,\n  \"69\": \"OpData69\",\n  OpData70: 70,\n  \"70\": \"OpData70\",\n  OpData71: 71,\n  \"71\": \"OpData71\",\n  OpData72: 72,\n  \"72\": \"OpData72\",\n  OpData73: 73,\n  \"73\": \"OpData73\",\n  OpData74: 74,\n  \"74\": \"OpData74\",\n  OpData75: 75,\n  \"75\": \"OpData75\",\n  OpPushData1: 76,\n  \"76\": \"OpPushData1\",\n  OpPushData2: 77,\n  \"77\": \"OpPushData2\",\n  OpPushData4: 78,\n  \"78\": \"OpPushData4\",\n  Op1Negate: 79,\n  \"79\": \"Op1Negate\",\n  OpReserved: 80,\n  \"80\": \"OpReserved\",\n  OpTrue: 81,\n  \"81\": \"OpTrue\",\n  Op2: 82,\n  \"82\": \"Op2\",\n  Op3: 83,\n  \"83\": \"Op3\",\n  Op4: 84,\n  \"84\": \"Op4\",\n  Op5: 85,\n  \"85\": \"Op5\",\n  Op6: 86,\n  \"86\": \"Op6\",\n  Op7: 87,\n  \"87\": \"Op7\",\n  Op8: 88,\n  \"88\": \"Op8\",\n  Op9: 89,\n  \"89\": \"Op9\",\n  Op10: 90,\n  \"90\": \"Op10\",\n  Op11: 91,\n  \"91\": \"Op11\",\n  Op12: 92,\n  \"92\": \"Op12\",\n  Op13: 93,\n  \"93\": \"Op13\",\n  Op14: 94,\n  \"94\": \"Op14\",\n  Op15: 95,\n  \"95\": \"Op15\",\n  Op16: 96,\n  \"96\": \"Op16\",\n  OpNop: 97,\n  \"97\": \"OpNop\",\n  OpVer: 98,\n  \"98\": \"OpVer\",\n  OpIf: 99,\n  \"99\": \"OpIf\",\n  OpNotIf: 100,\n  \"100\": \"OpNotIf\",\n  OpVerIf: 101,\n  \"101\": \"OpVerIf\",\n  OpVerNotIf: 102,\n  \"102\": \"OpVerNotIf\",\n  OpElse: 103,\n  \"103\": \"OpElse\",\n  OpEndIf: 104,\n  \"104\": \"OpEndIf\",\n  OpVerify: 105,\n  \"105\": \"OpVerify\",\n  OpReturn: 106,\n  \"106\": \"OpReturn\",\n  OpToAltStack: 107,\n  \"107\": \"OpToAltStack\",\n  OpFromAltStack: 108,\n  \"108\": \"OpFromAltStack\",\n  Op2Drop: 109,\n  \"109\": \"Op2Drop\",\n  Op2Dup: 110,\n  \"110\": \"Op2Dup\",\n  Op3Dup: 111,\n  \"111\": \"Op3Dup\",\n  Op2Over: 112,\n  \"112\": \"Op2Over\",\n  Op2Rot: 113,\n  \"113\": \"Op2Rot\",\n  Op2Swap: 114,\n  \"114\": \"Op2Swap\",\n  OpIfDup: 115,\n  \"115\": \"OpIfDup\",\n  OpDepth: 116,\n  \"116\": \"OpDepth\",\n  OpDrop: 117,\n  \"117\": \"OpDrop\",\n  OpDup: 118,\n  \"118\": \"OpDup\",\n  OpNip: 119,\n  \"119\": \"OpNip\",\n  OpOver: 120,\n  \"120\": \"OpOver\",\n  OpPick: 121,\n  \"121\": \"OpPick\",\n  OpRoll: 122,\n  \"122\": \"OpRoll\",\n  OpRot: 123,\n  \"123\": \"OpRot\",\n  OpSwap: 124,\n  \"124\": \"OpSwap\",\n  OpTuck: 125,\n  \"125\": \"OpTuck\",\n  OpCat: 126,\n  \"126\": \"OpCat\",\n  OpSubStr: 127,\n  \"127\": \"OpSubStr\",\n  OpLeft: 128,\n  \"128\": \"OpLeft\",\n  OpRight: 129,\n  \"129\": \"OpRight\",\n  OpSize: 130,\n  \"130\": \"OpSize\",\n  OpInvert: 131,\n  \"131\": \"OpInvert\",\n  OpAnd: 132,\n  \"132\": \"OpAnd\",\n  OpOr: 133,\n  \"133\": \"OpOr\",\n  OpXor: 134,\n  \"134\": \"OpXor\",\n  OpEqual: 135,\n  \"135\": \"OpEqual\",\n  OpEqualVerify: 136,\n  \"136\": \"OpEqualVerify\",\n  OpReserved1: 137,\n  \"137\": \"OpReserved1\",\n  OpReserved2: 138,\n  \"138\": \"OpReserved2\",\n  Op1Add: 139,\n  \"139\": \"Op1Add\",\n  Op1Sub: 140,\n  \"140\": \"Op1Sub\",\n  Op2Mul: 141,\n  \"141\": \"Op2Mul\",\n  Op2Div: 142,\n  \"142\": \"Op2Div\",\n  OpNegate: 143,\n  \"143\": \"OpNegate\",\n  OpAbs: 144,\n  \"144\": \"OpAbs\",\n  OpNot: 145,\n  \"145\": \"OpNot\",\n  Op0NotEqual: 146,\n  \"146\": \"Op0NotEqual\",\n  OpAdd: 147,\n  \"147\": \"OpAdd\",\n  OpSub: 148,\n  \"148\": \"OpSub\",\n  OpMul: 149,\n  \"149\": \"OpMul\",\n  OpDiv: 150,\n  \"150\": \"OpDiv\",\n  OpMod: 151,\n  \"151\": \"OpMod\",\n  OpLShift: 152,\n  \"152\": \"OpLShift\",\n  OpRShift: 153,\n  \"153\": \"OpRShift\",\n  OpBoolAnd: 154,\n  \"154\": \"OpBoolAnd\",\n  OpBoolOr: 155,\n  \"155\": \"OpBoolOr\",\n  OpNumEqual: 156,\n  \"156\": \"OpNumEqual\",\n  OpNumEqualVerify: 157,\n  \"157\": \"OpNumEqualVerify\",\n  OpNumNotEqual: 158,\n  \"158\": \"OpNumNotEqual\",\n  OpLessThan: 159,\n  \"159\": \"OpLessThan\",\n  OpGreaterThan: 160,\n  \"160\": \"OpGreaterThan\",\n  OpLessThanOrEqual: 161,\n  \"161\": \"OpLessThanOrEqual\",\n  OpGreaterThanOrEqual: 162,\n  \"162\": \"OpGreaterThanOrEqual\",\n  OpMin: 163,\n  \"163\": \"OpMin\",\n  OpMax: 164,\n  \"164\": \"OpMax\",\n  OpWithin: 165,\n  \"165\": \"OpWithin\",\n  OpUnknown166: 166,\n  \"166\": \"OpUnknown166\",\n  OpUnknown167: 167,\n  \"167\": \"OpUnknown167\",\n  OpSHA256: 168,\n  \"168\": \"OpSHA256\",\n  OpCheckMultiSigECDSA: 169,\n  \"169\": \"OpCheckMultiSigECDSA\",\n  OpBlake2b: 170,\n  \"170\": \"OpBlake2b\",\n  OpCheckSigECDSA: 171,\n  \"171\": \"OpCheckSigECDSA\",\n  OpCheckSig: 172,\n  \"172\": \"OpCheckSig\",\n  OpCheckSigVerify: 173,\n  \"173\": \"OpCheckSigVerify\",\n  OpCheckMultiSig: 174,\n  \"174\": \"OpCheckMultiSig\",\n  OpCheckMultiSigVerify: 175,\n  \"175\": \"OpCheckMultiSigVerify\",\n  OpCheckLockTimeVerify: 176,\n  \"176\": \"OpCheckLockTimeVerify\",\n  OpCheckSequenceVerify: 177,\n  \"177\": \"OpCheckSequenceVerify\",\n  OpUnknown178: 178,\n  \"178\": \"OpUnknown178\",\n  OpUnknown179: 179,\n  \"179\": \"OpUnknown179\",\n  OpUnknown180: 180,\n  \"180\": \"OpUnknown180\",\n  OpUnknown181: 181,\n  \"181\": \"OpUnknown181\",\n  OpUnknown182: 182,\n  \"182\": \"OpUnknown182\",\n  OpUnknown183: 183,\n  \"183\": \"OpUnknown183\",\n  OpUnknown184: 184,\n  \"184\": \"OpUnknown184\",\n  OpUnknown185: 185,\n  \"185\": \"OpUnknown185\",\n  OpUnknown186: 186,\n  \"186\": \"OpUnknown186\",\n  OpUnknown187: 187,\n  \"187\": \"OpUnknown187\",\n  OpUnknown188: 188,\n  \"188\": \"OpUnknown188\",\n  OpUnknown189: 189,\n  \"189\": \"OpUnknown189\",\n  OpUnknown190: 190,\n  \"190\": \"OpUnknown190\",\n  OpUnknown191: 191,\n  \"191\": \"OpUnknown191\",\n  OpUnknown192: 192,\n  \"192\": \"OpUnknown192\",\n  OpUnknown193: 193,\n  \"193\": \"OpUnknown193\",\n  OpUnknown194: 194,\n  \"194\": \"OpUnknown194\",\n  OpUnknown195: 195,\n  \"195\": \"OpUnknown195\",\n  OpUnknown196: 196,\n  \"196\": \"OpUnknown196\",\n  OpUnknown197: 197,\n  \"197\": \"OpUnknown197\",\n  OpUnknown198: 198,\n  \"198\": \"OpUnknown198\",\n  OpUnknown199: 199,\n  \"199\": \"OpUnknown199\",\n  OpUnknown200: 200,\n  \"200\": \"OpUnknown200\",\n  OpUnknown201: 201,\n  \"201\": \"OpUnknown201\",\n  OpUnknown202: 202,\n  \"202\": \"OpUnknown202\",\n  OpUnknown203: 203,\n  \"203\": \"OpUnknown203\",\n  OpUnknown204: 204,\n  \"204\": \"OpUnknown204\",\n  OpUnknown205: 205,\n  \"205\": \"OpUnknown205\",\n  OpUnknown206: 206,\n  \"206\": \"OpUnknown206\",\n  OpUnknown207: 207,\n  \"207\": \"OpUnknown207\",\n  OpUnknown208: 208,\n  \"208\": \"OpUnknown208\",\n  OpUnknown209: 209,\n  \"209\": \"OpUnknown209\",\n  OpUnknown210: 210,\n  \"210\": \"OpUnknown210\",\n  OpUnknown211: 211,\n  \"211\": \"OpUnknown211\",\n  OpUnknown212: 212,\n  \"212\": \"OpUnknown212\",\n  OpUnknown213: 213,\n  \"213\": \"OpUnknown213\",\n  OpUnknown214: 214,\n  \"214\": \"OpUnknown214\",\n  OpUnknown215: 215,\n  \"215\": \"OpUnknown215\",\n  OpUnknown216: 216,\n  \"216\": \"OpUnknown216\",\n  OpUnknown217: 217,\n  \"217\": \"OpUnknown217\",\n  OpUnknown218: 218,\n  \"218\": \"OpUnknown218\",\n  OpUnknown219: 219,\n  \"219\": \"OpUnknown219\",\n  OpUnknown220: 220,\n  \"220\": \"OpUnknown220\",\n  OpUnknown221: 221,\n  \"221\": \"OpUnknown221\",\n  OpUnknown222: 222,\n  \"222\": \"OpUnknown222\",\n  OpUnknown223: 223,\n  \"223\": \"OpUnknown223\",\n  OpUnknown224: 224,\n  \"224\": \"OpUnknown224\",\n  OpUnknown225: 225,\n  \"225\": \"OpUnknown225\",\n  OpUnknown226: 226,\n  \"226\": \"OpUnknown226\",\n  OpUnknown227: 227,\n  \"227\": \"OpUnknown227\",\n  OpUnknown228: 228,\n  \"228\": \"OpUnknown228\",\n  OpUnknown229: 229,\n  \"229\": \"OpUnknown229\",\n  OpUnknown230: 230,\n  \"230\": \"OpUnknown230\",\n  OpUnknown231: 231,\n  \"231\": \"OpUnknown231\",\n  OpUnknown232: 232,\n  \"232\": \"OpUnknown232\",\n  OpUnknown233: 233,\n  \"233\": \"OpUnknown233\",\n  OpUnknown234: 234,\n  \"234\": \"OpUnknown234\",\n  OpUnknown235: 235,\n  \"235\": \"OpUnknown235\",\n  OpUnknown236: 236,\n  \"236\": \"OpUnknown236\",\n  OpUnknown237: 237,\n  \"237\": \"OpUnknown237\",\n  OpUnknown238: 238,\n  \"238\": \"OpUnknown238\",\n  OpUnknown239: 239,\n  \"239\": \"OpUnknown239\",\n  OpUnknown240: 240,\n  \"240\": \"OpUnknown240\",\n  OpUnknown241: 241,\n  \"241\": \"OpUnknown241\",\n  OpUnknown242: 242,\n  \"242\": \"OpUnknown242\",\n  OpUnknown243: 243,\n  \"243\": \"OpUnknown243\",\n  OpUnknown244: 244,\n  \"244\": \"OpUnknown244\",\n  OpUnknown245: 245,\n  \"245\": \"OpUnknown245\",\n  OpUnknown246: 246,\n  \"246\": \"OpUnknown246\",\n  OpUnknown247: 247,\n  \"247\": \"OpUnknown247\",\n  OpUnknown248: 248,\n  \"248\": \"OpUnknown248\",\n  OpUnknown249: 249,\n  \"249\": \"OpUnknown249\",\n  OpSmallInteger: 250,\n  \"250\": \"OpSmallInteger\",\n  OpPubKeys: 251,\n  \"251\": \"OpPubKeys\",\n  OpUnknown252: 252,\n  \"252\": \"OpUnknown252\",\n  OpPubKeyHash: 253,\n  \"253\": \"OpPubKeyHash\",\n  OpPubKey: 254,\n  \"254\": \"OpPubKey\",\n  OpInvalidOpCode: 255,\n  \"255\": \"OpInvalidOpCode\"\n});\nvar SighashType = Object.freeze({\n  All: 0,\n  \"0\": \"All\",\n  None: 1,\n  \"1\": \"None\",\n  Single: 2,\n  \"2\": \"Single\",\n  AllAnyOneCanPay: 3,\n  \"3\": \"AllAnyOneCanPay\",\n  NoneAnyOneCanPay: 4,\n  \"4\": \"NoneAnyOneCanPay\",\n  SingleAnyOneCanPay: 5,\n  \"5\": \"SingleAnyOneCanPay\"\n});\nvar __wbindgen_enum_BinaryType = [\"blob\", \"arraybuffer\"];\nvar __wbindgen_enum_IdbCursorDirection = [\"next\", \"nextunique\", \"prev\", \"prevunique\"];\nvar __wbindgen_enum_IdbRequestReadyState = [\"pending\", \"done\"];\nvar __wbindgen_enum_IdbTransactionMode = [\"readonly\", \"readwrite\", \"versionchange\", \"readwriteflush\", \"cleanup\"];\nvar __wbindgen_enum_RequestCredentials = [\"omit\", \"same-origin\", \"include\"];\nvar __wbindgen_enum_RequestMode = [\"same-origin\", \"no-cors\", \"cors\", \"navigate\"];\nvar AbortableFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_abortable_free(ptr >>> 0, 1));\n\nclass Abortable {\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    AbortableFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_abortable_free(ptr, 0);\n  }\n  constructor() {\n    const ret = wasm.abortable_new();\n    this.__wbg_ptr = ret >>> 0;\n    AbortableFinalization.register(this, this.__wbg_ptr, this);\n    return this;\n  }\n  isAborted() {\n    const ret = wasm.abortable_isAborted(this.__wbg_ptr);\n    return ret !== 0;\n  }\n  abort() {\n    wasm.abortable_abort(this.__wbg_ptr);\n  }\n  check() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.abortable_check(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      if (r1) {\n        throw takeObject(r0);\n      }\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  reset() {\n    wasm.abortable_reset(this.__wbg_ptr);\n  }\n}\nvar AbortedFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_aborted_free(ptr >>> 0, 1));\n\nclass Aborted {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(Aborted.prototype);\n    obj.__wbg_ptr = ptr;\n    AbortedFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    AbortedFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_aborted_free(ptr, 0);\n  }\n}\nvar AccountKindFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_accountkind_free(ptr >>> 0, 1));\n\nclass AccountKind {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(AccountKind.prototype);\n    obj.__wbg_ptr = ptr;\n    AccountKindFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    AccountKindFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_accountkind_free(ptr, 0);\n  }\n  constructor(kind) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      const ptr0 = passStringToWasm0(kind, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n      const len0 = WASM_VECTOR_LEN;\n      wasm.accountkind_ctor(retptr, ptr0, len0);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      this.__wbg_ptr = r0 >>> 0;\n      AccountKindFinalization.register(this, this.__wbg_ptr, this);\n      return this;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  toString() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.accountkind_toString(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n}\nvar AddressFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_address_free(ptr >>> 0, 1));\n\nclass Address {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(Address.prototype);\n    obj.__wbg_ptr = ptr;\n    AddressFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  toJSON() {\n    return {\n      version: this.version,\n      prefix: this.prefix,\n      payload: this.payload\n    };\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    AddressFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_address_free(ptr, 0);\n  }\n  constructor(address) {\n    const ptr0 = passStringToWasm0(address, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.address_constructor(ptr0, len0);\n    this.__wbg_ptr = ret >>> 0;\n    AddressFinalization.register(this, this.__wbg_ptr, this);\n    return this;\n  }\n  static validate(address) {\n    const ptr0 = passStringToWasm0(address, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.address_validate(ptr0, len0);\n    return ret !== 0;\n  }\n  toString() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.address_toString(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  get version() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.address_version(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  get prefix() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.address_prefix(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  set setPrefix(prefix) {\n    const ptr0 = passStringToWasm0(prefix, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.address_set_setPrefix(this.__wbg_ptr, ptr0, len0);\n  }\n  get payload() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.address_payload(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  short(n) {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.address_short(retptr, this.__wbg_ptr, n);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n}\nvar AgentConstructorOptionsFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_agentconstructoroptions_free(ptr >>> 0, 1));\n\nclass AgentConstructorOptions {\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    AgentConstructorOptionsFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_agentconstructoroptions_free(ptr, 0);\n  }\n  get keep_alive_msecs() {\n    const ret = wasm.agentconstructoroptions_keep_alive_msecs(this.__wbg_ptr);\n    return ret;\n  }\n  set keep_alive_msecs(value) {\n    wasm.agentconstructoroptions_set_keep_alive_msecs(this.__wbg_ptr, value);\n  }\n  get keep_alive() {\n    const ret = wasm.agentconstructoroptions_keep_alive(this.__wbg_ptr);\n    return ret !== 0;\n  }\n  set keep_alive(value) {\n    wasm.agentconstructoroptions_set_keep_alive(this.__wbg_ptr, value);\n  }\n  get max_free_sockets() {\n    const ret = wasm.agentconstructoroptions_max_free_sockets(this.__wbg_ptr);\n    return ret;\n  }\n  set max_free_sockets(value) {\n    wasm.agentconstructoroptions_set_max_free_sockets(this.__wbg_ptr, value);\n  }\n  get max_sockets() {\n    const ret = wasm.agentconstructoroptions_max_sockets(this.__wbg_ptr);\n    return ret;\n  }\n  set max_sockets(value) {\n    wasm.agentconstructoroptions_set_max_sockets(this.__wbg_ptr, value);\n  }\n  get timeout() {\n    const ret = wasm.agentconstructoroptions_timeout(this.__wbg_ptr);\n    return ret;\n  }\n  set timeout(value) {\n    wasm.agentconstructoroptions_set_timeout(this.__wbg_ptr, value);\n  }\n}\nvar AppendFileOptionsFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_appendfileoptions_free(ptr >>> 0, 1));\n\nclass AppendFileOptions {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(AppendFileOptions.prototype);\n    obj.__wbg_ptr = ptr;\n    AppendFileOptionsFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    AppendFileOptionsFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_appendfileoptions_free(ptr, 0);\n  }\n  constructor(encoding, mode, flag) {\n    const ret = wasm.appendfileoptions_new_with_values(isLikeNone(encoding) ? 0 : addHeapObject(encoding), isLikeNone(mode) ? 4294967297 : mode >>> 0, isLikeNone(flag) ? 0 : addHeapObject(flag));\n    this.__wbg_ptr = ret >>> 0;\n    AppendFileOptionsFinalization.register(this, this.__wbg_ptr, this);\n    return this;\n  }\n  static new() {\n    const ret = wasm.appendfileoptions_new();\n    return AppendFileOptions.__wrap(ret);\n  }\n  get encoding() {\n    const ret = wasm.appendfileoptions_encoding(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set encoding(value) {\n    wasm.appendfileoptions_set_encoding(this.__wbg_ptr, isLikeNone(value) ? 0 : addHeapObject(value));\n  }\n  get mode() {\n    const ret = wasm.appendfileoptions_mode(this.__wbg_ptr);\n    return ret === 4294967297 ? undefined : ret;\n  }\n  set mode(value) {\n    wasm.appendfileoptions_set_mode(this.__wbg_ptr, isLikeNone(value) ? 4294967297 : value >>> 0);\n  }\n  get flag() {\n    const ret = wasm.appendfileoptions_flag(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set flag(value) {\n    wasm.appendfileoptions_set_flag(this.__wbg_ptr, isLikeNone(value) ? 0 : addHeapObject(value));\n  }\n}\nvar AssertionErrorOptionsFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_assertionerroroptions_free(ptr >>> 0, 1));\n\nclass AssertionErrorOptions {\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    AssertionErrorOptionsFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_assertionerroroptions_free(ptr, 0);\n  }\n  constructor(message, actual, expected, operator) {\n    const ret = wasm.assertionerroroptions_new(isLikeNone(message) ? 0 : addHeapObject(message), addHeapObject(actual), addHeapObject(expected), addHeapObject(operator));\n    this.__wbg_ptr = ret >>> 0;\n    AssertionErrorOptionsFinalization.register(this, this.__wbg_ptr, this);\n    return this;\n  }\n  get message() {\n    const ret = wasm.assertionerroroptions_message(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set message(value) {\n    wasm.assertionerroroptions_set_message(this.__wbg_ptr, isLikeNone(value) ? 0 : addHeapObject(value));\n  }\n  get actual() {\n    const ret = wasm.assertionerroroptions_actual(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set actual(value) {\n    wasm.assertionerroroptions_set_actual(this.__wbg_ptr, addHeapObject(value));\n  }\n  get expected() {\n    const ret = wasm.assertionerroroptions_expected(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set expected(value) {\n    wasm.assertionerroroptions_set_expected(this.__wbg_ptr, addHeapObject(value));\n  }\n  get operator() {\n    const ret = wasm.assertionerroroptions_operator(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set operator(value) {\n    wasm.assertionerroroptions_set_operator(this.__wbg_ptr, addHeapObject(value));\n  }\n}\nvar BalanceFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_balance_free(ptr >>> 0, 1));\n\nclass Balance {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(Balance.prototype);\n    obj.__wbg_ptr = ptr;\n    BalanceFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    BalanceFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_balance_free(ptr, 0);\n  }\n  get mature() {\n    const ret = wasm.balance_mature(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  get pending() {\n    const ret = wasm.balance_pending(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  get outgoing() {\n    const ret = wasm.balance_outgoing(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  toBalanceStrings(network_type) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.balance_toBalanceStrings(retptr, this.__wbg_ptr, addBorrowedObject(network_type));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return BalanceStrings.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n    }\n  }\n}\nvar BalanceStringsFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_balancestrings_free(ptr >>> 0, 1));\n\nclass BalanceStrings {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(BalanceStrings.prototype);\n    obj.__wbg_ptr = ptr;\n    BalanceStringsFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    BalanceStringsFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_balancestrings_free(ptr, 0);\n  }\n  get mature() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.balancestrings_mature(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  get pending() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.balancestrings_pending(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      let v1;\n      if (r0 !== 0) {\n        v1 = getStringFromWasm0(r0, r1).slice();\n        wasm.__wbindgen_export_3(r0, r1 * 1, 1);\n      }\n      return v1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n}\nvar ConsoleConstructorOptionsFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_consoleconstructoroptions_free(ptr >>> 0, 1));\n\nclass ConsoleConstructorOptions {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(ConsoleConstructorOptions.prototype);\n    obj.__wbg_ptr = ptr;\n    ConsoleConstructorOptionsFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    ConsoleConstructorOptionsFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_consoleconstructoroptions_free(ptr, 0);\n  }\n  constructor(stdout, stderr, ignore_errors, color_mod, inspect_options) {\n    const ret = wasm.consoleconstructoroptions_new_with_values(addHeapObject(stdout), addHeapObject(stderr), isLikeNone(ignore_errors) ? 16777215 : ignore_errors ? 1 : 0, addHeapObject(color_mod), isLikeNone(inspect_options) ? 0 : addHeapObject(inspect_options));\n    this.__wbg_ptr = ret >>> 0;\n    ConsoleConstructorOptionsFinalization.register(this, this.__wbg_ptr, this);\n    return this;\n  }\n  static new(stdout, stderr) {\n    const ret = wasm.consoleconstructoroptions_new(addHeapObject(stdout), addHeapObject(stderr));\n    return ConsoleConstructorOptions.__wrap(ret);\n  }\n  get stdout() {\n    const ret = wasm.consoleconstructoroptions_stdout(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set stdout(value) {\n    wasm.consoleconstructoroptions_set_stdout(this.__wbg_ptr, addHeapObject(value));\n  }\n  get stderr() {\n    const ret = wasm.consoleconstructoroptions_stderr(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set stderr(value) {\n    wasm.consoleconstructoroptions_set_stderr(this.__wbg_ptr, addHeapObject(value));\n  }\n  get ignore_errors() {\n    const ret = wasm.consoleconstructoroptions_ignore_errors(this.__wbg_ptr);\n    return ret === 16777215 ? undefined : ret !== 0;\n  }\n  set ignore_errors(value) {\n    wasm.consoleconstructoroptions_set_ignore_errors(this.__wbg_ptr, isLikeNone(value) ? 16777215 : value ? 1 : 0);\n  }\n  get color_mod() {\n    const ret = wasm.consoleconstructoroptions_color_mod(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set color_mod(value) {\n    wasm.consoleconstructoroptions_set_color_mod(this.__wbg_ptr, addHeapObject(value));\n  }\n  get inspect_options() {\n    const ret = wasm.consoleconstructoroptions_inspect_options(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set inspect_options(value) {\n    wasm.consoleconstructoroptions_set_inspect_options(this.__wbg_ptr, isLikeNone(value) ? 0 : addHeapObject(value));\n  }\n}\nvar CreateHookCallbacksFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_createhookcallbacks_free(ptr >>> 0, 1));\n\nclass CreateHookCallbacks {\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    CreateHookCallbacksFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_createhookcallbacks_free(ptr, 0);\n  }\n  constructor(init, before, after, destroy, promise_resolve) {\n    try {\n      const ret = wasm.createhookcallbacks_new(addBorrowedObject(init), addBorrowedObject(before), addBorrowedObject(after), addBorrowedObject(destroy), addBorrowedObject(promise_resolve));\n      this.__wbg_ptr = ret >>> 0;\n      CreateHookCallbacksFinalization.register(this, this.__wbg_ptr, this);\n      return this;\n    } finally {\n      heap[stack_pointer++] = undefined;\n      heap[stack_pointer++] = undefined;\n      heap[stack_pointer++] = undefined;\n      heap[stack_pointer++] = undefined;\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  get init() {\n    const ret = wasm.createhookcallbacks_init(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set init(value) {\n    wasm.createhookcallbacks_set_init(this.__wbg_ptr, addHeapObject(value));\n  }\n  get before() {\n    const ret = wasm.createhookcallbacks_before(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set before(value) {\n    wasm.createhookcallbacks_set_before(this.__wbg_ptr, addHeapObject(value));\n  }\n  get after() {\n    const ret = wasm.createhookcallbacks_after(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set after(value) {\n    wasm.createhookcallbacks_set_after(this.__wbg_ptr, addHeapObject(value));\n  }\n  get destroy() {\n    const ret = wasm.createhookcallbacks_destroy(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set destroy(value) {\n    wasm.createhookcallbacks_set_destroy(this.__wbg_ptr, addHeapObject(value));\n  }\n  get promise_resolve() {\n    const ret = wasm.createhookcallbacks_promise_resolve(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set promise_resolve(value) {\n    wasm.createhookcallbacks_set_promise_resolve(this.__wbg_ptr, addHeapObject(value));\n  }\n}\nvar CreateReadStreamOptionsFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_createreadstreamoptions_free(ptr >>> 0, 1));\n\nclass CreateReadStreamOptions {\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    CreateReadStreamOptionsFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_createreadstreamoptions_free(ptr, 0);\n  }\n  constructor(auto_close, emit_close, encoding, end, fd, flags, high_water_mark, mode, start) {\n    const ret = wasm.createreadstreamoptions_new_with_values(isLikeNone(auto_close) ? 16777215 : auto_close ? 1 : 0, isLikeNone(emit_close) ? 16777215 : emit_close ? 1 : 0, isLikeNone(encoding) ? 0 : addHeapObject(encoding), !isLikeNone(end), isLikeNone(end) ? 0 : end, isLikeNone(fd) ? 4294967297 : fd >>> 0, isLikeNone(flags) ? 0 : addHeapObject(flags), !isLikeNone(high_water_mark), isLikeNone(high_water_mark) ? 0 : high_water_mark, isLikeNone(mode) ? 4294967297 : mode >>> 0, !isLikeNone(start), isLikeNone(start) ? 0 : start);\n    this.__wbg_ptr = ret >>> 0;\n    CreateReadStreamOptionsFinalization.register(this, this.__wbg_ptr, this);\n    return this;\n  }\n  get auto_close() {\n    const ret = wasm.createreadstreamoptions_auto_close(this.__wbg_ptr);\n    return ret === 16777215 ? undefined : ret !== 0;\n  }\n  set auto_close(value) {\n    wasm.createreadstreamoptions_set_auto_close(this.__wbg_ptr, isLikeNone(value) ? 16777215 : value ? 1 : 0);\n  }\n  get emit_close() {\n    const ret = wasm.createreadstreamoptions_emit_close(this.__wbg_ptr);\n    return ret === 16777215 ? undefined : ret !== 0;\n  }\n  set emit_close(value) {\n    wasm.createreadstreamoptions_set_emit_close(this.__wbg_ptr, isLikeNone(value) ? 16777215 : value ? 1 : 0);\n  }\n  get encoding() {\n    const ret = wasm.createreadstreamoptions_encoding(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set encoding(value) {\n    wasm.createreadstreamoptions_set_encoding(this.__wbg_ptr, isLikeNone(value) ? 0 : addHeapObject(value));\n  }\n  get end() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.createreadstreamoptions_end(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r2 = getDataViewMemory0().getFloat64(retptr + 8 * 1, true);\n      return r0 === 0 ? undefined : r2;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  set end(value) {\n    wasm.createreadstreamoptions_set_end(this.__wbg_ptr, !isLikeNone(value), isLikeNone(value) ? 0 : value);\n  }\n  get fd() {\n    const ret = wasm.createreadstreamoptions_fd(this.__wbg_ptr);\n    return ret === 4294967297 ? undefined : ret;\n  }\n  set fd(value) {\n    wasm.createreadstreamoptions_set_fd(this.__wbg_ptr, isLikeNone(value) ? 4294967297 : value >>> 0);\n  }\n  get flags() {\n    const ret = wasm.createreadstreamoptions_flags(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set flags(value) {\n    wasm.createreadstreamoptions_set_flags(this.__wbg_ptr, isLikeNone(value) ? 0 : addHeapObject(value));\n  }\n  get high_water_mark() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.createreadstreamoptions_high_water_mark(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r2 = getDataViewMemory0().getFloat64(retptr + 8 * 1, true);\n      return r0 === 0 ? undefined : r2;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  set high_water_mark(value) {\n    wasm.createreadstreamoptions_set_high_water_mark(this.__wbg_ptr, !isLikeNone(value), isLikeNone(value) ? 0 : value);\n  }\n  get mode() {\n    const ret = wasm.createreadstreamoptions_mode(this.__wbg_ptr);\n    return ret === 4294967297 ? undefined : ret;\n  }\n  set mode(value) {\n    wasm.createreadstreamoptions_set_mode(this.__wbg_ptr, isLikeNone(value) ? 4294967297 : value >>> 0);\n  }\n  get start() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.createreadstreamoptions_start(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r2 = getDataViewMemory0().getFloat64(retptr + 8 * 1, true);\n      return r0 === 0 ? undefined : r2;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  set start(value) {\n    wasm.createreadstreamoptions_set_start(this.__wbg_ptr, !isLikeNone(value), isLikeNone(value) ? 0 : value);\n  }\n}\nvar CreateWriteStreamOptionsFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_createwritestreamoptions_free(ptr >>> 0, 1));\n\nclass CreateWriteStreamOptions {\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    CreateWriteStreamOptionsFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_createwritestreamoptions_free(ptr, 0);\n  }\n  constructor(auto_close, emit_close, encoding, fd, flags, mode, start) {\n    const ret = wasm.createwritestreamoptions_new_with_values(isLikeNone(auto_close) ? 16777215 : auto_close ? 1 : 0, isLikeNone(emit_close) ? 16777215 : emit_close ? 1 : 0, isLikeNone(encoding) ? 0 : addHeapObject(encoding), isLikeNone(fd) ? 4294967297 : fd >>> 0, isLikeNone(flags) ? 0 : addHeapObject(flags), isLikeNone(mode) ? 4294967297 : mode >>> 0, !isLikeNone(start), isLikeNone(start) ? 0 : start);\n    this.__wbg_ptr = ret >>> 0;\n    CreateWriteStreamOptionsFinalization.register(this, this.__wbg_ptr, this);\n    return this;\n  }\n  get auto_close() {\n    const ret = wasm.createwritestreamoptions_auto_close(this.__wbg_ptr);\n    return ret === 16777215 ? undefined : ret !== 0;\n  }\n  set auto_close(value) {\n    wasm.createwritestreamoptions_set_auto_close(this.__wbg_ptr, isLikeNone(value) ? 16777215 : value ? 1 : 0);\n  }\n  get emit_close() {\n    const ret = wasm.createwritestreamoptions_emit_close(this.__wbg_ptr);\n    return ret === 16777215 ? undefined : ret !== 0;\n  }\n  set emit_close(value) {\n    wasm.createwritestreamoptions_set_emit_close(this.__wbg_ptr, isLikeNone(value) ? 16777215 : value ? 1 : 0);\n  }\n  get encoding() {\n    const ret = wasm.createwritestreamoptions_encoding(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set encoding(value) {\n    wasm.createwritestreamoptions_set_encoding(this.__wbg_ptr, isLikeNone(value) ? 0 : addHeapObject(value));\n  }\n  get fd() {\n    const ret = wasm.createwritestreamoptions_fd(this.__wbg_ptr);\n    return ret === 4294967297 ? undefined : ret;\n  }\n  set fd(value) {\n    wasm.createwritestreamoptions_set_fd(this.__wbg_ptr, isLikeNone(value) ? 4294967297 : value >>> 0);\n  }\n  get flags() {\n    const ret = wasm.createwritestreamoptions_flags(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set flags(value) {\n    wasm.createwritestreamoptions_set_flags(this.__wbg_ptr, isLikeNone(value) ? 0 : addHeapObject(value));\n  }\n  get mode() {\n    const ret = wasm.createwritestreamoptions_mode(this.__wbg_ptr);\n    return ret === 4294967297 ? undefined : ret;\n  }\n  set mode(value) {\n    wasm.createwritestreamoptions_set_mode(this.__wbg_ptr, isLikeNone(value) ? 4294967297 : value >>> 0);\n  }\n  get start() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.createwritestreamoptions_start(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r2 = getDataViewMemory0().getFloat64(retptr + 8 * 1, true);\n      return r0 === 0 ? undefined : r2;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  set start(value) {\n    wasm.createwritestreamoptions_set_start(this.__wbg_ptr, !isLikeNone(value), isLikeNone(value) ? 0 : value);\n  }\n}\nvar CryptoBoxFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_cryptobox_free(ptr >>> 0, 1));\n\nclass CryptoBox {\n  toJSON() {\n    return {\n      publicKey: this.publicKey\n    };\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    CryptoBoxFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_cryptobox_free(ptr, 0);\n  }\n  constructor(secretKey, peerPublicKey) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.cryptobox_ctor(retptr, addBorrowedObject(secretKey), addBorrowedObject(peerPublicKey));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      this.__wbg_ptr = r0 >>> 0;\n      CryptoBoxFinalization.register(this, this.__wbg_ptr, this);\n      return this;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  get publicKey() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.cryptobox_publicKey(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  encrypt(plaintext) {\n    let deferred3_0;\n    let deferred3_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      const ptr0 = passStringToWasm0(plaintext, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n      const len0 = WASM_VECTOR_LEN;\n      wasm.cryptobox_encrypt(retptr, this.__wbg_ptr, ptr0, len0);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n      var ptr2 = r0;\n      var len2 = r1;\n      if (r3) {\n        ptr2 = 0;\n        len2 = 0;\n        throw takeObject(r2);\n      }\n      deferred3_0 = ptr2;\n      deferred3_1 = len2;\n      return getStringFromWasm0(ptr2, len2);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred3_0, deferred3_1, 1);\n    }\n  }\n  decrypt(base64string) {\n    let deferred3_0;\n    let deferred3_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      const ptr0 = passStringToWasm0(base64string, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n      const len0 = WASM_VECTOR_LEN;\n      wasm.cryptobox_decrypt(retptr, this.__wbg_ptr, ptr0, len0);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n      var ptr2 = r0;\n      var len2 = r1;\n      if (r3) {\n        ptr2 = 0;\n        len2 = 0;\n        throw takeObject(r2);\n      }\n      deferred3_0 = ptr2;\n      deferred3_1 = len2;\n      return getStringFromWasm0(ptr2, len2);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred3_0, deferred3_1, 1);\n    }\n  }\n}\nvar CryptoBoxPrivateKeyFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_cryptoboxprivatekey_free(ptr >>> 0, 1));\n\nclass CryptoBoxPrivateKey {\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    CryptoBoxPrivateKeyFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_cryptoboxprivatekey_free(ptr, 0);\n  }\n  constructor(secretKey) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.cryptoboxprivatekey_ctor(retptr, addHeapObject(secretKey));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      this.__wbg_ptr = r0 >>> 0;\n      CryptoBoxPrivateKeyFinalization.register(this, this.__wbg_ptr, this);\n      return this;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  to_public_key() {\n    const ret = wasm.cryptoboxprivatekey_to_public_key(this.__wbg_ptr);\n    return CryptoBoxPublicKey.__wrap(ret);\n  }\n}\nvar CryptoBoxPublicKeyFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_cryptoboxpublickey_free(ptr >>> 0, 1));\n\nclass CryptoBoxPublicKey {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(CryptoBoxPublicKey.prototype);\n    obj.__wbg_ptr = ptr;\n    CryptoBoxPublicKeyFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    CryptoBoxPublicKeyFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_cryptoboxpublickey_free(ptr, 0);\n  }\n  constructor(publicKey) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.cryptoboxpublickey_ctor(retptr, addHeapObject(publicKey));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      this.__wbg_ptr = r0 >>> 0;\n      CryptoBoxPublicKeyFinalization.register(this, this.__wbg_ptr, this);\n      return this;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  toString() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.cryptoboxpublickey_toString(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n}\nvar DerivationPathFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_derivationpath_free(ptr >>> 0, 1));\n\nclass DerivationPath {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(DerivationPath.prototype);\n    obj.__wbg_ptr = ptr;\n    DerivationPathFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    DerivationPathFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_derivationpath_free(ptr, 0);\n  }\n  constructor(path) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      const ptr0 = passStringToWasm0(path, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n      const len0 = WASM_VECTOR_LEN;\n      wasm.derivationpath_new(retptr, ptr0, len0);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      this.__wbg_ptr = r0 >>> 0;\n      DerivationPathFinalization.register(this, this.__wbg_ptr, this);\n      return this;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  isEmpty() {\n    const ret = wasm.derivationpath_isEmpty(this.__wbg_ptr);\n    return ret !== 0;\n  }\n  length() {\n    const ret = wasm.derivationpath_length(this.__wbg_ptr);\n    return ret >>> 0;\n  }\n  parent() {\n    const ret = wasm.derivationpath_parent(this.__wbg_ptr);\n    return ret === 0 ? undefined : DerivationPath.__wrap(ret);\n  }\n  push(child_number, hardened) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.derivationpath_push(retptr, this.__wbg_ptr, child_number, isLikeNone(hardened) ? 16777215 : hardened ? 1 : 0);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      if (r1) {\n        throw takeObject(r0);\n      }\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  toString() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.derivationpath_toString(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n}\nvar FormatInputPathObjectFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_formatinputpathobject_free(ptr >>> 0, 1));\n\nclass FormatInputPathObject {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(FormatInputPathObject.prototype);\n    obj.__wbg_ptr = ptr;\n    FormatInputPathObjectFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    FormatInputPathObjectFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_formatinputpathobject_free(ptr, 0);\n  }\n  constructor(base, dir, ext, name, root) {\n    const ret = wasm.formatinputpathobject_new_with_values(isLikeNone(base) ? 0 : addHeapObject(base), isLikeNone(dir) ? 0 : addHeapObject(dir), isLikeNone(ext) ? 0 : addHeapObject(ext), isLikeNone(name) ? 0 : addHeapObject(name), isLikeNone(root) ? 0 : addHeapObject(root));\n    this.__wbg_ptr = ret >>> 0;\n    FormatInputPathObjectFinalization.register(this, this.__wbg_ptr, this);\n    return this;\n  }\n  static new() {\n    const ret = wasm.formatinputpathobject_new();\n    return FormatInputPathObject.__wrap(ret);\n  }\n  get base() {\n    const ret = wasm.formatinputpathobject_base(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set base(value) {\n    wasm.formatinputpathobject_set_base(this.__wbg_ptr, isLikeNone(value) ? 0 : addHeapObject(value));\n  }\n  get dir() {\n    const ret = wasm.formatinputpathobject_dir(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set dir(value) {\n    wasm.formatinputpathobject_set_dir(this.__wbg_ptr, isLikeNone(value) ? 0 : addHeapObject(value));\n  }\n  get ext() {\n    const ret = wasm.formatinputpathobject_ext(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set ext(value) {\n    wasm.formatinputpathobject_set_ext(this.__wbg_ptr, isLikeNone(value) ? 0 : addHeapObject(value));\n  }\n  get name() {\n    const ret = wasm.formatinputpathobject_name(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set name(value) {\n    wasm.formatinputpathobject_set_name(this.__wbg_ptr, isLikeNone(value) ? 0 : addHeapObject(value));\n  }\n  get root() {\n    const ret = wasm.formatinputpathobject_root(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set root(value) {\n    wasm.formatinputpathobject_set_root(this.__wbg_ptr, isLikeNone(value) ? 0 : addHeapObject(value));\n  }\n}\nvar GeneratorFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_generator_free(ptr >>> 0, 1));\n\nclass Generator {\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    GeneratorFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_generator_free(ptr, 0);\n  }\n  constructor(args) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.generator_ctor(retptr, addHeapObject(args));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      this.__wbg_ptr = r0 >>> 0;\n      GeneratorFinalization.register(this, this.__wbg_ptr, this);\n      return this;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  next() {\n    const ret = wasm.generator_next(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  estimate() {\n    const ret = wasm.generator_estimate(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  summary() {\n    const ret = wasm.generator_summary(this.__wbg_ptr);\n    return GeneratorSummary.__wrap(ret);\n  }\n}\nvar GeneratorSummaryFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_generatorsummary_free(ptr >>> 0, 1));\n\nclass GeneratorSummary {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(GeneratorSummary.prototype);\n    obj.__wbg_ptr = ptr;\n    GeneratorSummaryFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  toJSON() {\n    return {\n      networkType: this.networkType,\n      utxos: this.utxos,\n      fees: this.fees,\n      transactions: this.transactions,\n      finalAmount: this.finalAmount,\n      finalTransactionId: this.finalTransactionId\n    };\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    GeneratorSummaryFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_generatorsummary_free(ptr, 0);\n  }\n  get networkType() {\n    const ret = wasm.generatorsummary_networkType(this.__wbg_ptr);\n    return ret;\n  }\n  get utxos() {\n    const ret = wasm.generatorsummary_utxos(this.__wbg_ptr);\n    return ret >>> 0;\n  }\n  get fees() {\n    const ret = wasm.generatorsummary_fees(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  get transactions() {\n    const ret = wasm.generatorsummary_transactions(this.__wbg_ptr);\n    return ret >>> 0;\n  }\n  get finalAmount() {\n    const ret = wasm.generatorsummary_finalAmount(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  get finalTransactionId() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.generatorsummary_finalTransactionId(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      let v1;\n      if (r0 !== 0) {\n        v1 = getStringFromWasm0(r0, r1).slice();\n        wasm.__wbindgen_export_3(r0, r1 * 1, 1);\n      }\n      return v1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n}\nvar GetNameOptionsFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_getnameoptions_free(ptr >>> 0, 1));\n\nclass GetNameOptions {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(GetNameOptions.prototype);\n    obj.__wbg_ptr = ptr;\n    GetNameOptionsFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    GetNameOptionsFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_getnameoptions_free(ptr, 0);\n  }\n  static new(family, host, local_address, port) {\n    const ret = wasm.getnameoptions_new(isLikeNone(family) ? 16777215 : family, addHeapObject(host), addHeapObject(local_address), port);\n    return GetNameOptions.__wrap(ret);\n  }\n  get family() {\n    const ret = wasm.getnameoptions_family(this.__wbg_ptr);\n    return ret === 16777215 ? undefined : ret;\n  }\n  set family(value) {\n    wasm.getnameoptions_set_family(this.__wbg_ptr, isLikeNone(value) ? 16777215 : value);\n  }\n  get host() {\n    const ret = wasm.getnameoptions_host(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set host(value) {\n    wasm.getnameoptions_set_host(this.__wbg_ptr, addHeapObject(value));\n  }\n  get local_address() {\n    const ret = wasm.getnameoptions_local_address(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set local_address(value) {\n    wasm.getnameoptions_set_local_address(this.__wbg_ptr, addHeapObject(value));\n  }\n  get port() {\n    const ret = wasm.getnameoptions_port(this.__wbg_ptr);\n    return ret >>> 0;\n  }\n  set port(value) {\n    wasm.getnameoptions_set_port(this.__wbg_ptr, value);\n  }\n}\nvar HashFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_hash_free(ptr >>> 0, 1));\n\nclass Hash {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(Hash.prototype);\n    obj.__wbg_ptr = ptr;\n    HashFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    HashFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_hash_free(ptr, 0);\n  }\n  constructor(hex_str) {\n    const ptr0 = passStringToWasm0(hex_str, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.hash_constructor(ptr0, len0);\n    this.__wbg_ptr = ret >>> 0;\n    HashFinalization.register(this, this.__wbg_ptr, this);\n    return this;\n  }\n  toString() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.hash_toString(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n}\nvar HeaderFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_header_free(ptr >>> 0, 1));\n\nclass Header {\n  toJSON() {\n    return {\n      version: this.version,\n      timestamp: this.timestamp,\n      bits: this.bits,\n      nonce: this.nonce,\n      daaScore: this.daaScore,\n      blueScore: this.blueScore,\n      hash: this.hash,\n      hashMerkleRoot: this.hashMerkleRoot,\n      acceptedIdMerkleRoot: this.acceptedIdMerkleRoot,\n      utxoCommitment: this.utxoCommitment,\n      pruningPoint: this.pruningPoint,\n      parentsByLevel: this.parentsByLevel,\n      blueWork: this.blueWork\n    };\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    HeaderFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_header_free(ptr, 0);\n  }\n  constructor(js_value) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.header_constructor(retptr, addHeapObject(js_value));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      this.__wbg_ptr = r0 >>> 0;\n      HeaderFinalization.register(this, this.__wbg_ptr, this);\n      return this;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  finalize() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.header_finalize(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  asJSON() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.header_asJSON(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  get version() {\n    const ret = wasm.header_get_version(this.__wbg_ptr);\n    return ret;\n  }\n  set version(version2) {\n    wasm.header_set_version(this.__wbg_ptr, version2);\n  }\n  get timestamp() {\n    const ret = wasm.header_get_timestamp(this.__wbg_ptr);\n    return BigInt.asUintN(64, ret);\n  }\n  set timestamp(timestamp) {\n    wasm.header_set_timestamp(this.__wbg_ptr, timestamp);\n  }\n  get bits() {\n    const ret = wasm.header_bits(this.__wbg_ptr);\n    return ret >>> 0;\n  }\n  set bits(bits) {\n    wasm.header_set_bits(this.__wbg_ptr, bits);\n  }\n  get nonce() {\n    const ret = wasm.header_nonce(this.__wbg_ptr);\n    return BigInt.asUintN(64, ret);\n  }\n  set nonce(nonce) {\n    wasm.header_set_nonce(this.__wbg_ptr, nonce);\n  }\n  get daaScore() {\n    const ret = wasm.header_daa_score(this.__wbg_ptr);\n    return BigInt.asUintN(64, ret);\n  }\n  set daaScore(daa_score) {\n    wasm.header_set_daa_score(this.__wbg_ptr, daa_score);\n  }\n  get blueScore() {\n    const ret = wasm.header_blue_score(this.__wbg_ptr);\n    return BigInt.asUintN(64, ret);\n  }\n  set blueScore(blue_score) {\n    wasm.header_set_blue_score(this.__wbg_ptr, blue_score);\n  }\n  get hash() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.header_get_hash_as_hex(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  get hashMerkleRoot() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.header_get_hash_merkle_root_as_hex(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  set hashMerkleRoot(js_value) {\n    wasm.header_set_hash_merkle_root_from_js_value(this.__wbg_ptr, addHeapObject(js_value));\n  }\n  get acceptedIdMerkleRoot() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.header_get_accepted_id_merkle_root_as_hex(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  set acceptedIdMerkleRoot(js_value) {\n    wasm.header_set_accepted_id_merkle_root_from_js_value(this.__wbg_ptr, addHeapObject(js_value));\n  }\n  get utxoCommitment() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.header_get_utxo_commitment_as_hex(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  set utxoCommitment(js_value) {\n    wasm.header_set_utxo_commitment_from_js_value(this.__wbg_ptr, addHeapObject(js_value));\n  }\n  get pruningPoint() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.header_get_pruning_point_as_hex(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  set pruningPoint(js_value) {\n    wasm.header_set_pruning_point_from_js_value(this.__wbg_ptr, addHeapObject(js_value));\n  }\n  get parentsByLevel() {\n    const ret = wasm.header_get_parents_by_level_as_js_value(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set parentsByLevel(js_value) {\n    wasm.header_set_parents_by_level_from_js_value(this.__wbg_ptr, addHeapObject(js_value));\n  }\n  get blueWork() {\n    const ret = wasm.header_blue_work(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  getBlueWorkAsHex() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.header_getBlueWorkAsHex(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  set blueWork(js_value) {\n    wasm.header_set_blue_work_from_js_value(this.__wbg_ptr, addHeapObject(js_value));\n  }\n}\nvar KeypairFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_keypair_free(ptr >>> 0, 1));\n\nclass Keypair {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(Keypair.prototype);\n    obj.__wbg_ptr = ptr;\n    KeypairFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  toJSON() {\n    return {\n      publicKey: this.publicKey,\n      privateKey: this.privateKey,\n      xOnlyPublicKey: this.xOnlyPublicKey\n    };\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    KeypairFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_keypair_free(ptr, 0);\n  }\n  get publicKey() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.keypair_get_public_key(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  get privateKey() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.keypair_get_private_key(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  get xOnlyPublicKey() {\n    const ret = wasm.keypair_get_xonly_public_key(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  toAddress(network) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.keypair_toAddress(retptr, this.__wbg_ptr, addBorrowedObject(network));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return Address.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  toAddressECDSA(network) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.keypair_toAddressECDSA(retptr, this.__wbg_ptr, addBorrowedObject(network));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return Address.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  static random() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.keypair_random(retptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return Keypair.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  static fromPrivateKey(secret_key) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      _assertClass(secret_key, PrivateKey);\n      wasm.keypair_fromPrivateKey(retptr, secret_key.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return Keypair.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n}\nvar MkdtempSyncOptionsFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_mkdtempsyncoptions_free(ptr >>> 0, 1));\n\nclass MkdtempSyncOptions {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(MkdtempSyncOptions.prototype);\n    obj.__wbg_ptr = ptr;\n    MkdtempSyncOptionsFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    MkdtempSyncOptionsFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_mkdtempsyncoptions_free(ptr, 0);\n  }\n  constructor(encoding) {\n    const ret = wasm.mkdtempsyncoptions_new_with_values(isLikeNone(encoding) ? 0 : addHeapObject(encoding));\n    this.__wbg_ptr = ret >>> 0;\n    MkdtempSyncOptionsFinalization.register(this, this.__wbg_ptr, this);\n    return this;\n  }\n  static new() {\n    const ret = wasm.mkdtempsyncoptions_new();\n    return MkdtempSyncOptions.__wrap(ret);\n  }\n  get encoding() {\n    const ret = wasm.mkdtempsyncoptions_encoding(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set encoding(value) {\n    wasm.mkdtempsyncoptions_set_encoding(this.__wbg_ptr, isLikeNone(value) ? 0 : addHeapObject(value));\n  }\n}\nvar MnemonicFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_mnemonic_free(ptr >>> 0, 1));\n\nclass Mnemonic {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(Mnemonic.prototype);\n    obj.__wbg_ptr = ptr;\n    MnemonicFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  toJSON() {\n    return {\n      entropy: this.entropy,\n      phrase: this.phrase\n    };\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    MnemonicFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_mnemonic_free(ptr, 0);\n  }\n  constructor(phrase, language) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      const ptr0 = passStringToWasm0(phrase, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n      const len0 = WASM_VECTOR_LEN;\n      wasm.mnemonic_constructor(retptr, ptr0, len0, isLikeNone(language) ? 1 : language);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      this.__wbg_ptr = r0 >>> 0;\n      MnemonicFinalization.register(this, this.__wbg_ptr, this);\n      return this;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  static validate(phrase, language) {\n    const ptr0 = passStringToWasm0(phrase, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.mnemonic_validate(ptr0, len0, isLikeNone(language) ? 1 : language);\n    return ret !== 0;\n  }\n  get entropy() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.mnemonic_entropy(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  set entropy(entropy) {\n    const ptr0 = passStringToWasm0(entropy, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.mnemonic_set_entropy(this.__wbg_ptr, ptr0, len0);\n  }\n  static random(word_count) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.mnemonic_random(retptr, isLikeNone(word_count) ? 4294967297 : word_count >>> 0);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return Mnemonic.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  get phrase() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.mnemonic_phrase(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  set phrase(phrase) {\n    const ptr0 = passStringToWasm0(phrase, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.mnemonic_set_phrase(this.__wbg_ptr, ptr0, len0);\n  }\n  toSeed(password) {\n    let deferred2_0;\n    let deferred2_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      var ptr0 = isLikeNone(password) ? 0 : passStringToWasm0(password, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n      var len0 = WASM_VECTOR_LEN;\n      wasm.mnemonic_toSeed(retptr, this.__wbg_ptr, ptr0, len0);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred2_0 = r0;\n      deferred2_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred2_0, deferred2_1, 1);\n    }\n  }\n}\nvar NetServerOptionsFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_netserveroptions_free(ptr >>> 0, 1));\n\nclass NetServerOptions {\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    NetServerOptionsFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_netserveroptions_free(ptr, 0);\n  }\n  get allow_half_open() {\n    const ptr = this.__destroy_into_raw();\n    const ret = wasm.netserveroptions_allow_half_open(ptr);\n    return ret === 16777215 ? undefined : ret !== 0;\n  }\n  set allow_half_open(value) {\n    const ptr = this.__destroy_into_raw();\n    wasm.netserveroptions_set_allow_half_open(ptr, isLikeNone(value) ? 16777215 : value ? 1 : 0);\n  }\n  get pause_on_connect() {\n    const ptr = this.__destroy_into_raw();\n    const ret = wasm.netserveroptions_pause_on_connect(ptr);\n    return ret === 16777215 ? undefined : ret !== 0;\n  }\n  set pause_on_connect(value) {\n    const ptr = this.__destroy_into_raw();\n    wasm.netserveroptions_set_allow_half_open(ptr, isLikeNone(value) ? 16777215 : value ? 1 : 0);\n  }\n}\nvar NetworkIdFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_networkid_free(ptr >>> 0, 1));\n\nclass NetworkId {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(NetworkId.prototype);\n    obj.__wbg_ptr = ptr;\n    NetworkIdFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  toJSON() {\n    return {\n      type: this.type,\n      suffix: this.suffix,\n      id: this.id\n    };\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    NetworkIdFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_networkid_free(ptr, 0);\n  }\n  get type() {\n    const ret = wasm.__wbg_get_networkid_type(this.__wbg_ptr);\n    return ret;\n  }\n  set type(arg0) {\n    wasm.__wbg_set_networkid_type(this.__wbg_ptr, arg0);\n  }\n  get suffix() {\n    const ret = wasm.__wbg_get_networkid_suffix(this.__wbg_ptr);\n    return ret === 4294967297 ? undefined : ret;\n  }\n  set suffix(arg0) {\n    wasm.__wbg_set_networkid_suffix(this.__wbg_ptr, isLikeNone(arg0) ? 4294967297 : arg0 >>> 0);\n  }\n  constructor(value) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.networkid_ctor(retptr, addBorrowedObject(value));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      this.__wbg_ptr = r0 >>> 0;\n      NetworkIdFinalization.register(this, this.__wbg_ptr, this);\n      return this;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  get id() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.networkid_id(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  toString() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.networkid_id(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  addressPrefix() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.networkid_addressPrefix(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n}\nvar NodeDescriptorFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_nodedescriptor_free(ptr >>> 0, 1));\n\nclass NodeDescriptor {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(NodeDescriptor.prototype);\n    obj.__wbg_ptr = ptr;\n    NodeDescriptorFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  toJSON() {\n    return {\n      uid: this.uid,\n      url: this.url\n    };\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    NodeDescriptorFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_nodedescriptor_free(ptr, 0);\n  }\n  get uid() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.__wbg_get_nodedescriptor_uid(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  set uid(arg0) {\n    const ptr0 = passStringToWasm0(arg0, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.__wbg_set_nodedescriptor_uid(this.__wbg_ptr, ptr0, len0);\n  }\n  get url() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.__wbg_get_nodedescriptor_url(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  set url(arg0) {\n    const ptr0 = passStringToWasm0(arg0, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.__wbg_set_nodedescriptor_url(this.__wbg_ptr, ptr0, len0);\n  }\n}\nvar PSKTFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_pskt_free(ptr >>> 0, 1));\n\nclass PSKT {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(PSKT.prototype);\n    obj.__wbg_ptr = ptr;\n    PSKTFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  toJSON() {\n    return {\n      role: this.role,\n      payload: this.payload\n    };\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    PSKTFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_pskt_free(ptr, 0);\n  }\n  constructor(payload) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.pskt_new(retptr, addHeapObject(payload));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      this.__wbg_ptr = r0 >>> 0;\n      PSKTFinalization.register(this, this.__wbg_ptr, this);\n      return this;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  get role() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.pskt_role(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  get payload() {\n    const ret = wasm.pskt_payload(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  creator() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.pskt_creator(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return PSKT.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  toConstructor() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.pskt_toConstructor(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return PSKT.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  toUpdater() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.pskt_toUpdater(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return PSKT.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  toSigner() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.pskt_toSigner(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return PSKT.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  toCombiner() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.pskt_toCombiner(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return PSKT.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  toFinalizer() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.pskt_toFinalizer(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return PSKT.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  toExtractor() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.pskt_toExtractor(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return PSKT.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  fallbackLockTime(lock_time) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.pskt_fallbackLockTime(retptr, this.__wbg_ptr, lock_time);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return PSKT.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  inputsModifiable() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.pskt_inputsModifiable(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return PSKT.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  outputsModifiable() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.pskt_outputsModifiable(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return PSKT.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  noMoreInputs() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.pskt_noMoreInputs(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return PSKT.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  noMoreOutputs() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.pskt_noMoreOutputs(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return PSKT.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  input(input) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.pskt_input(retptr, this.__wbg_ptr, addBorrowedObject(input));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return PSKT.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  output(output) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.pskt_output(retptr, this.__wbg_ptr, addBorrowedObject(output));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return PSKT.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  setSequence(n, input_index) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.pskt_setSequence(retptr, this.__wbg_ptr, n, input_index);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return PSKT.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  calculateId() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.pskt_calculateId(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return Hash.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n}\nvar PaymentOutputFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_paymentoutput_free(ptr >>> 0, 1));\n\nclass PaymentOutput {\n  toJSON() {\n    return {\n      address: this.address,\n      amount: this.amount\n    };\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    PaymentOutputFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_paymentoutput_free(ptr, 0);\n  }\n  get address() {\n    const ret = wasm.__wbg_get_paymentoutput_address(this.__wbg_ptr);\n    return Address.__wrap(ret);\n  }\n  set address(arg0) {\n    _assertClass(arg0, Address);\n    var ptr0 = arg0.__destroy_into_raw();\n    wasm.__wbg_set_paymentoutput_address(this.__wbg_ptr, ptr0);\n  }\n  get amount() {\n    const ret = wasm.__wbg_get_paymentoutput_amount(this.__wbg_ptr);\n    return BigInt.asUintN(64, ret);\n  }\n  set amount(arg0) {\n    wasm.__wbg_set_paymentoutput_amount(this.__wbg_ptr, arg0);\n  }\n  constructor(address, amount) {\n    _assertClass(address, Address);\n    var ptr0 = address.__destroy_into_raw();\n    const ret = wasm.paymentoutput_new(ptr0, amount);\n    this.__wbg_ptr = ret >>> 0;\n    PaymentOutputFinalization.register(this, this.__wbg_ptr, this);\n    return this;\n  }\n}\nvar PaymentOutputsFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_paymentoutputs_free(ptr >>> 0, 1));\n\nclass PaymentOutputs {\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    PaymentOutputsFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_paymentoutputs_free(ptr, 0);\n  }\n  constructor(output_array) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.paymentoutputs_constructor(retptr, addHeapObject(output_array));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      this.__wbg_ptr = r0 >>> 0;\n      PaymentOutputsFinalization.register(this, this.__wbg_ptr, this);\n      return this;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n}\nvar PendingTransactionFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_pendingtransaction_free(ptr >>> 0, 1));\n\nclass PendingTransaction {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(PendingTransaction.prototype);\n    obj.__wbg_ptr = ptr;\n    PendingTransactionFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  toJSON() {\n    return {\n      id: this.id,\n      paymentAmount: this.paymentAmount,\n      changeAmount: this.changeAmount,\n      feeAmount: this.feeAmount,\n      mass: this.mass,\n      minimumSignatures: this.minimumSignatures,\n      aggregateInputAmount: this.aggregateInputAmount,\n      aggregateOutputAmount: this.aggregateOutputAmount,\n      type: this.type,\n      transaction: this.transaction\n    };\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    PendingTransactionFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_pendingtransaction_free(ptr, 0);\n  }\n  get id() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.pendingtransaction_id(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  get paymentAmount() {\n    const ret = wasm.pendingtransaction_paymentAmount(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  get changeAmount() {\n    const ret = wasm.pendingtransaction_changeAmount(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  get feeAmount() {\n    const ret = wasm.pendingtransaction_feeAmount(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  get mass() {\n    const ret = wasm.pendingtransaction_mass(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  get minimumSignatures() {\n    const ret = wasm.pendingtransaction_minimumSignatures(this.__wbg_ptr);\n    return ret;\n  }\n  get aggregateInputAmount() {\n    const ret = wasm.pendingtransaction_aggregateInputAmount(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  get aggregateOutputAmount() {\n    const ret = wasm.pendingtransaction_aggregateOutputAmount(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  get type() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.pendingtransaction_type(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  addresses() {\n    const ret = wasm.pendingtransaction_addresses(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  getUtxoEntries() {\n    const ret = wasm.pendingtransaction_getUtxoEntries(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  createInputSignature(input_index, private_key, sighash_type) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      _assertClass(private_key, PrivateKey);\n      wasm.pendingtransaction_createInputSignature(retptr, this.__wbg_ptr, input_index, private_key.__wbg_ptr, isLikeNone(sighash_type) ? 6 : sighash_type);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  fillInput(input_index, signature_script) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.pendingtransaction_fillInput(retptr, this.__wbg_ptr, input_index, addHeapObject(signature_script));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      if (r1) {\n        throw takeObject(r0);\n      }\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  signInput(input_index, private_key, sighash_type) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      _assertClass(private_key, PrivateKey);\n      wasm.pendingtransaction_signInput(retptr, this.__wbg_ptr, input_index, private_key.__wbg_ptr, isLikeNone(sighash_type) ? 6 : sighash_type);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      if (r1) {\n        throw takeObject(r0);\n      }\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  sign(js_value, check_fully_signed) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.pendingtransaction_sign(retptr, this.__wbg_ptr, addHeapObject(js_value), isLikeNone(check_fully_signed) ? 16777215 : check_fully_signed ? 1 : 0);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      if (r1) {\n        throw takeObject(r0);\n      }\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  submit(wasm_rpc_client) {\n    _assertClass(wasm_rpc_client, RpcClient);\n    const ret = wasm.pendingtransaction_submit(this.__wbg_ptr, wasm_rpc_client.__wbg_ptr);\n    return takeObject(ret);\n  }\n  get transaction() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.pendingtransaction_transaction(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return Transaction.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  serializeToObject() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.pendingtransaction_serializeToObject(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  serializeToJSON() {\n    let deferred2_0;\n    let deferred2_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.pendingtransaction_serializeToJSON(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n      var ptr1 = r0;\n      var len1 = r1;\n      if (r3) {\n        ptr1 = 0;\n        len1 = 0;\n        throw takeObject(r2);\n      }\n      deferred2_0 = ptr1;\n      deferred2_1 = len1;\n      return getStringFromWasm0(ptr1, len1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred2_0, deferred2_1, 1);\n    }\n  }\n  serializeToSafeJSON() {\n    let deferred2_0;\n    let deferred2_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.pendingtransaction_serializeToSafeJSON(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n      var ptr1 = r0;\n      var len1 = r1;\n      if (r3) {\n        ptr1 = 0;\n        len1 = 0;\n        throw takeObject(r2);\n      }\n      deferred2_0 = ptr1;\n      deferred2_1 = len1;\n      return getStringFromWasm0(ptr1, len1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred2_0, deferred2_1, 1);\n    }\n  }\n}\nvar PipeOptionsFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_pipeoptions_free(ptr >>> 0, 1));\n\nclass PipeOptions {\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    PipeOptionsFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_pipeoptions_free(ptr, 0);\n  }\n  constructor(end) {\n    const ret = wasm.pipeoptions_new(isLikeNone(end) ? 16777215 : end ? 1 : 0);\n    this.__wbg_ptr = ret >>> 0;\n    PipeOptionsFinalization.register(this, this.__wbg_ptr, this);\n    return this;\n  }\n  get end() {\n    const ptr = this.__destroy_into_raw();\n    const ret = wasm.pipeoptions_end(ptr);\n    return ret === 16777215 ? undefined : ret !== 0;\n  }\n  set end(value) {\n    const ptr = this.__destroy_into_raw();\n    wasm.netserveroptions_set_allow_half_open(ptr, isLikeNone(value) ? 16777215 : value ? 1 : 0);\n  }\n}\nvar PoWFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_pow_free(ptr >>> 0, 1));\n\nclass PoW {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(PoW.prototype);\n    obj.__wbg_ptr = ptr;\n    PoWFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  toJSON() {\n    return {\n      target: this.target,\n      prePoWHash: this.prePoWHash\n    };\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    PoWFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_pow_free(ptr, 0);\n  }\n  constructor(header, timestamp) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.pow_new(retptr, addBorrowedObject(header), !isLikeNone(timestamp), isLikeNone(timestamp) ? BigInt(0) : timestamp);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      this.__wbg_ptr = r0 >>> 0;\n      PoWFinalization.register(this, this.__wbg_ptr, this);\n      return this;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  get target() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.pow_target(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  checkWork(nonce) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.pow_checkWork(retptr, this.__wbg_ptr, nonce);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  get prePoWHash() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.pow_get_pre_pow_hash(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  static fromRaw(pre_pow_hash, timestamp, target_bits) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      const ptr0 = passStringToWasm0(pre_pow_hash, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n      const len0 = WASM_VECTOR_LEN;\n      wasm.pow_fromRaw(retptr, ptr0, len0, timestamp, isLikeNone(target_bits) ? 4294967297 : target_bits >>> 0);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return PoW.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n}\nvar PrivateKeyFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_privatekey_free(ptr >>> 0, 1));\n\nclass PrivateKey {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(PrivateKey.prototype);\n    obj.__wbg_ptr = ptr;\n    PrivateKeyFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    PrivateKeyFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_privatekey_free(ptr, 0);\n  }\n  constructor(key) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      const ptr0 = passStringToWasm0(key, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n      const len0 = WASM_VECTOR_LEN;\n      wasm.privatekey_try_new(retptr, ptr0, len0);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      this.__wbg_ptr = r0 >>> 0;\n      PrivateKeyFinalization.register(this, this.__wbg_ptr, this);\n      return this;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  toString() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.privatekey_toString(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  toKeypair() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.privatekey_toKeypair(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return Keypair.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  toPublicKey() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.privatekey_toPublicKey(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return PublicKey.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  toAddress(network) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.privatekey_toAddress(retptr, this.__wbg_ptr, addBorrowedObject(network));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return Address.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  toAddressECDSA(network) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.privatekey_toAddressECDSA(retptr, this.__wbg_ptr, addBorrowedObject(network));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return Address.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n    }\n  }\n}\nvar PrivateKeyGeneratorFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_privatekeygenerator_free(ptr >>> 0, 1));\n\nclass PrivateKeyGenerator {\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    PrivateKeyGeneratorFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_privatekeygenerator_free(ptr, 0);\n  }\n  constructor(xprv, is_multisig, account_index, cosigner_index) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.privatekeygenerator_new(retptr, addBorrowedObject(xprv), is_multisig, account_index, isLikeNone(cosigner_index) ? 4294967297 : cosigner_index >>> 0);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      this.__wbg_ptr = r0 >>> 0;\n      PrivateKeyGeneratorFinalization.register(this, this.__wbg_ptr, this);\n      return this;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  receiveKey(index) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.privatekeygenerator_receiveKey(retptr, this.__wbg_ptr, index);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return PrivateKey.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  changeKey(index) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.privatekeygenerator_changeKey(retptr, this.__wbg_ptr, index);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return PrivateKey.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n}\nvar ProcessSendOptionsFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_processsendoptions_free(ptr >>> 0, 1));\n\nclass ProcessSendOptions {\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    ProcessSendOptionsFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_processsendoptions_free(ptr, 0);\n  }\n  constructor(swallow_errors) {\n    const ret = wasm.pipeoptions_new(isLikeNone(swallow_errors) ? 16777215 : swallow_errors ? 1 : 0);\n    this.__wbg_ptr = ret >>> 0;\n    ProcessSendOptionsFinalization.register(this, this.__wbg_ptr, this);\n    return this;\n  }\n  get swallow_errors() {\n    const ret = wasm.processsendoptions_swallow_errors(this.__wbg_ptr);\n    return ret === 16777215 ? undefined : ret !== 0;\n  }\n  set swallow_errors(value) {\n    wasm.processsendoptions_set_swallow_errors(this.__wbg_ptr, isLikeNone(value) ? 16777215 : value ? 1 : 0);\n  }\n}\nvar PrvKeyDataInfoFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_prvkeydatainfo_free(ptr >>> 0, 1));\n\nclass PrvKeyDataInfo {\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    PrvKeyDataInfoFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_prvkeydatainfo_free(ptr, 0);\n  }\n  get id() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.prvkeydatainfo_id(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  get name() {\n    const ret = wasm.prvkeydatainfo_name(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  get isEncrypted() {\n    const ret = wasm.prvkeydatainfo_isEncrypted(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  setName(_name) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      const ptr0 = passStringToWasm0(_name, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n      const len0 = WASM_VECTOR_LEN;\n      wasm.prvkeydatainfo_setName(retptr, this.__wbg_ptr, ptr0, len0);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      if (r1) {\n        throw takeObject(r0);\n      }\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n}\nvar PublicKeyFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_publickey_free(ptr >>> 0, 1));\n\nclass PublicKey {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(PublicKey.prototype);\n    obj.__wbg_ptr = ptr;\n    PublicKeyFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    PublicKeyFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_publickey_free(ptr, 0);\n  }\n  constructor(key) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      const ptr0 = passStringToWasm0(key, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n      const len0 = WASM_VECTOR_LEN;\n      wasm.publickey_try_new(retptr, ptr0, len0);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      this.__wbg_ptr = r0 >>> 0;\n      PublicKeyFinalization.register(this, this.__wbg_ptr, this);\n      return this;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  toString() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.publickey_toString(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  toAddress(network) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.publickey_toAddress(retptr, this.__wbg_ptr, addBorrowedObject(network));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return Address.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  toAddressECDSA(network) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.publickey_toAddressECDSA(retptr, this.__wbg_ptr, addBorrowedObject(network));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return Address.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  toXOnlyPublicKey() {\n    const ret = wasm.publickey_toXOnlyPublicKey(this.__wbg_ptr);\n    return XOnlyPublicKey.__wrap(ret);\n  }\n  fingerprint() {\n    const ret = wasm.publickey_fingerprint(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n}\nvar PublicKeyGeneratorFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_publickeygenerator_free(ptr >>> 0, 1));\n\nclass PublicKeyGenerator {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(PublicKeyGenerator.prototype);\n    obj.__wbg_ptr = ptr;\n    PublicKeyGeneratorFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    PublicKeyGeneratorFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_publickeygenerator_free(ptr, 0);\n  }\n  static fromXPub(kpub, cosigner_index) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.publickeygenerator_fromXPub(retptr, addBorrowedObject(kpub), isLikeNone(cosigner_index) ? 4294967297 : cosigner_index >>> 0);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return PublicKeyGenerator.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  static fromMasterXPrv(xprv, is_multisig, account_index, cosigner_index) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.publickeygenerator_fromMasterXPrv(retptr, addBorrowedObject(xprv), is_multisig, account_index, isLikeNone(cosigner_index) ? 4294967297 : cosigner_index >>> 0);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return PublicKeyGenerator.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  receivePubkeys(start, end) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.publickeygenerator_receivePubkeys(retptr, this.__wbg_ptr, start, end);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  receivePubkey(index) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.publickeygenerator_receivePubkey(retptr, this.__wbg_ptr, index);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return PublicKey.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  receivePubkeysAsStrings(start, end) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.publickeygenerator_receivePubkeysAsStrings(retptr, this.__wbg_ptr, start, end);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  receivePubkeyAsString(index) {\n    let deferred2_0;\n    let deferred2_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.publickeygenerator_receivePubkeyAsString(retptr, this.__wbg_ptr, index);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n      var ptr1 = r0;\n      var len1 = r1;\n      if (r3) {\n        ptr1 = 0;\n        len1 = 0;\n        throw takeObject(r2);\n      }\n      deferred2_0 = ptr1;\n      deferred2_1 = len1;\n      return getStringFromWasm0(ptr1, len1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred2_0, deferred2_1, 1);\n    }\n  }\n  receiveAddresses(networkType, start, end) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.publickeygenerator_receiveAddresses(retptr, this.__wbg_ptr, addBorrowedObject(networkType), start, end);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  receiveAddress(networkType, index) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.publickeygenerator_receiveAddress(retptr, this.__wbg_ptr, addBorrowedObject(networkType), index);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return Address.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  receiveAddressAsStrings(networkType, start, end) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.publickeygenerator_receiveAddressAsStrings(retptr, this.__wbg_ptr, addBorrowedObject(networkType), start, end);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  receiveAddressAsString(networkType, index) {\n    let deferred2_0;\n    let deferred2_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.publickeygenerator_receiveAddressAsString(retptr, this.__wbg_ptr, addBorrowedObject(networkType), index);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n      var ptr1 = r0;\n      var len1 = r1;\n      if (r3) {\n        ptr1 = 0;\n        len1 = 0;\n        throw takeObject(r2);\n      }\n      deferred2_0 = ptr1;\n      deferred2_1 = len1;\n      return getStringFromWasm0(ptr1, len1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n      wasm.__wbindgen_export_3(deferred2_0, deferred2_1, 1);\n    }\n  }\n  changePubkeys(start, end) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.publickeygenerator_changePubkeys(retptr, this.__wbg_ptr, start, end);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  changePubkey(index) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.publickeygenerator_changePubkey(retptr, this.__wbg_ptr, index);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return PublicKey.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  changePubkeysAsStrings(start, end) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.publickeygenerator_changePubkeysAsStrings(retptr, this.__wbg_ptr, start, end);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  changePubkeyAsString(index) {\n    let deferred2_0;\n    let deferred2_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.publickeygenerator_changePubkeyAsString(retptr, this.__wbg_ptr, index);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n      var ptr1 = r0;\n      var len1 = r1;\n      if (r3) {\n        ptr1 = 0;\n        len1 = 0;\n        throw takeObject(r2);\n      }\n      deferred2_0 = ptr1;\n      deferred2_1 = len1;\n      return getStringFromWasm0(ptr1, len1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred2_0, deferred2_1, 1);\n    }\n  }\n  changeAddresses(networkType, start, end) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.publickeygenerator_changeAddresses(retptr, this.__wbg_ptr, addBorrowedObject(networkType), start, end);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  changeAddress(networkType, index) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.publickeygenerator_changeAddress(retptr, this.__wbg_ptr, addBorrowedObject(networkType), index);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return Address.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  changeAddressAsStrings(networkType, start, end) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.publickeygenerator_changeAddressAsStrings(retptr, this.__wbg_ptr, addBorrowedObject(networkType), start, end);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  changeAddressAsString(networkType, index) {\n    let deferred2_0;\n    let deferred2_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.publickeygenerator_changeAddressAsString(retptr, this.__wbg_ptr, addBorrowedObject(networkType), index);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n      var ptr1 = r0;\n      var len1 = r1;\n      if (r3) {\n        ptr1 = 0;\n        len1 = 0;\n        throw takeObject(r2);\n      }\n      deferred2_0 = ptr1;\n      deferred2_1 = len1;\n      return getStringFromWasm0(ptr1, len1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n      wasm.__wbindgen_export_3(deferred2_0, deferred2_1, 1);\n    }\n  }\n  toString() {\n    let deferred2_0;\n    let deferred2_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.publickeygenerator_toString(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n      var ptr1 = r0;\n      var len1 = r1;\n      if (r3) {\n        ptr1 = 0;\n        len1 = 0;\n        throw takeObject(r2);\n      }\n      deferred2_0 = ptr1;\n      deferred2_1 = len1;\n      return getStringFromWasm0(ptr1, len1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred2_0, deferred2_1, 1);\n    }\n  }\n}\nvar ReadStreamFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_readstream_free(ptr >>> 0, 1));\n\nclass ReadStream {\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    ReadStreamFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_readstream_free(ptr, 0);\n  }\n  add_listener_with_open(listener) {\n    try {\n      const ret = wasm.readstream_add_listener_with_open(this.__wbg_ptr, addBorrowedObject(listener));\n      return takeObject(ret);\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  add_listener_with_close(listener) {\n    try {\n      const ret = wasm.readstream_add_listener_with_close(this.__wbg_ptr, addBorrowedObject(listener));\n      return takeObject(ret);\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  on_with_open(listener) {\n    try {\n      const ret = wasm.readstream_on_with_open(this.__wbg_ptr, addBorrowedObject(listener));\n      return takeObject(ret);\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  on_with_close(listener) {\n    try {\n      const ret = wasm.readstream_on_with_close(this.__wbg_ptr, addBorrowedObject(listener));\n      return takeObject(ret);\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  once_with_open(listener) {\n    try {\n      const ret = wasm.readstream_once_with_open(this.__wbg_ptr, addBorrowedObject(listener));\n      return takeObject(ret);\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  once_with_close(listener) {\n    try {\n      const ret = wasm.readstream_once_with_close(this.__wbg_ptr, addBorrowedObject(listener));\n      return takeObject(ret);\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  prepend_listener_with_open(listener) {\n    try {\n      const ret = wasm.readstream_prepend_listener_with_open(this.__wbg_ptr, addBorrowedObject(listener));\n      return takeObject(ret);\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  prepend_listener_with_close(listener) {\n    try {\n      const ret = wasm.readstream_prepend_listener_with_close(this.__wbg_ptr, addBorrowedObject(listener));\n      return takeObject(ret);\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  prepend_once_listener_with_open(listener) {\n    try {\n      const ret = wasm.readstream_prepend_once_listener_with_open(this.__wbg_ptr, addBorrowedObject(listener));\n      return takeObject(ret);\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  prepend_once_listener_with_close(listener) {\n    try {\n      const ret = wasm.readstream_prepend_once_listener_with_close(this.__wbg_ptr, addBorrowedObject(listener));\n      return takeObject(ret);\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n}\nvar ResolverFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_resolver_free(ptr >>> 0, 1));\n\nclass Resolver {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(Resolver.prototype);\n    obj.__wbg_ptr = ptr;\n    ResolverFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  toJSON() {\n    return {\n      urls: this.urls\n    };\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    ResolverFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_resolver_free(ptr, 0);\n  }\n  get urls() {\n    const ret = wasm.resolver_urls(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  getNode(encoding, network_id) {\n    const ret = wasm.resolver_getNode(this.__wbg_ptr, encoding, addHeapObject(network_id));\n    return takeObject(ret);\n  }\n  getUrl(encoding, network_id) {\n    const ret = wasm.resolver_getUrl(this.__wbg_ptr, encoding, addHeapObject(network_id));\n    return takeObject(ret);\n  }\n  connect(options) {\n    const ret = wasm.resolver_connect(this.__wbg_ptr, addHeapObject(options));\n    return takeObject(ret);\n  }\n  constructor(args) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.resolver_ctor(retptr, isLikeNone(args) ? 0 : addHeapObject(args));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      this.__wbg_ptr = r0 >>> 0;\n      ResolverFinalization.register(this, this.__wbg_ptr, this);\n      return this;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n}\nvar RpcClientFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_rpcclient_free(ptr >>> 0, 1));\n\nclass RpcClient {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(RpcClient.prototype);\n    obj.__wbg_ptr = ptr;\n    RpcClientFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  toJSON() {\n    return {\n      url: this.url,\n      resolver: this.resolver,\n      isConnected: this.isConnected,\n      encoding: this.encoding,\n      nodeId: this.nodeId\n    };\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    RpcClientFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_rpcclient_free(ptr, 0);\n  }\n  getBlockCount(request) {\n    const ret = wasm.rpcclient_getBlockCount(this.__wbg_ptr, isLikeNone(request) ? 0 : addHeapObject(request));\n    return takeObject(ret);\n  }\n  getBlockDagInfo(request) {\n    const ret = wasm.rpcclient_getBlockDagInfo(this.__wbg_ptr, isLikeNone(request) ? 0 : addHeapObject(request));\n    return takeObject(ret);\n  }\n  getCoinSupply(request) {\n    const ret = wasm.rpcclient_getCoinSupply(this.__wbg_ptr, isLikeNone(request) ? 0 : addHeapObject(request));\n    return takeObject(ret);\n  }\n  getConnectedPeerInfo(request) {\n    const ret = wasm.rpcclient_getConnectedPeerInfo(this.__wbg_ptr, isLikeNone(request) ? 0 : addHeapObject(request));\n    return takeObject(ret);\n  }\n  getInfo(request) {\n    const ret = wasm.rpcclient_getInfo(this.__wbg_ptr, isLikeNone(request) ? 0 : addHeapObject(request));\n    return takeObject(ret);\n  }\n  getPeerAddresses(request) {\n    const ret = wasm.rpcclient_getPeerAddresses(this.__wbg_ptr, isLikeNone(request) ? 0 : addHeapObject(request));\n    return takeObject(ret);\n  }\n  getMetrics(request) {\n    const ret = wasm.rpcclient_getMetrics(this.__wbg_ptr, isLikeNone(request) ? 0 : addHeapObject(request));\n    return takeObject(ret);\n  }\n  getConnections(request) {\n    const ret = wasm.rpcclient_getConnections(this.__wbg_ptr, isLikeNone(request) ? 0 : addHeapObject(request));\n    return takeObject(ret);\n  }\n  getSink(request) {\n    const ret = wasm.rpcclient_getSink(this.__wbg_ptr, isLikeNone(request) ? 0 : addHeapObject(request));\n    return takeObject(ret);\n  }\n  getSinkBlueScore(request) {\n    const ret = wasm.rpcclient_getSinkBlueScore(this.__wbg_ptr, isLikeNone(request) ? 0 : addHeapObject(request));\n    return takeObject(ret);\n  }\n  ping(request) {\n    const ret = wasm.rpcclient_ping(this.__wbg_ptr, isLikeNone(request) ? 0 : addHeapObject(request));\n    return takeObject(ret);\n  }\n  shutdown(request) {\n    const ret = wasm.rpcclient_shutdown(this.__wbg_ptr, isLikeNone(request) ? 0 : addHeapObject(request));\n    return takeObject(ret);\n  }\n  getServerInfo(request) {\n    const ret = wasm.rpcclient_getServerInfo(this.__wbg_ptr, isLikeNone(request) ? 0 : addHeapObject(request));\n    return takeObject(ret);\n  }\n  getSyncStatus(request) {\n    const ret = wasm.rpcclient_getSyncStatus(this.__wbg_ptr, isLikeNone(request) ? 0 : addHeapObject(request));\n    return takeObject(ret);\n  }\n  getFeeEstimate(request) {\n    const ret = wasm.rpcclient_getFeeEstimate(this.__wbg_ptr, isLikeNone(request) ? 0 : addHeapObject(request));\n    return takeObject(ret);\n  }\n  getCurrentNetwork(request) {\n    const ret = wasm.rpcclient_getCurrentNetwork(this.__wbg_ptr, isLikeNone(request) ? 0 : addHeapObject(request));\n    return takeObject(ret);\n  }\n  addPeer(request) {\n    const ret = wasm.rpcclient_addPeer(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  ban(request) {\n    const ret = wasm.rpcclient_ban(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  estimateNetworkHashesPerSecond(request) {\n    const ret = wasm.rpcclient_estimateNetworkHashesPerSecond(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  getBalanceByAddress(request) {\n    const ret = wasm.rpcclient_getBalanceByAddress(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  getBalancesByAddresses(request) {\n    const ret = wasm.rpcclient_getBalancesByAddresses(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  getBlock(request) {\n    const ret = wasm.rpcclient_getBlock(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  getBlocks(request) {\n    const ret = wasm.rpcclient_getBlocks(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  getBlockTemplate(request) {\n    const ret = wasm.rpcclient_getBlockTemplate(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  getCurrentBlockColor(request) {\n    const ret = wasm.rpcclient_getCurrentBlockColor(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  getDaaScoreTimestampEstimate(request) {\n    const ret = wasm.rpcclient_getDaaScoreTimestampEstimate(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  getFeeEstimateExperimental(request) {\n    const ret = wasm.rpcclient_getFeeEstimateExperimental(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  getHeaders(request) {\n    const ret = wasm.rpcclient_getHeaders(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  getMempoolEntries(request) {\n    const ret = wasm.rpcclient_getMempoolEntries(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  getMempoolEntriesByAddresses(request) {\n    const ret = wasm.rpcclient_getMempoolEntriesByAddresses(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  getMempoolEntry(request) {\n    const ret = wasm.rpcclient_getMempoolEntry(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  getSubnetwork(request) {\n    const ret = wasm.rpcclient_getSubnetwork(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  getUtxosByAddresses(request) {\n    const ret = wasm.rpcclient_getUtxosByAddresses(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  getVirtualChainFromBlock(request) {\n    const ret = wasm.rpcclient_getVirtualChainFromBlock(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  resolveFinalityConflict(request) {\n    const ret = wasm.rpcclient_resolveFinalityConflict(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  submitBlock(request) {\n    const ret = wasm.rpcclient_submitBlock(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  submitTransaction(request) {\n    const ret = wasm.rpcclient_submitTransaction(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  submitTransactionReplacement(request) {\n    const ret = wasm.rpcclient_submitTransactionReplacement(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  unban(request) {\n    const ret = wasm.rpcclient_unban(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  subscribeBlockAdded() {\n    const ret = wasm.rpcclient_subscribeBlockAdded(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  unsubscribeBlockAdded() {\n    const ret = wasm.rpcclient_unsubscribeBlockAdded(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  subscribeFinalityConflict() {\n    const ret = wasm.rpcclient_subscribeFinalityConflict(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  unsubscribeFinalityConflict() {\n    const ret = wasm.rpcclient_unsubscribeFinalityConflict(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  subscribeFinalityConflictResolved() {\n    const ret = wasm.rpcclient_subscribeFinalityConflictResolved(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  unsubscribeFinalityConflictResolved() {\n    const ret = wasm.rpcclient_unsubscribeFinalityConflictResolved(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  subscribeSinkBlueScoreChanged() {\n    const ret = wasm.rpcclient_subscribeSinkBlueScoreChanged(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  unsubscribeSinkBlueScoreChanged() {\n    const ret = wasm.rpcclient_unsubscribeSinkBlueScoreChanged(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  subscribePruningPointUtxoSetOverride() {\n    const ret = wasm.rpcclient_subscribePruningPointUtxoSetOverride(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  unsubscribePruningPointUtxoSetOverride() {\n    const ret = wasm.rpcclient_unsubscribePruningPointUtxoSetOverride(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  subscribeNewBlockTemplate() {\n    const ret = wasm.rpcclient_subscribeNewBlockTemplate(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  unsubscribeNewBlockTemplate() {\n    const ret = wasm.rpcclient_unsubscribeNewBlockTemplate(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  subscribeVirtualDaaScoreChanged() {\n    const ret = wasm.rpcclient_subscribeVirtualDaaScoreChanged(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  unsubscribeVirtualDaaScoreChanged() {\n    const ret = wasm.rpcclient_unsubscribeVirtualDaaScoreChanged(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  subscribeUtxosChanged(addresses) {\n    const ret = wasm.rpcclient_subscribeUtxosChanged(this.__wbg_ptr, addHeapObject(addresses));\n    return takeObject(ret);\n  }\n  unsubscribeUtxosChanged(addresses) {\n    const ret = wasm.rpcclient_unsubscribeUtxosChanged(this.__wbg_ptr, addHeapObject(addresses));\n    return takeObject(ret);\n  }\n  subscribeVirtualChainChanged(include_accepted_transaction_ids) {\n    const ret = wasm.rpcclient_subscribeVirtualChainChanged(this.__wbg_ptr, include_accepted_transaction_ids);\n    return takeObject(ret);\n  }\n  unsubscribeVirtualChainChanged(include_accepted_transaction_ids) {\n    const ret = wasm.rpcclient_unsubscribeVirtualChainChanged(this.__wbg_ptr, include_accepted_transaction_ids);\n    return takeObject(ret);\n  }\n  static defaultPort(encoding, network) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rpcclient_defaultPort(retptr, encoding, addBorrowedObject(network));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return r0;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  static parseUrl(url, encoding, network) {\n    let deferred4_0;\n    let deferred4_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      const ptr0 = passStringToWasm0(url, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n      const len0 = WASM_VECTOR_LEN;\n      _assertClass(network, NetworkId);\n      var ptr1 = network.__destroy_into_raw();\n      wasm.rpcclient_parseUrl(retptr, ptr0, len0, encoding, ptr1);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n      var ptr3 = r0;\n      var len3 = r1;\n      if (r3) {\n        ptr3 = 0;\n        len3 = 0;\n        throw takeObject(r2);\n      }\n      deferred4_0 = ptr3;\n      deferred4_1 = len3;\n      return getStringFromWasm0(ptr3, len3);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred4_0, deferred4_1, 1);\n    }\n  }\n  constructor(config) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rpcclient_ctor(retptr, isLikeNone(config) ? 0 : addHeapObject(config));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      this.__wbg_ptr = r0 >>> 0;\n      RpcClientFinalization.register(this, this.__wbg_ptr, this);\n      return this;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  get url() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rpcclient_url(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      let v1;\n      if (r0 !== 0) {\n        v1 = getStringFromWasm0(r0, r1).slice();\n        wasm.__wbindgen_export_3(r0, r1 * 1, 1);\n      }\n      return v1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  get resolver() {\n    const ret = wasm.rpcclient_resolver(this.__wbg_ptr);\n    return ret === 0 ? undefined : Resolver.__wrap(ret);\n  }\n  setResolver(resolver) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      _assertClass(resolver, Resolver);\n      var ptr0 = resolver.__destroy_into_raw();\n      wasm.rpcclient_setResolver(retptr, this.__wbg_ptr, ptr0);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      if (r1) {\n        throw takeObject(r0);\n      }\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  setNetworkId(network_id) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      _assertClass(network_id, NetworkId);\n      wasm.rpcclient_setNetworkId(retptr, this.__wbg_ptr, network_id.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      if (r1) {\n        throw takeObject(r0);\n      }\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  get isConnected() {\n    const ret = wasm.rpcclient_isConnected(this.__wbg_ptr);\n    return ret !== 0;\n  }\n  get encoding() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rpcclient_encoding(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  get nodeId() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rpcclient_nodeId(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      let v1;\n      if (r0 !== 0) {\n        v1 = getStringFromWasm0(r0, r1).slice();\n        wasm.__wbindgen_export_3(r0, r1 * 1, 1);\n      }\n      return v1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  connect(args) {\n    const ret = wasm.rpcclient_connect(this.__wbg_ptr, isLikeNone(args) ? 0 : addHeapObject(args));\n    return takeObject(ret);\n  }\n  disconnect() {\n    const ret = wasm.rpcclient_disconnect(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  start() {\n    const ret = wasm.rpcclient_start(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  stop() {\n    const ret = wasm.rpcclient_stop(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  triggerAbort() {\n    wasm.rpcclient_triggerAbort(this.__wbg_ptr);\n  }\n  addEventListener(event, callback) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rpcclient_addEventListener(retptr, this.__wbg_ptr, addHeapObject(event), isLikeNone(callback) ? 0 : addHeapObject(callback));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      if (r1) {\n        throw takeObject(r0);\n      }\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  removeEventListener(event, callback) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rpcclient_removeEventListener(retptr, this.__wbg_ptr, addHeapObject(event), isLikeNone(callback) ? 0 : addHeapObject(callback));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      if (r1) {\n        throw takeObject(r0);\n      }\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  clearEventListener(callback) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rpcclient_clearEventListener(retptr, this.__wbg_ptr, addHeapObject(callback));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      if (r1) {\n        throw takeObject(r0);\n      }\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  removeAllEventListeners() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rpcclient_removeAllEventListeners(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      if (r1) {\n        throw takeObject(r0);\n      }\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n}\nvar ScriptBuilderFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_scriptbuilder_free(ptr >>> 0, 1));\n\nclass ScriptBuilder {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(ScriptBuilder.prototype);\n    obj.__wbg_ptr = ptr;\n    ScriptBuilderFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  toJSON() {\n    return {};\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    ScriptBuilderFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_scriptbuilder_free(ptr, 0);\n  }\n  constructor() {\n    const ret = wasm.scriptbuilder_new();\n    this.__wbg_ptr = ret >>> 0;\n    ScriptBuilderFinalization.register(this, this.__wbg_ptr, this);\n    return this;\n  }\n  static fromScript(script) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.scriptbuilder_fromScript(retptr, addHeapObject(script));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return ScriptBuilder.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  addOp(op) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.scriptbuilder_addOp(retptr, this.__wbg_ptr, op);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return ScriptBuilder.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  addOps(opcodes) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.scriptbuilder_addOps(retptr, this.__wbg_ptr, addHeapObject(opcodes));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return ScriptBuilder.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  addData(data) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.scriptbuilder_addData(retptr, this.__wbg_ptr, addHeapObject(data));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return ScriptBuilder.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  addI64(value) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.scriptbuilder_addI64(retptr, this.__wbg_ptr, value);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return ScriptBuilder.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  addLockTime(lock_time) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.scriptbuilder_addLockTime(retptr, this.__wbg_ptr, lock_time);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return ScriptBuilder.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  addSequence(sequence) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.scriptbuilder_addLockTime(retptr, this.__wbg_ptr, sequence);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return ScriptBuilder.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  static canonicalDataSize(data) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.scriptbuilder_canonicalDataSize(retptr, addHeapObject(data));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return r0 >>> 0;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  toString() {\n    const ret = wasm.scriptbuilder_toString(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  drain() {\n    const ret = wasm.scriptbuilder_drain(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  createPayToScriptHashScript() {\n    const ret = wasm.scriptbuilder_createPayToScriptHashScript(this.__wbg_ptr);\n    return ScriptPublicKey.__wrap(ret);\n  }\n  encodePayToScriptHashSignatureScript(signature) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.scriptbuilder_encodePayToScriptHashSignatureScript(retptr, this.__wbg_ptr, addHeapObject(signature));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  hexView(args) {\n    let deferred2_0;\n    let deferred2_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.scriptbuilder_hexView(retptr, this.__wbg_ptr, isLikeNone(args) ? 0 : addHeapObject(args));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n      var ptr1 = r0;\n      var len1 = r1;\n      if (r3) {\n        ptr1 = 0;\n        len1 = 0;\n        throw takeObject(r2);\n      }\n      deferred2_0 = ptr1;\n      deferred2_1 = len1;\n      return getStringFromWasm0(ptr1, len1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred2_0, deferred2_1, 1);\n    }\n  }\n}\nvar ScriptPublicKeyFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_scriptpublickey_free(ptr >>> 0, 1));\n\nclass ScriptPublicKey {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(ScriptPublicKey.prototype);\n    obj.__wbg_ptr = ptr;\n    ScriptPublicKeyFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  toJSON() {\n    return {\n      version: this.version,\n      script: this.script\n    };\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    ScriptPublicKeyFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_scriptpublickey_free(ptr, 0);\n  }\n  get version() {\n    const ret = wasm.__wbg_get_scriptpublickey_version(this.__wbg_ptr);\n    return ret;\n  }\n  set version(arg0) {\n    wasm.__wbg_set_scriptpublickey_version(this.__wbg_ptr, arg0);\n  }\n  constructor(version2, script) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.scriptpublickey_constructor(retptr, version2, addHeapObject(script));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      this.__wbg_ptr = r0 >>> 0;\n      ScriptPublicKeyFinalization.register(this, this.__wbg_ptr, this);\n      return this;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  get script() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.scriptpublickey_script_as_hex(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n}\nvar SetAadOptionsFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_setaadoptions_free(ptr >>> 0, 1));\n\nclass SetAadOptions {\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    SetAadOptionsFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_setaadoptions_free(ptr, 0);\n  }\n  constructor(flush, plaintext_length, transform) {\n    const ret = wasm.setaadoptions_new(addHeapObject(flush), plaintext_length, addHeapObject(transform));\n    this.__wbg_ptr = ret >>> 0;\n    SetAadOptionsFinalization.register(this, this.__wbg_ptr, this);\n    return this;\n  }\n  get flush() {\n    const ret = wasm.setaadoptions_flush(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set flush(value) {\n    wasm.setaadoptions_set_flush(this.__wbg_ptr, addHeapObject(value));\n  }\n  get plaintextLength() {\n    const ret = wasm.agentconstructoroptions_keep_alive_msecs(this.__wbg_ptr);\n    return ret;\n  }\n  set plaintext_length(value) {\n    wasm.agentconstructoroptions_set_keep_alive_msecs(this.__wbg_ptr, value);\n  }\n  get transform() {\n    const ret = wasm.setaadoptions_transform(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set transform(value) {\n    wasm.setaadoptions_set_transform(this.__wbg_ptr, addHeapObject(value));\n  }\n}\nvar SigHashTypeFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_sighashtype_free(ptr >>> 0, 1));\n\nclass SigHashType {\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    SigHashTypeFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_sighashtype_free(ptr, 0);\n  }\n}\nvar StorageFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_storage_free(ptr >>> 0, 1));\n\nclass Storage {\n  toJSON() {\n    return {\n      filename: this.filename\n    };\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    StorageFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_storage_free(ptr, 0);\n  }\n  get filename() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.storage_filename(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n}\nvar StreamTransformOptionsFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_streamtransformoptions_free(ptr >>> 0, 1));\n\nclass StreamTransformOptions {\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    StreamTransformOptionsFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_streamtransformoptions_free(ptr, 0);\n  }\n  constructor(flush, transform) {\n    const ret = wasm.streamtransformoptions_new(addHeapObject(flush), addHeapObject(transform));\n    this.__wbg_ptr = ret >>> 0;\n    StreamTransformOptionsFinalization.register(this, this.__wbg_ptr, this);\n    return this;\n  }\n  get flush() {\n    const ret = wasm.streamtransformoptions_flush(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set flush(value) {\n    wasm.streamtransformoptions_set_flush(this.__wbg_ptr, addHeapObject(value));\n  }\n  get transform() {\n    const ret = wasm.streamtransformoptions_transform(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set transform(value) {\n    wasm.streamtransformoptions_set_transform(this.__wbg_ptr, addHeapObject(value));\n  }\n}\nvar TransactionFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_transaction_free(ptr >>> 0, 1));\n\nclass Transaction {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(Transaction.prototype);\n    obj.__wbg_ptr = ptr;\n    TransactionFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  toJSON() {\n    return {\n      id: this.id,\n      inputs: this.inputs,\n      outputs: this.outputs,\n      version: this.version,\n      lockTime: this.lockTime,\n      gas: this.gas,\n      subnetworkId: this.subnetworkId,\n      payload: this.payload,\n      mass: this.mass\n    };\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    TransactionFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_transaction_free(ptr, 0);\n  }\n  is_coinbase() {\n    const ret = wasm.transaction_is_coinbase(this.__wbg_ptr);\n    return ret !== 0;\n  }\n  finalize() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.transaction_finalize(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return Hash.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  get id() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.transaction_id(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  constructor(js_value) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.transaction_constructor(retptr, addBorrowedObject(js_value));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      this.__wbg_ptr = r0 >>> 0;\n      TransactionFinalization.register(this, this.__wbg_ptr, this);\n      return this;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  get inputs() {\n    const ret = wasm.transaction_get_inputs_as_js_array(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  addresses(network_type) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.transaction_addresses(retptr, this.__wbg_ptr, addBorrowedObject(network_type));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  set inputs(js_value) {\n    try {\n      wasm.transaction_set_inputs_from_js_array(this.__wbg_ptr, addBorrowedObject(js_value));\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  get outputs() {\n    const ret = wasm.transaction_get_outputs_as_js_array(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set outputs(js_value) {\n    try {\n      wasm.transaction_set_outputs_from_js_array(this.__wbg_ptr, addBorrowedObject(js_value));\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  get version() {\n    const ret = wasm.transaction_version(this.__wbg_ptr);\n    return ret;\n  }\n  set version(v) {\n    wasm.transaction_set_version(this.__wbg_ptr, v);\n  }\n  get lockTime() {\n    const ret = wasm.transaction_lockTime(this.__wbg_ptr);\n    return BigInt.asUintN(64, ret);\n  }\n  set lockTime(v) {\n    wasm.transaction_set_lockTime(this.__wbg_ptr, v);\n  }\n  get gas() {\n    const ret = wasm.transaction_gas(this.__wbg_ptr);\n    return BigInt.asUintN(64, ret);\n  }\n  set gas(v) {\n    wasm.transaction_set_gas(this.__wbg_ptr, v);\n  }\n  get subnetworkId() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.transaction_get_subnetwork_id_as_hex(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  set subnetworkId(js_value) {\n    wasm.transaction_set_subnetwork_id_from_js_value(this.__wbg_ptr, addHeapObject(js_value));\n  }\n  get payload() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.transaction_get_payload_as_hex_string(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  set payload(js_value) {\n    wasm.transaction_set_payload_from_js_value(this.__wbg_ptr, addHeapObject(js_value));\n  }\n  get mass() {\n    const ret = wasm.transaction_get_mass(this.__wbg_ptr);\n    return BigInt.asUintN(64, ret);\n  }\n  set mass(v) {\n    wasm.transaction_set_mass(this.__wbg_ptr, v);\n  }\n  serializeToObject() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.transaction_serializeToObject(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  serializeToJSON() {\n    let deferred2_0;\n    let deferred2_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.transaction_serializeToJSON(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n      var ptr1 = r0;\n      var len1 = r1;\n      if (r3) {\n        ptr1 = 0;\n        len1 = 0;\n        throw takeObject(r2);\n      }\n      deferred2_0 = ptr1;\n      deferred2_1 = len1;\n      return getStringFromWasm0(ptr1, len1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred2_0, deferred2_1, 1);\n    }\n  }\n  serializeToSafeJSON() {\n    let deferred2_0;\n    let deferred2_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.transaction_serializeToSafeJSON(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n      var ptr1 = r0;\n      var len1 = r1;\n      if (r3) {\n        ptr1 = 0;\n        len1 = 0;\n        throw takeObject(r2);\n      }\n      deferred2_0 = ptr1;\n      deferred2_1 = len1;\n      return getStringFromWasm0(ptr1, len1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred2_0, deferred2_1, 1);\n    }\n  }\n  static deserializeFromObject(js_value) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.transaction_deserializeFromObject(retptr, addBorrowedObject(js_value));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return Transaction.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  static deserializeFromJSON(json) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      const ptr0 = passStringToWasm0(json, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n      const len0 = WASM_VECTOR_LEN;\n      wasm.transaction_deserializeFromJSON(retptr, ptr0, len0);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return Transaction.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  static deserializeFromSafeJSON(json) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      const ptr0 = passStringToWasm0(json, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n      const len0 = WASM_VECTOR_LEN;\n      wasm.transaction_deserializeFromSafeJSON(retptr, ptr0, len0);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return Transaction.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n}\nvar TransactionInputFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_transactioninput_free(ptr >>> 0, 1));\n\nclass TransactionInput {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(TransactionInput.prototype);\n    obj.__wbg_ptr = ptr;\n    TransactionInputFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  toJSON() {\n    return {\n      previousOutpoint: this.previousOutpoint,\n      signatureScript: this.signatureScript,\n      sequence: this.sequence,\n      sigOpCount: this.sigOpCount,\n      utxo: this.utxo\n    };\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    TransactionInputFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_transactioninput_free(ptr, 0);\n  }\n  constructor(value) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.transactioninput_constructor(retptr, addBorrowedObject(value));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      this.__wbg_ptr = r0 >>> 0;\n      TransactionInputFinalization.register(this, this.__wbg_ptr, this);\n      return this;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  get previousOutpoint() {\n    const ret = wasm.transactioninput_get_previous_outpoint(this.__wbg_ptr);\n    return TransactionOutpoint.__wrap(ret);\n  }\n  set previousOutpoint(js_value) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.transactioninput_set_previous_outpoint(retptr, this.__wbg_ptr, addBorrowedObject(js_value));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      if (r1) {\n        throw takeObject(r0);\n      }\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  get signatureScript() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.transactioninput_get_signature_script_as_hex(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      let v1;\n      if (r0 !== 0) {\n        v1 = getStringFromWasm0(r0, r1).slice();\n        wasm.__wbindgen_export_3(r0, r1 * 1, 1);\n      }\n      return v1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  set signatureScript(js_value) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.transactioninput_set_signature_script_from_js_value(retptr, this.__wbg_ptr, addHeapObject(js_value));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      if (r1) {\n        throw takeObject(r0);\n      }\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  get sequence() {\n    const ret = wasm.transactioninput_get_sequence(this.__wbg_ptr);\n    return BigInt.asUintN(64, ret);\n  }\n  set sequence(sequence) {\n    wasm.transactioninput_set_sequence(this.__wbg_ptr, sequence);\n  }\n  get sigOpCount() {\n    const ret = wasm.transactioninput_get_sig_op_count(this.__wbg_ptr);\n    return ret;\n  }\n  set sigOpCount(sig_op_count) {\n    wasm.transactioninput_set_sig_op_count(this.__wbg_ptr, sig_op_count);\n  }\n  get utxo() {\n    const ret = wasm.transactioninput_get_utxo(this.__wbg_ptr);\n    return ret === 0 ? undefined : UtxoEntryReference.__wrap(ret);\n  }\n}\nvar TransactionOutpointFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_transactionoutpoint_free(ptr >>> 0, 1));\n\nclass TransactionOutpoint {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(TransactionOutpoint.prototype);\n    obj.__wbg_ptr = ptr;\n    TransactionOutpointFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  toJSON() {\n    return {\n      transactionId: this.transactionId,\n      index: this.index\n    };\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    TransactionOutpointFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_transactionoutpoint_free(ptr, 0);\n  }\n  constructor(transaction_id, index) {\n    _assertClass(transaction_id, Hash);\n    var ptr0 = transaction_id.__destroy_into_raw();\n    const ret = wasm.transactionoutpoint_ctor(ptr0, index);\n    this.__wbg_ptr = ret >>> 0;\n    TransactionOutpointFinalization.register(this, this.__wbg_ptr, this);\n    return this;\n  }\n  getId() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.transactionoutpoint_getId(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  get transactionId() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.transactionoutpoint_transactionId(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  get index() {\n    const ret = wasm.transactionoutpoint_index(this.__wbg_ptr);\n    return ret >>> 0;\n  }\n}\nvar TransactionOutputFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_transactionoutput_free(ptr >>> 0, 1));\n\nclass TransactionOutput {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(TransactionOutput.prototype);\n    obj.__wbg_ptr = ptr;\n    TransactionOutputFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  toJSON() {\n    return {\n      value: this.value,\n      scriptPublicKey: this.scriptPublicKey\n    };\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    TransactionOutputFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_transactionoutput_free(ptr, 0);\n  }\n  constructor(value, script_public_key) {\n    _assertClass(script_public_key, ScriptPublicKey);\n    const ret = wasm.transactionoutput_ctor(value, script_public_key.__wbg_ptr);\n    this.__wbg_ptr = ret >>> 0;\n    TransactionOutputFinalization.register(this, this.__wbg_ptr, this);\n    return this;\n  }\n  get value() {\n    const ret = wasm.transactionoutput_value(this.__wbg_ptr);\n    return BigInt.asUintN(64, ret);\n  }\n  set value(v) {\n    wasm.transactionoutput_set_value(this.__wbg_ptr, v);\n  }\n  get scriptPublicKey() {\n    const ret = wasm.transactionoutput_scriptPublicKey(this.__wbg_ptr);\n    return ScriptPublicKey.__wrap(ret);\n  }\n  set scriptPublicKey(v) {\n    _assertClass(v, ScriptPublicKey);\n    wasm.transactionoutput_set_scriptPublicKey(this.__wbg_ptr, v.__wbg_ptr);\n  }\n}\nvar TransactionRecordFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_transactionrecord_free(ptr >>> 0, 1));\n\nclass TransactionRecord {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(TransactionRecord.prototype);\n    obj.__wbg_ptr = ptr;\n    TransactionRecordFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  toJSON() {\n    return {\n      id: this.id,\n      unixtimeMsec: this.unixtimeMsec,\n      network: this.network,\n      note: this.note,\n      metadata: this.metadata,\n      value: this.value,\n      blockDaaScore: this.blockDaaScore,\n      binding: this.binding,\n      data: this.data,\n      type: this.type\n    };\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    TransactionRecordFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_transactionrecord_free(ptr, 0);\n  }\n  get id() {\n    const ret = wasm.__wbg_get_transactionrecord_id(this.__wbg_ptr);\n    return Hash.__wrap(ret);\n  }\n  set id(arg0) {\n    _assertClass(arg0, Hash);\n    var ptr0 = arg0.__destroy_into_raw();\n    wasm.__wbg_set_transactionrecord_id(this.__wbg_ptr, ptr0);\n  }\n  get unixtimeMsec() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.__wbg_get_transactionrecord_unixtimeMsec(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r2 = getDataViewMemory0().getBigInt64(retptr + 8 * 1, true);\n      return r0 === 0 ? undefined : BigInt.asUintN(64, r2);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  set unixtimeMsec(arg0) {\n    wasm.__wbg_set_transactionrecord_unixtimeMsec(this.__wbg_ptr, !isLikeNone(arg0), isLikeNone(arg0) ? BigInt(0) : arg0);\n  }\n  get network() {\n    const ret = wasm.__wbg_get_transactionrecord_network(this.__wbg_ptr);\n    return NetworkId.__wrap(ret);\n  }\n  set network(arg0) {\n    _assertClass(arg0, NetworkId);\n    var ptr0 = arg0.__destroy_into_raw();\n    wasm.__wbg_set_transactionrecord_network(this.__wbg_ptr, ptr0);\n  }\n  get note() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.__wbg_get_transactionrecord_note(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      let v1;\n      if (r0 !== 0) {\n        v1 = getStringFromWasm0(r0, r1).slice();\n        wasm.__wbindgen_export_3(r0, r1 * 1, 1);\n      }\n      return v1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  set note(arg0) {\n    var ptr0 = isLikeNone(arg0) ? 0 : passStringToWasm0(arg0, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n    var len0 = WASM_VECTOR_LEN;\n    wasm.__wbg_set_transactionrecord_note(this.__wbg_ptr, ptr0, len0);\n  }\n  get metadata() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.__wbg_get_transactionrecord_metadata(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      let v1;\n      if (r0 !== 0) {\n        v1 = getStringFromWasm0(r0, r1).slice();\n        wasm.__wbindgen_export_3(r0, r1 * 1, 1);\n      }\n      return v1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  set metadata(arg0) {\n    var ptr0 = isLikeNone(arg0) ? 0 : passStringToWasm0(arg0, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n    var len0 = WASM_VECTOR_LEN;\n    wasm.__wbg_set_transactionrecord_metadata(this.__wbg_ptr, ptr0, len0);\n  }\n  get value() {\n    const ret = wasm.transactionrecord_value(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  get blockDaaScore() {\n    const ret = wasm.transactionrecord_blockDaaScore(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  get binding() {\n    const ret = wasm.transactionrecord_binding(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  get data() {\n    const ret = wasm.transactionrecord_data(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  get type() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.transactionrecord_type(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  hasAddress(address) {\n    _assertClass(address, Address);\n    const ret = wasm.transactionrecord_hasAddress(this.__wbg_ptr, address.__wbg_ptr);\n    return ret !== 0;\n  }\n  serialize() {\n    const ret = wasm.transactionrecord_serialize(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n}\nvar TransactionRecordNotificationFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_transactionrecordnotification_free(ptr >>> 0, 1));\n\nclass TransactionRecordNotification {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(TransactionRecordNotification.prototype);\n    obj.__wbg_ptr = ptr;\n    TransactionRecordNotificationFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  toJSON() {\n    return {\n      type: this.type,\n      data: this.data\n    };\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    TransactionRecordNotificationFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_transactionrecordnotification_free(ptr, 0);\n  }\n  get type() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.__wbg_get_transactionrecordnotification_type(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  set type(arg0) {\n    const ptr0 = passStringToWasm0(arg0, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.__wbg_set_transactionrecordnotification_type(this.__wbg_ptr, ptr0, len0);\n  }\n  get data() {\n    const ret = wasm.__wbg_get_transactionrecordnotification_data(this.__wbg_ptr);\n    return TransactionRecord.__wrap(ret);\n  }\n  set data(arg0) {\n    _assertClass(arg0, TransactionRecord);\n    var ptr0 = arg0.__destroy_into_raw();\n    wasm.__wbg_set_transactionrecordnotification_data(this.__wbg_ptr, ptr0);\n  }\n}\nvar TransactionSigningHashFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_transactionsigninghash_free(ptr >>> 0, 1));\n\nclass TransactionSigningHash {\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    TransactionSigningHashFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_transactionsigninghash_free(ptr, 0);\n  }\n  constructor() {\n    const ret = wasm.transactionsigninghash_new();\n    this.__wbg_ptr = ret >>> 0;\n    TransactionSigningHashFinalization.register(this, this.__wbg_ptr, this);\n    return this;\n  }\n  update(data) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.transactionsigninghash_update(retptr, this.__wbg_ptr, addHeapObject(data));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      if (r1) {\n        throw takeObject(r0);\n      }\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  finalize() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.transactionsigninghash_finalize(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n}\nvar TransactionSigningHashECDSAFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_transactionsigninghashecdsa_free(ptr >>> 0, 1));\n\nclass TransactionSigningHashECDSA {\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    TransactionSigningHashECDSAFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_transactionsigninghashecdsa_free(ptr, 0);\n  }\n  constructor() {\n    const ret = wasm.transactionsigninghashecdsa_new();\n    this.__wbg_ptr = ret >>> 0;\n    TransactionSigningHashECDSAFinalization.register(this, this.__wbg_ptr, this);\n    return this;\n  }\n  update(data) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.transactionsigninghashecdsa_update(retptr, this.__wbg_ptr, addHeapObject(data));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      if (r1) {\n        throw takeObject(r0);\n      }\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  finalize() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.transactionsigninghashecdsa_finalize(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n}\nvar TransactionUtxoEntryFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_transactionutxoentry_free(ptr >>> 0, 1));\n\nclass TransactionUtxoEntry {\n  toJSON() {\n    return {\n      amount: this.amount,\n      scriptPublicKey: this.scriptPublicKey,\n      blockDaaScore: this.blockDaaScore,\n      isCoinbase: this.isCoinbase\n    };\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    TransactionUtxoEntryFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_transactionutxoentry_free(ptr, 0);\n  }\n  get amount() {\n    const ret = wasm.__wbg_get_transactionutxoentry_amount(this.__wbg_ptr);\n    return BigInt.asUintN(64, ret);\n  }\n  set amount(arg0) {\n    wasm.__wbg_set_transactionutxoentry_amount(this.__wbg_ptr, arg0);\n  }\n  get scriptPublicKey() {\n    const ret = wasm.__wbg_get_transactionutxoentry_scriptPublicKey(this.__wbg_ptr);\n    return ScriptPublicKey.__wrap(ret);\n  }\n  set scriptPublicKey(arg0) {\n    _assertClass(arg0, ScriptPublicKey);\n    var ptr0 = arg0.__destroy_into_raw();\n    wasm.__wbg_set_transactionutxoentry_scriptPublicKey(this.__wbg_ptr, ptr0);\n  }\n  get blockDaaScore() {\n    const ret = wasm.__wbg_get_transactionutxoentry_blockDaaScore(this.__wbg_ptr);\n    return BigInt.asUintN(64, ret);\n  }\n  set blockDaaScore(arg0) {\n    wasm.__wbg_set_transactionutxoentry_blockDaaScore(this.__wbg_ptr, arg0);\n  }\n  get isCoinbase() {\n    const ret = wasm.__wbg_get_transactionutxoentry_isCoinbase(this.__wbg_ptr);\n    return ret !== 0;\n  }\n  set isCoinbase(arg0) {\n    wasm.__wbg_set_transactionutxoentry_isCoinbase(this.__wbg_ptr, arg0);\n  }\n}\nvar UserInfoOptionsFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_userinfooptions_free(ptr >>> 0, 1));\n\nclass UserInfoOptions {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(UserInfoOptions.prototype);\n    obj.__wbg_ptr = ptr;\n    UserInfoOptionsFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    UserInfoOptionsFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_userinfooptions_free(ptr, 0);\n  }\n  constructor(encoding) {\n    const ret = wasm.userinfooptions_new_with_values(isLikeNone(encoding) ? 0 : addHeapObject(encoding));\n    this.__wbg_ptr = ret >>> 0;\n    UserInfoOptionsFinalization.register(this, this.__wbg_ptr, this);\n    return this;\n  }\n  static new() {\n    const ret = wasm.userinfooptions_new();\n    return UserInfoOptions.__wrap(ret);\n  }\n  get encoding() {\n    const ret = wasm.userinfooptions_encoding(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set encoding(value) {\n    wasm.userinfooptions_set_encoding(this.__wbg_ptr, isLikeNone(value) ? 0 : addHeapObject(value));\n  }\n}\nvar UtxoContextFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_utxocontext_free(ptr >>> 0, 1));\n\nclass UtxoContext {\n  toJSON() {\n    return {\n      isActive: this.isActive,\n      matureLength: this.matureLength,\n      balance: this.balance,\n      balanceStrings: this.balanceStrings\n    };\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    UtxoContextFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_utxocontext_free(ptr, 0);\n  }\n  constructor(js_value) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.utxocontext_ctor(retptr, addHeapObject(js_value));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      this.__wbg_ptr = r0 >>> 0;\n      UtxoContextFinalization.register(this, this.__wbg_ptr, this);\n      return this;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  trackAddresses(addresses, optional_current_daa_score) {\n    const ret = wasm.utxocontext_trackAddresses(this.__wbg_ptr, addHeapObject(addresses), isLikeNone(optional_current_daa_score) ? 0 : addHeapObject(optional_current_daa_score));\n    return takeObject(ret);\n  }\n  unregisterAddresses(addresses) {\n    const ret = wasm.utxocontext_unregisterAddresses(this.__wbg_ptr, addHeapObject(addresses));\n    return takeObject(ret);\n  }\n  clear() {\n    const ret = wasm.utxocontext_clear(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  get isActive() {\n    const ret = wasm.utxocontext_isActive(this.__wbg_ptr);\n    return ret !== 0;\n  }\n  getMatureRange(from2, to) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.utxocontext_getMatureRange(retptr, this.__wbg_ptr, from2, to);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  get matureLength() {\n    const ret = wasm.utxocontext_matureLength(this.__wbg_ptr);\n    return ret >>> 0;\n  }\n  getPending() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.utxocontext_getPending(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  get balance() {\n    const ret = wasm.utxocontext_balance(this.__wbg_ptr);\n    return ret === 0 ? undefined : Balance.__wrap(ret);\n  }\n  get balanceStrings() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.utxocontext_balanceStrings(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return r0 === 0 ? undefined : BalanceStrings.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n}\nvar UtxoEntriesFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_utxoentries_free(ptr >>> 0, 1));\n\nclass UtxoEntries {\n  toJSON() {\n    return {\n      items: this.items\n    };\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    UtxoEntriesFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_utxoentries_free(ptr, 0);\n  }\n  constructor(js_value) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.utxoentries_js_ctor(retptr, addHeapObject(js_value));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      this.__wbg_ptr = r0 >>> 0;\n      UtxoEntriesFinalization.register(this, this.__wbg_ptr, this);\n      return this;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  get items() {\n    const ret = wasm.utxoentries_get_items_as_js_array(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set items(js_value) {\n    try {\n      wasm.utxoentries_set_items_from_js_array(this.__wbg_ptr, addBorrowedObject(js_value));\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  sort() {\n    wasm.utxoentries_sort(this.__wbg_ptr);\n  }\n  amount() {\n    const ret = wasm.utxoentries_amount(this.__wbg_ptr);\n    return BigInt.asUintN(64, ret);\n  }\n}\nvar UtxoEntryFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_utxoentry_free(ptr >>> 0, 1));\n\nclass UtxoEntry {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(UtxoEntry.prototype);\n    obj.__wbg_ptr = ptr;\n    UtxoEntryFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  toJSON() {\n    return {\n      address: this.address,\n      outpoint: this.outpoint,\n      amount: this.amount,\n      scriptPublicKey: this.scriptPublicKey,\n      blockDaaScore: this.blockDaaScore,\n      isCoinbase: this.isCoinbase\n    };\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    UtxoEntryFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_utxoentry_free(ptr, 0);\n  }\n  get address() {\n    const ret = wasm.__wbg_get_utxoentry_address(this.__wbg_ptr);\n    return ret === 0 ? undefined : Address.__wrap(ret);\n  }\n  set address(arg0) {\n    let ptr0 = 0;\n    if (!isLikeNone(arg0)) {\n      _assertClass(arg0, Address);\n      ptr0 = arg0.__destroy_into_raw();\n    }\n    wasm.__wbg_set_utxoentry_address(this.__wbg_ptr, ptr0);\n  }\n  get outpoint() {\n    const ret = wasm.__wbg_get_utxoentry_outpoint(this.__wbg_ptr);\n    return TransactionOutpoint.__wrap(ret);\n  }\n  set outpoint(arg0) {\n    _assertClass(arg0, TransactionOutpoint);\n    var ptr0 = arg0.__destroy_into_raw();\n    wasm.__wbg_set_utxoentry_outpoint(this.__wbg_ptr, ptr0);\n  }\n  get amount() {\n    const ret = wasm.__wbg_get_utxoentry_amount(this.__wbg_ptr);\n    return BigInt.asUintN(64, ret);\n  }\n  set amount(arg0) {\n    wasm.__wbg_set_utxoentry_amount(this.__wbg_ptr, arg0);\n  }\n  get scriptPublicKey() {\n    const ret = wasm.__wbg_get_utxoentry_scriptPublicKey(this.__wbg_ptr);\n    return ScriptPublicKey.__wrap(ret);\n  }\n  set scriptPublicKey(arg0) {\n    _assertClass(arg0, ScriptPublicKey);\n    var ptr0 = arg0.__destroy_into_raw();\n    wasm.__wbg_set_utxoentry_scriptPublicKey(this.__wbg_ptr, ptr0);\n  }\n  get blockDaaScore() {\n    const ret = wasm.__wbg_get_utxoentry_blockDaaScore(this.__wbg_ptr);\n    return BigInt.asUintN(64, ret);\n  }\n  set blockDaaScore(arg0) {\n    wasm.__wbg_set_utxoentry_blockDaaScore(this.__wbg_ptr, arg0);\n  }\n  get isCoinbase() {\n    const ret = wasm.__wbg_get_utxoentry_isCoinbase(this.__wbg_ptr);\n    return ret !== 0;\n  }\n  set isCoinbase(arg0) {\n    wasm.__wbg_set_utxoentry_isCoinbase(this.__wbg_ptr, arg0);\n  }\n  toString() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.utxoentry_toString(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n}\nvar UtxoEntryReferenceFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_utxoentryreference_free(ptr >>> 0, 1));\n\nclass UtxoEntryReference {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(UtxoEntryReference.prototype);\n    obj.__wbg_ptr = ptr;\n    UtxoEntryReferenceFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  toJSON() {\n    return {\n      entry: this.entry,\n      outpoint: this.outpoint,\n      address: this.address,\n      amount: this.amount,\n      isCoinbase: this.isCoinbase,\n      blockDaaScore: this.blockDaaScore,\n      scriptPublicKey: this.scriptPublicKey\n    };\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    UtxoEntryReferenceFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_utxoentryreference_free(ptr, 0);\n  }\n  toString() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.utxoentryreference_toString(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  get entry() {\n    const ret = wasm.utxoentryreference_entry(this.__wbg_ptr);\n    return UtxoEntry.__wrap(ret);\n  }\n  get outpoint() {\n    const ret = wasm.utxoentryreference_outpoint(this.__wbg_ptr);\n    return TransactionOutpoint.__wrap(ret);\n  }\n  get address() {\n    const ret = wasm.utxoentryreference_address(this.__wbg_ptr);\n    return ret === 0 ? undefined : Address.__wrap(ret);\n  }\n  get amount() {\n    const ret = wasm.utxoentryreference_amount(this.__wbg_ptr);\n    return BigInt.asUintN(64, ret);\n  }\n  get isCoinbase() {\n    const ret = wasm.utxoentryreference_isCoinbase(this.__wbg_ptr);\n    return ret !== 0;\n  }\n  get blockDaaScore() {\n    const ret = wasm.utxoentryreference_blockDaaScore(this.__wbg_ptr);\n    return BigInt.asUintN(64, ret);\n  }\n  get scriptPublicKey() {\n    const ret = wasm.utxoentryreference_scriptPublicKey(this.__wbg_ptr);\n    return ScriptPublicKey.__wrap(ret);\n  }\n}\nvar UtxoProcessorFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_utxoprocessor_free(ptr >>> 0, 1));\n\nclass UtxoProcessor {\n  toJSON() {\n    return {\n      rpc: this.rpc,\n      networkId: this.networkId,\n      isActive: this.isActive\n    };\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    UtxoProcessorFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_utxoprocessor_free(ptr, 0);\n  }\n  addEventListener(event, callback) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.utxoprocessor_addEventListener(retptr, this.__wbg_ptr, addHeapObject(event), isLikeNone(callback) ? 0 : addHeapObject(callback));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      if (r1) {\n        throw takeObject(r0);\n      }\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  removeEventListener(event, callback) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.utxoprocessor_removeEventListener(retptr, this.__wbg_ptr, addHeapObject(event), isLikeNone(callback) ? 0 : addHeapObject(callback));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      if (r1) {\n        throw takeObject(r0);\n      }\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  constructor(js_value) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.utxoprocessor_ctor(retptr, addHeapObject(js_value));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      this.__wbg_ptr = r0 >>> 0;\n      UtxoProcessorFinalization.register(this, this.__wbg_ptr, this);\n      return this;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  start() {\n    const ret = wasm.utxoprocessor_start(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  stop() {\n    const ret = wasm.utxoprocessor_stop(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  get rpc() {\n    const ret = wasm.utxoprocessor_rpc(this.__wbg_ptr);\n    return RpcClient.__wrap(ret);\n  }\n  get networkId() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.utxoprocessor_networkId(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      let v1;\n      if (r0 !== 0) {\n        v1 = getStringFromWasm0(r0, r1).slice();\n        wasm.__wbindgen_export_3(r0, r1 * 1, 1);\n      }\n      return v1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  setNetworkId(network_id) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.utxoprocessor_setNetworkId(retptr, this.__wbg_ptr, addBorrowedObject(network_id));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      if (r1) {\n        throw takeObject(r0);\n      }\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  get isActive() {\n    const ret = wasm.utxoprocessor_isActive(this.__wbg_ptr);\n    return ret !== 0;\n  }\n  static setCoinbaseTransactionMaturityDAA(network_id, value) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.utxoprocessor_setCoinbaseTransactionMaturityDAA(retptr, addBorrowedObject(network_id), value);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      if (r1) {\n        throw takeObject(r0);\n      }\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  static setUserTransactionMaturityDAA(network_id, value) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.utxoprocessor_setUserTransactionMaturityDAA(retptr, addBorrowedObject(network_id), value);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      if (r1) {\n        throw takeObject(r0);\n      }\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n    }\n  }\n}\nvar WalletFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_wallet_free(ptr >>> 0, 1));\n\nclass Wallet {\n  toJSON() {\n    return {\n      rpc: this.rpc,\n      isOpen: this.isOpen,\n      isSynced: this.isSynced,\n      descriptor: this.descriptor\n    };\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    WalletFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_wallet_free(ptr, 0);\n  }\n  constructor(config) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.wallet_constructor(retptr, addHeapObject(config));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      this.__wbg_ptr = r0 >>> 0;\n      WalletFinalization.register(this, this.__wbg_ptr, this);\n      return this;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  get rpc() {\n    const ret = wasm.wallet_rpc(this.__wbg_ptr);\n    return RpcClient.__wrap(ret);\n  }\n  get isOpen() {\n    const ret = wasm.wallet_isOpen(this.__wbg_ptr);\n    return ret !== 0;\n  }\n  get isSynced() {\n    const ret = wasm.wallet_isSynced(this.__wbg_ptr);\n    return ret !== 0;\n  }\n  get descriptor() {\n    const ret = wasm.wallet_descriptor(this.__wbg_ptr);\n    return ret === 0 ? undefined : WalletDescriptor.__wrap(ret);\n  }\n  exists(name) {\n    var ptr0 = isLikeNone(name) ? 0 : passStringToWasm0(name, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n    var len0 = WASM_VECTOR_LEN;\n    const ret = wasm.wallet_exists(this.__wbg_ptr, ptr0, len0);\n    return takeObject(ret);\n  }\n  start() {\n    const ret = wasm.wallet_start(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  stop() {\n    const ret = wasm.wallet_stop(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  connect(args) {\n    const ret = wasm.wallet_connect(this.__wbg_ptr, isLikeNone(args) ? 0 : addHeapObject(args));\n    return takeObject(ret);\n  }\n  disconnect() {\n    const ret = wasm.wallet_disconnect(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  addEventListener(event, callback) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.wallet_addEventListener(retptr, this.__wbg_ptr, addHeapObject(event), isLikeNone(callback) ? 0 : addHeapObject(callback));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      if (r1) {\n        throw takeObject(r0);\n      }\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  removeEventListener(event, callback) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.wallet_removeEventListener(retptr, this.__wbg_ptr, addHeapObject(event), isLikeNone(callback) ? 0 : addHeapObject(callback));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      if (r1) {\n        throw takeObject(r0);\n      }\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  batch(request) {\n    const ret = wasm.wallet_batch(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  flush(request) {\n    const ret = wasm.wallet_flush(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  retainContext(request) {\n    const ret = wasm.wallet_retainContext(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  getStatus(request) {\n    const ret = wasm.wallet_getStatus(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  walletEnumerate(request) {\n    const ret = wasm.wallet_walletEnumerate(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  walletCreate(request) {\n    const ret = wasm.wallet_walletCreate(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  walletOpen(request) {\n    const ret = wasm.wallet_walletOpen(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  walletReload(request) {\n    const ret = wasm.wallet_walletReload(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  walletClose(request) {\n    const ret = wasm.wallet_walletClose(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  walletChangeSecret(request) {\n    const ret = wasm.wallet_walletChangeSecret(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  walletExport(request) {\n    const ret = wasm.wallet_walletExport(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  walletImport(request) {\n    const ret = wasm.wallet_walletImport(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  prvKeyDataEnumerate(request) {\n    const ret = wasm.wallet_prvKeyDataEnumerate(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  prvKeyDataCreate(request) {\n    const ret = wasm.wallet_prvKeyDataCreate(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  prvKeyDataRemove(request) {\n    const ret = wasm.wallet_prvKeyDataRemove(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  prvKeyDataGet(request) {\n    const ret = wasm.wallet_prvKeyDataGet(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  accountsEnumerate(request) {\n    const ret = wasm.wallet_accountsEnumerate(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  accountsRename(request) {\n    const ret = wasm.wallet_accountsRename(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  accountsDiscovery(request) {\n    const ret = wasm.wallet_accountsDiscovery(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  accountsCreate(request) {\n    const ret = wasm.wallet_accountsCreate(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  accountsEnsureDefault(request) {\n    const ret = wasm.wallet_accountsEnsureDefault(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  accountsImport(request) {\n    const ret = wasm.wallet_accountsImport(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  accountsActivate(request) {\n    const ret = wasm.wallet_accountsActivate(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  accountsDeactivate(request) {\n    const ret = wasm.wallet_accountsDeactivate(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  accountsGet(request) {\n    const ret = wasm.wallet_accountsGet(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  accountsCreateNewAddress(request) {\n    const ret = wasm.wallet_accountsCreateNewAddress(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  accountsSend(request) {\n    const ret = wasm.wallet_accountsSend(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  accountsTransfer(request) {\n    const ret = wasm.wallet_accountsTransfer(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  accountsEstimate(request) {\n    const ret = wasm.wallet_accountsEstimate(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  transactionsDataGet(request) {\n    const ret = wasm.wallet_transactionsDataGet(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  transactionsReplaceNote(request) {\n    const ret = wasm.wallet_transactionsReplaceNote(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  transactionsReplaceMetadata(request) {\n    const ret = wasm.wallet_transactionsReplaceMetadata(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n  addressBookEnumerate(request) {\n    const ret = wasm.wallet_addressBookEnumerate(this.__wbg_ptr, addHeapObject(request));\n    return takeObject(ret);\n  }\n}\nvar WalletDescriptorFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_walletdescriptor_free(ptr >>> 0, 1));\n\nclass WalletDescriptor {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(WalletDescriptor.prototype);\n    obj.__wbg_ptr = ptr;\n    WalletDescriptorFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  toJSON() {\n    return {\n      title: this.title,\n      filename: this.filename\n    };\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    WalletDescriptorFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_walletdescriptor_free(ptr, 0);\n  }\n  get title() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.__wbg_get_walletdescriptor_title(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      let v1;\n      if (r0 !== 0) {\n        v1 = getStringFromWasm0(r0, r1).slice();\n        wasm.__wbindgen_export_3(r0, r1 * 1, 1);\n      }\n      return v1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  set title(arg0) {\n    var ptr0 = isLikeNone(arg0) ? 0 : passStringToWasm0(arg0, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n    var len0 = WASM_VECTOR_LEN;\n    wasm.__wbg_set_walletdescriptor_title(this.__wbg_ptr, ptr0, len0);\n  }\n  get filename() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.__wbg_get_walletdescriptor_filename(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  set filename(arg0) {\n    const ptr0 = passStringToWasm0(arg0, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.__wbg_set_walletdescriptor_filename(this.__wbg_ptr, ptr0, len0);\n  }\n}\nvar WasiOptionsFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_wasioptions_free(ptr >>> 0, 1));\n\nclass WasiOptions {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(WasiOptions.prototype);\n    obj.__wbg_ptr = ptr;\n    WasiOptionsFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    WasiOptionsFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_wasioptions_free(ptr, 0);\n  }\n  constructor(args, env, preopens) {\n    var ptr0 = isLikeNone(args) ? 0 : passArrayJsValueToWasm0(args, wasm.__wbindgen_export_1);\n    var len0 = WASM_VECTOR_LEN;\n    const ret = wasm.wasioptions_new_with_values(ptr0, len0, isLikeNone(env) ? 0 : addHeapObject(env), addHeapObject(preopens));\n    this.__wbg_ptr = ret >>> 0;\n    WasiOptionsFinalization.register(this, this.__wbg_ptr, this);\n    return this;\n  }\n  static new(preopens) {\n    const ret = wasm.wasioptions_new(addHeapObject(preopens));\n    return WasiOptions.__wrap(ret);\n  }\n  get args() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.wasioptions_args(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      let v1;\n      if (r0 !== 0) {\n        v1 = getArrayJsValueFromWasm0(r0, r1).slice();\n        wasm.__wbindgen_export_3(r0, r1 * 4, 4);\n      }\n      return v1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  set args(value) {\n    var ptr0 = isLikeNone(value) ? 0 : passArrayJsValueToWasm0(value, wasm.__wbindgen_export_1);\n    var len0 = WASM_VECTOR_LEN;\n    wasm.wasioptions_set_args(this.__wbg_ptr, ptr0, len0);\n  }\n  get env() {\n    const ret = wasm.wasioptions_env(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set env(value) {\n    wasm.wasioptions_set_env(this.__wbg_ptr, isLikeNone(value) ? 0 : addHeapObject(value));\n  }\n  get preopens() {\n    const ret = wasm.wasioptions_preopens(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set preopens(value) {\n    wasm.wasioptions_set_preopens(this.__wbg_ptr, addHeapObject(value));\n  }\n}\nvar WriteFileSyncOptionsFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_writefilesyncoptions_free(ptr >>> 0, 1));\n\nclass WriteFileSyncOptions {\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    WriteFileSyncOptionsFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_writefilesyncoptions_free(ptr, 0);\n  }\n  constructor(encoding, flag, mode) {\n    const ret = wasm.writefilesyncoptions_new(isLikeNone(encoding) ? 0 : addHeapObject(encoding), isLikeNone(flag) ? 0 : addHeapObject(flag), isLikeNone(mode) ? 4294967297 : mode >>> 0);\n    this.__wbg_ptr = ret >>> 0;\n    WriteFileSyncOptionsFinalization.register(this, this.__wbg_ptr, this);\n    return this;\n  }\n  get encoding() {\n    const ret = wasm.writefilesyncoptions_encoding(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set encoding(value) {\n    wasm.writefilesyncoptions_set_encoding(this.__wbg_ptr, isLikeNone(value) ? 0 : addHeapObject(value));\n  }\n  get flag() {\n    const ret = wasm.writefilesyncoptions_flag(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  set flag(value) {\n    wasm.writefilesyncoptions_set_flag(this.__wbg_ptr, isLikeNone(value) ? 0 : addHeapObject(value));\n  }\n  get mode() {\n    const ret = wasm.writefilesyncoptions_mode(this.__wbg_ptr);\n    return ret === 4294967297 ? undefined : ret;\n  }\n  set mode(value) {\n    wasm.writefilesyncoptions_set_mode(this.__wbg_ptr, isLikeNone(value) ? 4294967297 : value >>> 0);\n  }\n}\nvar WriteStreamFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_writestream_free(ptr >>> 0, 1));\n\nclass WriteStream {\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    WriteStreamFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_writestream_free(ptr, 0);\n  }\n  add_listener_with_open(listener) {\n    try {\n      const ret = wasm.writestream_add_listener_with_open(this.__wbg_ptr, addBorrowedObject(listener));\n      return takeObject(ret);\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  add_listener_with_close(listener) {\n    try {\n      const ret = wasm.writestream_add_listener_with_close(this.__wbg_ptr, addBorrowedObject(listener));\n      return takeObject(ret);\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  on_with_open(listener) {\n    try {\n      const ret = wasm.writestream_on_with_open(this.__wbg_ptr, addBorrowedObject(listener));\n      return takeObject(ret);\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  on_with_close(listener) {\n    try {\n      const ret = wasm.writestream_on_with_close(this.__wbg_ptr, addBorrowedObject(listener));\n      return takeObject(ret);\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  once_with_open(listener) {\n    try {\n      const ret = wasm.writestream_once_with_open(this.__wbg_ptr, addBorrowedObject(listener));\n      return takeObject(ret);\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  once_with_close(listener) {\n    try {\n      const ret = wasm.writestream_once_with_close(this.__wbg_ptr, addBorrowedObject(listener));\n      return takeObject(ret);\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  prepend_listener_with_open(listener) {\n    try {\n      const ret = wasm.writestream_prepend_listener_with_open(this.__wbg_ptr, addBorrowedObject(listener));\n      return takeObject(ret);\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  prepend_listener_with_close(listener) {\n    try {\n      const ret = wasm.writestream_prepend_listener_with_close(this.__wbg_ptr, addBorrowedObject(listener));\n      return takeObject(ret);\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  prepend_once_listener_with_open(listener) {\n    try {\n      const ret = wasm.writestream_prepend_once_listener_with_open(this.__wbg_ptr, addBorrowedObject(listener));\n      return takeObject(ret);\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  prepend_once_listener_with_close(listener) {\n    try {\n      const ret = wasm.writestream_prepend_once_listener_with_close(this.__wbg_ptr, addBorrowedObject(listener));\n      return takeObject(ret);\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n}\nvar XOnlyPublicKeyFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_xonlypublickey_free(ptr >>> 0, 1));\n\nclass XOnlyPublicKey {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(XOnlyPublicKey.prototype);\n    obj.__wbg_ptr = ptr;\n    XOnlyPublicKeyFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    XOnlyPublicKeyFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_xonlypublickey_free(ptr, 0);\n  }\n  constructor(key) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      const ptr0 = passStringToWasm0(key, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n      const len0 = WASM_VECTOR_LEN;\n      wasm.xonlypublickey_try_new(retptr, ptr0, len0);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      this.__wbg_ptr = r0 >>> 0;\n      XOnlyPublicKeyFinalization.register(this, this.__wbg_ptr, this);\n      return this;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  toString() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.xonlypublickey_toString(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  toAddress(network) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.xonlypublickey_toAddress(retptr, this.__wbg_ptr, addBorrowedObject(network));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return Address.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  toAddressECDSA(network) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.xonlypublickey_toAddressECDSA(retptr, this.__wbg_ptr, addBorrowedObject(network));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return Address.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  static fromAddress(address) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      _assertClass(address, Address);\n      wasm.xonlypublickey_fromAddress(retptr, address.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return XOnlyPublicKey.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n}\nvar XPrvFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_xprv_free(ptr >>> 0, 1));\n\nclass XPrv {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(XPrv.prototype);\n    obj.__wbg_ptr = ptr;\n    XPrvFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  toJSON() {\n    return {\n      xprv: this.xprv,\n      privateKey: this.privateKey,\n      depth: this.depth,\n      parentFingerprint: this.parentFingerprint,\n      childNumber: this.childNumber,\n      chainCode: this.chainCode\n    };\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    XPrvFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_xprv_free(ptr, 0);\n  }\n  constructor(seed) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.xprv_try_new(retptr, addHeapObject(seed));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      this.__wbg_ptr = r0 >>> 0;\n      XPrvFinalization.register(this, this.__wbg_ptr, this);\n      return this;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  static fromXPrv(xprv) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      const ptr0 = passStringToWasm0(xprv, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n      const len0 = WASM_VECTOR_LEN;\n      wasm.xprv_fromXPrv(retptr, ptr0, len0);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return XPrv.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  deriveChild(child_number, hardened) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.xprv_deriveChild(retptr, this.__wbg_ptr, child_number, isLikeNone(hardened) ? 16777215 : hardened ? 1 : 0);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return XPrv.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  derivePath(path) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.xprv_derivePath(retptr, this.__wbg_ptr, addBorrowedObject(path));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return XPrv.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  intoString(prefix) {\n    let deferred3_0;\n    let deferred3_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      const ptr0 = passStringToWasm0(prefix, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n      const len0 = WASM_VECTOR_LEN;\n      wasm.xprv_intoString(retptr, this.__wbg_ptr, ptr0, len0);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n      var ptr2 = r0;\n      var len2 = r1;\n      if (r3) {\n        ptr2 = 0;\n        len2 = 0;\n        throw takeObject(r2);\n      }\n      deferred3_0 = ptr2;\n      deferred3_1 = len2;\n      return getStringFromWasm0(ptr2, len2);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred3_0, deferred3_1, 1);\n    }\n  }\n  toString() {\n    let deferred2_0;\n    let deferred2_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.xprv_toString(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n      var ptr1 = r0;\n      var len1 = r1;\n      if (r3) {\n        ptr1 = 0;\n        len1 = 0;\n        throw takeObject(r2);\n      }\n      deferred2_0 = ptr1;\n      deferred2_1 = len1;\n      return getStringFromWasm0(ptr1, len1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred2_0, deferred2_1, 1);\n    }\n  }\n  toXPub() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.xprv_toXPub(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return XPub.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  toPrivateKey() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.xprv_toPrivateKey(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return PrivateKey.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  get xprv() {\n    let deferred2_0;\n    let deferred2_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.xprv_toString(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n      var ptr1 = r0;\n      var len1 = r1;\n      if (r3) {\n        ptr1 = 0;\n        len1 = 0;\n        throw takeObject(r2);\n      }\n      deferred2_0 = ptr1;\n      deferred2_1 = len1;\n      return getStringFromWasm0(ptr1, len1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred2_0, deferred2_1, 1);\n    }\n  }\n  get privateKey() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.xprv_privateKey(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  get depth() {\n    const ret = wasm.xprv_depth(this.__wbg_ptr);\n    return ret;\n  }\n  get parentFingerprint() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.xprv_parentFingerprint(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  get childNumber() {\n    const ret = wasm.xprv_childNumber(this.__wbg_ptr);\n    return ret >>> 0;\n  }\n  get chainCode() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.xprv_chainCode(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n}\nvar XPubFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {}, unregister: () => {} } : new FinalizationRegistry((ptr) => wasm.__wbg_xpub_free(ptr >>> 0, 1));\n\nclass XPub {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(XPub.prototype);\n    obj.__wbg_ptr = ptr;\n    XPubFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  toJSON() {\n    return {\n      xpub: this.xpub,\n      depth: this.depth,\n      parentFingerprint: this.parentFingerprint,\n      childNumber: this.childNumber,\n      chainCode: this.chainCode\n    };\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    XPubFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_xpub_free(ptr, 0);\n  }\n  constructor(xpub) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      const ptr0 = passStringToWasm0(xpub, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n      const len0 = WASM_VECTOR_LEN;\n      wasm.xpub_try_new(retptr, ptr0, len0);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      this.__wbg_ptr = r0 >>> 0;\n      XPubFinalization.register(this, this.__wbg_ptr, this);\n      return this;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  deriveChild(child_number, hardened) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.xpub_deriveChild(retptr, this.__wbg_ptr, child_number, isLikeNone(hardened) ? 16777215 : hardened ? 1 : 0);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return XPub.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  derivePath(path) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.xpub_derivePath(retptr, this.__wbg_ptr, addBorrowedObject(path));\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return XPub.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  intoString(prefix) {\n    let deferred3_0;\n    let deferred3_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      const ptr0 = passStringToWasm0(prefix, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n      const len0 = WASM_VECTOR_LEN;\n      wasm.xpub_intoString(retptr, this.__wbg_ptr, ptr0, len0);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n      var ptr2 = r0;\n      var len2 = r1;\n      if (r3) {\n        ptr2 = 0;\n        len2 = 0;\n        throw takeObject(r2);\n      }\n      deferred3_0 = ptr2;\n      deferred3_1 = len2;\n      return getStringFromWasm0(ptr2, len2);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred3_0, deferred3_1, 1);\n    }\n  }\n  toPublicKey() {\n    const ret = wasm.xpub_toPublicKey(this.__wbg_ptr);\n    return PublicKey.__wrap(ret);\n  }\n  get xpub() {\n    let deferred2_0;\n    let deferred2_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.xpub_xpub(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n      var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n      var ptr1 = r0;\n      var len1 = r1;\n      if (r3) {\n        ptr1 = 0;\n        len1 = 0;\n        throw takeObject(r2);\n      }\n      deferred2_0 = ptr1;\n      deferred2_1 = len1;\n      return getStringFromWasm0(ptr1, len1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred2_0, deferred2_1, 1);\n    }\n  }\n  get depth() {\n    const ret = wasm.xpub_depth(this.__wbg_ptr);\n    return ret;\n  }\n  get parentFingerprint() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.xpub_parentFingerprint(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n  get childNumber() {\n    const ret = wasm.xpub_childNumber(this.__wbg_ptr);\n    return ret >>> 0;\n  }\n  get chainCode() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.xpub_chainCode(retptr, this.__wbg_ptr);\n      var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n      var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n    }\n  }\n}\nasync function __wbg_load(module, imports) {\n  if (typeof Response === \"function\" && module instanceof Response) {\n    if (typeof WebAssembly.instantiateStreaming === \"function\") {\n      try {\n        return await WebAssembly.instantiateStreaming(module, imports);\n      } catch (e) {\n        if (module.headers.get(\"Content-Type\") != \"application/wasm\") {\n          console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n        } else {\n          throw e;\n        }\n      }\n    }\n    const bytes = await module.arrayBuffer();\n    return await WebAssembly.instantiate(bytes, imports);\n  } else {\n    const instance = await WebAssembly.instantiate(module, imports);\n    if (instance instanceof WebAssembly.Instance) {\n      return { instance, module };\n    } else {\n      return instance;\n    }\n  }\n}\nfunction __wbg_get_imports() {\n  const imports = {};\n  imports.wbg = {};\n  imports.wbg.__wbg_BigInt_470dd987b8190f8e = function(arg0) {\n    const ret = BigInt(getObject(arg0));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_BigInt_ddea6d2f55558acb = function() {\n    return handleError(function(arg0) {\n      const ret = BigInt(getObject(arg0));\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_String_8f0eb39a4a4c2f66 = function(arg0, arg1) {\n    const ret = String(getObject(arg1));\n    const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n    const len1 = WASM_VECTOR_LEN;\n    getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n    getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n  };\n  imports.wbg.__wbg_Window_b0044ac7db258535 = function(arg0) {\n    const ret = getObject(arg0).Window;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_WorkerGlobalScope_b74cefefc62a37da = function(arg0) {\n    const ret = getObject(arg0).WorkerGlobalScope;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_abort_775ef1d17fc65868 = function(arg0) {\n    getObject(arg0).abort();\n  };\n  imports.wbg.__wbg_aborted_new = function(arg0) {\n    const ret = Aborted.__wrap(arg0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_accountkind_new = function(arg0) {\n    const ret = AccountKind.__wrap(arg0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_addListener_d78339dd4535b756 = function(arg0, arg1, arg2, arg3) {\n    const ret = getObject(arg0).addListener(getStringFromWasm0(arg1, arg2), getObject(arg3));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_address_new = function(arg0) {\n    const ret = Address.__wrap(arg0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_advance_b3ccc91b80962d79 = function() {\n    return handleError(function(arg0, arg1) {\n      getObject(arg0).advance(arg1 >>> 0);\n    }, arguments);\n  };\n  imports.wbg.__wbg_appendChild_8204974b7328bf98 = function() {\n    return handleError(function(arg0, arg1) {\n      const ret = getObject(arg0).appendChild(getObject(arg1));\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_append_8c7dd8d641a5f01b = function() {\n    return handleError(function(arg0, arg1, arg2, arg3, arg4) {\n      getObject(arg0).append(getStringFromWasm0(arg1, arg2), getStringFromWasm0(arg3, arg4));\n    }, arguments);\n  };\n  imports.wbg.__wbg_body_942ea927546a04ba = function(arg0) {\n    const ret = getObject(arg0).body;\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n  };\n  imports.wbg.__wbg_buffer_609cc3eee51ed158 = function(arg0) {\n    const ret = getObject(arg0).buffer;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_call_672a4d21634d4a24 = function() {\n    return handleError(function(arg0, arg1) {\n      const ret = getObject(arg0).call(getObject(arg1));\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_call_7cccdd69e0791ae2 = function() {\n    return handleError(function(arg0, arg1, arg2) {\n      const ret = getObject(arg0).call(getObject(arg1), getObject(arg2));\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_cancelAnimationFrame_032049cb190240a7 = function(arg0) {\n    cancelAnimationFrame(takeObject(arg0));\n  };\n  imports.wbg.__wbg_clearInterval_d472232e2fb5e5e4 = function() {\n    return handleError(function(arg0) {\n      clearInterval(getObject(arg0));\n    }, arguments);\n  };\n  imports.wbg.__wbg_clearTimeout_c5ac0f4b6a07b59e = function() {\n    return handleError(function(arg0) {\n      clearTimeout(getObject(arg0));\n    }, arguments);\n  };\n  imports.wbg.__wbg_close_0880036443561527 = function() {\n    return handleError(function(arg0) {\n      getObject(arg0).close();\n    }, arguments);\n  };\n  imports.wbg.__wbg_continue_c46c11d3dbe1b030 = function() {\n    return handleError(function(arg0) {\n      getObject(arg0).continue();\n    }, arguments);\n  };\n  imports.wbg.__wbg_count_613cb921d67a4f26 = function() {\n    return handleError(function(arg0) {\n      const ret = getObject(arg0).count();\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_createElement_8c9931a732ee2fea = function() {\n    return handleError(function(arg0, arg1, arg2) {\n      const ret = getObject(arg0).createElement(getStringFromWasm0(arg1, arg2));\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_createIndex_873ac48adc772309 = function() {\n    return handleError(function(arg0, arg1, arg2, arg3, arg4) {\n      const ret = getObject(arg0).createIndex(getStringFromWasm0(arg1, arg2), getObject(arg3), getObject(arg4));\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_createObjectStore_e566459f7161f82f = function() {\n    return handleError(function(arg0, arg1, arg2) {\n      const ret = getObject(arg0).createObjectStore(getStringFromWasm0(arg1, arg2));\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_createObjectURL_6e98d2f9c7bd9764 = function() {\n    return handleError(function(arg0, arg1) {\n      const ret = URL.createObjectURL(getObject(arg1));\n      const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n      const len1 = WASM_VECTOR_LEN;\n      getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n      getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    }, arguments);\n  };\n  imports.wbg.__wbg_crypto_ed58b8e10a292839 = function(arg0) {\n    const ret = getObject(arg0).crypto;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_data_432d9c3df2630942 = function(arg0) {\n    const ret = getObject(arg0).data;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_delete_200677093b4cf756 = function() {\n    return handleError(function(arg0, arg1) {\n      const ret = getObject(arg0).delete(getObject(arg1));\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_delete_36c8630e530a2a1a = function(arg0, arg1) {\n    const ret = getObject(arg0).delete(getObject(arg1));\n    return ret;\n  };\n  imports.wbg.__wbg_document_d249400bd7bd996d = function(arg0) {\n    const ret = getObject(arg0).document;\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n  };\n  imports.wbg.__wbg_done_769e5ede4b31c67b = function(arg0) {\n    const ret = getObject(arg0).done;\n    return ret;\n  };\n  imports.wbg.__wbg_entries_3265d4158b33e5dc = function(arg0) {\n    const ret = Object.entries(getObject(arg0));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_entries_c8a90a7ed73e84ce = function(arg0) {\n    const ret = getObject(arg0).entries();\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_error_5edc95999c70d386 = function(arg0, arg1) {\n    let deferred0_0;\n    let deferred0_1;\n    try {\n      deferred0_0 = arg0;\n      deferred0_1 = arg1;\n      console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n      wasm.__wbindgen_export_3(deferred0_0, deferred0_1, 1);\n    }\n  };\n  imports.wbg.__wbg_error_b5d62a6100a65a3b = function(arg0, arg1) {\n    console.error(getStringFromWasm0(arg0, arg1));\n  };\n  imports.wbg.__wbg_error_ff4ddaabdfc5dbb3 = function() {\n    return handleError(function(arg0) {\n      const ret = getObject(arg0).error;\n      return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_existsSync_6b2031627aea3e5a = function() {\n    return handleError(function(arg0, arg1, arg2) {\n      const ret = getObject(arg0).existsSync(getStringFromWasm0(arg1, arg2));\n      return ret;\n    }, arguments);\n  };\n  imports.wbg.__wbg_fetch_509096533071c657 = function(arg0, arg1) {\n    const ret = getObject(arg0).fetch(getObject(arg1));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_fetch_7bb58c5ed3c31810 = function(arg0) {\n    const ret = fetch(getObject(arg0));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_fromCodePoint_f37c25c172f2e8b5 = function() {\n    return handleError(function(arg0) {\n      const ret = String.fromCodePoint(arg0 >>> 0);\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_from_2a5d3e218e67aa85 = function(arg0) {\n    const ret = Array.from(getObject(arg0));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_from_d608a04300bfd9ac = function(arg0) {\n    const ret = Buffer.from(getObject(arg0));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_generatorsummary_new = function(arg0) {\n    const ret = GeneratorSummary.__wrap(arg0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_getItem_17f98dee3b43fa7e = function() {\n    return handleError(function(arg0, arg1, arg2, arg3) {\n      const ret = getObject(arg1).getItem(getStringFromWasm0(arg2, arg3));\n      var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n      var len1 = WASM_VECTOR_LEN;\n      getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n      getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    }, arguments);\n  };\n  imports.wbg.__wbg_getRandomValues_bcb4912f16000dc4 = function() {\n    return handleError(function(arg0, arg1) {\n      getObject(arg0).getRandomValues(getObject(arg1));\n    }, arguments);\n  };\n  imports.wbg.__wbg_get_13495dac72693ecc = function(arg0, arg1) {\n    const ret = getObject(arg0).get(getObject(arg1));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_get_67b2ba62fc30de12 = function() {\n    return handleError(function(arg0, arg1) {\n      const ret = Reflect.get(getObject(arg0), getObject(arg1));\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_get_8da03f81f6a1111e = function() {\n    return handleError(function(arg0, arg1) {\n      const ret = getObject(arg0).get(getObject(arg1));\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_get_a8e28596722a45ff = function() {\n    return handleError(function(arg0, arg1) {\n      let deferred0_0;\n      let deferred0_1;\n      try {\n        deferred0_0 = arg0;\n        deferred0_1 = arg1;\n        const ret = chrome.storage.local.get(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n      } finally {\n        wasm.__wbindgen_export_3(deferred0_0, deferred0_1, 1);\n      }\n    }, arguments);\n  };\n  imports.wbg.__wbg_get_b9b93047fe3cf45b = function(arg0, arg1) {\n    const ret = getObject(arg0)[arg1 >>> 0];\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_get_f1f75752f252b231 = function() {\n    return handleError(function() {\n      const ret = chrome.storage.local.get();\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_getwithrefkey_1dc361bd10053bfe = function(arg0, arg1) {\n    const ret = getObject(arg0)[getObject(arg1)];\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_global_b6f5c73312f62313 = function(arg0) {\n    const ret = getObject(arg0).global;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_has_a5ea9117f258a0ec = function() {\n    return handleError(function(arg0, arg1) {\n      const ret = Reflect.has(getObject(arg0), getObject(arg1));\n      return ret;\n    }, arguments);\n  };\n  imports.wbg.__wbg_hash_new = function(arg0) {\n    const ret = Hash.__wrap(arg0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_headers_9cb51cfd2ac780a4 = function(arg0) {\n    const ret = getObject(arg0).headers;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_index_e00ca5fff206ee3e = function() {\n    return handleError(function(arg0, arg1, arg2) {\n      const ret = getObject(arg0).index(getStringFromWasm0(arg1, arg2));\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_indexedDB_601ec26c63e333de = function() {\n    return handleError(function(arg0) {\n      const ret = getObject(arg0).indexedDB;\n      return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_indexedDB_b1f49280282046f8 = function() {\n    return handleError(function(arg0) {\n      const ret = getObject(arg0).indexedDB;\n      return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_indexedDB_f6b47b0dc333fd2f = function() {\n    return handleError(function(arg0) {\n      const ret = getObject(arg0).indexedDB;\n      return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_innerHTML_e1553352fe93921a = function(arg0, arg1) {\n    const ret = getObject(arg1).innerHTML;\n    const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n    const len1 = WASM_VECTOR_LEN;\n    getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n    getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n  };\n  imports.wbg.__wbg_instanceof_ArrayBuffer_e14585432e3737fc = function(arg0) {\n    let result;\n    try {\n      result = getObject(arg0) instanceof ArrayBuffer;\n    } catch (_) {\n      result = false;\n    }\n    const ret = result;\n    return ret;\n  };\n  imports.wbg.__wbg_instanceof_Map_f3469ce2244d2430 = function(arg0) {\n    let result;\n    try {\n      result = getObject(arg0) instanceof Map;\n    } catch (_) {\n      result = false;\n    }\n    const ret = result;\n    return ret;\n  };\n  imports.wbg.__wbg_instanceof_Object_7f2dcef8f78644a4 = function(arg0) {\n    let result;\n    try {\n      result = getObject(arg0) instanceof Object;\n    } catch (_) {\n      result = false;\n    }\n    const ret = result;\n    return ret;\n  };\n  imports.wbg.__wbg_instanceof_Response_f2cc20d9f7dfd644 = function(arg0) {\n    let result;\n    try {\n      result = getObject(arg0) instanceof Response;\n    } catch (_) {\n      result = false;\n    }\n    const ret = result;\n    return ret;\n  };\n  imports.wbg.__wbg_instanceof_Uint8Array_17156bcf118086a9 = function(arg0) {\n    let result;\n    try {\n      result = getObject(arg0) instanceof Uint8Array;\n    } catch (_) {\n      result = false;\n    }\n    const ret = result;\n    return ret;\n  };\n  imports.wbg.__wbg_instanceof_Window_def73ea0955fc569 = function(arg0) {\n    let result;\n    try {\n      result = getObject(arg0) instanceof Window;\n    } catch (_) {\n      result = false;\n    }\n    const ret = result;\n    return ret;\n  };\n  imports.wbg.__wbg_isArray_a1eab7e0d067391b = function(arg0) {\n    const ret = Array.isArray(getObject(arg0));\n    return ret;\n  };\n  imports.wbg.__wbg_isSafeInteger_343e2beeeece1bb0 = function(arg0) {\n    const ret = Number.isSafeInteger(getObject(arg0));\n    return ret;\n  };\n  imports.wbg.__wbg_is_c7481c65e7e5df9e = function(arg0, arg1) {\n    const ret = Object.is(getObject(arg0), getObject(arg1));\n    return ret;\n  };\n  imports.wbg.__wbg_iterator_9a24c88df860dc65 = function() {\n    const ret = Symbol.iterator;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_key_c5e0a01cf450dca2 = function() {\n    return handleError(function(arg0, arg1, arg2) {\n      const ret = getObject(arg1).key(arg2 >>> 0);\n      var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n      var len1 = WASM_VECTOR_LEN;\n      getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n      getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    }, arguments);\n  };\n  imports.wbg.__wbg_keys_5c77a08ddc2fb8a6 = function(arg0) {\n    const ret = Object.keys(getObject(arg0));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_length_a446193dc22c12f8 = function(arg0) {\n    const ret = getObject(arg0).length;\n    return ret;\n  };\n  imports.wbg.__wbg_length_e2d2a49132c1b256 = function(arg0) {\n    const ret = getObject(arg0).length;\n    return ret;\n  };\n  imports.wbg.__wbg_length_ed4a84b02b798bda = function() {\n    return handleError(function(arg0) {\n      const ret = getObject(arg0).length;\n      return ret;\n    }, arguments);\n  };\n  imports.wbg.__wbg_localStorage_1406c99c39728187 = function() {\n    return handleError(function(arg0) {\n      const ret = getObject(arg0).localStorage;\n      return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_location_350d99456c2f3693 = function(arg0) {\n    const ret = getObject(arg0).location;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_log_6c164928aa7b57f4 = function(arg0, arg1) {\n    console.log(getStringFromWasm0(arg0, arg1));\n  };\n  imports.wbg.__wbg_mkdirSync_29d1fd92bf140bd0 = function() {\n    return handleError(function(arg0, arg1, arg2, arg3) {\n      getObject(arg0).mkdirSync(getStringFromWasm0(arg1, arg2), takeObject(arg3));\n    }, arguments);\n  };\n  imports.wbg.__wbg_msCrypto_0a36e2ec3a343d26 = function(arg0) {\n    const ret = getObject(arg0).msCrypto;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_navigator_1577371c070c8947 = function(arg0) {\n    const ret = getObject(arg0).navigator;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_networkid_new = function(arg0) {\n    const ret = NetworkId.__wrap(arg0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_new0_f788a2397c7ca929 = function() {\n    const ret = new Date;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_new_018dcc2d6c8c2f6a = function() {\n    return handleError(function() {\n      const ret = new Headers;\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_new_0b790fd655ff1a97 = function() {\n    return handleError(function(arg0, arg1) {\n      const ret = new WebSocket(getStringFromWasm0(arg0, arg1));\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_new_23a2665fac83c611 = function(arg0, arg1) {\n    try {\n      var state0 = { a: arg0, b: arg1 };\n      var cb0 = (arg02, arg12) => {\n        const a = state0.a;\n        state0.a = 0;\n        try {\n          return __wbg_adapter_220(a, state0.b, arg02, arg12);\n        } finally {\n          state0.a = a;\n        }\n      };\n      const ret = new Promise(cb0);\n      return addHeapObject(ret);\n    } finally {\n      state0.a = state0.b = 0;\n    }\n  };\n  imports.wbg.__wbg_new_405e22f390576ce2 = function() {\n    const ret = new Object;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_new_5e0be73521bc8c17 = function() {\n    const ret = new Map;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_new_757fd34d47ff40d2 = function(arg0) {\n    const ret = new ArrayBuffer(arg0 >>> 0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_new_78feb108b6472713 = function() {\n    const ret = new Array;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_new_a12002a7f91c75be = function(arg0) {\n    const ret = new Uint8Array(getObject(arg0));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_new_b1a33e5095abf678 = function() {\n    return handleError(function(arg0, arg1) {\n      const ret = new Worker(getStringFromWasm0(arg0, arg1));\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_new_e25e5aab09ff45db = function() {\n    return handleError(function() {\n      const ret = new AbortController;\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_new_f5f8a7325e1cb479 = function() {\n    const ret = new Error;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_newnoargs_105ed471475aaf50 = function(arg0, arg1) {\n    const ret = new Function(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_newwithbyteoffsetandlength_d97e637ebe145a9a = function(arg0, arg1, arg2) {\n    const ret = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_newwithlength_a381634e90c276d4 = function(arg0) {\n    const ret = new Uint8Array(arg0 >>> 0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_newwithnodejsconfigimpl_b0a2d4e5b0763676 = function() {\n    return handleError(function(arg0, arg1, arg2, arg3, arg4, arg5, arg6) {\n      const ret = new WebSocket(getStringFromWasm0(arg0, arg1), takeObject(arg2), takeObject(arg3), takeObject(arg4), takeObject(arg5), takeObject(arg6));\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_newwithstrandinit_06c535e0a867c635 = function() {\n    return handleError(function(arg0, arg1, arg2) {\n      const ret = new Request(getStringFromWasm0(arg0, arg1), getObject(arg2));\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_newwithstrsequenceandoptions_aaff55b467c81b63 = function() {\n    return handleError(function(arg0, arg1) {\n      const ret = new Blob(getObject(arg0), getObject(arg1));\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_next_25feadfc0913fea9 = function(arg0) {\n    const ret = getObject(arg0).next;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_next_6574e1a8a62d1055 = function() {\n    return handleError(function(arg0) {\n      const ret = getObject(arg0).next();\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_node_02999533c4ea02e3 = function(arg0) {\n    const ret = getObject(arg0).node;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_nodedescriptor_new = function(arg0) {\n    const ret = NodeDescriptor.__wrap(arg0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_now_807e54c39636c349 = function() {\n    const ret = Date.now();\n    return ret;\n  };\n  imports.wbg.__wbg_now_d18023d54d4e5500 = function(arg0) {\n    const ret = getObject(arg0).now();\n    return ret;\n  };\n  imports.wbg.__wbg_objectStore_21878d46d25b64b6 = function() {\n    return handleError(function(arg0, arg1, arg2) {\n      const ret = getObject(arg0).objectStore(getStringFromWasm0(arg1, arg2));\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_oldVersion_e8337811e52861c6 = function(arg0) {\n    const ret = getObject(arg0).oldVersion;\n    return ret;\n  };\n  imports.wbg.__wbg_on_9ef8de87725b93b5 = function(arg0, arg1, arg2, arg3) {\n    const ret = getObject(arg0).on(getStringFromWasm0(arg1, arg2), getObject(arg3));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_once_8901720a31f56808 = function(arg0, arg1, arg2, arg3) {\n    const ret = getObject(arg0).once(getStringFromWasm0(arg1, arg2), getObject(arg3));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_openCursor_d8ea5d621ec422f8 = function() {\n    return handleError(function(arg0, arg1, arg2) {\n      const ret = getObject(arg0).openCursor(getObject(arg1), __wbindgen_enum_IdbCursorDirection[arg2]);\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_open_e0c0b2993eb596e1 = function() {\n    return handleError(function(arg0, arg1, arg2, arg3) {\n      const ret = getObject(arg0).open(getStringFromWasm0(arg1, arg2), arg3 >>> 0);\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_pendingtransaction_new = function(arg0) {\n    const ret = PendingTransaction.__wrap(arg0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_postMessage_6edafa8f7b9c2f52 = function() {\n    return handleError(function(arg0, arg1) {\n      getObject(arg0).postMessage(getObject(arg1));\n    }, arguments);\n  };\n  imports.wbg.__wbg_prependListener_dc1e8b094d0f731e = function(arg0, arg1, arg2, arg3) {\n    const ret = getObject(arg0).prependListener(getStringFromWasm0(arg1, arg2), getObject(arg3));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_prependOnceListener_93873dc17dd2fcad = function(arg0, arg1, arg2, arg3) {\n    const ret = getObject(arg0).prependOnceListener(getStringFromWasm0(arg1, arg2), getObject(arg3));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_process_5c1d670bc53614b8 = function(arg0) {\n    const ret = getObject(arg0).process;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_protocol_faa0494a9b2554cb = function() {\n    return handleError(function(arg0, arg1) {\n      const ret = getObject(arg1).protocol;\n      const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n      const len1 = WASM_VECTOR_LEN;\n      getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n      getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    }, arguments);\n  };\n  imports.wbg.__wbg_publickey_new = function(arg0) {\n    const ret = PublicKey.__wrap(arg0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_push_737cfc8c1432c2c6 = function(arg0, arg1) {\n    const ret = getObject(arg0).push(getObject(arg1));\n    return ret;\n  };\n  imports.wbg.__wbg_put_066faa31a6a88f5b = function() {\n    return handleError(function(arg0, arg1, arg2) {\n      const ret = getObject(arg0).put(getObject(arg1), getObject(arg2));\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_queueMicrotask_97d92b4fcc8a61c5 = function(arg0) {\n    queueMicrotask(getObject(arg0));\n  };\n  imports.wbg.__wbg_queueMicrotask_d3219def82552485 = function(arg0) {\n    const ret = getObject(arg0).queueMicrotask;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_randomFillSync_ab2cfe79ebbf2740 = function() {\n    return handleError(function(arg0, arg1) {\n      getObject(arg0).randomFillSync(takeObject(arg1));\n    }, arguments);\n  };\n  imports.wbg.__wbg_readFileSync_42b340d959241f2b = function() {\n    return handleError(function(arg0, arg1, arg2, arg3) {\n      const ret = getObject(arg0).readFileSync(getStringFromWasm0(arg1, arg2), takeObject(arg3));\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_readdir_319d9b13a44c9af9 = function() {\n    return handleError(function(arg0, arg1, arg2) {\n      const ret = getObject(arg0).readdir(getStringFromWasm0(arg1, arg2));\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_readyState_4013cfdf4f22afb0 = function(arg0) {\n    const ret = getObject(arg0).readyState;\n    return (__wbindgen_enum_IdbRequestReadyState.indexOf(ret) + 1 || 3) - 1;\n  };\n  imports.wbg.__wbg_readyState_6c28968f3e6c1e47 = function(arg0) {\n    const ret = getObject(arg0).readyState;\n    return ret;\n  };\n  imports.wbg.__wbg_removeAttribute_e419cd6726b4c62f = function() {\n    return handleError(function(arg0, arg1, arg2) {\n      getObject(arg0).removeAttribute(getStringFromWasm0(arg1, arg2));\n    }, arguments);\n  };\n  imports.wbg.__wbg_removeItem_9d2669ee3bba6f7d = function() {\n    return handleError(function(arg0, arg1, arg2) {\n      getObject(arg0).removeItem(getStringFromWasm0(arg1, arg2));\n    }, arguments);\n  };\n  imports.wbg.__wbg_remove_cb9af65ab98197c5 = function() {\n    return handleError(function(arg0, arg1) {\n      let deferred0_0;\n      let deferred0_1;\n      try {\n        deferred0_0 = arg0;\n        deferred0_1 = arg1;\n        const ret = chrome.storage.local.remove(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n      } finally {\n        wasm.__wbindgen_export_3(deferred0_0, deferred0_1, 1);\n      }\n    }, arguments);\n  };\n  imports.wbg.__wbg_renameSync_86e78b84a05e4a0b = function() {\n    return handleError(function(arg0, arg1, arg2, arg3, arg4) {\n      getObject(arg0).renameSync(getStringFromWasm0(arg1, arg2), getStringFromWasm0(arg3, arg4));\n    }, arguments);\n  };\n  imports.wbg.__wbg_requestAnimationFrame_63a812187303a02c = function(arg0) {\n    const ret = requestAnimationFrame(takeObject(arg0));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_require_05f2f70e92254dbb = function(arg0, arg1) {\n    const ret = __require(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_require_11fc9008c54f5b90 = function(arg0, arg1) {\n    const ret = __require(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_require_79b1e9274cde3c87 = function() {\n    return handleError(function() {\n      const ret = module_kaspa.require;\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_resolve_4851785c9c5f573d = function(arg0) {\n    const ret = Promise.resolve(getObject(arg0));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_result_f29afabdf2c05826 = function() {\n    return handleError(function(arg0) {\n      const ret = getObject(arg0).result;\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_rpcclient_new = function(arg0) {\n    const ret = RpcClient.__wrap(arg0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_send_17f8c8c8e084cc5e = function() {\n    return handleError(function(arg0, arg1, arg2) {\n      getObject(arg0).send(getArrayU8FromWasm0(arg1, arg2));\n    }, arguments);\n  };\n  imports.wbg.__wbg_send_9a57107cc0d7eafa = function() {\n    return handleError(function(arg0, arg1, arg2) {\n      getObject(arg0).send(getStringFromWasm0(arg1, arg2));\n    }, arguments);\n  };\n  imports.wbg.__wbg_send_afb0c27f2d9698e3 = function() {\n    return handleError(function(arg0, arg1) {\n      getObject(arg0).send(getObject(arg1));\n    }, arguments);\n  };\n  imports.wbg.__wbg_setAttribute_2704501201f15687 = function() {\n    return handleError(function(arg0, arg1, arg2, arg3, arg4) {\n      getObject(arg0).setAttribute(getStringFromWasm0(arg1, arg2), getStringFromWasm0(arg3, arg4));\n    }, arguments);\n  };\n  imports.wbg.__wbg_setInterval_160c4baec24e25f6 = function() {\n    return handleError(function(arg0, arg1) {\n      const ret = setInterval(getObject(arg0), arg1 >>> 0);\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_setItem_212ecc915942ab0a = function() {\n    return handleError(function(arg0, arg1, arg2, arg3, arg4) {\n      getObject(arg0).setItem(getStringFromWasm0(arg1, arg2), getStringFromWasm0(arg3, arg4));\n    }, arguments);\n  };\n  imports.wbg.__wbg_setTime_8afa2faa26e7eb59 = function(arg0, arg1) {\n    const ret = getObject(arg0).setTime(arg1);\n    return ret;\n  };\n  imports.wbg.__wbg_setTimeout_430dd4984e76f6c3 = function() {\n    return handleError(function(arg0, arg1) {\n      const ret = setTimeout(getObject(arg0), arg1 >>> 0);\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_set_005c36bbcfafb768 = function() {\n    return handleError(function(arg0) {\n      const ret = chrome.storage.local.set(takeObject(arg0));\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_set_37837023f3d740e8 = function(arg0, arg1, arg2) {\n    getObject(arg0)[arg1 >>> 0] = takeObject(arg2);\n  };\n  imports.wbg.__wbg_set_3f1d0b984ed272ed = function(arg0, arg1, arg2) {\n    getObject(arg0)[takeObject(arg1)] = takeObject(arg2);\n  };\n  imports.wbg.__wbg_set_65595bdd868b3009 = function(arg0, arg1, arg2) {\n    getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n  };\n  imports.wbg.__wbg_set_8fc6bf8a5b1071d1 = function(arg0, arg1, arg2) {\n    const ret = getObject(arg0).set(getObject(arg1), getObject(arg2));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_set_bb8cecf6a62b9f46 = function() {\n    return handleError(function(arg0, arg1, arg2) {\n      const ret = Reflect.set(getObject(arg0), getObject(arg1), getObject(arg2));\n      return ret;\n    }, arguments);\n  };\n  imports.wbg.__wbg_setbinaryType_9981a6ba2bd58b94 = function(arg0, arg1) {\n    getObject(arg0).binaryType = __wbindgen_enum_BinaryType[arg1];\n  };\n  imports.wbg.__wbg_setbody_5923b78a95eedf29 = function(arg0, arg1) {\n    getObject(arg0).body = getObject(arg1);\n  };\n  imports.wbg.__wbg_setcredentials_c3a22f1cd105a2c6 = function(arg0, arg1) {\n    getObject(arg0).credentials = __wbindgen_enum_RequestCredentials[arg1];\n  };\n  imports.wbg.__wbg_setheaders_834c0bdb6a8949ad = function(arg0, arg1) {\n    getObject(arg0).headers = getObject(arg1);\n  };\n  imports.wbg.__wbg_setinnerHTML_31bde41f835786f7 = function(arg0, arg1, arg2) {\n    getObject(arg0).innerHTML = getStringFromWasm0(arg1, arg2);\n  };\n  imports.wbg.__wbg_setmethod_3c5280fe5d890842 = function(arg0, arg1, arg2) {\n    getObject(arg0).method = getStringFromWasm0(arg1, arg2);\n  };\n  imports.wbg.__wbg_setmode_5dc300b865044b65 = function(arg0, arg1) {\n    getObject(arg0).mode = __wbindgen_enum_RequestMode[arg1];\n  };\n  imports.wbg.__wbg_setonabort_3bf4db6614fa98e9 = function(arg0, arg1) {\n    getObject(arg0).onabort = getObject(arg1);\n  };\n  imports.wbg.__wbg_setonblocked_aebf64bd39f1eca8 = function(arg0, arg1) {\n    getObject(arg0).onblocked = getObject(arg1);\n  };\n  imports.wbg.__wbg_setonclose_b15bdabd419b6357 = function(arg0, arg1) {\n    getObject(arg0).onclose = getObject(arg1);\n  };\n  imports.wbg.__wbg_setoncomplete_4d19df0dadb7c4d4 = function(arg0, arg1) {\n    getObject(arg0).oncomplete = getObject(arg1);\n  };\n  imports.wbg.__wbg_setonerror_b0d9d723b8fddbbb = function(arg0, arg1) {\n    getObject(arg0).onerror = getObject(arg1);\n  };\n  imports.wbg.__wbg_setonerror_d7e3056cc6e56085 = function(arg0, arg1) {\n    getObject(arg0).onerror = getObject(arg1);\n  };\n  imports.wbg.__wbg_setonerror_e2c5c0fa6fbf6d99 = function(arg0, arg1) {\n    getObject(arg0).onerror = getObject(arg1);\n  };\n  imports.wbg.__wbg_setonmessage_007594843a0b97e8 = function(arg0, arg1) {\n    getObject(arg0).onmessage = getObject(arg1);\n  };\n  imports.wbg.__wbg_setonmessage_5a885b16bdc6dca6 = function(arg0, arg1) {\n    getObject(arg0).onmessage = getObject(arg1);\n  };\n  imports.wbg.__wbg_setonopen_c42cfdbb28b087c4 = function(arg0, arg1) {\n    getObject(arg0).onopen = getObject(arg1);\n  };\n  imports.wbg.__wbg_setonsuccess_afa464ee777a396d = function(arg0, arg1) {\n    getObject(arg0).onsuccess = getObject(arg1);\n  };\n  imports.wbg.__wbg_setonupgradeneeded_fcf7ce4f2eb0cb5f = function(arg0, arg1) {\n    getObject(arg0).onupgradeneeded = getObject(arg1);\n  };\n  imports.wbg.__wbg_setonversionchange_6ee07fa49ee1e3a5 = function(arg0, arg1) {\n    getObject(arg0).onversionchange = getObject(arg1);\n  };\n  imports.wbg.__wbg_setsignal_75b21ef3a81de905 = function(arg0, arg1) {\n    getObject(arg0).signal = getObject(arg1);\n  };\n  imports.wbg.__wbg_settype_39ed370d3edd403c = function(arg0, arg1, arg2) {\n    getObject(arg0).type = getStringFromWasm0(arg1, arg2);\n  };\n  imports.wbg.__wbg_setunique_dd24c422aa05df89 = function(arg0, arg1) {\n    getObject(arg0).unique = arg1 !== 0;\n  };\n  imports.wbg.__wbg_signal_aaf9ad74119f20a4 = function(arg0) {\n    const ret = getObject(arg0).signal;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_stack_c99a96ed42647c4c = function(arg0, arg1) {\n    const ret = getObject(arg1).stack;\n    const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n    const len1 = WASM_VECTOR_LEN;\n    getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n    getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n  };\n  imports.wbg.__wbg_statSync_9a429acc496bafda = function() {\n    return handleError(function(arg0, arg1, arg2) {\n      const ret = getObject(arg0).statSync(getStringFromWasm0(arg1, arg2));\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_static_accessor_GLOBAL_88a902d13a557d07 = function() {\n    const ret = typeof global === \"undefined\" ? null : global;\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n  };\n  imports.wbg.__wbg_static_accessor_GLOBAL_THIS_56578be7e9f832b0 = function() {\n    const ret = typeof globalThis === \"undefined\" ? null : globalThis;\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n  };\n  imports.wbg.__wbg_static_accessor_SELF_37c5d418e4bf5819 = function() {\n    const ret = typeof self === \"undefined\" ? null : self;\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n  };\n  imports.wbg.__wbg_static_accessor_WINDOW_5de37043a91a9c40 = function() {\n    const ret = typeof window === \"undefined\" ? null : window;\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n  };\n  imports.wbg.__wbg_status_f6360336ca686bf0 = function(arg0) {\n    const ret = getObject(arg0).status;\n    return ret;\n  };\n  imports.wbg.__wbg_stringify_f7ed6987935b4a24 = function() {\n    return handleError(function(arg0) {\n      const ret = JSON.stringify(getObject(arg0));\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_subarray_aa9065fa9dc5df96 = function(arg0, arg1, arg2) {\n    const ret = getObject(arg0).subarray(arg1 >>> 0, arg2 >>> 0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_target_0a62d9d79a2a1ede = function(arg0) {\n    const ret = getObject(arg0).target;\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n  };\n  imports.wbg.__wbg_text_7805bea50de2af49 = function() {\n    return handleError(function(arg0) {\n      const ret = getObject(arg0).text();\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_then_44b73946d2fb3e7d = function(arg0, arg1) {\n    const ret = getObject(arg0).then(getObject(arg1));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_then_48b406749878a531 = function(arg0, arg1, arg2) {\n    const ret = getObject(arg0).then(getObject(arg1), getObject(arg2));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_toString_2f76f493957b63da = function(arg0, arg1, arg2) {\n    const ret = getObject(arg1).toString(arg2);\n    const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n    const len1 = WASM_VECTOR_LEN;\n    getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n    getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n  };\n  imports.wbg.__wbg_toString_b5d4438bc26b267c = function() {\n    return handleError(function(arg0, arg1) {\n      const ret = getObject(arg0).toString(arg1);\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_transaction_babc423936946a37 = function() {\n    return handleError(function(arg0, arg1, arg2, arg3) {\n      const ret = getObject(arg0).transaction(getStringFromWasm0(arg1, arg2), __wbindgen_enum_IdbTransactionMode[arg3]);\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_transaction_new = function(arg0) {\n    const ret = Transaction.__wrap(arg0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_transactioninput_new = function(arg0) {\n    const ret = TransactionInput.__wrap(arg0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_transactionoutput_new = function(arg0) {\n    const ret = TransactionOutput.__wrap(arg0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_transactionrecordnotification_new = function(arg0) {\n    const ret = TransactionRecordNotification.__wrap(arg0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_unlinkSync_656392e8d747415f = function() {\n    return handleError(function(arg0, arg1, arg2) {\n      getObject(arg0).unlinkSync(getStringFromWasm0(arg1, arg2));\n    }, arguments);\n  };\n  imports.wbg.__wbg_update_acd72607f506872a = function() {\n    return handleError(function(arg0, arg1) {\n      const ret = getObject(arg0).update(getObject(arg1));\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_url_ae10c34ca209681d = function(arg0, arg1) {\n    const ret = getObject(arg1).url;\n    const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n    const len1 = WASM_VECTOR_LEN;\n    getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n    getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n  };\n  imports.wbg.__wbg_userAgent_12e9d8e62297563f = function() {\n    return handleError(function(arg0, arg1) {\n      const ret = getObject(arg1).userAgent;\n      const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n      const len1 = WASM_VECTOR_LEN;\n      getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n      getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    }, arguments);\n  };\n  imports.wbg.__wbg_utxoentryreference_new = function(arg0) {\n    const ret = UtxoEntryReference.__wrap(arg0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_value_68c4e9a54bb7fd5e = function() {\n    return handleError(function(arg0) {\n      const ret = getObject(arg0).value;\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_value_cd1ffa7b1ab794f1 = function(arg0) {\n    const ret = getObject(arg0).value;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_versions_c71aa1626a93e0a1 = function(arg0) {\n    const ret = getObject(arg0).versions;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_walletdescriptor_new = function(arg0) {\n    const ret = WalletDescriptor.__wrap(arg0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_warn_28319e260c89a4f8 = function(arg0, arg1) {\n    console.warn(getStringFromWasm0(arg0, arg1));\n  };\n  imports.wbg.__wbg_writeFileSync_6325b339950ab342 = function() {\n    return handleError(function(arg0, arg1, arg2, arg3, arg4) {\n      getObject(arg0).writeFileSync(getStringFromWasm0(arg1, arg2), takeObject(arg3), takeObject(arg4));\n    }, arguments);\n  };\n  imports.wbg.__wbindgen_as_number = function(arg0) {\n    const ret = +getObject(arg0);\n    return ret;\n  };\n  imports.wbg.__wbindgen_bigint_from_i64 = function(arg0) {\n    const ret = arg0;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_bigint_from_u64 = function(arg0) {\n    const ret = BigInt.asUintN(64, arg0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_bigint_get_as_i64 = function(arg0, arg1) {\n    const v = getObject(arg1);\n    const ret = typeof v === \"bigint\" ? v : undefined;\n    getDataViewMemory0().setBigInt64(arg0 + 8 * 1, isLikeNone(ret) ? BigInt(0) : ret, true);\n    getDataViewMemory0().setInt32(arg0 + 4 * 0, !isLikeNone(ret), true);\n  };\n  imports.wbg.__wbindgen_boolean_get = function(arg0) {\n    const v = getObject(arg0);\n    const ret = typeof v === \"boolean\" ? v ? 1 : 0 : 2;\n    return ret;\n  };\n  imports.wbg.__wbindgen_cb_drop = function(arg0) {\n    const obj = takeObject(arg0).original;\n    if (obj.cnt-- == 1) {\n      obj.a = 0;\n      return true;\n    }\n    const ret = false;\n    return ret;\n  };\n  imports.wbg.__wbindgen_closure_wrapper13331 = function(arg0, arg1, arg2) {\n    const ret = makeMutClosure(arg0, arg1, 5399, __wbg_adapter_81);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_closure_wrapper13333 = function(arg0, arg1, arg2) {\n    const ret = makeMutClosure(arg0, arg1, 5399, __wbg_adapter_84);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_closure_wrapper13335 = function(arg0, arg1, arg2) {\n    const ret = makeMutClosure(arg0, arg1, 5399, __wbg_adapter_84);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_closure_wrapper13337 = function(arg0, arg1, arg2) {\n    const ret = makeMutClosure(arg0, arg1, 5399, __wbg_adapter_84);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_closure_wrapper15738 = function(arg0, arg1, arg2) {\n    const ret = makeMutClosure(arg0, arg1, 6273, __wbg_adapter_91);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_closure_wrapper16473 = function(arg0, arg1, arg2) {\n    const ret = makeMutClosure(arg0, arg1, 6309, __wbg_adapter_94);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_closure_wrapper16475 = function(arg0, arg1, arg2) {\n    const ret = makeMutClosure(arg0, arg1, 6309, __wbg_adapter_97);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_closure_wrapper16477 = function(arg0, arg1, arg2) {\n    const ret = makeMutClosure(arg0, arg1, 6309, __wbg_adapter_100);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_closure_wrapper16479 = function(arg0, arg1, arg2) {\n    const ret = makeMutClosure(arg0, arg1, 6309, __wbg_adapter_103);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_closure_wrapper16787 = function(arg0, arg1, arg2) {\n    const ret = makeMutClosure(arg0, arg1, 6405, __wbg_adapter_106);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_closure_wrapper16789 = function(arg0, arg1, arg2) {\n    const ret = makeMutClosure(arg0, arg1, 6405, __wbg_adapter_106);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_closure_wrapper16791 = function(arg0, arg1, arg2) {\n    const ret = makeMutClosure(arg0, arg1, 6405, __wbg_adapter_106);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_closure_wrapper16793 = function(arg0, arg1, arg2) {\n    const ret = makeMutClosure(arg0, arg1, 6405, __wbg_adapter_113);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_closure_wrapper6933 = function(arg0, arg1, arg2) {\n    const ret = makeMutClosure(arg0, arg1, 2058, __wbg_adapter_68);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_closure_wrapper6935 = function(arg0, arg1, arg2) {\n    const ret = makeMutClosure(arg0, arg1, 2058, __wbg_adapter_71);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_closure_wrapper6937 = function(arg0, arg1, arg2) {\n    const ret = makeMutClosure(arg0, arg1, 2058, __wbg_adapter_74);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_closure_wrapper6939 = function(arg0, arg1, arg2) {\n    const ret = makeMutClosure(arg0, arg1, 2058, __wbg_adapter_74);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_closure_wrapper6941 = function(arg0, arg1, arg2) {\n    const ret = makeMutClosure(arg0, arg1, 2058, __wbg_adapter_74);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_closure_wrapper959 = function(arg0, arg1, arg2) {\n    const ret = makeClosure(arg0, arg1, 285, __wbg_adapter_62);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_closure_wrapper961 = function(arg0, arg1, arg2) {\n    const ret = makeClosure(arg0, arg1, 285, __wbg_adapter_65);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_debug_string = function(arg0, arg1) {\n    const ret = debugString(getObject(arg1));\n    const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n    const len1 = WASM_VECTOR_LEN;\n    getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n    getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n  };\n  imports.wbg.__wbindgen_error_new = function(arg0, arg1) {\n    const ret = new Error(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_in = function(arg0, arg1) {\n    const ret = getObject(arg0) in getObject(arg1);\n    return ret;\n  };\n  imports.wbg.__wbindgen_is_array = function(arg0) {\n    const ret = Array.isArray(getObject(arg0));\n    return ret;\n  };\n  imports.wbg.__wbindgen_is_bigint = function(arg0) {\n    const ret = typeof getObject(arg0) === \"bigint\";\n    return ret;\n  };\n  imports.wbg.__wbindgen_is_falsy = function(arg0) {\n    const ret = !getObject(arg0);\n    return ret;\n  };\n  imports.wbg.__wbindgen_is_function = function(arg0) {\n    const ret = typeof getObject(arg0) === \"function\";\n    return ret;\n  };\n  imports.wbg.__wbindgen_is_null = function(arg0) {\n    const ret = getObject(arg0) === null;\n    return ret;\n  };\n  imports.wbg.__wbindgen_is_object = function(arg0) {\n    const val = getObject(arg0);\n    const ret = typeof val === \"object\" && val !== null;\n    return ret;\n  };\n  imports.wbg.__wbindgen_is_string = function(arg0) {\n    const ret = typeof getObject(arg0) === \"string\";\n    return ret;\n  };\n  imports.wbg.__wbindgen_is_undefined = function(arg0) {\n    const ret = getObject(arg0) === undefined;\n    return ret;\n  };\n  imports.wbg.__wbindgen_jsval_eq = function(arg0, arg1) {\n    const ret = getObject(arg0) === getObject(arg1);\n    return ret;\n  };\n  imports.wbg.__wbindgen_jsval_loose_eq = function(arg0, arg1) {\n    const ret = getObject(arg0) == getObject(arg1);\n    return ret;\n  };\n  imports.wbg.__wbindgen_lt = function(arg0, arg1) {\n    const ret = getObject(arg0) < getObject(arg1);\n    return ret;\n  };\n  imports.wbg.__wbindgen_memory = function() {\n    const ret = wasm.memory;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_neg = function(arg0) {\n    const ret = -getObject(arg0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_number_get = function(arg0, arg1) {\n    const obj = getObject(arg1);\n    const ret = typeof obj === \"number\" ? obj : undefined;\n    getDataViewMemory0().setFloat64(arg0 + 8 * 1, isLikeNone(ret) ? 0 : ret, true);\n    getDataViewMemory0().setInt32(arg0 + 4 * 0, !isLikeNone(ret), true);\n  };\n  imports.wbg.__wbindgen_number_new = function(arg0) {\n    const ret = arg0;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_object_clone_ref = function(arg0) {\n    const ret = getObject(arg0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n  };\n  imports.wbg.__wbindgen_string_get = function(arg0, arg1) {\n    const obj = getObject(arg1);\n    const ret = typeof obj === \"string\" ? obj : undefined;\n    var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_export_1, wasm.__wbindgen_export_2);\n    var len1 = WASM_VECTOR_LEN;\n    getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n    getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n  };\n  imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n    const ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n  };\n  imports.wbg.__wbindgen_try_into_number = function(arg0) {\n    let result;\n    try {\n      result = +getObject(arg0);\n    } catch (e) {\n      result = e;\n    }\n    const ret = result;\n    return addHeapObject(ret);\n  };\n  return imports;\n}\nfunction __wbg_init_memory(imports, memory) {}\nfunction __wbg_finalize_init(instance, module) {\n  wasm = instance.exports;\n  __wbg_init.__wbindgen_wasm_module = module;\n  cachedDataViewMemory0 = null;\n  cachedUint8ArrayMemory0 = null;\n  return wasm;\n}\nfunction initSync(module) {\n  if (wasm !== undefined)\n    return wasm;\n  if (typeof module !== \"undefined\") {\n    if (Object.getPrototypeOf(module) === Object.prototype) {\n      ({ module } = module);\n    } else {\n      console.warn(\"using deprecated parameters for `initSync()`; pass a single object instead\");\n    }\n  }\n  const imports = __wbg_get_imports();\n  __wbg_init_memory(imports);\n  if (!(module instanceof WebAssembly.Module)) {\n    module = new WebAssembly.Module(module);\n  }\n  const instance = new WebAssembly.Instance(module, imports);\n  return __wbg_finalize_init(instance, module);\n}\nasync function __wbg_init(module_or_path) {\n  if (wasm !== undefined)\n    return wasm;\n  if (typeof module_or_path !== \"undefined\") {\n    if (Object.getPrototypeOf(module_or_path) === Object.prototype) {\n      ({ module_or_path } = module_or_path);\n    } else {\n      console.warn(\"using deprecated parameters for the initialization function; pass a single object instead\");\n    }\n  }\n  if (typeof module_or_path === \"undefined\") {\n    module_or_path = new URL(\"kaspa_bg.wasm\", import.meta.url);\n  }\n  const imports = __wbg_get_imports();\n  if (typeof module_or_path === \"string\" || typeof Request === \"function\" && module_or_path instanceof Request || typeof URL === \"function\" && module_or_path instanceof URL) {\n    module_or_path = fetch(module_or_path);\n  }\n  __wbg_init_memory(imports);\n  const { instance, module } = await __wbg_load(await module_or_path, imports);\n  return __wbg_finalize_init(instance, module);\n}\nvar kaspa_default = __wbg_init;\n// src/address/mnemonic.ts\nclass Mnemonic2 {\n  static random(length) {\n    if (length !== 12 && length !== 24) {\n      throw new Error(\"Invalid length for mnemonic\");\n    }\n    let mnemonic = exports_kaspa.Mnemonic.random(length);\n    return mnemonic.phrase;\n  }\n  static validate(mnemonic) {\n    return exports_kaspa.Mnemonic.validate(mnemonic);\n  }\n  static toSeed(mnemonic, password = \"\") {\n    return new exports_kaspa.Mnemonic(mnemonic).toSeed(password);\n  }\n}\n// src/utils/enum.ts\nvar exports_enum = {};\n__export(exports_enum, {\n  WalletType: () => WalletType,\n  OP: () => OP,\n  AddressVersion: () => AddressVersion2,\n  AddressPrefix: () => AddressPrefix\n});\nvar AddressPrefix;\n((AddressPrefix2) => {\n  AddressPrefix2[\"Mainnet\"] = \"kaspa\";\n  AddressPrefix2[\"Testnet\"] = \"kaspatest\";\n  AddressPrefix2[\"Devnet\"] = \"kaspadev\";\n})(AddressPrefix ||= {});\nvar OP;\n((OP2) => {\n  OP2[\"Mint\"] = \"mint\";\n  OP2[\"Deploy\"] = \"deploy\";\n  OP2[\"Transfer\"] = \"transfer\";\n  OP2[\"List\"] = \"list\";\n  OP2[\"Send\"] = \"send\";\n  OP2[\"Issue\"] = \"issue\";\n  OP2[\"Burn\"] = \"burn\";\n  OP2[\"Blacklist\"] = \"blacklist\";\n  OP2[\"Chown\"] = \"chown\";\n})(OP ||= {});\nvar AddressVersion2;\n((AddressVersion3) => {\n  AddressVersion3[AddressVersion3[\"PubKey\"] = 0] = \"PubKey\";\n  AddressVersion3[AddressVersion3[\"PubKeyECDSA\"] = 1] = \"PubKeyECDSA\";\n  AddressVersion3[AddressVersion3[\"ScriptHash\"] = 8] = \"ScriptHash\";\n})(AddressVersion2 ||= {});\nvar WalletType;\n((WalletType2) => {\n  WalletType2[WalletType2[\"HD\"] = 0] = \"HD\";\n  WalletType2[WalletType2[\"PrivateKey\"] = 1] = \"PrivateKey\";\n})(WalletType ||= {});\n\n// src/utils/utils.ts\nvar exports_utils = {};\n__export(exports_utils, {\n  stringToAddressPrefix: () => stringToAddressPrefix,\n  networkToString: () => networkToString,\n  networkToAddressPrefix: () => networkToAddressPrefix,\n  hexStringToUint8Array: () => hexStringToUint8Array,\n  getSizeByPrivateKeys: () => getSizeByPrivateKeys,\n  getScriptLockTime: () => getScriptLockTime,\n  getPushData: () => getPushData,\n  getFeeByOp: () => getFeeByOp,\n  createKrc20Data: () => createKrc20Data,\n  addressPrefixToNetwork: () => addressPrefixToNetwork\n});\n\n// src/utils/constants.ts\nvar BASE_URL_TEST = `https://tn10api.kasplex.org`;\nvar BASE_URL_MAIN = `https://api.kasplex.org`;\nvar BASE_URL_KASPA = {\n  MAIN: `https://api.kaspa.org`,\n  TEST: `https://api-tn10.kaspa.org`\n};\nvar U64_MAX_VALUE = 18446744073709551615n;\nvar BASE_KAS_TO_P2SH_ADDRESS = 130000000n;\nvar BASE_P2SH_TO_KASPA_ADDRESS = 30000000n;\nvar DEFAULT_FEE = 100000000n;\nvar MIN_PUSHDATA = {\n  MIN_PUSHDATA1: 77,\n  MIN_PUSHDATA2: 256,\n  MIN_PUSHDATA4: 65536,\n  MAX_PUSHDATA1: 255,\n  MAX_PUSHDATA2: 65535,\n  MAX_PUSHDATA4: 4294967295\n};\nvar KASPLEX = \"kasplex\";\nvar WALLET_AUTH_METHODS = {\n  kastle: \"connect\",\n  kasware: \"requestAccounts\",\n  unisat: \"requestAccounts\",\n  kaskeeper: \"disconnect\",\n  kasperia: \"requestAccounts\"\n};\nvar WALLET_ID_LIST = {\n  Kaskeeper: \"bicbpicnddlclhekbmgafcbkemdikdem\",\n  Kaspian: \"cidcgacclonccobcbihholdncmehnlpl\",\n  kasware: \"hklhheigdmpoolooomdihmhlpjjdbklf\",\n  kastle: \"oambclflhjfppdmkghokjmpppmaebego\",\n  kasperia: \"ffalcabgggegkejjlknofllbaledgcob\"\n};\n\n// src/utils/utils.ts\nfunction networkToString(networkType) {\n  switch (networkType) {\n    case exports_kaspa.NetworkType.Mainnet:\n      return \"mainnet\";\n    case exports_kaspa.NetworkType.Testnet:\n      return \"testnet-10\";\n    case exports_kaspa.NetworkType.Devnet:\n      return \"devnet\";\n    default:\n      throw new Error(`Unknown network type: ${networkType}`);\n  }\n}\nfunction hexStringToUint8Array(hexString) {\n  const hex = hexString.replace(/^0x/i, \"\");\n  if (hex.length % 2 !== 0) {\n    throw new Error(\"Hex string must have an even number of characters\");\n  }\n  if (!/^[0-9a-fA-F]+$/.test(hex)) {\n    throw new Error(\"Hex string contains invalid characters\");\n  }\n  const bytes = new Uint8Array(hex.length / 2);\n  for (let i2 = 0;i2 < hex.length; i2 += 2) {\n    bytes[i2 / 2] = parseInt(hex.slice(i2, i2 + 2), 16);\n  }\n  return bytes;\n}\nfunction getPushData(size) {\n  if (size <= 0) {\n    return reportError(\"size must be positive\");\n  }\n  if (size < MIN_PUSHDATA.MIN_PUSHDATA1) {\n    return reportError(\"size invalid\");\n  }\n  if (size >= MIN_PUSHDATA.MIN_PUSHDATA4) {\n    return exports_kaspa.Opcodes.OpPushData4;\n  }\n  if (size > MIN_PUSHDATA.MIN_PUSHDATA2 && size <= MIN_PUSHDATA.MAX_PUSHDATA2) {\n    return exports_kaspa.Opcodes.OpPushData2;\n  }\n  if (size >= 76 && size <= MIN_PUSHDATA.MAX_PUSHDATA1) {\n    return exports_kaspa.Opcodes.OpPushData1;\n  }\n}\nfunction createKrc20Data(data) {\n  const krc20Data = {\n    p: \"krc-20\"\n  };\n  return { ...krc20Data, ...data };\n}\nfunction getScriptLockTime(oneHourInSeconds = 0) {\n  const currentUnixTime = Math.floor(Date.now() / 1000);\n  return BigInt((currentUnixTime - oneHourInSeconds) * 1000);\n}\nfunction getSizeByPrivateKeys(multiplier, addend, ecdsa) {\n  return multiplier * (ecdsa ? 34 : 33) + addend;\n}\nfunction getFeeByOp(op) {\n  switch (op) {\n    case \"deploy\" /* Deploy */:\n      return 100000000000n;\n    case \"mint\" /* Mint */:\n      return 100000000n;\n    case \"transfer\" /* Transfer */:\n      return 0n;\n    case \"send\" /* Send */:\n      return 0n;\n    case \"list\" /* List */:\n      return 0n;\n    default:\n      return 0n;\n  }\n}\nfunction addressPrefixToNetwork(network) {\n  switch (network) {\n    case \"kaspa\" /* Mainnet */:\n      return exports_kaspa.NetworkType.Mainnet;\n    case \"kaspatest\" /* Testnet */:\n      return exports_kaspa.NetworkType.Testnet;\n    default:\n      throw new Error(`Unknown network: ${network}`);\n  }\n}\nfunction stringToAddressPrefix(prefix) {\n  return Object.values(AddressPrefix).includes(prefix) ? prefix : undefined;\n}\nfunction networkToAddressPrefix(network) {\n  switch (network) {\n    case exports_kaspa.NetworkType.Mainnet:\n      return \"kaspa\" /* Mainnet */;\n    case exports_kaspa.NetworkType.Testnet:\n      return \"kaspatest\" /* Testnet */;\n    default:\n      throw new Error(`Unknown network: ${network}`);\n  }\n}\n\n// src/utils/address.ts\nclass Address2 {\n  static toAddress(network, version2, payload) {\n    let prefix = networkToAddressPrefix(network);\n    return `${prefix}:${Address2.encodePayload(prefix, version2, payload)}`;\n  }\n  static validate(address) {\n    try {\n      const parts = address.split(\":\");\n      if (parts.length !== 2) {\n        throw new Error(\"Invalid address format\");\n      }\n      let prefix = stringToAddressPrefix(parts[0]);\n      if (prefix == undefined) {\n        throw new Error(\"Invalid address format\");\n      }\n      return this.decodePayload(prefix, parts[1]);\n    } catch (e) {\n      return false;\n    }\n  }\n  static encodePayload(prefix, version2, payload) {\n    const fiveBitPayload = Address2.conv8to5(new Uint8Array([version2, ...payload]));\n    const fiveBitPrefix = Array.from(prefix).map((c) => c.charCodeAt(0) & 31);\n    const checksum = Address2.checksum(fiveBitPayload, fiveBitPrefix);\n    const checksumBytes = new Uint8Array(new BigUint64Array([checksum]).buffer).reverse();\n    const combined = new Uint8Array([...fiveBitPayload, ...Address2.conv8to5(new Uint8Array(checksumBytes.slice(3)))]);\n    const bytes = Array.from(combined).map((c) => Charset[c]);\n    return String.fromCharCode(...bytes);\n  }\n  static decodePayload(prefix, address) {\n    const addressU5 = Array.from(address).map((c) => {\n      const index = c.charCodeAt(0);\n      if (index >= RevCharset.length) {\n        throw new Error(`Character code ${index} is out of bounds`);\n      }\n      return RevCharset[index];\n    });\n    if (address.length < 8) {\n      throw new Error(\"Bad payload\");\n    }\n    const payloadU5 = new Uint8Array(addressU5.slice(0, address.length - 8));\n    const checksumU5 = new Uint8Array(addressU5.slice(address.length - 8));\n    const fiveBitPrefix = Array.from(prefix).map((c) => c.charCodeAt(0) & 31);\n    const checksumBytes = new Uint8Array([0, 0, 0, ...this.conv5to8(new Uint8Array(checksumU5))]);\n    const checksum = new DataView(checksumBytes.buffer).getBigUint64(0, false);\n    if (this.checksum(payloadU5, fiveBitPrefix) !== checksum) {\n      throw new Error(\"Bad checksum\");\n    }\n    const payloadU8 = this.conv5to8(payloadU5);\n    let network = addressPrefixToNetwork(prefix);\n    Address2.toAddress(network, payloadU8[0], payloadU8.slice(1));\n    return true;\n  }\n  static polymod(values) {\n    let c = 1n;\n    for (const d of values) {\n      const c0 = c >> 35n;\n      c = (c & 0x07ffffffffn) << 5n ^ BigInt(d);\n      if ((c0 & 0x01n) !== 0n)\n        c ^= 0x98f2bc8e61n;\n      if ((c0 & 0x02n) !== 0n)\n        c ^= 0x79b76d99e2n;\n      if ((c0 & 0x04n) !== 0n)\n        c ^= 0xf33e5fb3c4n;\n      if ((c0 & 0x08n) !== 0n)\n        c ^= 0xae2eabe2a8n;\n      if ((c0 & 0x10n) !== 0n)\n        c ^= 0x1e4f43e470n;\n    }\n    return c ^ 1n;\n  }\n  static checksum(payload, prefix) {\n    return this.polymod(new Uint8Array([...prefix, 0, ...payload, ...new Uint8Array(8)]));\n  }\n  static conv8to5(payload) {\n    const fiveBit = [];\n    let buff = 0, bits = 0;\n    for (const c of payload) {\n      buff = buff << 8 | c;\n      bits += 8;\n      while (bits >= 5) {\n        bits -= 5;\n        fiveBit.push(buff >> bits & 31);\n        buff &= (1 << bits) - 1;\n      }\n    }\n    if (bits > 0) {\n      fiveBit.push(buff << 5 - bits & 31);\n    }\n    return new Uint8Array(fiveBit);\n  }\n  static conv5to8(payload) {\n    const eightBit = [];\n    let buff = 0, bits = 0;\n    for (const c of payload) {\n      buff = buff << 5 | c;\n      bits += 5;\n      while (bits >= 8) {\n        bits -= 8;\n        eightBit.push(buff >> bits & 255);\n        buff &= (1 << bits) - 1;\n      }\n    }\n    return new Uint8Array(eightBit);\n  }\n}\nvar Charset = \"qpzry9x8gf2tvdw0s3jn54khce6mua7l\".split(\"\").map((c) => c.charCodeAt(0));\nvar RevCharset = [\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  15,\n  100,\n  10,\n  17,\n  21,\n  20,\n  26,\n  30,\n  7,\n  5,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  100,\n  29,\n  100,\n  24,\n  13,\n  25,\n  9,\n  8,\n  23,\n  100,\n  18,\n  22,\n  31,\n  27,\n  19,\n  100,\n  1,\n  0,\n  3,\n  16,\n  11,\n  28,\n  12,\n  14,\n  6,\n  4,\n  2\n];\n\n// src/address/wallet.ts\nvar DERIVE_PATH = `m/44'/111111'/0'/0/`;\n\nclass Wallet2 {\n  privateKey;\n  walletType;\n  xprv;\n  index;\n  constructor(privateKey, walletType, xprv, index) {\n    this.privateKey = privateKey;\n    this.walletType = walletType;\n    this.xprv = xprv;\n    this.index = index;\n  }\n  static fromMnemonic(mnemonic, password = \"\") {\n    const seed = Mnemonic2.toSeed(mnemonic, password);\n    const xprv = new exports_kaspa.XPrv(seed);\n    const index = 0;\n    const privateKey = xprv.derivePath(`${DERIVE_PATH}${index}`).toPrivateKey();\n    return new Wallet2(privateKey, 0 /* HD */, xprv, index);\n  }\n  static fromPrivateKey(privateKey) {\n    return new Wallet2(new exports_kaspa.PrivateKey(privateKey), 1 /* PrivateKey */);\n  }\n  toPrivateKey() {\n    return this.privateKey.toString();\n  }\n  toPublicKey() {\n    return this.privateKey.toPublicKey();\n  }\n  toXOnlyPublicKey() {\n    return this.privateKey.toPublicKey().toXOnlyPublicKey();\n  }\n  toAddress(network) {\n    return this.privateKey.toPublicKey().toAddress(network);\n  }\n  newWallet(index) {\n    if (this.walletType !== 0 /* HD */) {\n      throw new Error(\"A wallet created from a private key cannot derive new wallets.\");\n    }\n    const newIndex = index ?? this.index + 1;\n    const privateKey = this.xprv.derivePath(`${DERIVE_PATH}${newIndex}`).toPrivateKey();\n    return new Wallet2(privateKey, 0 /* HD */, this.xprv, newIndex);\n  }\n  signMessage(message) {\n    return exports_kaspa.signMessage({\n      message,\n      privateKey: this.privateKey\n    });\n  }\n  verifyMessage(message, signature) {\n    return exports_kaspa.verifyMessage({\n      message,\n      signature,\n      publicKey: this.privateKey.toPublicKey()\n    });\n  }\n  static validate(address) {\n    return Address2.validate(address);\n  }\n}\n// src/rpc/client.ts\nclass Rpc {\n  static instance;\n  client;\n  constructor(network, url = \"\") {\n    this.client = new exports_kaspa.RpcClient(Rpc.getConfig(network, url));\n  }\n  static setInstance(network, url = \"\") {\n    Rpc.instance = new Rpc(network, url);\n    return Rpc.instance;\n  }\n  static getInstance() {\n    if (!Rpc.instance) {\n      throw new Error(\"Rpc instance is not set. Call setInstance() first.\");\n    }\n    return Rpc.instance;\n  }\n  async connect() {\n    if (this.client.isConnected) {\n      console.log(\"Already connected to the RPC server.\");\n      return;\n    }\n    await this.client.connect();\n  }\n  async disconnect() {\n    if (this.client.isConnected) {\n      console.log(\"Already disconnected from the RPC server.\");\n      return;\n    }\n    await this.client.disconnect();\n  }\n  static getConfig(network, url) {\n    const commonConfig = {\n      encoding: exports_kaspa.Encoding.Borsh,\n      networkId: networkToString(network)\n    };\n    return url ? { ...commonConfig, url } : { ...commonConfig, resolver: new exports_kaspa.Resolver };\n  }\n}\n// src/utils/http.ts\nclass HttpRequest {\n  defaultHeaders;\n  timeout;\n  constructor(timeout = 1e4, headers = {}) {\n    this.timeout = timeout;\n    this.defaultHeaders = {\n      \"Content-Type\": \"application/json\",\n      ...headers\n    };\n  }\n  async request(method, url, params = {}, body, headers = {}) {\n    const requestUrl = new URL(url);\n    Object.entries(params).forEach(([key, value]) => requestUrl.searchParams.append(key, value));\n    const controller = new AbortController;\n    const timeoutId = setTimeout(() => controller.abort(), this.timeout);\n    try {\n      const response = await fetch(requestUrl.toString(), {\n        method,\n        headers: { ...this.defaultHeaders, ...headers },\n        body: body ? JSON.stringify(body) : undefined,\n        signal: controller.signal\n      });\n      clearTimeout(timeoutId);\n      if (!response.ok) {\n        let text = await response.text();\n        if (text) {\n          throw new Error(`HTTP Error with info: ${text}`);\n        } else {\n          throw new Error(`HTTP Error: ${response.status} ${response.statusText}`);\n        }\n      }\n      return await response.json().catch(() => {\n        throw new Error(`Failed to parse JSON response from: ${requestUrl.toString()}`);\n      });\n    } catch (error) {\n      clearTimeout(timeoutId);\n      throw new Error(`Request failed: ${error instanceof Error ? error.message : String(error)}`);\n    }\n  }\n  get(url, params = {}, headers) {\n    return this.request(\"GET\", url, params, undefined, headers);\n  }\n  post(url, body, params = {}, headers) {\n    return this.request(\"POST\", url, params, body, headers);\n  }\n}\nvar httpClient = new HttpRequest;\n\n// src/kiwi.ts\nclass Kiwi {\n  static network = exports_kaspa.NetworkType.Testnet;\n  static isWasmLoaded = false;\n  static setNetwork(network) {\n    if (!Kiwi.isWasmLoaded) {\n      Kiwi.isWasmLoaded = true;\n    }\n    Kiwi.network = network;\n  }\n  static getNetworkID() {\n    return networkToString(Kiwi.network);\n  }\n}\n\n// src/api/kasplexApi.ts\nclass KasplexApi {\n  static version = \"/v1\";\n  static getBaseUrl() {\n    const baseUrl = Kiwi.network === exports_kaspa.NetworkType.Mainnet ? BASE_URL_MAIN : BASE_URL_TEST;\n    return `${baseUrl}${this.version}`;\n  }\n  static getInfo() {\n    return httpClient.get(`${KasplexApi.getBaseUrl()}/info`);\n  }\n  static getTokenList(param = {}) {\n    return httpClient.get(`${this.getBaseUrl()}/krc20/tokenlist`, param);\n  }\n  static getToken(tick) {\n    return httpClient.get(`${KasplexApi.getBaseUrl()}/krc20/token/${tick}`);\n  }\n  static getAddressTokenList(address, param = {}) {\n    return httpClient.get(`${KasplexApi.getBaseUrl()}/krc20/address/${address}/tokenlist`, param);\n  }\n  static getBalance(address, tick) {\n    return httpClient.get(`${KasplexApi.getBaseUrl()}/krc20/address/${address}/token/${tick}`);\n  }\n  static getOpList(param) {\n    return httpClient.get(`${KasplexApi.getBaseUrl()}/krc20/oplist`, param);\n  }\n  static getOperationInfo(id) {\n    return httpClient.get(`${KasplexApi.getBaseUrl()}/krc20/op/${id}`);\n  }\n  static getVspcDetail(daascore) {\n    return httpClient.get(`${KasplexApi.getBaseUrl()}/archive/vspc/${daascore}`);\n  }\n  static getOpListByRange(oprange) {\n    return httpClient.get(`${KasplexApi.getBaseUrl()}/archive/oplist/${oprange}`);\n  }\n  static getMarketInfo(tick, param = {}) {\n    return httpClient.get(`${KasplexApi.getBaseUrl()}/krc20/market/${tick}`, param);\n  }\n  static getBlackList(ca, param = {}) {\n    return httpClient.get(`${KasplexApi.getBaseUrl()}/krc20/blacklist/${ca}`, param);\n  }\n}\n// src/api/kaspaApi.ts\nclass KaspaApi {\n  static getBaseUrl() {\n    const url = Kiwi.network === exports_kaspa.NetworkType.Mainnet ? BASE_URL_KASPA.MAIN : BASE_URL_KASPA.TEST;\n    if (!url) {\n      throw new Error(\"The current testing environment cannot call related interfaces.\");\n    }\n    return url;\n  }\n  static getBalance(kaspaAddress) {\n    return httpClient.get(`${this.getBaseUrl()}/addresses/${kaspaAddress}/balance`);\n  }\n  static postBalance(params) {\n    return httpClient.post(`${this.getBaseUrl()}/addresses/balances`, params);\n  }\n  static getUtxo(kaspaAddress) {\n    return httpClient.get(`${this.getBaseUrl()}/addresses/${kaspaAddress}/utxos`);\n  }\n  static postUtxos(params) {\n    return httpClient.post(`${this.getBaseUrl()}/addresses/utxos`, params);\n  }\n  static getFullTransactions(address, param = {}) {\n    return httpClient.get(`${this.getBaseUrl()}/addresses/${address}/full-transactions`, param);\n  }\n  static getFullTransactionPage(address, param = {}) {\n    return httpClient.get(`${this.getBaseUrl()}/addresses/${address}/full-transactions-page`, param);\n  }\n  static getTransactionsCount(kaspaAddress) {\n    return httpClient.get(`${this.getBaseUrl()}/addresses/${kaspaAddress}/transactions-count`);\n  }\n  static getInfoBlockdag() {\n    return httpClient.get(`${this.getBaseUrl()}/info/blockdag`);\n  }\n  static getInfoCoinsupply() {\n    return httpClient.get(`${this.getBaseUrl()}/info/coinsupply`);\n  }\n  static getInfoCoinsupplyCirculating() {\n    return httpClient.get(`${this.getBaseUrl()}/info/coinsupply/circulating`);\n  }\n  static getInfoCoinsupplyTotal() {\n    return httpClient.get(`${this.getBaseUrl()}/info/coinsupply/total`);\n  }\n  static getInfoKaspad() {\n    return httpClient.get(`${this.getBaseUrl()}/info/kaspad`);\n  }\n  static getInfoNetwork() {\n    return httpClient.get(`${this.getBaseUrl()}/info/network`);\n  }\n  static getInfoFeeEstimate() {\n    return httpClient.get(`${this.getBaseUrl()}/info/fee-estimate`);\n  }\n  static getInfoPrice() {\n    return httpClient.get(`${this.getBaseUrl()}/info/price`);\n  }\n  static getInfoBlockReward() {\n    return httpClient.get(`${this.getBaseUrl()}/info/blockreward`);\n  }\n  static getInfoHalving() {\n    return httpClient.get(`${this.getBaseUrl()}/info/halving`);\n  }\n  static getInfoHashRate() {\n    return httpClient.get(`${this.getBaseUrl()}/info/hashrate`);\n  }\n  static getInfoHashRateMax() {\n    return httpClient.get(`${this.getBaseUrl()}/info/hashrate/max`);\n  }\n  static getInfoHealth() {\n    return httpClient.get(`${this.getBaseUrl()}/info/health`);\n  }\n  static getInfoMarketcap() {\n    return httpClient.get(`${this.getBaseUrl()}/info/marketcap`);\n  }\n  static getBlocksBlockId(blockId) {\n    return httpClient.get(`${this.getBaseUrl()}/blocks/${blockId}`);\n  }\n  static getBlocks() {\n    return httpClient.get(`${this.getBaseUrl()}/blocks`);\n  }\n  static getBlocksFromBluescore() {\n    return httpClient.get(`${this.getBaseUrl()}/blocks-from-bluescore`);\n  }\n  static getTransactionsId(transactionId) {\n    return httpClient.get(`${this.getBaseUrl()}/transactions/${transactionId}`);\n  }\n  static postTransactionsSearch(params) {\n    return httpClient.post(`${this.getBaseUrl()}/transactions/search`, params);\n  }\n  static postTransactions(params) {\n    return httpClient.post(`${this.getBaseUrl()}/transactions`, params);\n  }\n  static postTransactionsMass(params) {\n    return httpClient.post(`${this.getBaseUrl()}/transactions/mass`, params);\n  }\n}\n// src/tx/pendingTransaction.ts\nclass PendingTransaction2 {\n  transaction;\n  constructor(transaction) {\n    this.transaction = transaction;\n  }\n  static async createTransactions(setting) {\n    const tx = await exports_kaspa.createTransactions(setting);\n    return new PendingTransaction2(tx);\n  }\n  sign(privateKeys, script) {\n    if (script) {\n      const privateKey = privateKeys[0];\n      if (!privateKey)\n        throw Error(\"PrivateKey not find\");\n      this.transaction.transactions.forEach((transaction) => {\n        transaction.transaction.inputs.forEach((input, index) => {\n          const signature = transaction.createInputSignature(index, privateKey);\n          transaction.fillInput(index, script.encodePayToScriptHashSignatureScript(signature));\n        });\n      });\n    } else {\n      const privateKey = privateKeys[0];\n      if (!privateKey)\n        throw Error(\"PrivateKey not find\");\n      this.transaction.transactions.forEach((transaction) => {\n        transaction.transaction.inputs.forEach((input, index) => {\n          transaction.sign([privateKey]);\n        });\n      });\n    }\n    return this;\n  }\n  async submit() {\n    const client = Rpc.getInstance().client;\n    for (const transaction of this.transaction.transactions) {\n      await transaction.submit(client);\n    }\n    return this.transaction.summary.finalTransactionId;\n  }\n}\n\n// src/tx/rawTransaction.ts\nclass RawTransaction {\n  transaction;\n  constructor(transaction) {\n    this.transaction = transaction;\n  }\n  static createTransactionWithEntries(entries, outputs, priorityFee, payload, sigOpCount) {\n    const tx = exports_kaspa.createTransaction(entries, outputs, priorityFee, payload, sigOpCount);\n    return new RawTransaction(tx);\n  }\n  static async createTransaction(address, outputs, priorityFee, payload, sigOpCount) {\n    const { entries } = await Rpc.getInstance().client.getUtxosByAddresses({ addresses: [address] });\n    const tx = exports_kaspa.createTransaction(entries, outputs, priorityFee, payload, sigOpCount);\n    return new RawTransaction(tx);\n  }\n  sign(privateKey, script, sigHashType) {\n    if (script) {\n      const length = this.transaction.inputs.length;\n      for (let i2 = 0;i2 < length; i2++) {\n        const signature = exports_kaspa.createInputSignature(this.transaction, i2, privateKey, sigHashType);\n        this.transaction.inputs[i2].signatureScript = script.encodePayToScriptHashSignatureScript(signature);\n      }\n    } else {\n      this.transaction = exports_kaspa.signTransaction(this.transaction, [privateKey], false);\n    }\n    return this;\n  }\n  toJson() {\n    return this.transaction.serializeToSafeJSON();\n  }\n  async submit() {\n    let resp = await Rpc.getInstance().client.submitTransaction({ transaction: this.transaction });\n    return resp.transactionId;\n  }\n}\n\n// src/tx/multiSignTransaction.ts\nclass MultiSignTransaction {\n  transaction;\n  constructor(transaction) {\n    this.transaction = transaction;\n  }\n  static async createTransaction(address, outputs, priorityFee, payload, sigOpCount) {\n    const { entries } = await Rpc.getInstance().client.getUtxosByAddresses({ addresses: [address] });\n    let total = entries.reduce((agg, curr) => {\n      return curr.amount + agg;\n    }, 0n);\n    if (priorityFee == undefined || priorityFee === 0n) {\n      priorityFee = 10000n;\n    }\n    let left = total - priorityFee;\n    outputs.forEach((output) => {\n      left -= output.amount;\n    });\n    outputs.push({ address, amount: left });\n    let tx = exports_kaspa.createTransaction(entries, outputs, priorityFee, payload, sigOpCount);\n    console.log(\"tx\", tx);\n    return new MultiSignTransaction(tx);\n  }\n  static createTransactionFromJson(json) {\n    let tx = exports_kaspa.Transaction.deserializeFromSafeJSON(json);\n    return new MultiSignTransaction(tx);\n  }\n  sign(privateKey, script, sigHashType) {\n    let length = this.transaction.inputs.length;\n    for (var i2 = 0;i2 < length; i2++) {\n      const signature = exports_kaspa.createInputSignature(this.transaction, i2, privateKey, sigHashType);\n      if (this.transaction.inputs[i2].signatureScript) {\n        this.transaction.inputs[i2].signatureScript += signature;\n      } else {\n        this.transaction.inputs[i2].signatureScript = signature;\n      }\n      this.transaction.payload;\n    }\n    return this;\n  }\n  signMessages(privateKey, sigHashType) {\n    let resp = [];\n    let length = this.transaction.inputs.length;\n    for (var i2 = 0;i2 < length; i2++) {\n      const signature = exports_kaspa.createInputSignature(this.transaction, i2, privateKey, sigHashType);\n      resp.push(signature);\n    }\n    return resp;\n  }\n  combineSignMessages(signMessage2) {\n    let length = this.transaction.inputs.length;\n    for (var i2 = 0;i2 < length; i2++) {\n      let sign = \"\";\n      signMessage2.forEach((signs) => {\n        sign += signs[i2];\n      });\n      this.transaction.inputs[i2].signatureScript = sign;\n    }\n    return this;\n  }\n  toJson() {\n    return this.transaction.serializeToSafeJSON();\n  }\n  signScript(script, sigHashType) {\n    let length = this.transaction.inputs.length;\n    for (var i2 = 0;i2 < length; i2++) {\n      this.transaction.inputs[i2].signatureScript += script.toString();\n    }\n    return this;\n  }\n  async submit() {\n    let resp = await Rpc.getInstance().client.submitTransaction({ transaction: this.transaction });\n    return resp.transactionId;\n  }\n}\n\n// src/tx/transaction.ts\nclass Transaction2 {\n  static async createTransactions(setting) {\n    return PendingTransaction2.createTransactions(setting);\n  }\n  static createTransaction(address, outputs, priorityFee, payload, sigOpCount) {\n    return RawTransaction.createTransaction(address, outputs, priorityFee, payload, sigOpCount);\n  }\n  static createTransactionWithEntries(entries, outputs, priorityFee, payload, sigOpCount) {\n    return RawTransaction.createTransactionWithEntries(entries, outputs, priorityFee, payload, sigOpCount);\n  }\n  static async createMultiSignTransaction(address, outputs, priorityFee, payload, sigOpCount) {\n    return await MultiSignTransaction.createTransaction(address.toString(), outputs, priorityFee, payload, sigOpCount);\n  }\n  static createMultiSignTransactionFromJson(json) {\n    return MultiSignTransaction.createTransactionFromJson(json);\n  }\n}\n\n// src/tx/output.ts\nclass Output {\n  static createOutputs(address, amount) {\n    return [{ address, amount }];\n  }\n  static new(address, amount) {\n    return { address, amount };\n  }\n}\n\n// src/KaspaTransaction.ts\nclass KaspaTransaction {\n  static async transferKas(privateKey, toAddress, amount, fee, payload) {\n    const outputs = Output.createOutputs(toAddress.toString(), amount);\n    return KaspaTransaction.transfer(privateKey, outputs, fee, payload);\n  }\n  static async transfer(privateKey, outputs, fee, payload) {\n    if (outputs.length === 0) {\n      throw new Error(\"outputs is empty\");\n    }\n    const fromAddress = privateKey.toKeypair().toAddress(Kiwi.network).toString();\n    const { entries } = await Rpc.getInstance().client.getUtxosByAddresses([fromAddress]);\n    return await Transaction2.createTransactions({\n      changeAddress: fromAddress,\n      outputs,\n      priorityFee: fee,\n      entries,\n      payload,\n      networkId: Kiwi.getNetworkID()\n    }).then((r) => r.sign([privateKey]).submit());\n  }\n}\n// src/script/script.ts\nclass Script {\n  static krc20Script(publicKey, data) {\n    return new exports_kaspa.ScriptBuilder().addData(publicKey).addOp(exports_kaspa.Opcodes.OpCheckSig).addOp(exports_kaspa.Opcodes.OpFalse).addOp(exports_kaspa.Opcodes.OpIf).addData(Buffer.from(KASPLEX)).addI64(0n).addData(Buffer.from(JSON.stringify(data, null, 0))).addOp(exports_kaspa.Opcodes.OpEndIf);\n  }\n  static lockTimeScript(publicKey, data, lockTime) {\n    const currentTime = Math.floor(Date.now() / 1000);\n    if (lockTime <= currentTime) {\n      throw new Error(`Lock time is in the past: ${lockTime}`);\n    }\n    return new exports_kaspa.ScriptBuilder().addData(publicKey).addOp(exports_kaspa.Opcodes.OpCheckSig).addLockTime(lockTime).addOp(exports_kaspa.Opcodes.OpCheckLockTimeVerify).addOp(exports_kaspa.Opcodes.OpFalse).addOp(exports_kaspa.Opcodes.OpIf).addData(Buffer.from(KASPLEX)).addI64(0n).addData(Buffer.from(JSON.stringify(data, null, 0))).addOp(exports_kaspa.Opcodes.OpEndIf);\n  }\n  static multiSignTx(publicKeys, require2, ecdsa) {\n    const script = new exports_kaspa.ScriptBuilder().addOp(exports_kaspa.Opcodes.OpReserved + require2);\n    publicKeys.forEach((pk) => {\n      script.addData(ecdsa ? pk : new exports_kaspa.PublicKey(pk).toXOnlyPublicKey().toString());\n    });\n    return script.addOp(exports_kaspa.Opcodes.OpReserved + publicKeys.length).addOp(ecdsa ? exports_kaspa.Opcodes.OpCheckMultiSigECDSA : exports_kaspa.Opcodes.OpCheckMultiSig);\n  }\n  static multiSignTxKrc20Script(publicKeys, data, require2, ecdsa) {\n    const script = new exports_kaspa.ScriptBuilder().addOp(exports_kaspa.Opcodes.OpReserved + require2);\n    publicKeys.forEach((pk) => {\n      script.addData(ecdsa ? pk : new exports_kaspa.PublicKey(pk).toXOnlyPublicKey().toString());\n    });\n    return script.addOp(exports_kaspa.Opcodes.OpReserved + publicKeys.length).addOp(exports_kaspa.Opcodes.OpCheckMultiSig).addOp(exports_kaspa.Opcodes.OpFalse).addOp(exports_kaspa.Opcodes.OpIf).addData(Buffer.from(KASPLEX)).addI64(0n).addData(Buffer.from(JSON.stringify(data, null, 0))).addOp(exports_kaspa.Opcodes.OpEndIf);\n  }\n  static multiSignAddress(require2, publicKeys, networkType, ecdsa) {\n    return exports_kaspa.createMultisigAddress(require2, publicKeys.map((pk) => new exports_kaspa.PublicKey(pk)), networkType, ecdsa);\n  }\n  static redeemScript(require2, publicKeys, ecdsa) {\n    const script = new exports_kaspa.ScriptBuilder().addOp(exports_kaspa.Opcodes.OpReserved + require2);\n    publicKeys.forEach((pk) => {\n      script.addData(ecdsa ? pk : new exports_kaspa.PublicKey(pk).toXOnlyPublicKey().toString());\n    });\n    script.addOp(exports_kaspa.Opcodes.OpReserved + publicKeys.length).addOp(ecdsa ? exports_kaspa.Opcodes.OpCheckMultiSigECDSA : exports_kaspa.Opcodes.OpCheckMultiSig);\n    return new exports_kaspa.ScriptBuilder().addData(script.toString());\n  }\n  static redeemMultiSignAddress(require2, publicKeys, ecdsa) {\n    const script = new exports_kaspa.ScriptBuilder().addOp(exports_kaspa.Opcodes.OpReserved + require2);\n    publicKeys.forEach((pk) => {\n      script.addData(ecdsa ? pk : new exports_kaspa.PublicKey(pk).toXOnlyPublicKey().toString());\n    });\n    script.addOp(exports_kaspa.Opcodes.OpReserved + publicKeys.length).addOp(ecdsa ? exports_kaspa.Opcodes.OpCheckMultiSigECDSA : exports_kaspa.Opcodes.OpCheckMultiSig);\n    return new exports_kaspa.ScriptBuilder().addData(script.toString());\n  }\n}\n// src/tx/entries.ts\nclass Entries {\n  static async entries(address) {\n    const { entries } = await Rpc.getInstance().client.getUtxosByAddresses({ addresses: [address] });\n    return entries;\n  }\n  static revealEntries(address, hash, scriptPublicKey, amount = BASE_KAS_TO_P2SH_ADDRESS, blockDaaScore = U64_MAX_VALUE) {\n    return [{\n      address,\n      amount,\n      outpoint: {\n        transactionId: hash,\n        index: 0\n      },\n      scriptPublicKey,\n      blockDaaScore,\n      isCoinbase: false\n    }];\n  }\n}\n\n// src/check.ts\nclass ValidateKrc20Data {\n  static #data;\n  static validateDeploy() {\n    return this.validateTick().validateAddress().validateAmt().validateMax().validateLim().validateDec().validatePre();\n  }\n  static validateMint() {\n    return this.validateTick().validateAddress();\n  }\n  static validateTransfer() {\n    return this.validateTickOrCa().validateAddress().validateAmt();\n  }\n  static validateList() {\n    return this.validateTick().validateAddress().validateAmt();\n  }\n  static validateSend() {\n    return this.validateTick().validateAddress();\n  }\n  static validateIssue() {\n    return this.validateAmt().validateAddress();\n  }\n  static validateBurn() {\n    return this.validateAmt();\n  }\n  static validateBlacklist() {\n    return this.validateCa().validateMod().validateAddress();\n  }\n  static validateChown() {\n    return this.validateCa().validateTo();\n  }\n  static validateTick() {\n    const { tick, name, mod } = this.#data;\n    if (!mod && (!tick || tick.length < 4 || tick.length > 6)) {\n      throw new Error(`Invalid input: ticker must be between 4 and 6 characters`);\n    }\n    if (mod && (!name || name.length < 4 || name.length > 6)) {\n      throw new Error(`Invalid input: name must be between 4 and 6 characters`);\n    }\n    return this;\n  }\n  static validateTickOrCa() {\n    const { tick, ca, mod } = this.#data;\n    if (tick) {\n      if (tick.length < 4 || tick.length > 6) {\n        throw new Error(`Invalid input: ticker must be between 4 and 6 characters`);\n      }\n    } else if (ca) {\n      if (ca.length < 60 || ca.length > 80) {\n        throw new Error(`Invalid input: ca invalid`);\n      }\n    } else {\n      throw new Error(`Invalid input: tick or ca not find`);\n    }\n    return this;\n  }\n  static validateAddress() {\n    const { to } = this.#data;\n    if (to && !Address2.validate(to)) {\n      throw new Error(`Invalid 'to' address: ${to}`);\n    }\n    return this;\n  }\n  static validateTo() {\n    return this.validateAddress();\n  }\n  static validateMax() {\n    const { max } = this.#data;\n    if (max && Number(max) <= 0) {\n      throw new Error(`Invalid input: max must be greater than 0`);\n    }\n    return this;\n  }\n  static validateLim() {\n    const { lim } = this.#data;\n    if (lim && Number(lim) <= 0) {\n      throw new Error(`Invalid input: lim must be greater than 0`);\n    }\n    return this;\n  }\n  static validateAmt() {\n    const { amt } = this.#data;\n    if (amt && Number(amt) <= 0) {\n      throw new Error(`Invalid input: amt must be greater than 0`);\n    }\n    return this;\n  }\n  static validateDec() {\n    const { dec } = this.#data;\n    if (dec && (Number(dec) < 0 || Number(dec) > 18)) {\n      throw new Error(`Invalid input: dec must be between 0 and 18`);\n    }\n    return this;\n  }\n  static validatePre() {\n    const { pre } = this.#data;\n    if (pre && Number(pre) <= 0) {\n      throw new Error(`Invalid input: pre must be greater than 0`);\n    }\n    return this;\n  }\n  static validateCa() {\n    const { ca } = this.#data;\n    if (!ca) {\n      throw new Error(`Invalid input: ca is required`);\n    }\n    return this;\n  }\n  static validateMod() {\n    const { mod } = this.#data;\n    if (!mod || mod !== \"add\" && mod !== \"remove\") {\n      throw new Error(`Invalid input: mod must be 'add' or 'remove'`);\n    }\n    return this;\n  }\n  static validate(data) {\n    this.#data = data;\n    switch (data.op) {\n      case \"deploy\" /* Deploy */:\n        this.validateDeploy();\n        break;\n      case \"mint\" /* Mint */:\n        this.validateMint();\n        break;\n      case \"transfer\" /* Transfer */:\n        this.validateTransfer();\n        break;\n      case \"list\" /* List */:\n        this.validateList();\n        break;\n      case \"send\" /* Send */:\n        this.validateSend();\n        break;\n      case \"issue\" /* Issue */:\n        this.validateIssue();\n        break;\n      case \"burn\" /* Burn */:\n        this.validateBurn();\n        break;\n      case \"blacklist\" /* Blacklist */:\n        this.validateBlacklist();\n        break;\n      case \"chown\" /* Chown */:\n        this.validateChown();\n        break;\n      default:\n        throw new Error(`Unsupported operation: ${data.op}`);\n    }\n  }\n}\n\n// src/krc20.ts\nclass KRC20 {\n  static async executeCommit(privateKey, data, fee = 0n) {\n    ValidateKrc20Data.validate(data);\n    const fromAddress = privateKey.toPublicKey().toAddress(Kiwi.network).toString();\n    const script = this.createScript(privateKey, data);\n    const p2shAddress = this.createP2SHAddress(script);\n    let { p2shFee, priorityFee } = this.getFeeInfo(data.op);\n    const outputs = Output.createOutputs(p2shAddress.toString(), p2shFee);\n    const { entries } = await Rpc.getInstance().client.getUtxosByAddresses([fromAddress]);\n    return Transaction2.createTransactions({\n      changeAddress: fromAddress,\n      outputs,\n      priorityFee: fee,\n      entries,\n      networkId: Kiwi.getNetworkID()\n    }).then((r) => r.sign([privateKey]).submit());\n  }\n  static async executeReveal(privateKey, data, commitTxid) {\n    ValidateKrc20Data.validate(data);\n    const script = this.createScript(privateKey, data);\n    const p2shAddress = this.createP2SHAddress(script);\n    const fromAddress = privateKey.toPublicKey().toAddress(Kiwi.network).toString();\n    let { priorityFee } = this.getFeeInfo(data.op);\n    const { entries } = await Rpc.getInstance().client.getUtxosByAddresses([p2shAddress]);\n    const entry = entries.find((entry2) => {\n      return entry2.entry.outpoint.transactionId === commitTxid;\n    });\n    if (entry == undefined)\n      throw Error(\"commit txid not find\");\n    priorityFee = priorityFee === 0n ? 100000n : priorityFee;\n    return Transaction2.createTransactions({\n      changeAddress: fromAddress,\n      outputs: [],\n      priorityFee,\n      entries: [entry],\n      networkId: Kiwi.getNetworkID()\n    }).then((r) => r.sign([privateKey], script).submit());\n  }\n  static async executeOperation(privateKey, data, fee = 0n, payload) {\n    ValidateKrc20Data.validate(data);\n    const script = this.createScript(privateKey, data);\n    const p2shAddress = this.createP2SHAddress(script);\n    const fromAddress = privateKey.toPublicKey().toAddress(Kiwi.network).toString();\n    let { p2shFee, priorityFee } = this.getFeeInfo(data.op);\n    const outputs = Output.createOutputs(p2shAddress.toString(), p2shFee);\n    const { entries } = await Rpc.getInstance().client.getUtxosByAddresses([fromAddress]);\n    const commitTxid = await Transaction2.createTransactions({\n      changeAddress: fromAddress,\n      outputs,\n      priorityFee: fee,\n      entries,\n      networkId: Kiwi.getNetworkID()\n    }).then((r) => r.sign([privateKey]).submit());\n    const revealEntries = Entries.revealEntries(p2shAddress, commitTxid, script.createPayToScriptHashScript(), p2shFee);\n    priorityFee = priorityFee === 0n ? 100000n : priorityFee;\n    return Transaction2.createTransactions({\n      changeAddress: fromAddress,\n      outputs: [],\n      priorityFee,\n      entries: revealEntries,\n      payload,\n      networkId: Kiwi.getNetworkID()\n    }).then((r) => r.sign([privateKey], script).submit());\n  }\n  static getScriptPublicKey(txOutput) {\n    if (typeof txOutput.scriptPublicKey === \"string\") {\n      return txOutput.scriptPublicKey;\n    } else if (\"toJSON\" in txOutput.scriptPublicKey && \"free\" in txOutput.scriptPublicKey) {\n      return txOutput.scriptPublicKey;\n    } else {\n      throw new Error(\"Invalid scriptPublicKey type\");\n    }\n  }\n  static async mint(privateKey, data, fee = 0n, payload) {\n    if (data.op !== \"mint\" /* Mint */)\n      throw new Error(\"Invalid input: 'op' must be 'mint'\");\n    return await KRC20.executeOperation(privateKey, data, fee, payload);\n  }\n  static async deploy(privateKey, data, fee = 0n, payload) {\n    if (data.op !== \"deploy\" /* Deploy */)\n      throw new Error(\"Invalid input: 'op' must be 'deploy'\");\n    return await KRC20.executeOperation(privateKey, data, fee, payload);\n  }\n  static async transfer(privateKey, data, fee = 0n, payload) {\n    if (!data.to || !data.amt)\n      throw new Error(\"Invalid input: 'to' and 'amt' must be provided\");\n    return await KRC20.executeOperation(privateKey, data, fee, payload);\n  }\n  static async list(privateKey, data, fee = 0n) {\n    if (data.op !== \"list\" /* List */)\n      throw new Error(\"Invalid input: 'op' must be 'list'\");\n    ValidateKrc20Data.validate(data);\n    const script = this.createScript(privateKey, data);\n    const p2shAddress = this.createP2SHAddress(script);\n    const fromAddress = privateKey.toPublicKey().toAddress(Kiwi.network).toString();\n    let { p2shFee, priorityFee } = this.getFeeInfo(data.op);\n    const outputs = Output.createOutputs(p2shAddress.toString(), p2shFee);\n    const { entries } = await Rpc.getInstance().client.getUtxosByAddresses([fromAddress]);\n    const commitTxid = await Transaction2.createTransactions({\n      changeAddress: fromAddress,\n      outputs,\n      priorityFee: fee,\n      entries,\n      networkId: Kiwi.getNetworkID()\n    }).then((r) => r.sign([privateKey]).submit());\n    const revealEntries = Entries.revealEntries(p2shAddress, commitTxid, script.createPayToScriptHashScript(), p2shFee);\n    priorityFee = priorityFee === 0n ? 100000n : priorityFee;\n    let sendKrc20Data = createKrc20Data({\n      p: \"krc-20\",\n      op: \"send\" /* Send */,\n      tick: data.tick\n    });\n    let sendScript = KRC20.createScript(privateKey, sendKrc20Data);\n    const SendP2SHAddress = exports_kaspa.addressFromScriptPublicKey(sendScript.createPayToScriptHashScript(), Kiwi.network);\n    let sendOutputs = Output.createOutputs(SendP2SHAddress.toString(), DEFAULT_FEE);\n    return Transaction2.createTransactions({\n      changeAddress: fromAddress,\n      outputs: sendOutputs,\n      priorityFee,\n      entries: revealEntries,\n      networkId: Kiwi.getNetworkID()\n    }).then((r) => r.sign([privateKey], script).submit());\n  }\n  static async sendTransaction(privateKey, data, hash, amount, payload = \"\") {\n    if (data.op !== \"send\" /* Send */) {\n      throw new Error(\"Invalid input: 'op' must be 'send'\");\n    }\n    const script = KRC20.createScript(privateKey, data);\n    const scriptPublicKey = script.createPayToScriptHashScript();\n    const p2shAddress = exports_kaspa.addressFromScriptPublicKey(scriptPublicKey, Kiwi.network);\n    const fromAddress = privateKey.toPublicKey().toAddress(Kiwi.network).toString();\n    const { entries } = await Rpc.getInstance().client.getUtxosByAddresses({ addresses: [p2shAddress.toString()] });\n    const entry = entries.find((entry2) => entry2.entry.outpoint.transactionId === hash);\n    if (entry == undefined)\n      throw Error(\"commit txid not find\");\n    const output = Output.createOutputs(fromAddress, amount);\n    const revealEntries = Entries.revealEntries(p2shAddress, hash, scriptPublicKey, entry.amount);\n    return Transaction2.createTransactionWithEntries(revealEntries, output, 0n, payload, 1).sign(privateKey, script, exports_kaspa.SighashType.SingleAnyOneCanPay).toJson();\n  }\n  static async send(privateKey, sendTx, priorityFee = 0n) {\n    let send = exports_kaspa.Transaction.deserializeFromSafeJSON(sendTx);\n    const fromAddress = privateKey.toPublicKey().toAddress(Kiwi.network);\n    let { entries } = await Rpc.getInstance().client.getUtxosByAddresses({ addresses: [fromAddress.toString()] });\n    send.inputs.forEach((input) => {\n      if (input.utxo) {\n        entries.unshift(input.utxo);\n      } else {\n        throw new Error(\"Invalid input: 'utxo' is undefined\");\n      }\n    });\n    const outputs = send.outputs.map((output) => ({\n      address: exports_kaspa.addressFromScriptPublicKey(output.scriptPublicKey, Kiwi.network).toString(),\n      amount: output.value\n    }));\n    let sendPending = await Transaction2.createTransactions({\n      priorityEntries: [],\n      changeAddress: fromAddress,\n      outputs,\n      priorityFee,\n      entries,\n      networkId: Kiwi.getNetworkID()\n    });\n    let sendTransaction = sendPending.transaction;\n    sendTransaction.transactions[0].fillInput(0, send.inputs[0].signatureScript);\n    for (const transaction of sendPending.transaction.transactions) {\n      transaction.sign([privateKey], false);\n    }\n    return sendPending.submit();\n  }\n  static async multiMint(privateKey, data, fee = 0n, executionCount = 1, callback) {\n    if (data.op !== \"mint\" /* Mint */)\n      throw new Error(\"Invalid input: 'op' must be 'mint'\");\n    if (executionCount < 1)\n      throw new Error(\"Invalid executionCount\");\n    const fromAddress = privateKey.toPublicKey().toAddress(Kiwi.network).toString();\n    const script = this.createScript(privateKey, data);\n    const p2shAddress = this.createP2SHAddress(script);\n    const mintFee = getFeeByOp(\"mint\" /* Mint */);\n    let payToP2SHAmount = mintFee * BigInt(executionCount) + BASE_P2SH_TO_KASPA_ADDRESS;\n    const outputs = Output.createOutputs(p2shAddress.toString(), payToP2SHAmount);\n    const { entries } = await Rpc.getInstance().client.getUtxosByAddresses([fromAddress]);\n    let commitTxid = await Transaction2.createTransactions({\n      changeAddress: fromAddress,\n      outputs,\n      priorityFee: fee,\n      entries,\n      networkId: Kiwi.getNetworkID()\n    }).then((r) => r.sign([privateKey]).submit());\n    let publicKey = script.createPayToScriptHashScript();\n    for (let i2 = 0;i2 < executionCount; i2++) {\n      const revealEntries = Entries.revealEntries(p2shAddress, commitTxid, publicKey, payToP2SHAmount);\n      const recipientAddress = i2 === executionCount - 1 ? fromAddress : p2shAddress.toString();\n      const outputs2 = Output.createOutputs(recipientAddress.toString(), payToP2SHAmount - mintFee);\n      let tx = exports_kaspa.createTransaction(revealEntries, outputs2, 0n, \"\", 1);\n      commitTxid = await new RawTransaction(tx).sign(privateKey, script).submit();\n      payToP2SHAmount = payToP2SHAmount - mintFee;\n      if (callback && typeof callback === \"function\") {\n        try {\n          callback(i2 + 1, commitTxid);\n        } catch (error) {\n          console.warn(`Callback error at step ${i2 + 1}:`, error);\n        }\n      }\n    }\n    return;\n  }\n  static async multiMintWithReuseUtxo(privateKey, data, fee = 0n, executionCount = 1, callback) {\n    if (data.op !== \"mint\" /* Mint */)\n      throw new Error(\"Invalid input: 'op' must be 'mint'\");\n    if (executionCount < 1)\n      throw new Error(\"Invalid executionCount\");\n    const fromAddress = privateKey.toPublicKey().toAddress(Kiwi.network).toString();\n    const script = this.createScript(privateKey, data);\n    const p2shAddress = this.createP2SHAddress(script);\n    const mintFee = getFeeByOp(\"mint\" /* Mint */);\n    let payToP2SHAmount = mintFee * BigInt(executionCount) + BASE_P2SH_TO_KASPA_ADDRESS;\n    let p2shBalance = await Rpc.getInstance().client.getBalanceByAddress({\n      address: p2shAddress.toString()\n    });\n    let commitTxid = undefined;\n    let chargeAmount = payToP2SHAmount;\n    if (payToP2SHAmount > p2shBalance.balance) {\n      chargeAmount = payToP2SHAmount - p2shBalance.balance;\n      const outputs = Output.createOutputs(p2shAddress.toString(), chargeAmount);\n      const { entries } = await Rpc.getInstance().client.getUtxosByAddresses([fromAddress]);\n      commitTxid = await Transaction2.createTransactions({\n        changeAddress: fromAddress,\n        outputs,\n        priorityFee: fee,\n        entries,\n        networkId: Kiwi.getNetworkID()\n      }).then((r) => r.sign([privateKey]).submit());\n    }\n    let publicKey = script.createPayToScriptHashScript();\n    for (let i2 = 0;i2 < executionCount; i2++) {\n      let revealEntries = [];\n      if (i2 == 0) {\n        revealEntries = (await Rpc.getInstance().client.getUtxosByAddresses([p2shAddress])).entries;\n        if (commitTxid) {\n          const entries = Entries.revealEntries(p2shAddress, commitTxid, publicKey, chargeAmount);\n          revealEntries = revealEntries.concat(entries);\n        }\n      } else {\n        revealEntries = Entries.revealEntries(p2shAddress, commitTxid, publicKey, payToP2SHAmount);\n      }\n      const recipientAddress = i2 === executionCount - 1 ? fromAddress : p2shAddress.toString();\n      const outputs = Output.createOutputs(recipientAddress.toString(), payToP2SHAmount - mintFee);\n      let tx = exports_kaspa.createTransaction(revealEntries, outputs, 0n, \"\", 1);\n      commitTxid = await new RawTransaction(tx).sign(privateKey, script).submit();\n      payToP2SHAmount = payToP2SHAmount - mintFee;\n      if (callback && typeof callback === \"function\") {\n        try {\n          callback(i2 + 1, commitTxid);\n        } catch (error) {\n          console.warn(`Callback error at step ${i2 + 1}:`, error);\n        }\n      }\n    }\n    return;\n  }\n  static getFeeInfo(op) {\n    const priorityFee = getFeeByOp(op);\n    const p2shFee = (priorityFee === 0n ? DEFAULT_FEE : priorityFee) + BASE_P2SH_TO_KASPA_ADDRESS;\n    return { p2shFee, priorityFee };\n  }\n  static createScript(privateKey, data) {\n    return Script.krc20Script(privateKey.toPublicKey().toXOnlyPublicKey().toString(), data);\n  }\n  static createP2SHAddress(script) {\n    return exports_kaspa.addressFromScriptPublicKey(script.createPayToScriptHashScript(), Kiwi.network);\n  }\n  static async issue(privateKey, data, fee = 0n, payload) {\n    if (data.op !== \"issue\" /* Issue */)\n      throw new Error(\"Invalid input: 'op' must be 'issue'\");\n    return await KRC20.executeOperation(privateKey, data, fee, payload);\n  }\n  static async burn(privateKey, data, fee = 0n, payload) {\n    if (data.op !== \"burn\" /* Burn */)\n      throw new Error(\"Invalid input: 'op' must be 'burn'\");\n    return await KRC20.executeOperation(privateKey, data, fee, payload);\n  }\n  static async blacklist(privateKey, data, fee = 0n, payload) {\n    if (data.op !== \"blacklist\" /* Blacklist */)\n      throw new Error(\"Invalid input: 'op' must be 'blacklist'\");\n    return await KRC20.executeOperation(privateKey, data, fee, payload);\n  }\n  static async chown(privateKey, data, fee = 0n, payload) {\n    if (data.op !== \"chown\" /* Chown */)\n      throw new Error(\"Invalid input: 'op' must be 'chown'\");\n    return await KRC20.executeOperation(privateKey, data, fee, payload);\n  }\n}\n// src/init.ts\nasync function initialize(wasmUrl) {\n  if (typeof kaspa_default === \"function\") {\n    try {\n      await kaspa_default(wasmUrl || \"\");\n    } catch (err) {\n      console.error(\"WASM init fail:\", err);\n    }\n  }\n}\n// src/browerExtend/walletDetector.ts\nclass BrowerWallet {\n  static walletList = [];\n  static async getBrowerWalletList() {\n    if (this.walletList.length)\n      return this.walletList;\n    for (const key in WALLET_ID_LIST) {\n      const isInstalled = await this.isExtInstalled(key);\n      if (isInstalled) {\n        this.walletList.push(key);\n      }\n    }\n    return this.walletList;\n  }\n  static async detectBrowserExtensions(extensionNames) {\n    const results = {};\n    if (!extensionNames || extensionNames.length === 0)\n      return results;\n    await Promise.all(extensionNames.map(async (extensionNames2) => {\n      results[extensionNames2] = await this.isExtInstalled(extensionNames2);\n    }));\n    return results;\n  }\n  static async isExtInstalled(extensionName, retries = 3, delay = 350) {\n    try {\n      if (!extensionName)\n        return false;\n      for (let i2 = 0;i2 < retries; i2++) {\n        const wallet = window[extensionName];\n        if (wallet && typeof wallet === \"object\") {\n          return true;\n        }\n        await new Promise((resolve) => setTimeout(resolve, delay));\n      }\n      return false;\n    } catch (error) {\n      return false;\n    }\n  }\n  static async getWallet(walletName) {\n    if (!walletName)\n      return null;\n    const extensionName = Object.keys(WALLET_ID_LIST).find((key) => key.toLowerCase() === walletName.toLowerCase()) || walletName;\n    const retries = extensionName === \"kastle\" ? 4 : 2;\n    const isInstalled = await this.isExtInstalled(extensionName, retries);\n    return isInstalled ? window[extensionName] : null;\n  }\n}\n\n// src/browerExtend/errorMsg.ts\nvar errorMsg = {\n  WALLET_NOT_FOUND: (walletName) => `Wallet \"${walletName}\" not found or invalid`,\n  WALLET_NOT_INITIALIZED: \"Please use WalletApi.create() to create an instance.\",\n  WALLET_OBJECT_NOT_INITIALIZED: \"Wallet object not initialized\",\n  FUNCTION_NAME_REQUIRED: \"Function name is required\",\n  METHOD_NOT_FUNCTION: (functionName) => `Method \"${functionName}\" is not a function`,\n  WALLET_PROVIDER_NOT_INITIALIZED: \"Wallet provider not initialized. Call authorize() first.\"\n};\n\n// src/browerExtend/walletApi.ts\nclass WalletApi {\n  walletObj = null;\n  initialized = false;\n  walletName = \"\";\n  constructor() {}\n  async initWallet(walletName) {\n    this.walletObj = await BrowerWallet.getWallet(walletName);\n    if (!this.walletObj) {\n      throw new Error(errorMsg.WALLET_NOT_FOUND(walletName));\n    }\n    this.walletName = walletName;\n    this.initialized = true;\n  }\n  static async create(walletName) {\n    const instance = new WalletApi;\n    await instance.initWallet(walletName);\n    return instance;\n  }\n  async ensureInitialized() {\n    if (!this.initialized) {\n      throw new Error(errorMsg.WALLET_NOT_INITIALIZED);\n    }\n  }\n  async checkFun(functionName) {\n    try {\n      await this.ensureInitialized();\n      if (!this.walletObj) {\n        throw new Error(errorMsg.WALLET_OBJECT_NOT_INITIALIZED);\n      }\n      if (!functionName) {\n        throw new Error(errorMsg.FUNCTION_NAME_REQUIRED);\n      }\n      const fn = this.walletObj[functionName];\n      if (typeof fn !== \"function\") {\n        throw new Error(errorMsg.METHOD_NOT_FUNCTION(functionName));\n      }\n      return fn.bind(this.walletObj);\n    } catch (error) {\n      throw Error(error);\n    }\n  }\n  async authorize() {\n    if (!this.walletName)\n      return \"\";\n    const method = WALLET_AUTH_METHODS[this.walletName.toLowerCase()];\n    return method ? await this[method]() : \"\";\n  }\n  validateWalletObject() {\n    if (!this.walletObj) {\n      throw new Error(errorMsg.WALLET_PROVIDER_NOT_INITIALIZED);\n    }\n  }\n  async onAccountsChanged(handler) {\n    await this.ensureInitialized();\n    this.validateWalletObject();\n    this.walletObj && this.walletObj.on(\"accountsChanged\", handler);\n  }\n  async offAccountsChanged(handler) {\n    await this.ensureInitialized();\n    this.validateWalletObject();\n    this.walletObj && this.walletObj.removeListener(\"accountsChanged\", handler);\n  }\n  async onNetworkChanged(handler) {\n    await this.ensureInitialized();\n    this.validateWalletObject();\n    this.walletObj && this.walletObj.on(\"networkChanged\", handler);\n  }\n  async offNetworkChanged(handler) {\n    await this.ensureInitialized();\n    this.validateWalletObject();\n    this.walletObj && this.walletObj.removeListener(\"networkChanged\", handler);\n  }\n  async requestAccounts() {\n    const fn = await this.checkFun(\"requestAccounts\");\n    return await fn();\n  }\n  async getAccounts() {\n    const fn = await this.checkFun(\"getAccounts\");\n    return await fn();\n  }\n  async getAccount() {\n    const fn = await this.checkFun(\"getAccount\");\n    return await fn();\n  }\n  async getVersion() {\n    const fn = await this.checkFun(\"getVersion\");\n    return await fn();\n  }\n  async getNetwork() {\n    const fn = await this.checkFun(\"getNetwork\");\n    return await fn();\n  }\n  async switchNetwork(network) {\n    const fn = await this.checkFun(\"switchNetwork\");\n    return await fn(network);\n  }\n  async disconnect(orgin) {\n    const fn = await this.checkFun(\"disconnect\");\n    return await fn(orgin);\n  }\n  async getPublicKey() {\n    const fn = await this.checkFun(\"getPublicKey\");\n    return await fn();\n  }\n  async getBalance() {\n    const fn = await this.checkFun(\"getBalance\");\n    return await fn();\n  }\n  async getKRC20Balance() {\n    const fn = await this.checkFun(\"getKRC20Balance\");\n    return await fn();\n  }\n  async getUtxoEntries() {\n    const fn = await this.checkFun(\"getUtxoEntries\");\n    return await fn();\n  }\n  async sendKaspa(toAddress, sompi, options) {\n    const fn = await this.checkFun(\"sendKaspa\");\n    return await fn(toAddress, sompi, options || {});\n  }\n  async signPskt({ txJsonString, options }) {\n    const fn = await this.checkFun(\"signPskt\");\n    return await fn({ txJsonString, options });\n  }\n  async buildScript({ type, data }) {\n    const fn = await this.checkFun(\"buildScript\");\n    return await fn({ type, data });\n  }\n  async submitCommitReveal(commit, reveal, script, networkId) {\n    const fn = await this.checkFun(\"submitCommitReveal\");\n    return await fn(commit, reveal, script, networkId);\n  }\n  async createKRC20Order({\n    krc20Tick,\n    krc20Amount,\n    kasAmount,\n    psktExtraOutput,\n    priorityFee\n  }) {\n    const fn = await this.checkFun(\"createKRC20Order\");\n    return await fn({ krc20Tick, krc20Amount, kasAmount, psktExtraOutput, priorityFee });\n  }\n  async buyKRC20Token({ txJsonString, extraOutput, priorityFee }) {\n    const fn = await this.checkFun(\"buyKRC20Token\");\n    return await fn({ txJsonString, extraOutput, priorityFee });\n  }\n  async cancelKRC20Order({ krc20Tick, txJsonString, sendCommitTxId }) {\n    const fn = await this.checkFun(\"cancelKRC20Order\");\n    return await fn({ krc20Tick, txJsonString, sendCommitTxId });\n  }\n  async signMessage(msg, type) {\n    const fn = await this.checkFun(\"signMessage\");\n    return await fn(msg, type);\n  }\n  async signKRC20Transaction(inscribeJsonString, type, destAddr, priorityFee) {\n    const fn = await this.checkFun(\"signKRC20Transaction\");\n    return await fn(inscribeJsonString, type, destAddr, priorityFee);\n  }\n  async getChain() {\n    const fn = await this.checkFun(\"getChain\");\n    return await fn();\n  }\n  async switchChain(chain) {\n    const fn = await this.checkFun(\"switchChain\");\n    return await fn(chain);\n  }\n  async getInscriptions(cursor = 0, size = 10) {\n    const fn = await this.checkFun(\"getInscriptions\");\n    return await fn(cursor, size);\n  }\n  async sendBitcoin(toAddress, satoshis, options) {\n    const fn = await this.checkFun(\"sendBitcoin\");\n    return await fn(toAddress, satoshis, options);\n  }\n  async sendRunes(address, runeid, amount, options) {\n    const fn = await this.checkFun(\"sendRunes\");\n    return await fn(address, runeid, amount, options);\n  }\n  async sendInscription(address, inscriptionId, options) {\n    const fn = await this.checkFun(\"sendInscription\");\n    return await fn(address, inscriptionId, options);\n  }\n  async inscribeTransfer(ticker, amount) {\n    const fn = await this.checkFun(\"inscribeTransfer\");\n    return await fn(ticker, amount);\n  }\n  async pushTx(options) {\n    const fn = await this.checkFun(\"pushTx\");\n    return await fn(options);\n  }\n  async signPsbt(psbtHex, options) {\n    const fn = await this.checkFun(\"signPsbt\");\n    return await fn(psbtHex, options);\n  }\n  async signPsbts(psbtHexs, options) {\n    const fn = await this.checkFun(\"signPsbts\");\n    return await fn(psbtHexs, options);\n  }\n  async pushPsbt(psbtHex) {\n    const fn = await this.checkFun(\"pushPsbt\");\n    return await fn(psbtHex);\n  }\n  async connect() {\n    const fn = await this.checkFun(\"connect\");\n    return await fn();\n  }\n  async initialize() {\n    const fn = await this.checkFun(\"initialize\");\n    return await fn();\n  }\n  async openDeployKrc20View() {\n    const fn = await this.checkFun(\"openDeployKrc20View\");\n    return await fn();\n  }\n  async openMintKrc20View() {\n    const fn = await this.checkFun(\"openMintKrc20View\");\n    return await fn();\n  }\n  async verifyMessage() {\n    const fn = await this.checkFun(\"verifyMessage\");\n    return await fn();\n  }\n}\n// src/types/index.ts\nvar exports_types = {};\n// src/tx/index.ts\nvar exports_tx = {};\n__export(exports_tx, {\n  Transaction: () => Transaction2,\n  RawTransaction: () => RawTransaction,\n  PendingTransaction: () => PendingTransaction2,\n  Output: () => Output,\n  Outpoint: () => Outpoint,\n  Entries: () => Entries\n});\n\n// src/tx/outpoint.ts\nclass Outpoint {\n  static outpoint(hash, index) {\n    return {\n      transactionId: hash,\n      index: index || 0\n    };\n  }\n}\n// src/index.ts\nglobalThis.Buffer = Buffer2;\nexport {\n  initialize,\n  exports_kaspa as Wasm,\n  WalletApi,\n  Wallet2 as Wallet,\n  exports_utils as Utils,\n  exports_tx as Tx,\n  Script,\n  Rpc,\n  exports_types as Modules,\n  Mnemonic2 as Mnemonic,\n  Kiwi,\n  KasplexApi,\n  KaspaTransaction,\n  KaspaApi,\n  KRC20,\n  exports_enum as Enum,\n  BrowerWallet\n};\n","import { ADMIN_ADDRESS } from './admin-address.js';\n\n// Declare window.gitchain for TypeScript\ninterface Gitchain {\n    saveGithubAccessToken: () => void;\n    viewChain: () => Promise<void>;\n    processTxns: () => Promise<void>;\n    fetchState: () => Promise<{ content: State; sha: string } | null>;\n    connectAndSendTx: (tx: Transaction) => Promise<void>;\n    KasplexSignalling: typeof KasplexSignalling;\n    WebRTCConnection: typeof WebRTCConnection;\n}\ndeclare global {\n    interface Window {\n        gitchain: Gitchain;\n    }\n}\n\nimport { createLibp2p } from 'libp2p';\nimport { webRTC } from '@libp2p/webrtc';\nimport { webSockets } from '@libp2p/websockets';\nimport { noise } from '@chainsafe/libp2p-noise';\nimport { yamux } from '@chainsafe/libp2p-yamux';\nimport { identify } from '@libp2p/identify';\nimport { circuitRelayTransport } from '@libp2p/circuit-relay-v2';\nimport { bootstrap } from '@libp2p/bootstrap';\nimport { gossipsub } from '@libp2p/gossipsub';\nimport { pubsubPeerDiscovery } from '@libp2p/pubsub-peer-discovery';\nimport { multiaddr } from '@multiformats/multiaddr';\nimport { fromString as uint8FromString, toString as uint8ToString } from 'uint8arrays';\nimport CryptoJS from 'crypto-js';\nimport { ec } from 'elliptic';\nimport { keccak256 as keccak256Buffer } from 'js-sha3';\nimport { concat as uint8Concat } from 'uint8arrays';\n\n// Kasplex SDK\nimport { Wallet, Rpc, Wasm, Kiwi } from '@kasplex/kiwi-web';\n\n// Dynamic OWNER and REPO from URL\nconst hostnameParts = location.hostname.split('.');\nconst OWNER: string = hostnameParts[0];\nconst REPO: string = location.pathname === '/' || location.pathname === '' ? `${OWNER}.github.io` : location.pathname.split('/')[1];\nconst FQ_REPO: string = `${OWNER}/${REPO}`;\nconst SERVER_PEER_PATH: string = 'data/server-peer.json';\nconst SERVER_PEER_URL: string = `https://api.github.com/repos/${FQ_REPO}/contents/${SERVER_PEER_PATH}`;\nconst SERVER_PEER_RAW_URL: string = `https://raw.githubusercontent.com/${FQ_REPO}/main/${SERVER_PEER_PATH}`;\nconst STATE_PATH: string = 'data/state.json';\nconst STATE_URL: string = `https://api.github.com/repos/${FQ_REPO}/contents/${STATE_PATH}`;\nconst GITHUB_ACCESS_TOKEN_KEY: string = 'gitchain_github_access_token';\nconst ISSUES_URL: string = `https://api.github.com/repos/${FQ_REPO}/issues`;\n// Constants for P2P\nconst PROTOCOL = '/gitchain/tx/1.0.0';\nconst UPDATE_INTERVAL = 2 * 60 * 1000; // 2 minutes\n// Global P2P state\nlet libp2p: any = null;\nlet isServer = false;\nlet serverPeers: string[] = [];\n\n// ---------------------------------------------------------------------------\n// KasplexSignalling – signalling layer over Kasplex L2\n// ---------------------------------------------------------------------------\nexport class KasplexSignalling {\n  chainId: string;\n  provider: any;\n  wallet: any;\n  mnemonic: string | null = null;\n  address: string | null = null;\n  listeners: ((msg: any) => void)[] = [];\n  pollingInterval: any = null;\n\n  constructor(chainId = '167012') {\n    this.chainId = chainId;\n  }\n\n  generateWallet() {\n    this.mnemonic = (Wallet as any).generateMnemonic(12);\n    if (!this.mnemonic) throw new Error('Mnemonic not generated');\n    this.wallet = Wallet.fromMnemonic(this.mnemonic);\n    this.address = this.wallet.getAddress().toString();\n    return { mnemonic: this.mnemonic, address: this.address };\n  }\n\n  async connect() {\n    Kiwi.setNetwork(this.chainId === '167012' ? Wasm.NetworkType.Testnet : Wasm.NetworkType.Mainnet);\n    await Rpc.setInstance(Wasm.NetworkType.Testnet).connect()\n    this.startPolling();\n  }\n\n  async sendMessage(to: string, type: 'offer' | 'answer' | 'candidate', data: any) {\n    if (!this.wallet) throw new Error('Wallet not generated');\n    const payload = JSON.stringify({ from: this.address, to, type, data });\n    const txData = '0x' + Buffer.from(payload, 'utf8').toString('hex');\n\n    const tx = await this.wallet.sendTransaction({\n      to: '0x0000000000000000000000000000000000000000',\n      data: txData,\n      value: 0n,\n      gasLimit: 21000n,\n    });\n    await tx.wait();\n    console.log(`[Kasplex] Sent ${type} to ${to.slice(-8)}`);\n  }\n\n  private startPolling() {\n    this.pollingInterval = setInterval(async () => {\n      try {\n        const blockNumber = await this.provider.getBlockNumber();\n        const block = await this.provider.getBlock(blockNumber, true);\n        for (const tx of block.transactions) {\n          if (tx.to?.toLowerCase() === '0x0000000000000000000000000000000000000000' && tx.input) {\n            const raw = Buffer.from(tx.input.slice(2), 'hex').toString('utf8');\n            let parsed;\n            try { parsed = JSON.parse(raw); } catch { continue; }\n            if (parsed.to === this.address) {\n              this.listeners.forEach(cb => cb(parsed));\n            }\n          }\n        }\n      } catch (e) {\n        console.error('Polling error:', e);\n      }\n    }, 5000);\n  }\n\n  on(event: 'message', cb: (msg: any) => void) {\n    if (event === 'message') this.listeners.push(cb);\n  }\n\n  destroy() {\n    if (this.pollingInterval) clearInterval(this.pollingInterval);\n  }\n}\n\n// ---------------------------------------------------------------------------\n// WebRTCConnection – uses KasplexSignalling for SDP/ICE\n// ---------------------------------------------------------------------------\nexport class WebRTCConnection {\n  signaling: KasplexSignalling;\n  localPeerId: string;\n  remotePeerId: string;\n  pc: RTCPeerConnection;\n  dc: RTCDataChannel | null = null;\n\n  constructor(signaling: KasplexSignalling, localPeerId: string, remotePeerId: string) {\n    this.signaling = signaling;\n    this.localPeerId = localPeerId;\n    this.remotePeerId = remotePeerId;\n\n    this.pc = new RTCPeerConnection({\n      iceServers: [\n        { urls: 'stun:stun.l.google.com:19302' },\n        { urls: 'stun:stun1.l.google.com:19302' },\n      ],\n    });\n\n    this.signaling.on('message', msg => this.handleSignaling(msg));\n    this.setupDataChannel();\n    this.initiateOffer();\n  }\n\n  private setupDataChannel() {\n    this.dc = this.pc.createDataChannel('gitchain-chat', { ordered: true });\n    this.dc.onopen = () => console.log(`Data channel open → ${this.remotePeerId.slice(-8)}`);\n    this.dc.onmessage = e => {\n      const chat = document.getElementById('chat') as HTMLDivElement;\n      const p = document.createElement('p');\n      p.textContent = `${this.remotePeerId.slice(-8)}: ${e.data}`;\n      chat.appendChild(p);\n      chat.scrollTop = chat.scrollHeight;\n    };\n\n    this.pc.onicecandidate = ev => {\n      if (ev.candidate) this.signaling.sendMessage(this.remotePeerId, 'candidate', ev.candidate);\n    };\n  }\n\n  private async initiateOffer() {\n    const offer = await this.pc.createOffer({ offerToReceiveAudio: false, offerToReceiveVideo: false });\n    await this.pc.setLocalDescription(offer);\n    this.signaling.sendMessage(this.remotePeerId, 'offer', this.pc.localDescription);\n  }\n\n  private async handleSignaling(msg: any) {\n    if (msg.from !== this.remotePeerId) return;\n    try {\n      if (msg.type === 'offer') {\n        await this.pc.setRemoteDescription(msg.data);\n        const answer = await this.pc.createAnswer();\n        await this.pc.setLocalDescription(answer);\n        this.signaling.sendMessage(msg.from, 'answer', this.pc.localDescription);\n      } else if (msg.type === 'answer') {\n        await this.pc.setRemoteDescription(msg.data);\n      } else if (msg.type === 'candidate') {\n        await this.pc.addIceCandidate(msg.data);\n      }\n    } catch (e) {\n      console.error('Signaling handling error:', e);\n    }\n  }\n\n  send(text: string) {\n    if (this.dc?.readyState === 'open') this.dc.send(text);\n  }\n\n  get state() {\n    return this.pc.connectionState;\n  }\n}\n\n// ---------------------------------------------------------------------------\n// Interfaces\n// ---------------------------------------------------------------------------\ninterface Transaction {\n    from: string;\n    to: string;\n    amount: number;\n    nonce: number;\n    signature: string;\n}\ninterface Block {\n    index: number;\n    previousHash: string;\n    timestamp: string;\n    transactions: Transaction[];\n    hash: string;\n}\ninterface State {\n    chain: Block[];\n    pending: Transaction[];\n    balances: { [address: string]: number };\n    nonces: { [address: string]: number };\n    lastProcessedDate: string;\n}\n\n// ---------------------------------------------------------------------------\n// Calculate hash\n// ---------------------------------------------------------------------------\nfunction calculateHash(index: number, previousHash: string, timestamp: string, transactions: Transaction[]): string {\n    const value = `${index}${previousHash}${timestamp}${JSON.stringify(transactions)}`;\n    return CryptoJS.SHA256(value).toString();\n}\n\n// ---------------------------------------------------------------------------\n// Create genesis block\n// ---------------------------------------------------------------------------\nfunction createOriginalBlock(): Block {\n    const timestamp = new Date().toISOString();\n    return {\n        index: 0,\n        previousHash: '0',\n        timestamp,\n        transactions: [],\n        hash: calculateHash(0, '0', timestamp, [])\n    };\n}\n\n// ---------------------------------------------------------------------------\n// Serialize txn for signing/hash\n// ---------------------------------------------------------------------------\nfunction serializeTxn(txn: Omit<Transaction, 'signature'>): string {\n    return JSON.stringify(txn, Object.keys(txn).sort());\n}\n\nfunction keccak256Bytes(input: Uint8Array): Uint8Array {\n    return Uint8Array.from(keccak256Buffer.array(input));\n}\n\n// ---------------------------------------------------------------------------\n// Hex to bytes\n// ---------------------------------------------------------------------------\nfunction hexToBytes(hex: string): Uint8Array {\n    const bytes = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < hex.length; i += 2) {\n        bytes[i / 2] = parseInt(hex.substr(i, 2), 16);\n    }\n    return bytes;\n}\n\n// ---------------------------------------------------------------------------\n// Bytes to hex\n// ---------------------------------------------------------------------------\nfunction bytesToHex(bytes: Uint8Array): string {\n    return Array.from(bytes, byte => byte.toString(16).padStart(2, '0')).join('');\n}\n\n// ---------------------------------------------------------------------------\n// Verify signature using elliptic\n// ---------------------------------------------------------------------------\nfunction verifyTxn(txn: Transaction): boolean {\n    try {\n\tconst msgHash = keccak256Bytes(uint8FromString(serializeTxn({ from: txn.from, to: txn.to, amount: txn.amount, nonce: txn.nonce })));\n        const sigBytes = hexToBytes(txn.signature);\n        if (sigBytes.length !== 65) return false;\n        const r = bytesToHex(sigBytes.slice(0, 32));\n        const s = bytesToHex(sigBytes.slice(32, 64));\n        const v = sigBytes[64] - 27; // Normalize v to 0 or 1\n        const curve = new ec('secp256k1');\n        const msgHashHex = bytesToHex(msgHash);\n        const signature = { r: r, s: s };\n        const publicKey = curve.recoverPubKey(msgHashHex, signature, v);\n        const pubKeyBytes = publicKey.encode('array', true).slice(1);\n        const pubKeyHex = pubKeyBytes.map((b: number) => b.toString(16).padStart(2, '0')).join('');\n        const addrHash = keccak256Bytes(uint8FromString(pubKeyHex));\n        const recoveredAddr = `0x${bytesToHex(addrHash.slice(-20))}`;\n        return recoveredAddr.toLowerCase() === txn.from.toLowerCase();\n    } catch {\n        return false;\n    }\n}\n\n// ---------------------------------------------------------------------------\n// Process a single txn (mint if from admin)\n// ---------------------------------------------------------------------------\nasync function processTxn(txn: Transaction, state: State): Promise<{ valid: boolean; txid: string }> {\n    const txid = bytesToHex(keccak256Bytes(uint8FromString(serializeTxn({ from: txn.from, to: txn.to, amount: txn.amount, nonce: txn.nonce }))));\n    \n    if (!verifyTxn(txn)) return { valid: false, txid };\n    if ((state.nonces[txn.from] || 0) + 1 !== txn.nonce) return { valid: false, txid };\n    if (txn.from.toLowerCase() !== ADMIN_ADDRESS.toLowerCase() && (state.balances[txn.from] || 0) < txn.amount) return { valid: false, txid };\n    if (!/^0x[a-fA-F0-9]{40}$/.test(txn.from) || !/^0x[a-fA-F0-9]{40}$/.test(txn.to)) return { valid: false, txid };\n    state.pending.push(txn);\n    return { valid: true, txid };\n}\n\n// ---------------------------------------------------------------------------\n// Create block\n// ---------------------------------------------------------------------------\nasync function createBlock(state: State): Promise<number | null> {\n    if (state.pending.length === 0) return null;\n    const validTxns: Transaction[] = [];\n    const newBalances = { ...state.balances };\n    const newNonces = { ...state.nonces };\n    for (const txn of state.pending) {\n        if (verifyTxn(txn) && (newNonces[txn.from] || 0) + 1 === txn.nonce && (txn.from.toLowerCase() === ADMIN_ADDRESS.toLowerCase() || (newBalances[txn.from] || 0) >= txn.amount)) {\n            if (txn.from.toLowerCase() !== ADMIN_ADDRESS.toLowerCase()) {\n                newBalances[txn.from] = (newBalances[txn.from] || 0) - txn.amount;\n            }\n            newBalances[txn.to] = (newBalances[txn.to] || 0) + txn.amount;\n            newNonces[txn.from] = txn.nonce;\n            validTxns.push(txn);\n        }\n    }\n    if (validTxns.length === 0) {\n        state.pending = [];\n        return null;\n    }\n    const nextIndex = state.chain.length;\n    const previousHash = state.chain.length > 0 ? state.chain[state.chain.length - 1].hash : '0';\n    const timestamp = new Date().toISOString();\n    const hash = calculateHash(nextIndex, previousHash, timestamp, validTxns);\n    const newBlock: Block = { index: nextIndex, previousHash, timestamp, transactions: validTxns, hash };\n    state.chain.push(newBlock);\n    state.pending = [];\n    state.balances = newBalances;\n    state.nonces = newNonces;\n    return nextIndex;\n}\n\n// ---------------------------------------------------------------------------\n// Get GitHub access token\n// ---------------------------------------------------------------------------\nfunction getGithubAccessToken(): string | null {\n    let githubAccessToken = localStorage.getItem(GITHUB_ACCESS_TOKEN_KEY);\n    if (!githubAccessToken) {\n        githubAccessToken = (document.getElementById('patInput') as HTMLInputElement)?.value;\n        if (!githubAccessToken) {\n            console.log('No GitHub access token provided');\n            alert('Please enter your GitHub access token.');\n            return null;\n        }\n        localStorage.setItem(GITHUB_ACCESS_TOKEN_KEY, githubAccessToken);\n    }\n    console.log('Retrieved GitHub access token');\n    return githubAccessToken;\n}\n\n// ---------------------------------------------------------------------------\n// Initialize libp2p / WebRTC server\n// ---------------------------------------------------------------------------\nexport async function initP2P(host: boolean): Promise<void> {\n    console.log('Entering initP2P, host:', host);\n    isServer = host;\n    if (libp2p) {\n        console.log('libp2p already initialized, reusing instance');\n        return;\n    }\n\n    localStorage.setItem('debug', 'libp2p:*');\n\n    try {\n        const response = await fetch(SERVER_PEER_RAW_URL);\n        if (response.ok) {\n            let data = await response.json();\n            for (const peer of data) {\n                if (peer.length > 40 && serverPeers.indexOf(peer) == -1) {\n                    serverPeers.push(peer);\n                }\n            }\n            console.log('Loaded server peers:', serverPeers);\n        } else if (response.status === 404) {\n            console.log('server-peer.json not found');\n        } else {\n            console.log('Error fetching server-peer.json, status:', response.status);\n        }\n    } catch (error) {\n        console.error('Error loading server-peer.json:', error);\n    }\n\n    const config: any = {\n        addresses: { listen: ['/webrtc'] },\n        transports: [\n            webRTC({\n                rtcConfiguration: {\n                    iceServers: [\n                        { urls: 'stun:stun.l.google.com:19302' },\n                        { urls: 'stun:global.stun.twilio.com:3478' },\n                        { urls: 'stun:stun.nextcloud.com:3478' },\n                        { urls: 'stun:stun.1und1.de:3478' },\n                        { urls: 'stun:stun.stunprotocol.org:3478' },\n                        { urls: 'stun:stun.services.mozilla.com:3478' },\n                        { urls: 'stun:stun.ekiga.net:3478' },\n                        { urls: 'stun:stun.voipbuster.com:3478' }\n                    ]\n                }\n            }),\n            webSockets(),\n            circuitRelayTransport()\n        ],\n        connectionEncryption: [noise()],\n        streamMuxers: [yamux()],\n        services: {\n            identify: identify(),\n            pubsub: gossipsub({ emitSelf: true })\n        },\n        peerDiscovery: [\n            pubsubPeerDiscovery({ interval: 20000 })\n        ]\n    };\n    if (serverPeers.length > 0) {\n        config.peerDiscovery.push(bootstrap({ list: serverPeers }));\n    } else {\n        console.log('No valid peers in serverPeers, initializing without bootstrap');\n    }\n    libp2p = await createLibp2p(config);\n    console.log('P2P node started:', libp2p.peerId.toString());\n    libp2p.addEventListener('peer:discovery', (evt: any) => {\n        console.log('Peer discovered:', evt.detail.id.toString());\n    });\n    libp2p.services.pubsub.addEventListener('subscription-change', (evt: any) => {\n        console.log('Subscription change:', evt.detail);\n    });\n    await libp2p.handle(PROTOCOL, async ({ stream, connection }: any) => {\n        console.debug('Received P2P stream from:', connection.remotePeer.toString());\n        const chunks: Uint8Array[] = [];\n        for await (const chunk of stream.source) {\n            chunks.push(chunk);\n        }\n        const data = uint8Concat(chunks);\n        const txn = JSON.parse(uint8ToString(data));\n        console.debug('Received transaction via P2P:', txn);\n    });\n    const peerId = libp2p.peerId.toString();\n    console.log(`My peer ID is: ${peerId}`);\n    if (isServer) {\n        if (peerId.length > 40 && !peerId.startsWith('/webrtc/p2p')) {\n            try {\n                const ma = multiaddr(`/webrtc/p2p/${peerId}`);\n                serverPeers.push(ma.toString());\n            } catch (error) {\n                console.debug(`ERROR: Bad multiaddr: /webrtc/p2p/${peerId}`);\n            }\n            serverPeers = await updateServerPeers();\n            console.log('Added my server peer address to server-peer.json.');\n            for (const peer of serverPeers) {\n                if (peer.length < 40) continue;\n                try {\n                    console.log(\"Dialing peer: \" + peer);\n                    const ma = multiaddr(peer);\n                    await libp2p.dial(ma, { signal: AbortSignal.timeout(60000) });\n                } catch(error) {\n                    console.error(`Failed to dial ${peer}: ${error}`);\n                }\n            }\n        }\n    }\n}\n\n// ---------------------------------------------------------------------------\n// Update server-peer.json\n// ---------------------------------------------------------------------------\nasync function updateServerPeers(): Promise<string[]> {\n    console.debug(\"Entering updateServerPeers() with serverPeers: \" + JSON.stringify(serverPeers));\n    const githubAccessToken = getGithubAccessToken();\n    if (!githubAccessToken) {\n        console.error('No PAT available for updating server-peer.json');\n        return serverPeers;\n    }\n    try {\n        const response = await fetch(SERVER_PEER_URL + '?ref=main', {\n            headers: {\n                'Authorization': `token ${githubAccessToken}`,\n                'Accept': 'application/vnd.github.v3+json'\n            }\n        });\n        let sha: string | null = null;\n        let data: any = [];\n        if (response.ok) {\n            data = await response.json();\n            sha = data.sha;\n            data = JSON.parse(atob(data.content));\n        } else if (response.status === 404) {\n            data = [];\n            sha = null;\n        } else {\n            console.error('Error fetching server-peer.json:', response.status, await response.text());\n            return serverPeers;\n        }\n        if (!Array.isArray(data)) data = [];\n        for (let i = 0; i < serverPeers.length; i++) {\n            if (serverPeers[i].startsWith('/webrtc/p2p/') && !data.includes(serverPeers[i])) {\n                data.push(serverPeers[i]);\n            }\n        }\n        const body = {\n            message: 'Update server peer IDs',\n            content: btoa(JSON.stringify(data, null, 2)),\n            branch: 'main',\n            sha: sha || undefined\n        };\n        const updateResponse = await fetch(SERVER_PEER_URL + '?ref=main', {\n            method: 'PUT',\n            headers: {\n                'Authorization': `token ${githubAccessToken}`,\n                'Accept': 'application/vnd.github.v3+json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(body)\n        });\n        if (updateResponse.ok) {\n            console.log('server-peer.json updated successfully');\n            serverPeers = data;\n            return data;\n        } else {\n            console.error('Failed to update server-peer.json:', updateResponse.status, await updateResponse.text());\n            return serverPeers;\n        }\n    } catch (error) {\n        console.error('Error updating server-peer.json:', error);\n        return serverPeers;\n    }\n}\n\n// ---------------------------------------------------------------------------\n// Remove host peer ID on unload\n// ---------------------------------------------------------------------------\nasync function removeHostPeerId(): Promise<void> {\n    if (!isServer || !libp2p) return;\n    const peerId = libp2p.peerId.toString();\n    serverPeers = serverPeers.filter(id => id !== peerId);\n    await updateServerPeers();\n}\n\n// ---------------------------------------------------------------------------\n// Client-side: Connect and Send TX\n// ---------------------------------------------------------------------------\nexport async function connectAndSendTx(tx: Transaction) {\n    if (isServer) {\n        const issueBody = JSON.stringify({\n            type: 'gitchain_txn',\n            repo: FQ_REPO,\n            txn: tx\n        });\n        const response = await fetch(ISSUES_URL, {\n            method: 'POST',\n            headers: {\n                'Authorization': `token ${getGithubAccessToken()}`,\n                'Accept': 'application/vnd.github.v3+json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                title: `tx ${tx.from} to ${tx.to}`,\n                body: issueBody\n            })\n        });\n        if (response.ok) {\n            console.log('Host created issue for TX');\n        } else {\n            console.error('Host failed to create issue:', response.status, await response.text());\n        }\n        return;\n    }\n    let peers: string[] = [];\n    try {\n        const res = await fetch(SERVER_PEER_RAW_URL);\n        if (res.ok) {\n            peers = await res.json();\n            console.log('Loaded active server peers:', peers);\n        } else if (res.status === 404) {\n            alert('The server is currently not running.');\n            return;\n        } else {\n            alert('Failed to fetch server peer info. Please try again or notify the administrator.');\n            return;\n        }\n    } catch (error) {\n        console.error('Failed to fetch server-peer.json:', error);\n        alert('Failed to connect to server. Please try again or notify the server administrator.');\n        return;\n    }\n    if (peers.length === 0) {\n        alert('The server is currently not running.');\n        return;\n    }\n    let connected = false;\n    for (const peer of peers) {\n        try {\n            const ma = multiaddr(peer);\n            const connection = await libp2p.dial(ma, { signal: AbortSignal.timeout(60000) });\n            const stream = await connection.newStream(PROTOCOL);\n            const txJson = JSON.stringify(tx);\n            const data = uint8FromString(txJson);\n            await stream.sink([data]);\n            console.log('TX sent to server peer:', peer);\n            connected = true;\n            break;\n        } catch (error) {\n            console.error('Failed to dial server peer:', peer, error);\n        }\n    }\n    if (!connected) {\n        alert('Failed to connect to any server. Please try again or notify the server administrator.');\n    }\n}\n\n// ---------------------------------------------------------------------------\n// Save GitHub access token\n// ---------------------------------------------------------------------------\nexport function saveGithubAccessToken(): void {\n    console.log('Entering saveGithubAccessToken');\n    const githubAccessToken = (document.getElementById('github-token') as HTMLInputElement)?.value;\n    if (githubAccessToken) {\n        localStorage.setItem(GITHUB_ACCESS_TOKEN_KEY, githubAccessToken);\n        console.log('PAT saved, initializing P2P as host');\n        initP2P(true);\n    } else {\n        console.error('No GitHub access token provided');\n        throw new Error('Enter a GitHub access token first.');\n    }\n}\n\n// ---------------------------------------------------------------------------\n// Fetch state\n// ---------------------------------------------------------------------------\nexport async function fetchState(): Promise<{ content: State; sha: string } | null> {\n    console.log('Entering fetchState');\n    const githubAccessToken = getGithubAccessToken();\n    if (!githubAccessToken) {\n        console.log('No PAT available for fetching state');\n        return null;\n    }\n    try {\n        console.log('Fetching state from:', STATE_URL);\n        const response = await fetch(`${STATE_URL}?ref=main`, {\n            headers: {\n                'Authorization': `token ${githubAccessToken}`,\n                'Accept': 'application/vnd.github.v3+json'\n            }\n        });\n        if (!response.ok) {\n            if (response.status === 404) {\n                console.log('State file not found');\n                return null;\n            }\n            console.error('Error fetching state:', response.status, await response.text());\n            throw new Error(`Error fetching state: ${response.statusText}`);\n        }\n        const file = await response.json();\n        const content: State = JSON.parse(atob(file.content));\n        console.log('State fetched, chain length:', content.chain.length);\n        return { content, sha: file.sha };\n    } catch (error) {\n        console.error('Error fetching state:', error);\n        return null;\n    }\n}\n\n// ---------------------------------------------------------------------------\n// Update state with retries\n// ---------------------------------------------------------------------------\nasync function updateState(newContent: State, oldSha: string | null, message: string, retries = 3): Promise<boolean> {\n    console.log('Entering updateState, message:', message);\n    const githubAccessToken = getGithubAccessToken();\n    if (!githubAccessToken) {\n        console.log('No PAT available for updating state');\n        return false;\n    }\n    const fileContent = btoa(JSON.stringify(newContent, null, 2));\n    try {\n        const body: any = { message, content: fileContent, branch: 'main' };\n        if (oldSha) body.sha = oldSha;\n        console.log('Sending PUT request to update state');\n        const response = await fetch(STATE_URL + '?ref=main', {\n            method: 'PUT',\n            headers: {\n                'Authorization': `token ${githubAccessToken}`,\n                'Accept': 'application/vnd.github.v3+json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(body)\n        });\n        if (!response.ok) {\n            if (response.status === 409 && retries > 0) {\n                console.log('Conflict detected, retrying...');\n                const current = await fetchState();\n                if (!current) throw new Error('Failed to refetch state during conflict resolution');\n                return updateState(newContent, current.sha, message, retries - 1);\n            }\n            console.error('Error updating state:', response.status, await response.text());\n            throw new Error(`Error updating state: ${response.statusText}`);\n        }\n        console.log('State updated successfully');\n        return true;\n    } catch (error) {\n        console.error('Error updating state:', error);\n        return false;\n    }\n}\n\n// ---------------------------------------------------------------------------\n// Close issue with comment\n// ---------------------------------------------------------------------------\nasync function closeIssueWithComment(issueNumber: number, blockIndex: number | null, valid: boolean): Promise<void> {\n    console.log('Entering closeIssueWithComment, issue:', issueNumber);\n    const githubAccessToken = getGithubAccessToken();\n    if (!githubAccessToken) {\n        console.log('No PAT available for closing issue');\n        return;\n    }\n    const status = valid && blockIndex !== null ? `Confirmed in block ${blockIndex}` : 'Invalid transaction';\n    const intro = \"Gitchain is an innovative centralized chain on GitHub. It enables secure, transparent transactions.\";\n    const gitchain_url = `https://github.com/${FQ_REPO}`;\n    const commentBody = `${status}. ${intro} Learn more: ${gitchain_url} (Repo: ${FQ_REPO})`;\n    console.log('Creating comment for issue:', issueNumber);\n    await fetch(`${ISSUES_URL}/${issueNumber}/comments`, {\n        method: 'POST',\n        headers: {\n            'Authorization': `token ${githubAccessToken}`,\n            'Accept': 'application/vnd.github.v3+json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ body: commentBody })\n    });\n    console.log('Closing issue:', issueNumber);\n    await fetch(`${ISSUES_URL}/${issueNumber}`, {\n        method: 'PATCH',\n        headers: {\n            'Authorization': `token ${githubAccessToken}`,\n            'Accept': 'application/vnd.github.v3+json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ state: 'closed' })\n    });\n}\n\n// ---------------------------------------------------------------------------\n// Process txns via open issues\n// ---------------------------------------------------------------------------\nexport async function processTxns(): Promise<void> {\n    console.log('Entering processTxns');\n    const output = document.getElementById('output') as HTMLDivElement;\n    const processingMessage = document.getElementById('processing-message') as HTMLDivElement;\n    processingMessage.classList.add('visible');\n    let stateData = await fetchState();\n    let state = stateData?.content;\n    if (!state) {\n        console.log('No state found, initializing');\n        state = {\n            chain: [createOriginalBlock()],\n            pending: [],\n            balances: { [ADMIN_ADDRESS]: 1000000 },\n            nonces: {},\n            lastProcessedDate: new Date(0).toISOString()\n        };\n        const success = await updateState(state, null, 'Initialize state');\n        if (!success) {\n            console.log('Failed to initialize state');\n            output.textContent += '\\nFailed to initialize.';\n            processingMessage.classList.remove('visible');\n            return;\n        }\n        stateData = await fetchState();\n        state = stateData!.content;\n    }\n    console.log('Fetching open issues');\n    const issuesRes = await fetch(`${ISSUES_URL}?state=open&sort=created&direction=asc&per_page=100`, {\n        headers: { 'Authorization': `token ${getGithubAccessToken()}`, 'Accept': 'application/vnd.github.v3+json' }\n    });\n    const issues = await issuesRes.json();\n    let newLastDate = state.lastProcessedDate;\n    for (const issue of issues) {\n        if (!issue.title.toLowerCase().startsWith('tx')) continue;\n        if (new Date(issue.created_at) <= new Date(state.lastProcessedDate)) continue;\n        let txn: Transaction;\n        try {\n            const parsed = JSON.parse(issue.body);\n            if (parsed.type !== 'gitchain_txn') {\n                console.log('Skipping non-tx issue:', issue.number);\n                await closeIssueWithComment(issue.number, null, false);\n                continue;\n            }\n            if (parsed.repo !== FQ_REPO) {\n                console.log('Skipping issue from wrong repo:', issue.number);\n                await closeIssueWithComment(issue.number, null, false);\n                continue;\n            }\n            txn = parsed.txn;\n        } catch {\n            console.log('Invalid issue body, closing:', issue.number);\n            await closeIssueWithComment(issue.number, null, false);\n            continue;\n        }\n        console.log('Processing transaction from issue:', issue.number);\n        const { valid, txid } = await processTxn(txn, state);\n        console.log(`Transaction ID: ${txid}, valid: ${valid}`);\n        const blockIndex = valid ? await createBlock(state) : null;\n        await closeIssueWithComment(issue.number, blockIndex, valid);\n        if (valid && blockIndex !== null) {\n            console.log(`Transaction ID: ${txid} settled in block ${blockIndex}`);\n            output.textContent += `\\nProcessed txn ${txid} from issue #${issue.number} in block ${blockIndex}`;\n        } else {\n            console.log(`Rejected invalid txn from issue #${issue.number}`);\n            output.textContent += `\\nRejected invalid txn from issue #${issue.number}`;\n        }\n        const success = await updateState(state, stateData!.sha, `Process issue #${issue.number}`);\n        if (!success) {\n            console.log('Failed to update state after issue:', issue.number);\n            output.textContent += `\\nFailed to update state after issue #${issue.number}`;\n            processingMessage.classList.remove('visible');\n            return;\n        }\n        stateData = await fetchState();\n        state = stateData!.content;\n        const issueCreated = issue.created_at;\n        if (new Date(issueCreated) > new Date(newLastDate)) {\n            newLastDate = issueCreated;\n        }\n    }\n    if (newLastDate !== state.lastProcessedDate) {\n        console.log('Updating last processed date:', newLastDate);\n        state.lastProcessedDate = newLastDate;\n        await updateState(state, stateData!.sha, 'Update last processed date');\n    }\n    console.log('processTxns completed');\n    processingMessage.classList.remove('visible');\n}\n\n// ---------------------------------------------------------------------------\n// View chain\n// ---------------------------------------------------------------------------\nexport async function viewChain(): Promise<void> {\n    console.log('Entering viewChain');\n    const output = document.getElementById('output') as HTMLDivElement;\n    const state = await fetchState();\n    if (!state || !state.content.chain || state.content.chain.length === 0) {\n        console.log('No transactions in chain');\n        output.textContent = 'No transactions in the chain yet.';\n        return;\n    }\n    const chain = state.content.chain;\n    const balances = state.content.balances;\n    let text = `Chain length: ${chain.length}\\nPending txns: ${state.content.pending.length}\\nLast processed: ${state.content.lastProcessedDate}\\nBalances:\\n`;\n    for (const [addr, bal] of Object.entries(balances)) {\n        text += ` ${addr}: ${bal}\\n`;\n    }\n    text += '\\n';\n    chain.forEach(b => {\n        text += `Block ${b.index}:\\n` +\n                ` Hash: ${b.hash}\\n` +\n                ` Prev Hash: ${b.previousHash}\\n` +\n                ` Timestamp: ${b.timestamp}\\n` +\n                ` Transactions:\\n` +\n                b.transactions.map(t => ` ${t.from} sends ${t.amount} to ${t.to} (nonce ${t.nonce})`).join('\\n') + '\\n\\n';\n    });\n    output.textContent = text;\n    console.log('viewChain completed, chain length:', chain.length);\n}\n\n// ---------------------------------------------------------------------------\n// Expose libp2p and server peers\n// ---------------------------------------------------------------------------\nexport function getLibp2p() {\n    return libp2p;\n}\nexport function getServerPeers() {\n    return serverPeers;\n}\n\n// ---------------------------------------------------------------------------\n// Auto-process and initialize\n// ---------------------------------------------------------------------------\nwindow.addEventListener('load', () => {\n    console.log('Window loaded, checking for PAT');\n    if (!localStorage.getItem(GITHUB_ACCESS_TOKEN_KEY)) {\n        console.log('No PAT found, prompting user');\n        alert('Enter your GitHub access token (repo contents read/write, issues read/write) and save.');\n    } else {\n        console.log('PAT found, initializing P2P as host');\n        initP2P(true);\n    }\n    console.log('Setting interval for transaction processing');\n    setInterval(() => {\n        processTxns();\n    }, UPDATE_INTERVAL);\n});\n\n// ---------------------------------------------------------------------------\n// Unload event for removing peer ID\n// ---------------------------------------------------------------------------\nwindow.addEventListener('unload', async () => {\n    await removeHostPeerId();\n});\n\n// ---------------------------------------------------------------------------\n// Expose to window.gitchain\n// ---------------------------------------------------------------------------\nwindow.gitchain = {\n    saveGithubAccessToken,\n    viewChain,\n    processTxns,\n    fetchState,\n    connectAndSendTx,\n    KasplexSignalling,\n    WebRTCConnection\n};\n\n// ---------------------------------------------------------------------------\n// Dispatch event\n// ---------------------------------------------------------------------------\nwindow.dispatchEvent(new Event('gitchain:init'));\n"],"names":["message","s","FaultTolerance","equals","o","fromString","toString","base","name","i","encode","length","size","j","decode","string","or","decoders","Decoder","from","alphabet","basex","value","pad","MSB","read","MSB$1","shift","l","N1","N2","N3","N4","N5","N6","N7","code","varint","encodingLength","digest","varint.encodingLength","varint.encodeTo","varint.decode","a","equalBytes","version","cache","baseCache","Digest.create","self","Digest.equals","Digest.decode","Digest.Digest","cid","identity","alloc","allocUnsafe","symbol","start","c","p","sha","sha256","base2","base8","base10","base16","base32","base36","base64","base256emoji","createCodec","bases","byte","positive","hashAndVerify","key","uint8ArrayToString","ECDSAPublicKeyClass","InvalidParametersError","uint8ArrayFromString","curve","uint8ArrayEquals","isBytes","anumber","n","abytes","len","aexists","aoutput","clean","createView","bytesToHex","hexToBytes","randomBytes","isLE","take","E","u64.split","u64.rotrSH","u64.shrSH","u64.rotrSL","u64.shrSL","u64.rotrBH","u64.rotrBL","u64.add4L","u64.add4H","u64.add5L","u64.add5H","u64.add","u64.add3L","u64.add3H","sha512","_0n","_1n","abool","bytesToHex_","copyBytes","abytes_","hexToBytes_","concatBytes_","reseed","f","_2n","_3n","_4n","_5n","_8n","r","m","n2","S","t","R","d","zero","neg","window","Point","point","edwards","uvRatio","e","isValid","eddsa","wcRandomBytes","adjustScalarBytes","hash","sign","verify","utils","rand","swap","crypto","ed","uint8arrayToString","isPromise","crypto.publicKeyLength","crypto.hashAndVerify","crypto.privateKeyLength","crypto.hashAndSign","Ed25519PublicKeyClass","crypto.generateKey","Ed25519PrivateKeyClass","write","utf8.read","utf8.length","utf8.write","CODEC_TYPES","KeyType","__KeyTypeValues","PublicKey","PrivateKey","randB","utils.jwkToPkix","pb.PublicKey","pb.KeyType","RSAPublicKeyClass","hmac","format","encodePoint","decodePoint","endo","mul","p2","nobleHmac","Signature","signature","secp256k1","secp","Secp256k1PublicKeyClass","inspect","LIBP2P_KEY_CODE","init","TRANSPORT_IPFS_GATEWAY_HTTP_CODE","peerIdFromString","Ed25519PeerIdClass","Secp256k1PeerIdClass","RSAPeerIdClass","URLPeerIdClass","coerce","humanize","split","debug","logger","fnv1a","fnv1aHash","uint8ArrayAlloc","load","maxValue","atob","Netmask","this","AbortError","pushable","drain","deferred","push","options","_pushable","TimeoutError","getAbortedReason","pTimeout","addListener","removeListener","event","debounce","raceSignal","randomId","JobRecipient","QueueFullError","Job","err","signal","clear","InvalidMultiaddrError","uint8ArrayConcat","validate","bytes","varint.encodeUint8Array","MultiaddrClass","isAsyncIterable","pipe","source","DEFAULT_MAX_BUFFER_SIZE","byteStream","UnexpectedEOFError","encodeLength","varint.encode","lpStream","buf","InvalidMessageLengthError","InvalidDataLengthLengthError","InvalidDataLengthError","pbStream","messages","itPipe","ReadMode","byteLength","Queue","Envelope","Protobuf","uint8arraysFromString","PeerRecord","_codec","sort","b","arr","defaultOptions","nanoid","implementation","Peer","Address","Tag","PeerPB","compare","filter","peerRecordEnvelope","multiaddr","addr","mortice","NotFoundError","peekable","peek","it","WebSockets","Circuit","defaultValues","ma","serviceCapabilities","MAX_CONNECTIONS","EventEmitter","PriorityQueue","handleError","response","update","hashlru","RecordType","DNSClass","address","CustomEvent","defer","peer","log","mss.select","mss.handle","pkg.name","pkg.version","Libp2pClass","Message","Flag","__FlagValues","BrowserInfo","NodeInfo","SearchBotDeviceInfo","BotInfo","ReactNativeInfo","userAgent","browser","lengthPrefixed.decode","lengthPrefixed.encode","RTCPeerConnection","__TypeValues","defaults","isAligned32","core","r2","uint8ArrayAllocUnsafe","InvalidCryptoExchangeError","NoiseExtensions","NoiseHandshakePayload","plaintext","createListener","toUri","WebSocketsMatcher","FrameType","GoAwayCode","StreamState","Identify","IdentifyMessage","IdentifyClass","HopMessage","StopMessage","Reservation","Limit","Status","__StatusValues","ReservationVoucher","scopedUrlAlphabet","reservation","RPC","msgId","SignaturePolicy","PublishConfigType","RejectReason","ValidateError","MessageStatus","MessageSource","InclusionReason","ChurnReason","ScorePenalty","IHaveIgnoreReason","ScoreThreshold","src","DeliveryRecordStatus","Denque","GossipStatusCode","constants.GossipsubIDv12","constants.GossipsubIDv11","constants.GossipsubIDv10","constants.GossipsubD","constants.GossipsubDlo","constants.GossipsubDhi","constants.GossipsubDscore","constants.GossipsubDout","constants.GossipsubDlazy","constants.GossipsubHeartbeatInterval","constants.GossipsubFanoutTTL","constants.GossipsubHistoryLength","constants.GossipsubHistoryGossip","constants.GossipsubSeenTTL","constants.GossipsubIWantFollowupTime","constants.GossipsubPrunePeers","constants.GossipsubPruneBackoff","constants.GossipsubUnsubscribeBackoff","constants.GossipsubGraftFloodThreshold","constants.GossipsubOpportunisticGraftPeers","constants.GossipsubOpportunisticGraftTicks","constants.GossipsubDirectConnectTicks","constants.GossipsubGossipFactor","constants.GossipsubIdontwantMinDataSize","constants.GossipsubIdontwantMaxMessages","constants.FloodsubID","constants.DEFAULT_METRIC_MESH_MESSAGE_DELIVERIES_WINDOWS","constants.GossipsubHeartbeatInitialDelay","constants.GossipsubDirectConnectInitialDelay","subscriptions","constants.ERR_TOPIC_VALIDATOR_IGNORE","constants.ERR_TOPIC_VALIDATOR_REJECT","constants.GossipsubMaxIHaveMessages","constants.GossipsubMaxIHaveLength","constants.GossipsubGossipRetransmission","constants.GossipsubPruneBackoffTicks","id","TopicValidatorResult","GossipSubClass","PBPeer","CryptoJS","Math","undefined","global","require","require$$0","create","Base","Hasher","SHA1","K","SHA256","H","require$$1","SHA224","SHA512","require$$2","SHA384","RIPEMD160","rotl","CBC","require$$3","require$$4","SUB_MIX_0","SUB_MIX_1","SUB_MIX_2","SUB_MIX_3","SBOX","key2","C","i2","require$$5","require$$6","require$$7","require$$8","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","require$$16","require$$17","require$$18","require$$19","require$$20","require$$21","require$$22","require$$23","require$$24","require$$25","require$$26","require$$27","require$$28","require$$29","require$$30","require$$31","require$$32","require$$33","require$$34","module","assert","inherits","BN","Buffer","lowerBound","mod","copy","toJSON","toArray","and","add","comb10MulTo","a2","eq","prime","mont","zero2","toHex","getNAF","getJSF","cachedProperty","parseBytes","brorandModule","_rand","dbl","inherits_browserModule","_getBeta","obj","dblp","isInfinity","pointFromJSON","precompute","_encode","fromJSON","mulAdd","getX","jpoint","pointFromX","jmulAdd","normalize","getY","eqXToP","rotr32","rotl32","sum32","sum32_3","sum32_4","sum32_5","sum64","sum64_hi","sum64_lo","sum64_4_hi","sum64_4_lo","sum64_5_hi","sum64_5_lo","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","BlockHash","common","ft_1","ch32","maj32","s0_256","s1_256","g0_256","g1_256","shaCommon","_update","curves","HmacDRBG","generate","KeyPair","ec","pub","priv","s2","fromPublic","secret","getPublic","Rencoded","keyFromPublic","elliptic","bits","createMethod","all","fill","concat","readFloatLE","readDoubleLE","writeFloatLE","writeDoubleLE","ecdsa","Wallet","Wasm","keccak256Buffer","uint8FromString","uint8Concat","uint8ToString"],"mappings":"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AU;AAAA,UAAG,eAAe,YAAY,UAAU;AAAA,UAC7E,eAAe,YAAY,UAAU;AAAA,UAAG,eAAe,YAAY,SAAU;AAAA,UAC7E,eAAe,YAAY,UAAU;AAAA,UAAG,eAAe,YAAY,UAAU;AAAA,UAC7E,eAAe,YAAY,UAAU;AAAA,UAAG,eAAe,YAAY,UAAU;AAAA,UAC7E,eAAe,WAAY,UAAU;AAAA,UAAG,eAAe,WAAY,SAAU;AAAA,UAC7E,eAAe,WAAY,UAAU;AAAA,UAAG,eAAe,WAAY,UAAU;AAAA,UAC7E,eAAe,YAAY,UAAU;AAAA,UAAG,eAAe,YAAY,UAAU;AAAA,UAC7E,eAAe,YAAY,UAAU;AAAA,UAAG,eAAe,YAAY,UAAU;AAAA,UAC7E,eAAe,YAAY,UAAU;AAAA,UAAG,eAAe,YAAY,SAAU;AAAA,UAC7E,eAAe,YAAY,UAAU;AAAA,UAAG,eAAe,YAAY,UAAU;AAAA,UAC7E,eAAe,YAAY,UAAU;AAAA,UAAG,eAAe,YAAY,SAAU;AAAA,UAC7E,eAAe,YAAY,UAAU;AAAA,UAAG,eAAe,YAAY,UAAU;AAAA,UAC7E,eAAe,YAAY,UAAU;AAAA,UAAG,eAAe,WAAY,SAAU;AAAA,UAC7E,eAAe,WAAY,UAAU;AAAA,UAAG,eAAe,WAAY,UAAU;AAAA,UAC7E,eAAe,WAAY,UAAU;AAAA,UAAG,eAAe,WAAY,UAAU;AAAA,UAC7E,eAAe,WAAY,UAAU;AAAA,UAAG,eAAe,YAAY,UAAU;AAAA,UAC7E,eAAe,YAAY,UAAU;AAAA,UAAG,eAAe,YAAY,UAAU;AAAA,UAC7E,eAAe,YAAY,UAAU;AAAA,UAAG,eAAe,YAAY,UAAU;AAAA,UAC7E,eAAe,YAAY,UAAU;AAAA,UAAG,eAAe,YAAY,SAAU;AAAA,UAC7E,eAAe,YAAY,SAAU;AAAA,UAAG,eAAe,YAAY,UAAU;AAAA,UAC7E,eAAe,YAAY,UAAU;AAAA,UAAG,eAAe,YAAY,UAAU;AAAA,UAC7E,eAAe,YAAY,UAAU;AAAA,UAAG,eAAe,YAAY,SAAU;AAAA,UAC7E,eAAe,YAAY,UAAU;AAAA,UAAG,eAAe,YAAY,UAAU;AAAA,UAC7E,eAAe,WAAY,UAAU;AAAA,UAAG,eAAe,WAAY,UAAU;AAAA,UAC7E,eAAe,WAAY,UAAU;AAAA,UAAG,eAAe,WAAY,SAAU;AAAA,UAC7E,eAAe,WAAY,SAAU;AAAA,UAAG,eAAe,WAAY,UAAU;AAAA,UAC7E,eAAe,YAAY,SAAU;AAAA,UAAG,eAAe,YAAY,UAAU;AAAA,UAC7E,eAAe,YAAY,UAAU;AAAA,UAAG,eAAe,YAAY,UAAU;AAAA,UAC7E,eAAe,YAAY,SAAU;AAAA,UAAG,eAAe,YAAY,UAAU;AAAA,QACtF;AAGK,YAAI,IAAI,CAAA;AACR,SAAC,WAAY;AACT,mBAASxZ,KAAI,GAAGA,KAAI,IAAIA,MAAK;AACzB,cAAEA,EAAC,IAAI,eAAc;AAAA,UAClC;AAAA,QACA,GAAM;AAKD,YAAI6Z,UAAS,OAAO,SAASP,QAAO,OAAO;AAAA,UACvC,UAAU,WAAY;AAClB,iBAAK,QAAQ,IAAI,aAAa,KAAK;AAAA,cAC/B,IAAI,QAAQ,KAAK,YAAY,UAAU;AAAA,cAAG,IAAI,QAAQ,KAAK,YAAY,UAAU;AAAA,cACjF,IAAI,QAAQ,KAAK,YAAY,UAAU;AAAA,cAAG,IAAI,QAAQ,KAAK,YAAY,UAAU;AAAA,cACjF,IAAI,QAAQ,KAAK,YAAY,UAAU;AAAA,cAAG,IAAI,QAAQ,KAAK,YAAY,SAAU;AAAA,cACjF,IAAI,QAAQ,KAAK,WAAY,UAAU;AAAA,cAAG,IAAI,QAAQ,KAAK,YAAY,SAAU;AAAA,YAClG,CAAc;AAAA,UACd;AAAA,UAES,iBAAiB,SAAU,GAAG,QAAQ;AAElC,gBAAI,IAAI,KAAK,MAAM;AAEnB,gBAAI,KAAK,EAAE,CAAC;AACZ,gBAAI,KAAK,EAAE,CAAC;AACZ,gBAAI,KAAK,EAAE,CAAC;AACZ,gBAAI,KAAK,EAAE,CAAC;AACZ,gBAAI,KAAK,EAAE,CAAC;AACZ,gBAAI,KAAK,EAAE,CAAC;AACZ,gBAAI,KAAK,EAAE,CAAC;AACZ,gBAAI,KAAK,EAAE,CAAC;AAEZ,gBAAI,MAAM,GAAG;AACb,gBAAI,MAAM,GAAG;AACb,gBAAI,MAAM,GAAG;AACb,gBAAI,MAAM,GAAG;AACb,gBAAI,MAAM,GAAG;AACb,gBAAI,MAAM,GAAG;AACb,gBAAI,MAAM,GAAG;AACb,gBAAI,MAAM,GAAG;AACb,gBAAI,MAAM,GAAG;AACb,gBAAI,MAAM,GAAG;AACb,gBAAI,MAAM,GAAG;AACb,gBAAI,MAAM,GAAG;AACb,gBAAI,MAAM,GAAG;AACb,gBAAI,MAAM,GAAG;AACb,gBAAI,MAAM,GAAG;AACb,gBAAI,MAAM,GAAG;AAGb,gBAAI,KAAK;AACT,gBAAI,KAAK;AACT,gBAAI,KAAK;AACT,gBAAI,KAAK;AACT,gBAAI,KAAK;AACT,gBAAI,KAAK;AACT,gBAAI,KAAK;AACT,gBAAI,KAAK;AACT,gBAAI,KAAK;AACT,gBAAI,KAAK;AACT,gBAAI,KAAK;AACT,gBAAI,KAAK;AACT,gBAAI,KAAK;AACT,gBAAI,KAAK;AACT,gBAAI,KAAK;AACT,gBAAI,KAAK;AAGT,qBAAStZ,KAAI,GAAGA,KAAI,IAAIA,MAAK;AACzB,kBAAI;AACJ,kBAAI;AAGJ,kBAAI,KAAK,EAAEA,EAAC;AAGZ,kBAAIA,KAAI,IAAI;AACR,sBAAM,GAAG,OAAO,EAAE,SAASA,KAAI,CAAC,IAAQ;AACxC,sBAAM,GAAG,MAAO,EAAE,SAASA,KAAI,IAAI,CAAC,IAAI;AAAA,cAC7D,OAAwB;AAEH,oBAAI,UAAW,EAAEA,KAAI,EAAE;AACvB,oBAAI,WAAW,QAAQ;AACvB,oBAAI,WAAW,QAAQ;AACvB,oBAAI,WAAa,aAAa,IAAM,YAAY,OAAS,aAAa,IAAM,YAAY,MAAQ,aAAa;AAC7G,oBAAI,WAAa,aAAa,IAAM,YAAY,OAAS,aAAa,IAAM,YAAY,OAAS,aAAa,IAAM,YAAY;AAGhI,oBAAI,UAAW,EAAEA,KAAI,CAAC;AACtB,oBAAI,WAAW,QAAQ;AACvB,oBAAI,WAAW,QAAQ;AACvB,oBAAI,WAAa,aAAa,KAAO,YAAY,OAAS,YAAY,IAAM,aAAa,MAAQ,aAAa;AAC9G,oBAAI,WAAa,aAAa,KAAO,YAAY,OAAS,YAAY,IAAM,aAAa,OAAS,aAAa,IAAM,YAAY;AAGjI,oBAAI,MAAO,EAAEA,KAAI,CAAC;AAClB,oBAAI,OAAO,IAAI;AACf,oBAAI,OAAO,IAAI;AAEf,oBAAI,OAAQ,EAAEA,KAAI,EAAE;AACpB,oBAAI,QAAQ,KAAK;AACjB,oBAAI,QAAQ,KAAK;AAEjB,sBAAM,UAAU;AAChB,sBAAM,UAAU,QAAS,QAAQ,IAAM,YAAY,IAAK,IAAI;AAC5D,sBAAM,MAAM;AACZ,sBAAM,MAAM,WAAY,QAAQ,IAAM,YAAY,IAAK,IAAI;AAC3D,sBAAM,MAAM;AACZ,sBAAM,MAAM,SAAU,QAAQ,IAAM,UAAU,IAAK,IAAI;AAEvD,mBAAG,OAAO;AACV,mBAAG,MAAO;AAAA,cAC/B;AAEiB,kBAAI,MAAQ,KAAK,KAAO,CAAC,KAAK;AAC9B,kBAAI,MAAQ,KAAK,KAAO,CAAC,KAAK;AAC9B,kBAAI,OAAQ,KAAK,KAAO,KAAK,KAAO,KAAK;AACzC,kBAAI,OAAQ,KAAK,KAAO,KAAK,KAAO,KAAK;AAEzC,kBAAI,WAAY,OAAO,KAAO,MAAM,MAAS,MAAM,KAAQ,OAAO,MAAQ,MAAM,KAAO,OAAO;AAC9F,kBAAI,WAAY,OAAO,KAAO,MAAM,MAAS,MAAM,KAAQ,OAAO,MAAQ,MAAM,KAAO,OAAO;AAC9F,kBAAI,WAAY,OAAO,KAAO,MAAM,OAAS,OAAO,KAAO,MAAM,OAAS,MAAM,KAAO,OAAO;AAC9F,kBAAI,WAAY,OAAO,KAAO,MAAM,OAAS,OAAO,KAAO,MAAM,OAAS,MAAM,KAAO,OAAO;AAG9F,kBAAI,KAAMwZ,GAAExZ,EAAC;AACb,kBAAI,MAAM,GAAG;AACb,kBAAI,MAAM,GAAG;AAEb,kBAAI,MAAM,KAAK;AACf,kBAAI,MAAM,KAAK,WAAY,QAAQ,IAAM,OAAO,IAAK,IAAI;AACzD,kBAAI,MAAM,MAAM;AAChB,kBAAI,MAAM,MAAM,OAAQ,QAAQ,IAAM,QAAQ,IAAK,IAAI;AACvD,kBAAI,MAAM,MAAM;AAChB,kBAAI,MAAM,MAAM,OAAQ,QAAQ,IAAM,QAAQ,IAAK,IAAI;AACvD,kBAAI,MAAM,MAAM;AAChB,kBAAI,MAAM,MAAM,OAAQ,QAAQ,IAAM,QAAQ,IAAK,IAAI;AAGvD,kBAAI,MAAM,UAAU;AACpB,kBAAI,MAAM,UAAU,QAAS,QAAQ,IAAM,YAAY,IAAK,IAAI;AAGhE,mBAAK;AACL,mBAAK;AACL,mBAAK;AACL,mBAAK;AACL,mBAAK;AACL,mBAAK;AACL,mBAAM,KAAK,MAAO;AAClB,mBAAM,KAAK,OAAQ,OAAO,IAAM,OAAO,IAAK,IAAI,KAAM;AACtD,mBAAK;AACL,mBAAK;AACL,mBAAK;AACL,mBAAK;AACL,mBAAK;AACL,mBAAK;AACL,mBAAM,MAAM,MAAO;AACnB,mBAAM,MAAM,OAAQ,OAAO,IAAM,QAAQ,IAAK,IAAI,KAAM;AAAA,YACzE;AAGa,kBAAM,GAAG,MAAQ,MAAM;AACvB,eAAG,OAAQ,MAAM,MAAO,QAAQ,IAAM,OAAO,IAAK,IAAI;AACtD,kBAAM,GAAG,MAAQ,MAAM;AACvB,eAAG,OAAQ,MAAM,MAAO,QAAQ,IAAM,OAAO,IAAK,IAAI;AACtD,kBAAM,GAAG,MAAQ,MAAM;AACvB,eAAG,OAAQ,MAAM,MAAO,QAAQ,IAAM,OAAO,IAAK,IAAI;AACtD,kBAAM,GAAG,MAAQ,MAAM;AACvB,eAAG,OAAQ,MAAM,MAAO,QAAQ,IAAM,OAAO,IAAK,IAAI;AACtD,kBAAM,GAAG,MAAQ,MAAM;AACvB,eAAG,OAAQ,MAAM,MAAO,QAAQ,IAAM,OAAO,IAAK,IAAI;AACtD,kBAAM,GAAG,MAAQ,MAAM;AACvB,eAAG,OAAQ,MAAM,MAAO,QAAQ,IAAM,OAAO,IAAK,IAAI;AACtD,kBAAM,GAAG,MAAQ,MAAM;AACvB,eAAG,OAAQ,MAAM,MAAO,QAAQ,IAAM,OAAO,IAAK,IAAI;AACtD,kBAAM,GAAG,MAAQ,MAAM;AACvB,eAAG,OAAQ,MAAM,MAAO,QAAQ,IAAM,OAAO,IAAK,IAAI;AAAA,UACnE;AAAA,UAES,aAAa,WAAY;AAErB,gBAAI,OAAO,KAAK;AAChB,gBAAI,YAAY,KAAK;AAErB,gBAAI,aAAa,KAAK,cAAc;AACpC,gBAAI,YAAY,KAAK,WAAW;AAGhC,sBAAU,cAAc,CAAC,KAAK,OAAS,KAAK,YAAY;AACxD,uBAAa,YAAY,QAAS,MAAO,KAAK,EAAE,IAAI,KAAK,MAAM,aAAa,UAAW;AACvF,uBAAa,YAAY,QAAS,MAAO,KAAK,EAAE,IAAI;AACpD,iBAAK,WAAW,UAAU,SAAS;AAGnC,iBAAK,SAAQ;AAGb,gBAAI0I,QAAO,KAAK,MAAM,MAAK;AAG3B,mBAAOA;AAAA,UACpB;AAAA,UAES,OAAO,WAAY;AACf,gBAAI,QAAQ4Q,QAAO,MAAM,KAAK,IAAI;AAClC,kBAAM,QAAQ,KAAK,MAAM,MAAK;AAE9B,mBAAO;AAAA,UACpB;AAAA,UAES,WAAW,OAAK;AAAA,QACzB,CAAM;AAgBD,UAAE,SAASA,QAAO,cAAcO,OAAM;AAgBtC,UAAE,aAAaP,QAAO,kBAAkBO,OAAM;AAAA,MACnD,GAAE;AAGD,aAAOf,UAAS;AAAA,IAEjB,CAAC;AAAA;;;;;;;;;ACrUA,KAAC,SAAU,MAAM,SAAS,OAAO;AACA;AAEhC,eAAA,UAA2B,QAAQK,YAAA,GAAmBQ,eAAA,GAAuBG,eAAmB;AAAA,MAClG;AAAA,IASA,GAAEnN,gBAAM,SAAUmM,WAAU;AAE3B,OAAC,WAAY;AAET,YAAI,IAAIA;AACR,YAAI,QAAQ,EAAE;AACd,YAAI,UAAU,MAAM;AACpB,YAAI,eAAe,MAAM;AACzB,YAAI,SAAS,EAAE;AACf,YAAIe,UAAS,OAAO;AAKpB,YAAIE,UAAS,OAAO,SAASF,QAAO,OAAO;AAAA,UACvC,UAAU,WAAY;AAClB,iBAAK,QAAQ,IAAI,aAAa,KAAK;AAAA,cAC/B,IAAI,QAAQ,KAAK,YAAY,UAAU;AAAA,cAAG,IAAI,QAAQ,KAAK,YAAY,SAAU;AAAA,cACjF,IAAI,QAAQ,KAAK,YAAY,SAAU;AAAA,cAAG,IAAI,QAAQ,KAAK,WAAY,UAAU;AAAA,cACjF,IAAI,QAAQ,KAAK,YAAY,UAAU;AAAA,cAAG,IAAI,QAAQ,KAAK,YAAY,UAAU;AAAA,cACjF,IAAI,QAAQ,KAAK,YAAY,UAAU;AAAA,cAAG,IAAI,QAAQ,KAAK,YAAY,UAAU;AAAA,YAClG,CAAc;AAAA,UACd;AAAA,UAES,aAAa,WAAY;AACrB,gBAAInR,QAAOmR,QAAO,YAAY,KAAK,IAAI;AAEvC,YAAAnR,MAAK,YAAY;AAEjB,mBAAOA;AAAA,UACpB;AAAA,QACA,CAAM;AAgBD,UAAE,SAASmR,QAAO,cAAcE,OAAM;AAgBtC,UAAE,aAAaF,QAAO,kBAAkBE,OAAM;AAAA,MACnD,GAAE;AAGD,aAAOjB,UAAS;AAAA,IAEjB,CAAC;AAAA;;;;;;;;;AClFA,KAAC,SAAU,MAAM,SAAS,OAAO;AACA;AAEhC,eAAA,UAA2B,QAAQK,YAAA,GAAmBQ,eAAA,CAAqB;AAAA,MAC7E;AAAA,IASA,GAAEhN,gBAAM,SAAUmM,WAAU;AAE3B,OAAC,SAAUC,OAAM;AAEb,YAAI,IAAID;AACR,YAAI,QAAQ,EAAE;AACd,YAAI,YAAY,MAAM;AACtB,YAAIQ,UAAS,MAAM;AACnB,YAAI,QAAQ,EAAE;AACd,YAAI,UAAU,MAAM;AACpB,YAAI,SAAS,EAAE;AAGf,YAAI,cAAc,CAAA;AAClB,YAAI,aAAc,CAAA;AAClB,YAAI,kBAAkB,CAAA;AAGtB,SAAC,WAAY;AAET,cAAI,IAAI,GAAG,IAAI;AACf,mBAAS3R,KAAI,GAAGA,KAAI,IAAIA,MAAK;AACzB,wBAAY,IAAI,IAAI,CAAC,KAAMA,KAAI,MAAMA,KAAI,KAAK,IAAK;AAEnD,gBAAI,OAAO,IAAI;AACf,gBAAI,QAAQ,IAAI,IAAI,IAAI,KAAK;AAC7B,gBAAI;AACJ,gBAAI;AAAA,UACjB;AAGS,mBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,qBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,yBAAW,IAAI,IAAI,CAAC,IAAI,KAAM,IAAI,IAAI,IAAI,KAAK,IAAK;AAAA,YACrE;AAAA,UACA;AAGS,cAAI,OAAO;AACX,mBAAS3H,KAAI,GAAGA,KAAI,IAAIA,MAAK;AACzB,gBAAI,mBAAmB;AACvB,gBAAI,mBAAmB;AAEvB,qBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,kBAAI,OAAO,GAAM;AACb,oBAAI,eAAe,KAAK,KAAK;AAC7B,oBAAI,cAAc,IAAI;AAClB,sCAAoB,KAAK;AAAA,gBAClD,OAAyD;AAChC,sCAAoB,KAAM,cAAc;AAAA,gBACjE;AAAA,cACA;AAGiB,kBAAI,OAAO,KAAM;AAEb,uBAAQ,QAAQ,IAAK;AAAA,cAC1C,OAAwB;AACH,yBAAS;AAAA,cAC9B;AAAA,YACA;AAEa,4BAAgBA,EAAC,IAAI,QAAQ,OAAO,kBAAkB,gBAAgB;AAAA,UACnF;AAAA,QACA,GAAM;AAGD,YAAI,IAAI,CAAA;AACR,SAAC,WAAY;AACT,mBAASA,KAAI,GAAGA,KAAI,IAAIA,MAAK;AACzB,cAAEA,EAAC,IAAI,QAAQ,OAAM;AAAA,UAClC;AAAA,QACA,GAAM;AAKD,YAAI,OAAO,OAAO,OAAOsZ,QAAO,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UASnC,KAAKA,QAAO,IAAI,OAAO;AAAA,YACnB,cAAc;AAAA,UAC3B,CAAU;AAAA,UAED,UAAU,WAAY;AAClB,gBAAI,QAAQ,KAAK,SAAS,CAAA;AAC1B,qBAAStZ,KAAI,GAAGA,KAAI,IAAIA,MAAK;AACzB,oBAAMA,EAAC,IAAI,IAAI,QAAQ,KAAI;AAAA,YAC5C;AAEa,iBAAK,aAAa,OAAO,IAAI,KAAK,IAAI,gBAAgB;AAAA,UACnE;AAAA,UAES,iBAAiB,SAAU,GAAG,QAAQ;AAElC,gBAAI,QAAQ,KAAK;AACjB,gBAAI,kBAAkB,KAAK,YAAY;AAGvC,qBAASA,KAAI,GAAGA,KAAI,iBAAiBA,MAAK;AAEtC,kBAAI,MAAO,EAAE,SAAS,IAAIA,EAAC;AAC3B,kBAAI,OAAO,EAAE,SAAS,IAAIA,KAAI,CAAC;AAG/B,qBACO,OAAO,IAAO,QAAQ,MAAO,YAC7B,OAAO,KAAO,QAAQ,KAAO;AAEpC,sBACO,QAAQ,IAAO,SAAS,MAAO,YAC/B,QAAQ,KAAO,SAAS,KAAO;AAItC,kBAAI,OAAO,MAAMA,EAAC;AAClB,mBAAK,QAAQ;AACb,mBAAK,OAAQ;AAAA,YAC9B;AAGa,qBAAS,QAAQ,GAAG,QAAQ,IAAI,SAAS;AAErC,uBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAExB,oBAAI,OAAO,GAAG,OAAO;AACrB,yBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,sBAAI,OAAO,MAAM,IAAI,IAAI,CAAC;AAC1B,0BAAQ,KAAK;AACb,0BAAQ,KAAK;AAAA,gBACtC;AAGqB,oBAAI,KAAK,EAAE,CAAC;AACZ,mBAAG,OAAO;AACV,mBAAG,MAAO;AAAA,cAC/B;AACiB,uBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAExB,oBAAI,MAAM,GAAG,IAAI,KAAK,CAAC;AACvB,oBAAI,MAAM,GAAG,IAAI,KAAK,CAAC;AACvB,oBAAI,SAAS,IAAI;AACjB,oBAAI,SAAS,IAAI;AAGjB,oBAAI,OAAO,IAAI,QAAS,UAAU,IAAM,WAAW;AACnD,oBAAI,OAAO,IAAI,OAAS,UAAU,IAAM,WAAW;AACnD,yBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,sBAAI,OAAO,MAAM,IAAI,IAAI,CAAC;AAC1B,uBAAK,QAAQ;AACb,uBAAK,OAAQ;AAAA,gBACtC;AAAA,cACA;AAGiB,uBAAS,YAAY,GAAG,YAAY,IAAI,aAAa;AACjD,oBAAI;AACJ,oBAAI;AAGJ,oBAAI,OAAO,MAAM,SAAS;AAC1B,oBAAI,UAAU,KAAK;AACnB,oBAAI,UAAU,KAAK;AACnB,oBAAI,YAAY,YAAY,SAAS;AAGrC,oBAAI,YAAY,IAAI;AAChB,yBAAQ,WAAW,YAAc,YAAa,KAAK;AACnD,yBAAQ,WAAW,YAAc,YAAa,KAAK;AAAA,gBAC5E,OAAuD;AAC9B,yBAAQ,WAAY,YAAY,KAAQ,YAAa,KAAK;AAC1D,yBAAQ,WAAY,YAAY,KAAQ,YAAa,KAAK;AAAA,gBACnF;AAGqB,oBAAI,UAAU,EAAE,WAAW,SAAS,CAAC;AACrC,wBAAQ,OAAO;AACf,wBAAQ,MAAO;AAAA,cACpC;AAGiB,kBAAI,KAAK,EAAE,CAAC;AACZ,kBAAI,SAAS,MAAM,CAAC;AACpB,iBAAG,OAAO,OAAO;AACjB,iBAAG,MAAO,OAAO;AAGjB,uBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,yBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAExB,sBAAI,YAAY,IAAI,IAAI;AACxB,sBAAI,OAAO,MAAM,SAAS;AAC1B,sBAAI,QAAQ,EAAE,SAAS;AACvB,sBAAI,UAAU,GAAI,IAAI,KAAK,IAAK,IAAI,CAAC;AACrC,sBAAI,UAAU,GAAI,IAAI,KAAK,IAAK,IAAI,CAAC;AAGrC,uBAAK,OAAO,MAAM,OAAQ,CAAC,QAAQ,OAAO,QAAQ;AAClD,uBAAK,MAAO,MAAM,MAAQ,CAAC,QAAQ,MAAO,QAAQ;AAAA,gBAC3E;AAAA,cACA;AAGiB,kBAAI,OAAO,MAAM,CAAC;AAClB,kBAAI,gBAAgB,gBAAgB,KAAK;AACzC,mBAAK,QAAQ,cAAc;AAC3B,mBAAK,OAAQ,cAAc;AAAA,YAC5C;AAAA,UACA;AAAA,UAES,aAAa,WAAY;AAErB,gBAAI,OAAO,KAAK;AAChB,gBAAI,YAAY,KAAK;AACJ,iBAAK,cAAc;AACpC,gBAAI,YAAY,KAAK,WAAW;AAChC,gBAAI,gBAAgB,KAAK,YAAY;AAGrC,sBAAU,cAAc,CAAC,KAAK,KAAQ,KAAK,YAAY;AACvD,uBAAY+Y,MAAK,MAAM,YAAY,KAAK,aAAa,IAAI,kBAAmB,KAAK,CAAC,KAAK;AACvF,iBAAK,WAAW,UAAU,SAAS;AAGnC,iBAAK,SAAQ;AAGb,gBAAI,QAAQ,KAAK;AACjB,gBAAI,oBAAoB,KAAK,IAAI,eAAe;AAChD,gBAAI,oBAAoB,oBAAoB;AAG5C,gBAAI,YAAY,CAAA;AAChB,qBAAS/Y,KAAI,GAAGA,KAAI,mBAAmBA,MAAK;AAExC,kBAAI,OAAO,MAAMA,EAAC;AAClB,kBAAI,UAAU,KAAK;AACnB,kBAAI,UAAU,KAAK;AAGnB,yBACO,WAAW,IAAO,YAAY,MAAO,YACrC,WAAW,KAAO,YAAY,KAAO;AAE5C,yBACO,WAAW,IAAO,YAAY,MAAO,YACrC,WAAW,KAAO,YAAY,KAAO;AAI5C,wBAAU,KAAK,OAAO;AACtB,wBAAU,KAAK,OAAO;AAAA,YACvC;AAGa,mBAAO,IAAI,UAAU,KAAK,WAAW,iBAAiB;AAAA,UACnE;AAAA,UAES,OAAO,WAAY;AACf,gBAAI,QAAQsZ,QAAO,MAAM,KAAK,IAAI;AAElC,gBAAI,QAAQ,MAAM,SAAS,KAAK,OAAO,MAAM,CAAC;AAC9C,qBAAStZ,KAAI,GAAGA,KAAI,IAAIA,MAAK;AACzB,oBAAMA,EAAC,IAAI,MAAMA,EAAC,EAAE,MAAK;AAAA,YAC1C;AAEa,mBAAO;AAAA,UACpB;AAAA,QACA,CAAM;AAgBD,UAAE,OAAOsZ,QAAO,cAAc,IAAI;AAgBlC,UAAE,WAAWA,QAAO,kBAAkB,IAAI;AAAA,MAC/C,GAAG,IAAI;AAGN,aAAOR,UAAS;AAAA,IAEjB,CAAC;AAAA;;;;;;;;;ACrUA,KAAC,SAAU,MAAM,SAAS;AACO;AAEhC,yBAA2B,QAAQK,aAAiB;AAAA,MACtD;AAAA,IASA,GAAExM,gBAAM,SAAUmM,WAAU;AAAA,MAE5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWC,OAAC,SAAUC,OAAM;AAEb,YAAI,IAAID;AACR,YAAI,QAAQ,EAAE;AACd,YAAI,YAAY,MAAM;AACtB,YAAIQ,UAAS,MAAM;AACnB,YAAI,SAAS,EAAE;AAGf,YAAI,MAAM,UAAU,OAAO;AAAA,UACvlE,YAAI,MAAM,UAAU,OAAO;AAAA,UACvnE,YAAI,MAAM,UAAU,OAAO;AAAA,UACtnE,YAAI,MAAM,UAAU,OAAO;AAAA,UACvnE,YAAI,MAAO,UAAU,OAAO,CAAE,GAAY,YAAY,YAAY,YAAY,UAAU,CAAC;AACzF,YAAI,MAAO,UAAU,OAAO,CAAE,YAAY,YAAY,YAAY,YAAY,CAAU,CAAC;AAKzF,YAAIU,aAAY,OAAO,YAAYV,QAAO,OAAO;AAAA,UAC7C,UAAU,WAAY;AAClB,iBAAK,QAAS,UAAU,OAAO,CAAC,YAAY,YAAY,YAAY,WAAY,UAAU,CAAC;AAAA,UACxG;AAAA,UAES,iBAAiB,SAAU,GAAG,QAAQ;AAGlC,qBAAStZ,KAAI,GAAGA,KAAI,IAAIA,MAAK;AAEzB,kBAAI,WAAW,SAASA;AACxB,kBAAI,aAAa,EAAE,QAAQ;AAG3B,gBAAE,QAAQ,KACH,cAAc,IAAO,eAAe,MAAO,YAC3C,cAAc,KAAO,eAAe,KAAO;AAAA,YAEnE;AAEa,gBAAI,IAAK,KAAK,MAAM;AACpB,gBAAI,KAAK,IAAI;AACb,gBAAI,KAAK,IAAI;AACb,gBAAI,KAAK,IAAI;AACb,gBAAI,KAAK,IAAI;AACb,gBAAI,KAAK,IAAI;AACb,gBAAI,KAAK,IAAI;AAGb,gBAAI,IAAI,IAAI,IAAI,IAAI;AACpB,gBAAI,IAAI,IAAI,IAAI,IAAI;AAEpB,iBAAK,KAAK,EAAE,CAAC;AACb,iBAAK,KAAK,EAAE,CAAC;AACb,iBAAK,KAAK,EAAE,CAAC;AACb,iBAAK,KAAK,EAAE,CAAC;AACb,iBAAK,KAAK,EAAE,CAAC;AAEb,gBAAI2H;AACJ,qBAAS3H,KAAI,GAAGA,KAAI,IAAIA,MAAK,GAAG;AAC5B,cAAA2H,KAAK,KAAM,EAAE,SAAO,GAAG3H,EAAC,CAAC,IAAG;AAC5B,kBAAIA,KAAE,IAAG;AACZ,gBAAA2H,MAAM,GAAG,IAAG,IAAG,EAAE,IAAI,GAAG,CAAC;AAAA,cACvC,WAA4B3H,KAAE,IAAI;AACpB,gBAAA2H,MAAM,GAAG,IAAG,IAAG,EAAE,IAAI,GAAG,CAAC;AAAA,cACvC,WAA4B3H,KAAE,IAAI;AACpB,gBAAA2H,MAAM,GAAG,IAAG,IAAG,EAAE,IAAI,GAAG,CAAC;AAAA,cACvC,WAA4B3H,KAAE,IAAI;AACpB,gBAAA2H,MAAM,GAAG,IAAG,IAAG,EAAE,IAAI,GAAG,CAAC;AAAA,cACvC,OAAwB;AACV,gBAAAA,MAAM,GAAG,IAAG,IAAG,EAAE,IAAI,GAAG,CAAC;AAAA,cACvC;AACiB,cAAAA,KAAIA,KAAE;AACN,cAAAA,KAAKsS,MAAKtS,IAAE,GAAG3H,EAAC,CAAC;AACjB,cAAA2H,KAAKA,KAAE,KAAI;AACX,mBAAK;AACL,mBAAK;AACL,mBAAKsS,MAAK,IAAI,EAAE;AAChB,mBAAK;AACL,mBAAKtS;AAEL,cAAAA,KAAK,KAAK,EAAE,SAAO,GAAG3H,EAAC,CAAC,IAAG;AAC3B,kBAAIA,KAAE,IAAG;AACZ,gBAAA2H,MAAM,GAAG,IAAG,IAAG,EAAE,IAAI,GAAG,CAAC;AAAA,cACvC,WAA4B3H,KAAE,IAAI;AACpB,gBAAA2H,MAAM,GAAG,IAAG,IAAG,EAAE,IAAI,GAAG,CAAC;AAAA,cACvC,WAA4B3H,KAAE,IAAI;AACpB,gBAAA2H,MAAM,GAAG,IAAG,IAAG,EAAE,IAAI,GAAG,CAAC;AAAA,cACvC,WAA4B3H,KAAE,IAAI;AACpB,gBAAA2H,MAAM,GAAG,IAAG,IAAG,EAAE,IAAI,GAAG,CAAC;AAAA,cACvC,OAAwB;AACV,gBAAAA,MAAM,GAAG,IAAG,IAAG,EAAE,IAAI,GAAG,CAAC;AAAA,cACvC;AACiB,cAAAA,KAAIA,KAAE;AACN,cAAAA,KAAKsS,MAAKtS,IAAE,GAAG3H,EAAC,CAAC;AACjB,cAAA2H,KAAKA,KAAE,KAAI;AACX,mBAAK;AACL,mBAAK;AACL,mBAAKsS,MAAK,IAAI,EAAE;AAChB,mBAAK;AACL,mBAAKtS;AAAA,YACtB;AAEa,YAAAA,KAAQ,EAAE,CAAC,IAAI,KAAK,KAAI;AACxB,cAAE,CAAC,IAAK,EAAE,CAAC,IAAI,KAAK,KAAI;AACxB,cAAE,CAAC,IAAK,EAAE,CAAC,IAAI,KAAK,KAAI;AACxB,cAAE,CAAC,IAAK,EAAE,CAAC,IAAI,KAAK,KAAI;AACxB,cAAE,CAAC,IAAK,EAAE,CAAC,IAAI,KAAK,KAAI;AACxB,cAAE,CAAC,IAAKA;AAAA,UACrB;AAAA,UAES,aAAa,WAAY;AAErB,gBAAI,OAAO,KAAK;AAChB,gBAAI,YAAY,KAAK;AAErB,gBAAI,aAAa,KAAK,cAAc;AACpC,gBAAI,YAAY,KAAK,WAAW;AAGhC,sBAAU,cAAc,CAAC,KAAK,OAAS,KAAK,YAAY;AACxD,uBAAa,YAAY,OAAQ,KAAM,KAAK,EAAE,KACvC,cAAc,IAAO,eAAe,MAAO,YAC3C,cAAc,KAAO,eAAe,KAAO;AAElD,iBAAK,YAAY,UAAU,SAAS,KAAK;AAGzC,iBAAK,SAAQ;AAGb,gBAAIe,QAAO,KAAK;AAChB,gBAAI,IAAIA,MAAK;AAGb,qBAAS1I,KAAI,GAAGA,KAAI,GAAGA,MAAK;AAExB,kBAAI,MAAM,EAAEA,EAAC;AAGb,gBAAEA,EAAC,KAAO,OAAO,IAAO,QAAQ,MAAO,YAC7B,OAAO,KAAO,QAAQ,KAAO;AAAA,YACxD;AAGa,mBAAO0I;AAAA,UACpB;AAAA,UAES,OAAO,WAAY;AACf,gBAAI,QAAQ4Q,QAAO,MAAM,KAAK,IAAI;AAClC,kBAAM,QAAQ,KAAK,MAAM,MAAK;AAE9B,mBAAO;AAAA,UACpB;AAAA,QACA,CAAM;AAGD,iBAAS,GAAG,GAAG,GAAG,GAAG;AACjB,iBAAS,IAAM,IAAM;AAAA,QAE9B;AAEK,iBAAS,GAAG,GAAG,GAAG,GAAG;AACjB,iBAAU,IAAI,IAAQ,CAAC,IAAI;AAAA,QACpC;AAEK,iBAAS,GAAG,GAAG,GAAG,GAAG;AACjB,kBAAU,IAAM,CAAE,KAAQ;AAAA,QACnC;AAEK,iBAAS,GAAG,GAAG,GAAG,GAAG;AACjB,iBAAU,IAAM,IAAQ,IAAI,CAAE;AAAA,QACvC;AAEK,iBAAS,GAAG,GAAG,GAAG,GAAG;AACjB,iBAAS,KAAO,IAAK,CAAE;AAAA,QAEhC;AAEK,iBAASW,MAAK,GAAErV,IAAG;AACf,iBAAQ,KAAGA,KAAM,MAAK,KAAGA;AAAA,QAClC;AAiBK,UAAE,YAAY0U,QAAO,cAAcU,UAAS;AAgB5C,UAAE,gBAAgBV,QAAO,kBAAkBU,UAAS;AAAA,MACzD,GAAO;AAGN,aAAOlB,UAAS;AAAA,IAEjB,CAAC;AAAA;;;;;;;;;AC1QA,KAAC,SAAU,MAAM,SAAS;AACO;AAEhC,yBAA2B,QAAQK,aAAiB;AAAA,MACtD;AAAA,IASA,GAAExM,gBAAM,SAAUmM,WAAU;AAE3B,OAAC,WAAY;AAET,YAAI,IAAIA;AACR,YAAI,QAAQ,EAAE;AACd,YAAIO,QAAO,MAAM;AACjB,YAAI,QAAQ,EAAE;AACd,YAAI,OAAO,MAAM;AACjB,YAAI,SAAS,EAAE;AAKJ,eAAO,OAAOA,MAAK,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAWjC,MAAM,SAAU,QAAQlV,MAAK;AAEzB,qBAAS,KAAK,UAAU,IAAI,OAAO,KAAI;AAGvC,gBAAI,OAAOA,QAAO,UAAU;AACxB,cAAAA,OAAM,KAAK,MAAMA,IAAG;AAAA,YACrC;AAGa,gBAAI,kBAAkB,OAAO;AAC7B,gBAAI,uBAAuB,kBAAkB;AAG7C,gBAAIA,KAAI,WAAW,sBAAsB;AACrC,cAAAA,OAAM,OAAO,SAASA,IAAG;AAAA,YAC1C;AAGa,YAAAA,KAAI,MAAK;AAGT,gBAAI,OAAO,KAAK,QAAQA,KAAI,MAAK;AACjC,gBAAI,OAAO,KAAK,QAAQA,KAAI,MAAK;AAGjC,gBAAI,YAAY,KAAK;AACrB,gBAAI,YAAY,KAAK;AAGrB,qBAASnE,KAAI,GAAGA,KAAI,iBAAiBA,MAAK;AACtC,wBAAUA,EAAC,KAAK;AAChB,wBAAUA,EAAC,KAAK;AAAA,YACjC;AACa,iBAAK,WAAW,KAAK,WAAW;AAGhC,iBAAK,MAAK;AAAA,UACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UASS,OAAO,WAAY;AAEf,gBAAI,SAAS,KAAK;AAGlB,mBAAO,MAAK;AACZ,mBAAO,OAAO,KAAK,KAAK;AAAA,UACrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAcS,QAAQ,SAAU,eAAe;AAC7B,iBAAK,QAAQ,OAAO,aAAa;AAGjC,mBAAO;AAAA,UACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAgBS,UAAU,SAAU,eAAe;AAE/B,gBAAI,SAAS,KAAK;AAGlB,gBAAI,YAAY,OAAO,SAAS,aAAa;AAC7C,mBAAO,MAAK;AACZ,gBAAIyK,QAAO,OAAO,SAAS,KAAK,MAAM,MAAK,EAAG,OAAO,SAAS,CAAC;AAE/D,mBAAOA;AAAA,UACpB;AAAA,QACA,CAAM;AAAA,MACN,GAAE;AAAA,IAGF,CAAC;AAAA;;;;;;;;;AC9IA,KAAC,SAAU,MAAM,SAAS,OAAO;AACA;AAEhC,eAAA,UAA2B,QAAQ0O,YAAA,GAAmBQ,cAAA,GAAqBG,aAAiB;AAAA,MAC9F;AAAA,IASA,GAAEnN,gBAAM,SAAUmM,WAAU;AAE3B,OAAC,WAAY;AAET,YAAI,IAAIA;AACR,YAAI,QAAQ,EAAE;AACd,YAAIO,QAAO,MAAM;AACjB,YAAI,YAAY,MAAM;AACtB,YAAI,SAAS,EAAE;AACf,YAAII,UAAS,OAAO;AACpB,YAAI,OAAO,OAAO;AAKlB,YAAI,SAAS,OAAO,SAASJ,MAAK,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAQrC,KAAKA,MAAK,OAAO;AAAA,YACb,SAAS,MAAI;AAAA,YACb,QAAQI;AAAA,YACR,YAAY;AAAA,UACzB,CAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAaD,MAAM,SAAU,KAAK;AACjB,iBAAK,MAAM,KAAK,IAAI,OAAO,GAAG;AAAA,UAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAcS,SAAS,SAAU,UAAU,MAAM;AAE/B,gBAAI,MAAM,KAAK;AAGf,gBAAIhP,QAAO,KAAK,OAAO,IAAI,QAAQ,QAAQ;AAG3C,gBAAI,aAAa,UAAU,OAAM;AACjC,gBAAI,aAAa,UAAU,OAAO,CAAC,CAAU,CAAC;AAG9C,gBAAI,kBAAkB,WAAW;AACjC,gBAAI,kBAAkB,WAAW;AACjC,gBAAI,UAAU,IAAI;AAClB,gBAAI,aAAa,IAAI;AAGrB,mBAAO,gBAAgB,SAAS,SAAS;AACrC,kBAAI,QAAQA,MAAK,OAAO,IAAI,EAAE,SAAS,UAAU;AACjD,cAAAA,MAAK,MAAK;AAGV,kBAAI,aAAa,MAAM;AACvB,kBAAI,mBAAmB,WAAW;AAGlC,kBAAI,eAAe;AACnB,uBAASzK,KAAI,GAAGA,KAAI,YAAYA,MAAK;AACjC,+BAAeyK,MAAK,SAAS,YAAY;AACzC,gBAAAA,MAAK,MAAK;AAGV,oBAAI,oBAAoB,aAAa;AAGrC,yBAAS,IAAI,GAAG,IAAI,kBAAkB,KAAK;AACvC,6BAAW,CAAC,KAAK,kBAAkB,CAAC;AAAA,gBAC7D;AAAA,cACA;AAEiB,yBAAW,OAAO,KAAK;AACvB,8BAAgB,CAAC;AAAA,YAClC;AACa,uBAAW,WAAW,UAAU;AAEhC,mBAAO;AAAA,UACpB;AAAA,QACA,CAAM;AAmBD,UAAE,SAAS,SAAU,UAAU,MAAM,KAAK;AACtC,iBAAO,OAAO,OAAO,GAAG,EAAE,QAAQ,UAAU,IAAI;AAAA,QACzD;AAAA,MACA,GAAE;AAGD,aAAOqO,UAAS;AAAA,IAEjB,CAAC;AAAA;;;;;;;;;AChJA,KAAC,SAAU,MAAM,SAAS,OAAO;AACA;AAEhC,eAAA,UAA2B,QAAQK,YAAA,GAAmBQ,YAAA,GAAmBG,aAAiB;AAAA,MAC5F;AAAA,IASA,GAAEnN,gBAAM,SAAUmM,WAAU;AAE3B,OAAC,WAAY;AAET,YAAI,IAAIA;AACR,YAAI,QAAQ,EAAE;AACd,YAAIO,QAAO,MAAM;AACjB,YAAI,YAAY,MAAM;AACtB,YAAI,SAAS,EAAE;AACf,YAAI,MAAM,OAAO;AAMjB,YAAI,SAAS,OAAO,SAASA,MAAK,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAQrC,KAAKA,MAAK,OAAO;AAAA,YACb,SAAS,MAAI;AAAA,YACb,QAAQ;AAAA,YACR,YAAY;AAAA,UACzB,CAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAaD,MAAM,SAAU,KAAK;AACjB,iBAAK,MAAM,KAAK,IAAI,OAAO,GAAG;AAAA,UAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAcS,SAAS,SAAU,UAAU,MAAM;AAC/B,gBAAI;AAGJ,gBAAI,MAAM,KAAK;AAGf,gBAAI,SAAS,IAAI,OAAO,OAAM;AAG9B,gBAAI,aAAa,UAAU,OAAM;AAGjC,gBAAI,kBAAkB,WAAW;AACjC,gBAAI,UAAU,IAAI;AAClB,gBAAI,aAAa,IAAI;AAGrB,mBAAO,gBAAgB,SAAS,SAAS;AACrC,kBAAI,OAAO;AACP,uBAAO,OAAO,KAAK;AAAA,cACxC;AACiB,sBAAQ,OAAO,OAAO,QAAQ,EAAE,SAAS,IAAI;AAC7C,qBAAO,MAAK;AAGZ,uBAASrZ,KAAI,GAAGA,KAAI,YAAYA,MAAK;AACjC,wBAAQ,OAAO,SAAS,KAAK;AAC7B,uBAAO,MAAK;AAAA,cACjC;AAEiB,yBAAW,OAAO,KAAK;AAAA,YACxC;AACa,uBAAW,WAAW,UAAU;AAEhC,mBAAO;AAAA,UACpB;AAAA,QACA,CAAM;AAmBD,UAAE,SAAS,SAAU,UAAU,MAAM,KAAK;AACtC,iBAAO,OAAO,OAAO,GAAG,EAAE,QAAQ,UAAU,IAAI;AAAA,QACzD;AAAA,MACA,GAAE;AAGD,aAAO8Y,UAAS;AAAA,IAEjB,CAAC;AAAA;;;;;;;;;ACrIA,KAAC,SAAU,MAAM,SAAS,OAAO;AACA;AAEhC,eAAA,UAA2B,QAAQK,YAAA,GAAmBQ,cAAA,CAAmB;AAAA,MAC3E;AAAA,IASA,GAAEhN,gBAAM,SAAUmM,WAAU;AAK3B,MAAAA,UAAS,IAAI,UAAW,SAAUE,aAAW;AAEzC,YAAI,IAAIF;AACR,YAAI,QAAQ,EAAE;AACd,YAAIO,QAAO,MAAM;AACjB,YAAI,YAAY,MAAM;AACtB,YAAI,yBAAyB,MAAM;AACnC,YAAI,QAAQ,EAAE;AACH,cAAM;AACjB,YAAI,SAAS,MAAM;AACnB,YAAI,SAAS,EAAE;AACf,YAAI,SAAS,OAAO;AAUpB,YAAI,SAAS,MAAM,SAAS,uBAAuB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAMtD,KAAKA,MAAK,OAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAgBhB,iBAAiB,SAAUlV,MAAK,KAAK;AACjC,mBAAO,KAAK,OAAO,KAAK,iBAAiBA,MAAK,GAAG;AAAA,UAC9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAgBS,iBAAiB,SAAUA,MAAK,KAAK;AACjC,mBAAO,KAAK,OAAO,KAAK,iBAAiBA,MAAK,GAAG;AAAA,UAC9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAaS,MAAM,SAAU,WAAWA,MAAK,KAAK;AAEjC,iBAAK,MAAM,KAAK,IAAI,OAAO,GAAG;AAG9B,iBAAK,aAAa;AAClB,iBAAK,OAAOA;AAGZ,iBAAK,MAAK;AAAA,UACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UASS,OAAO,WAAY;AAEf,mCAAuB,MAAM,KAAK,IAAI;AAGtC,iBAAK,SAAQ;AAAA,UAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAcS,SAAS,SAAU,YAAY;AAE3B,iBAAK,QAAQ,UAAU;AAGvB,mBAAO,KAAK,SAAQ;AAAA,UACjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAgBS,UAAU,SAAU,YAAY;AAE5B,gBAAI,YAAY;AACZ,mBAAK,QAAQ,UAAU;AAAA,YACxC;AAGa,gBAAI,qBAAqB,KAAK,YAAW;AAEzC,mBAAO;AAAA,UACpB;AAAA,UAES,SAAS,MAAI;AAAA,UAEb,QAAQ,MAAI;AAAA,UAEZ,iBAAiB;AAAA,UAEjB,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAejB,eAAgB,2BAAY;AACxB,qBAAS,qBAAqBA,MAAK;AAC/B,kBAAI,OAAOA,QAAO,UAAU;AACxB,uBAAO;AAAA,cAC5B,OAAwB;AACH,uBAAO;AAAA,cAC5B;AAAA,YACA;AAEa,mBAAO,SAAU,QAAQ;AACrB,qBAAO;AAAA,gBACH,SAAS,SAAU5E,UAAS4E,MAAK,KAAK;AAClC,yBAAO,qBAAqBA,IAAG,EAAE,QAAQ,QAAQ5E,UAAS4E,MAAK,GAAG;AAAA,gBAC3F;AAAA,gBAEqB,SAAS,SAAU,YAAYA,MAAK,KAAK;AACrC,yBAAO,qBAAqBA,IAAG,EAAE,QAAQ,QAAQ,YAAYA,MAAK,GAAG;AAAA,gBAC9F;AAAA,cACA;AAAA,YACA;AAAA,UACA,EAAU;AAAA,QACV,CAAM;AAOkB,cAAM,eAAe,OAAO,OAAO;AAAA,UAClD,aAAa,WAAY;AAErB,gBAAI,uBAAuB,KAAK,SAAS,IAAS;AAElD,mBAAO;AAAA,UACpB;AAAA,UAES,WAAW;AAAA,QACpB,CAAM;AAKD,YAAI,SAAS,EAAE,OAAO,CAAA;AAKtB,YAAI,kBAAkB,MAAM,kBAAkBkV,MAAK,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAatD,iBAAiB,SAAU,QAAQ,IAAI;AACnC,mBAAO,KAAK,UAAU,OAAO,QAAQ,EAAE;AAAA,UACpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAcS,iBAAiB,SAAU,QAAQ,IAAI;AACnC,mBAAO,KAAK,UAAU,OAAO,QAAQ,EAAE;AAAA,UACpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAYS,MAAM,SAAU,QAAQ,IAAI;AACxB,iBAAK,UAAU;AACf,iBAAK,MAAM;AAAA,UACxB;AAAA,QACA,CAAM;AAKD,YAAI,MAAM,OAAO,MAAO,WAAY;AAIhC,cAAIa,OAAM,gBAAgB,OAAM;AAKhC,UAAAA,KAAI,YAAYA,KAAI,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAWvB,cAAc,SAAU,OAAO,QAAQ;AAEnC,kBAAI,SAAS,KAAK;AAClB,kBAAI,YAAY,OAAO;AAGvB,uBAAS,KAAK,MAAM,OAAO,QAAQ,SAAS;AAC5C,qBAAO,aAAa,OAAO,MAAM;AAGjC,mBAAK,aAAa,MAAM,MAAM,QAAQ,SAAS,SAAS;AAAA,YACzE;AAAA,UACA,CAAU;AAKD,UAAAA,KAAI,YAAYA,KAAI,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAWvB,cAAc,SAAU,OAAO,QAAQ;AAEnC,kBAAI,SAAS,KAAK;AAClB,kBAAI,YAAY,OAAO;AAGvB,kBAAI,YAAY,MAAM,MAAM,QAAQ,SAAS,SAAS;AAGtD,qBAAO,aAAa,OAAO,MAAM;AACjC,uBAAS,KAAK,MAAM,OAAO,QAAQ,SAAS;AAG5C,mBAAK,aAAa;AAAA,YACnC;AAAA,UACA,CAAU;AAED,mBAAS,SAAS,OAAO,QAAQ,WAAW;AACxC,gBAAI;AAGJ,gBAAI,KAAK,KAAK;AAGd,gBAAI,IAAI;AACJ,sBAAQ;AAGR,mBAAK,MAAMlB;AAAAA,YAC5B,OAAoB;AACH,sBAAQ,KAAK;AAAA,YAC9B;AAGa,qBAAShZ,KAAI,GAAGA,KAAI,WAAWA,MAAK;AAChC,oBAAM,SAASA,EAAC,KAAK,MAAMA,EAAC;AAAA,YAC7C;AAAA,UACA;AAES,iBAAOka;AAAA,QAChB;AAKK,YAAI,QAAQ,EAAE,MAAM,CAAA;AAKpB,YAAI,QAAQ,MAAM,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAatB,KAAK,SAAU,MAAM,WAAW;AAE5B,gBAAI,iBAAiB,YAAY;AAGjC,gBAAI,gBAAgB,iBAAiB,KAAK,WAAW;AAGrD,gBAAI,cAAe,iBAAiB,KAAO,iBAAiB,KAAO,iBAAiB,IAAK;AAGzF,gBAAI,eAAe,CAAA;AACnB,qBAASla,KAAI,GAAGA,KAAI,eAAeA,MAAK,GAAG;AACvC,2BAAa,KAAK,WAAW;AAAA,YAC9C;AACa,gBAAI,UAAU,UAAU,OAAO,cAAc,aAAa;AAG1D,iBAAK,OAAO,OAAO;AAAA,UAChC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAaS,OAAO,SAAU,MAAM;AAEnB,gBAAI,gBAAgB,KAAK,MAAO,KAAK,WAAW,MAAO,CAAC,IAAI;AAG5D,iBAAK,YAAY;AAAA,UAC9B;AAAA,QACA;AAOuB,cAAM,cAAc,OAAO,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAOhD,KAAK,OAAO,IAAI,OAAO;AAAA,YACnB,MAAM;AAAA,YACN,SAAS;AAAA,UACtB,CAAU;AAAA,UAED,OAAO,WAAY;AACf,gBAAI;AAGJ,mBAAO,MAAM,KAAK,IAAI;AAGtB,gBAAI,MAAM,KAAK;AACf,gBAAI,KAAK,IAAI;AACb,gBAAI,OAAO,IAAI;AAGf,gBAAI,KAAK,cAAc,KAAK,iBAAiB;AACzC,4BAAc,KAAK;AAAA,YACpC,OAAuE;AACtD,4BAAc,KAAK;AAEnB,mBAAK,iBAAiB;AAAA,YACvC;AAEa,gBAAI,KAAK,SAAS,KAAK,MAAM,aAAa,aAAa;AACnD,mBAAK,MAAM,KAAK,MAAM,MAAM,GAAG,KAAK;AAAA,YACrD,OAAoB;AACH,mBAAK,QAAQ,YAAY,KAAK,MAAM,MAAM,MAAM,GAAG,KAAK;AACxD,mBAAK,MAAM,YAAY;AAAA,YACxC;AAAA,UACA;AAAA,UAES,iBAAiB,SAAU,OAAO,QAAQ;AACtC,iBAAK,MAAM,aAAa,OAAO,MAAM;AAAA,UAClD;AAAA,UAES,aAAa,WAAY;AACrB,gBAAI;AAGJ,gBAAI,UAAU,KAAK,IAAI;AAGvB,gBAAI,KAAK,cAAc,KAAK,iBAAiB;AAEzC,sBAAQ,IAAI,KAAK,OAAO,KAAK,SAAS;AAGtC,qCAAuB,KAAK,SAAS,IAAS;AAAA,YAC/D,OAAuE;AAEtD,qCAAuB,KAAK,SAAS,IAAS;AAG9C,sBAAQ,MAAM,oBAAoB;AAAA,YACnD;AAEa,mBAAO;AAAA,UACpB;AAAA,UAES,WAAW,MAAI;AAAA,QACxB,CAAM;AAeD,YAAI,eAAe,MAAM,eAAeqZ,MAAK,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAoBhD,MAAM,SAAU,cAAc;AAC1B,iBAAK,MAAM,YAAY;AAAA,UACpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAiBS,UAAU,SAAU,WAAW;AAC3B,oBAAQ,aAAa,KAAK,WAAW,UAAU,IAAI;AAAA,UAChE;AAAA,QACA,CAAM;AAKD,YAAI,WAAW,EAAE,SAAS,CAAA;AAK1B,YAAI,mBAAmB,SAAS,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UActC,WAAW,SAAU,cAAc;AAC/B,gBAAI;AAGJ,gBAAI,aAAa,aAAa;AAC9B,gBAAI,OAAO,aAAa;AAGxB,gBAAI,MAAM;AACN,0BAAY,UAAU,OAAO,CAAC,YAAY,UAAU,CAAC,EAAE,OAAO,IAAI,EAAE,OAAO,UAAU;AAAA,YACtG,OAAoB;AACH,0BAAY;AAAA,YAC7B;AAEa,mBAAO,UAAU,SAAS,MAAM;AAAA,UAC7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAeS,OAAO,SAAU,YAAY;AACzB,gBAAI;AAGJ,gBAAI,aAAa,OAAO,MAAM,UAAU;AAGxC,gBAAI,kBAAkB,WAAW;AAGjC,gBAAI,gBAAgB,CAAC,KAAK,cAAc,gBAAgB,CAAC,KAAK,YAAY;AAEtE,qBAAO,UAAU,OAAO,gBAAgB,MAAM,GAAG,CAAC,CAAC;AAGnD,8BAAgB,OAAO,GAAG,CAAC;AAC3B,yBAAW,YAAY;AAAA,YACxC;AAEa,mBAAO,aAAa,OAAO,EAAE,YAAwB,MAAY;AAAA,UAC9E;AAAA,QACA;AAKK,YAAI,qBAAqB,MAAM,qBAAqBA,MAAK,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAM5D,KAAKA,MAAK,OAAO;AAAA,YACb,QAAQ;AAAA,UACrB,CAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAoBD,SAAS,SAAU,QAAQ9Z,UAAS4E,MAAK,KAAK;AAE1C,kBAAM,KAAK,IAAI,OAAO,GAAG;AAGzB,gBAAI,YAAY,OAAO,gBAAgBA,MAAK,GAAG;AAC/C,gBAAI,aAAa,UAAU,SAAS5E,QAAO;AAG3C,gBAAI,YAAY,UAAU;AAG1B,mBAAO,aAAa,OAAO;AAAA,cACvB;AAAA,cACA,KAAK4E;AAAA,cACL,IAAI,UAAU;AAAA,cACd,WAAW;AAAA,cACX,MAAM,UAAU;AAAA,cAChB,SAAS,UAAU;AAAA,cACnB,WAAW,OAAO;AAAA,cAClB,WAAW,IAAI;AAAA,YAChC,CAAc;AAAA,UACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAmBS,SAAS,SAAU,QAAQ,YAAYA,MAAK,KAAK;AAE7C,kBAAM,KAAK,IAAI,OAAO,GAAG;AAGzB,yBAAa,KAAK,OAAO,YAAY,IAAI,MAAM;AAG/C,gBAAI,YAAY,OAAO,gBAAgBA,MAAK,GAAG,EAAE,SAAS,WAAW,UAAU;AAE/E,mBAAO;AAAA,UACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAiBS,QAAQ,SAAU,YAAYuG,SAAQ;AAClC,gBAAI,OAAO,cAAc,UAAU;AAC/B,qBAAOA,QAAO,MAAM,YAAY,IAAI;AAAA,YACrD,OAAoB;AACH,qBAAO;AAAA,YACxB;AAAA,UACA;AAAA,QACA,CAAM;AAKD,YAAI,QAAQ,EAAE,MAAM,CAAA;AAKpB,YAAI,aAAa,MAAM,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAkB7B,SAAS,SAAU,UAAU,SAAS,QAAQ,MAAM,QAAQ;AAExD,gBAAI,CAAC,MAAM;AACP,qBAAO,UAAU,OAAO,KAAG,CAAC;AAAA,YAC7C;AAGa,gBAAI,CAAC,QAAQ;AACT,kBAAIvG,OAAM,OAAO,OAAO,EAAE,SAAS,UAAU,QAAQ,EAAE,QAAQ,UAAU,IAAI;AAAA,YAC9F,OAAoB;AACH,kBAAIA,OAAM,OAAO,OAAO,EAAE,SAAS,UAAU,QAAQ,OAAc,CAAE,EAAE,QAAQ,UAAU,IAAI;AAAA,YAC9G;AAIa,gBAAI,KAAK,UAAU,OAAOA,KAAI,MAAM,MAAM,OAAO,GAAG,SAAS,CAAC;AAC9D,YAAAA,KAAI,WAAW,UAAU;AAGzB,mBAAO,aAAa,OAAO,EAAE,KAAKA,MAAK,IAAQ,MAAY;AAAA,UACxE;AAAA,QACA;AAMK,YAAI,sBAAsB,MAAM,sBAAsB,mBAAmB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAM5E,KAAK,mBAAmB,IAAI,OAAO;AAAA,YAC/B,KAAK;AAAA,UAClB,CAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAmBD,SAAS,SAAU,QAAQ5E,UAAS,UAAU,KAAK;AAE/C,kBAAM,KAAK,IAAI,OAAO,GAAG;AAGzB,gBAAI,gBAAgB,IAAI,IAAI,QAAQ,UAAU,OAAO,SAAS,OAAO,QAAQ,IAAI,MAAM,IAAI,MAAM;AAGjG,gBAAI,KAAK,cAAc;AAGvB,gBAAI,aAAa,mBAAmB,QAAQ,KAAK,MAAM,QAAQA,UAAS,cAAc,KAAK,GAAG;AAG9F,uBAAW,MAAM,aAAa;AAE9B,mBAAO;AAAA,UACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAmBS,SAAS,SAAU,QAAQ,YAAY,UAAU,KAAK;AAElD,kBAAM,KAAK,IAAI,OAAO,GAAG;AAGzB,yBAAa,KAAK,OAAO,YAAY,IAAI,MAAM;AAG/C,gBAAI,gBAAgB,IAAI,IAAI,QAAQ,UAAU,OAAO,SAAS,OAAO,QAAQ,WAAW,MAAM,IAAI,MAAM;AAGxG,gBAAI,KAAK,cAAc;AAGvB,gBAAI,YAAY,mBAAmB,QAAQ,KAAK,MAAM,QAAQ,YAAY,cAAc,KAAK,GAAG;AAEhG,mBAAO;AAAA,UACpB;AAAA,QACA,CAAM;AAAA,MACN;IAGA,CAAC;AAAA;;;;;;;;;AC93BA,KAAC,SAAU,MAAM,SAAS,OAAO;AACA;AAEhC,eAAA,UAA2B,QAAQ4Z,YAAA,GAAmBQ,kBAAA,CAAwB;AAAA,MAChF;AAAA,IASA,GAAEhN,gBAAM,SAAUmM,WAAU;AAK3B,MAAAA,UAAS,KAAK,MAAO,WAAY;AAC7B,YAAI,MAAMA,UAAS,IAAI,gBAAgB,OAAM;AAE7C,YAAI,YAAY,IAAI,OAAO;AAAA,UACvB,cAAc,SAAU,OAAO,QAAQ;AAEnC,gBAAI,SAAS,KAAK;AAClB,gBAAI,YAAY,OAAO;AAEvB,wCAA4B,KAAK,MAAM,OAAO,QAAQ,WAAW,MAAM;AAGvE,iBAAK,aAAa,MAAM,MAAM,QAAQ,SAAS,SAAS;AAAA,UACrE;AAAA,QACA,CAAM;AAED,YAAI,YAAY,IAAI,OAAO;AAAA,UACvB,cAAc,SAAU,OAAO,QAAQ;AAEnC,gBAAI,SAAS,KAAK;AAClB,gBAAI,YAAY,OAAO;AAGvB,gBAAI,YAAY,MAAM,MAAM,QAAQ,SAAS,SAAS;AAEtD,wCAA4B,KAAK,MAAM,OAAO,QAAQ,WAAW,MAAM;AAGvE,iBAAK,aAAa;AAAA,UAC/B;AAAA,QACA,CAAM;AAED,iBAAS,4BAA4B,OAAO,QAAQ,WAAW,QAAQ;AACnE,cAAI;AAGJ,cAAI,KAAK,KAAK;AAGd,cAAI,IAAI;AACJ,wBAAY,GAAG,MAAM,CAAC;AAGtB,iBAAK,MAAM;AAAA,UACxB,OAAgB;AACH,wBAAY,KAAK;AAAA,UAC9B;AACS,iBAAO,aAAa,WAAW,CAAC;AAGhC,mBAAS9Y,KAAI,GAAGA,KAAI,WAAWA,MAAK;AAChC,kBAAM,SAASA,EAAC,KAAK,UAAUA,EAAC;AAAA,UAC7C;AAAA,QACA;AAEK,eAAO;AAAA,MACZ;AAGC,aAAO8Y,UAAS,KAAK;AAAA,IAEtB,CAAC;AAAA;;;;;;;;;AC/EA,KAAC,SAAU,MAAM,SAAS,OAAO;AACA;AAEhC,eAAA,UAA2B,QAAQK,YAAA,GAAmBQ,kBAAA,CAAwB;AAAA,MAChF;AAAA,IASA,GAAEhN,gBAAM,SAAUmM,WAAU;AAK3B,MAAAA,UAAS,KAAK,MAAO,WAAY;AAC7B,YAAI,MAAMA,UAAS,IAAI,gBAAgB,OAAM;AAE7C,YAAI,YAAY,IAAI,YAAY,IAAI,OAAO;AAAA,UACvC,cAAc,SAAU,OAAO,QAAQ;AAEnC,gBAAI,SAAS,KAAK;AAClB,gBAAI,YAAY,OAAO;AACvB,gBAAI,KAAK,KAAK;AACd,gBAAI,UAAU,KAAK;AAGnB,gBAAI,IAAI;AACJ,wBAAU,KAAK,WAAW,GAAG,MAAM,CAAC;AAGpC,mBAAK,MAAM;AAAA,YAC5B;AACa,gBAAI,YAAY,QAAQ,MAAM,CAAC;AAC/B,mBAAO,aAAa,WAAW,CAAC;AAGhC,oBAAQ,YAAY,CAAC,IAAK,QAAQ,YAAY,CAAC,IAAI,IAAK;AAGxD,qBAAS9Y,KAAI,GAAGA,KAAI,WAAWA,MAAK;AAChC,oBAAM,SAASA,EAAC,KAAK,UAAUA,EAAC;AAAA,YACjD;AAAA,UACA;AAAA,QACA,CAAM;AAED,YAAI,YAAY;AAEhB,eAAO;AAAA,MACZ;AAGC,aAAO8Y,UAAS,KAAK;AAAA,IAEtB,CAAC;AAAA;;;;;;;;;ACzDA,KAAC,SAAU,MAAM,SAAS,OAAO;AACA;AAEhC,eAAA,UAA2B,QAAQK,YAAA,GAAmBQ,kBAAA,CAAwB;AAAA,MAChF;AAAA,IASA,GAAEhN,gBAAM,SAAUmM,WAAU;AAAA,MAE5B;AAAA;AAAA;AAAA;AAAA;AAKC,MAAAA,UAAS,KAAK,aAAc,WAAY;AACpC,YAAI,aAAaA,UAAS,IAAI,gBAAgB,OAAM;AAEvD,iBAAS,QAAQ,MACjB;AACC,eAAM,QAAQ,KAAM,SAAU,KAAM;AACpC,gBAAI,KAAM,QAAQ,KAAI;AACtB,gBAAI,KAAM,QAAQ,IAAG;AACrB,gBAAI,KAAK,OAAO;AAEhB,gBAAI,OAAO,KACX;AACA,mBAAK;AACL,kBAAI,OAAO,KACX;AACC,qBAAK;AACL,oBAAI,OAAO,KACX;AACC,uBAAK;AAAA,gBACV,OAEI;AACC,oBAAE;AAAA,gBACP;AAAA,cACA,OAEG;AACC,kBAAE;AAAA,cACN;AAAA,YACA,OAEG;AACA,gBAAE;AAAA,YACL;AAEG,mBAAO;AACP,oBAAS,MAAM;AACf,oBAAS,MAAM;AACf,oBAAQ;AAAA,UACX,OAEG;AACA,oBAAS,KAAQ;AAAA,UACpB;AACG,iBAAO;AAAA,QACV;AAEE,iBAAS,WAAW,SACpB;AACC,eAAK,QAAQ,CAAC,IAAI,QAAQ,QAAQ,CAAC,CAAC,OAAO,GAC3C;AAEC,oBAAQ,CAAC,IAAI,QAAQ,QAAQ,CAAC,CAAC;AAAA,UACnC;AACG,iBAAO;AAAA,QACV;AAEK,YAAI,YAAY,WAAW,YAAY,WAAW,OAAO;AAAA,UACrD,cAAc,SAAU,OAAO,QAAQ;AAEnC,gBAAI,SAAS,KAAK;AAClB,gBAAI,YAAY,OAAO;AACvB,gBAAI,KAAK,KAAK;AACd,gBAAI,UAAU,KAAK;AAGnB,gBAAI,IAAI;AACJ,wBAAU,KAAK,WAAW,GAAG,MAAM,CAAC;AAGpC,mBAAK,MAAM;AAAA,YAC5B;AAEI,uBAAW,OAAO;AAElB,gBAAI,YAAY,QAAQ,MAAM,CAAC;AACtB,mBAAO,aAAa,WAAW,CAAC;AAGhC,qBAAS9Y,KAAI,GAAGA,KAAI,WAAWA,MAAK;AAChC,oBAAM,SAASA,EAAC,KAAK,UAAUA,EAAC;AAAA,YACjD;AAAA,UACA;AAAA,QACA,CAAM;AAED,mBAAW,YAAY;AAEvB,eAAO;AAAA,MACZ;AAKC,aAAO8Y,UAAS,KAAK;AAAA,IAEtB,CAAC;AAAA;;;;;;;;;ACnHA,KAAC,SAAU,MAAM,SAAS,OAAO;AACA;AAEhC,eAAA,UAA2B,QAAQK,YAAA,GAAmBQ,kBAAA,CAAwB;AAAA,MAChF;AAAA,IASA,GAAEhN,gBAAM,SAAUmM,WAAU;AAK3B,MAAAA,UAAS,KAAK,MAAO,WAAY;AAC7B,YAAI,MAAMA,UAAS,IAAI,gBAAgB,OAAM;AAE7C,YAAI,YAAY,IAAI,YAAY,IAAI,OAAO;AAAA,UACvC,cAAc,SAAU,OAAO,QAAQ;AAEnC,gBAAI,SAAS,KAAK;AAClB,gBAAI,YAAY,OAAO;AACvB,gBAAI,KAAK,KAAK;AACd,gBAAI,YAAY,KAAK;AAGrB,gBAAI,IAAI;AACJ,0BAAY,KAAK,aAAa,GAAG,MAAM,CAAC;AAGxC,mBAAK,MAAM;AAAA,YAC5B;AACa,mBAAO,aAAa,WAAW,CAAC;AAGhC,qBAAS9Y,KAAI,GAAGA,KAAI,WAAWA,MAAK;AAChC,oBAAM,SAASA,EAAC,KAAK,UAAUA,EAAC;AAAA,YACjD;AAAA,UACA;AAAA,QACA,CAAM;AAED,YAAI,YAAY;AAEhB,eAAO;AAAA,MACZ;AAGC,aAAO8Y,UAAS,KAAK;AAAA,IAEtB,CAAC;AAAA;;;;;;;;;ACrDA,KAAC,SAAU,MAAM,SAAS,OAAO;AACA;AAEhC,eAAA,UAA2B,QAAQK,YAAA,GAAmBQ,kBAAA,CAAwB;AAAA,MAChF;AAAA,IASA,GAAEhN,gBAAM,SAAUmM,WAAU;AAK3B,MAAAA,UAAS,KAAK,MAAO,WAAY;AAC7B,YAAI,MAAMA,UAAS,IAAI,gBAAgB,OAAM;AAE7C,YAAI,YAAY,IAAI,OAAO;AAAA,UACvB,cAAc,SAAU,OAAO,QAAQ;AACnC,iBAAK,QAAQ,aAAa,OAAO,MAAM;AAAA,UACpD;AAAA,QACA,CAAM;AAED,YAAI,YAAY,IAAI,OAAO;AAAA,UACvB,cAAc,SAAU,OAAO,QAAQ;AACnC,iBAAK,QAAQ,aAAa,OAAO,MAAM;AAAA,UACpD;AAAA,QACA,CAAM;AAED,eAAO;AAAA,MACZ;AAGC,aAAOA,UAAS,KAAK;AAAA,IAEtB,CAAC;AAAA;;;;;;;;;ACvCA,KAAC,SAAU,MAAM,SAAS,OAAO;AACA;AAEhC,eAAA,UAA2B,QAAQK,YAAA,GAAmBQ,kBAAA,CAAwB;AAAA,MAChF;AAAA,IASA,GAAEhN,gBAAM,SAAUmM,WAAU;AAK3B,MAAAA,UAAS,IAAI,WAAW;AAAA,QACpB,KAAK,SAAU,MAAM,WAAW;AAE5B,cAAI,eAAe,KAAK;AACxB,cAAI,iBAAiB,YAAY;AAGjC,cAAI,gBAAgB,iBAAiB,eAAe;AAGpD,cAAI,cAAc,eAAe,gBAAgB;AAGjD,eAAK,MAAK;AACV,eAAK,MAAM,gBAAgB,CAAC,KAAK,iBAAkB,KAAM,cAAc,IAAK;AAC5E,eAAK,YAAY;AAAA,QAC1B;AAAA,QAEK,OAAO,SAAU,MAAM;AAEnB,cAAI,gBAAgB,KAAK,MAAO,KAAK,WAAW,MAAO,CAAC,IAAI;AAG5D,eAAK,YAAY;AAAA,QAC1B;AAAA,MACA;AAGC,aAAOA,UAAS,IAAI;AAAA,IAErB,CAAC;AAAA;;;;;;;;;AChDA,KAAC,SAAU,MAAM,SAAS,OAAO;AACA;AAEhC,eAAA,UAA2B,QAAQK,YAAA,GAAmBQ,kBAAA,CAAwB;AAAA,MAChF;AAAA,IASA,GAAEhN,gBAAM,SAAUmM,WAAU;AAK3B,MAAAA,UAAS,IAAI,WAAW;AAAA,QACpB,KAAK,SAAU,MAAM,WAAW;AAE5B,cAAI,iBAAiB,YAAY;AAGjC,cAAI,gBAAgB,iBAAiB,KAAK,WAAW;AAGrD,eAAK,OAAOA,UAAS,IAAI,UAAU,OAAO,gBAAgB,CAAC,CAAC,EACvD,OAAOA,UAAS,IAAI,UAAU,OAAO,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;AAAA,QAC5E;AAAA,QAEK,OAAO,SAAU,MAAM;AAEnB,cAAI,gBAAgB,KAAK,MAAO,KAAK,WAAW,MAAO,CAAC,IAAI;AAG5D,eAAK,YAAY;AAAA,QAC1B;AAAA,MACA;AAGC,aAAOA,UAAS,IAAI;AAAA,IAErB,CAAC;AAAA;;;;;;;;;AC3CA,KAAC,SAAU,MAAM,SAAS,OAAO;AACA;AAEhC,eAAA,UAA2B,QAAQK,YAAA,GAAmBQ,kBAAA,CAAwB;AAAA,MAChF;AAAA,IASA,GAAEhN,gBAAM,SAAUmM,WAAU;AAK3B,MAAAA,UAAS,IAAI,WAAW;AAAA,QACpB,KAAK,SAAU,MAAM,WAAW;AAE5B,eAAK,OAAOA,UAAS,IAAI,UAAU,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC;AAG1D,UAAAA,UAAS,IAAI,YAAY,IAAI,MAAM,SAAS;AAAA,QACrD;AAAA,QAEK,OAAO,SAAU,MAAM;AAEnB,UAAAA,UAAS,IAAI,YAAY,MAAM,IAAI;AAGnC,eAAK;AAAA,QACd;AAAA,MACA;AAGC,aAAOA,UAAS,IAAI;AAAA,IAErB,CAAC;AAAA;;;;;;;;;ACvCA,KAAC,SAAU,MAAM,SAAS,OAAO;AACA;AAEhC,eAAA,UAA2B,QAAQK,YAAA,GAAmBQ,kBAAA,CAAwB;AAAA,MAChF;AAAA,IASA,GAAEhN,gBAAM,SAAUmM,WAAU;AAK3B,MAAAA,UAAS,IAAI,cAAc;AAAA,QACvB,KAAK,SAAU,MAAM,WAAW;AAE5B,cAAI,iBAAiB,YAAY;AAGjC,eAAK,MAAK;AACV,eAAK,YAAY,kBAAmB,KAAK,WAAW,kBAAmB;AAAA,QAChF;AAAA,QAEK,OAAO,SAAU,MAAM;AAEnB,cAAI,YAAY,KAAK;AAGrB,cAAI9Y,KAAI,KAAK,WAAW;AACxB,mBAASA,KAAI,KAAK,WAAW,GAAGA,MAAK,GAAGA,MAAK;AACzC,gBAAM,UAAUA,OAAM,CAAC,MAAO,KAAMA,KAAI,IAAK,IAAM,KAAO;AACtD,mBAAK,WAAWA,KAAI;AACpB;AAAA,YACjB;AAAA,UACA;AAAA,QACA;AAAA,MACA;AAGC,aAAO8Y,UAAS,IAAI;AAAA,IAErB,CAAC;AAAA;;;;;;;;;AC9CA,KAAC,SAAU,MAAM,SAAS,OAAO;AACA;AAEhC,eAAA,UAA2B,QAAQK,YAAA,GAAmBQ,kBAAA,CAAwB;AAAA,MAChF;AAAA,IASA,GAAEhN,gBAAM,SAAUmM,WAAU;AAK3B,MAAAA,UAAS,IAAI,YAAY;AAAA,QACrB,KAAK,WAAY;AAAA,QACtB;AAAA,QAEK,OAAO,WAAY;AAAA,QACxB;AAAA,MACA;AAGC,aAAOA,UAAS,IAAI;AAAA,IAErB,CAAC;AAAA;;;;;;;;;AC7BA,KAAC,SAAU,MAAM,SAAS,OAAO;AACA;AAEhC,eAAA,UAA2B,QAAQK,YAAA,GAAmBQ,kBAAA,CAAwB;AAAA,MAChF;AAAA,IASA,GAAEhN,gBAAM,SAAUmM,WAAU;AAE3B,OAAC,SAAUE,aAAW;AAElB,YAAI,IAAIF;AACR,YAAI,QAAQ,EAAE;AACd,YAAI,eAAe,MAAM;AACzB,YAAI,QAAQ,EAAE;AACd,YAAI,MAAM,MAAM;AAChB,YAAI,WAAW,EAAE;AAEE,iBAAS,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAc9B,WAAW,SAAU,cAAc;AAC/B,mBAAO,aAAa,WAAW,SAAS,GAAG;AAAA,UACxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAeS,OAAO,SAAU,OAAO;AACpB,gBAAI,aAAa,IAAI,MAAM,KAAK;AAChC,mBAAO,aAAa,OAAO,EAAE,WAAsB,CAAE;AAAA,UAClE;AAAA,QACA;AAAA,MACA,GAAE;AAGD,aAAOA,UAAS,OAAO;AAAA,IAExB,CAAC;AAAA;;;;;;;;;ACjEA,KAAC,SAAU,MAAM,SAAS,OAAO;AACA;AAEhC,eAAA,UAA2B,QAAQK,eAAmBQ,oBAAyBG,cAAkBK,iBAAqBC,mBAAwB;AAAA,MAChJ;AAAA,IASA,GAAEzN,gBAAM,SAAUmM,WAAU;AAE3B,OAAC,WAAY;AAET,YAAI,IAAIA;AACR,YAAI,QAAQ,EAAE;AACd,YAAI,cAAc,MAAM;AACxB,YAAI,SAAS,EAAE;AAGf,YAAI,OAAO,CAAA;AACX,YAAI,WAAW,CAAA;AACf,YAAI,YAAY,CAAA;AAChB,YAAI,YAAY,CAAA;AAChB,YAAI,YAAY,CAAA;AAChB,YAAI,YAAY,CAAA;AAChB,YAAI,gBAAgB,CAAA;AACpB,YAAI,gBAAgB,CAAA;AACpB,YAAI,gBAAgB,CAAA;AACpB,YAAI,gBAAgB,CAAA;AAGpB,SAAC,WAAY;AAET,cAAIjR,KAAI,CAAA;AACR,mBAAS7H,KAAI,GAAGA,KAAI,KAAKA,MAAK;AAC1B,gBAAIA,KAAI,KAAK;AACT,cAAA6H,GAAE7H,EAAC,IAAIA,MAAK;AAAA,YAC7B,OAAoB;AACH,cAAA6H,GAAE7H,EAAC,IAAKA,MAAK,IAAK;AAAA,YACnC;AAAA,UACA;AAGS,cAAI,IAAI;AACR,cAAI,KAAK;AACT,mBAASA,KAAI,GAAGA,KAAI,KAAKA,MAAK;AAE1B,gBAAI,KAAK,KAAM,MAAM,IAAM,MAAM,IAAM,MAAM,IAAM,MAAM;AACzD,iBAAM,OAAO,IAAM,KAAK,MAAQ;AAChC,iBAAK,CAAC,IAAI;AACV,qBAAS,EAAE,IAAI;AAGf,gBAAI,KAAK6H,GAAE,CAAC;AACZ,gBAAI,KAAKA,GAAE,EAAE;AACb,gBAAI,KAAKA,GAAE,EAAE;AAGb,gBAAIF,KAAKE,GAAE,EAAE,IAAI,MAAU,KAAK;AAChC,sBAAU,CAAC,IAAKF,MAAK,KAAOA,OAAM;AAClC,sBAAU,CAAC,IAAKA,MAAK,KAAOA,OAAM;AAClC,sBAAU,CAAC,IAAKA,MAAK,IAAOA,OAAM;AAClC,sBAAU,CAAC,IAAIA;AAGf,gBAAIA,KAAK,KAAK,WAAc,KAAK,QAAY,KAAK,MAAU,IAAI;AAChE,0BAAc,EAAE,IAAKA,MAAK,KAAOA,OAAM;AACvC,0BAAc,EAAE,IAAKA,MAAK,KAAOA,OAAM;AACvC,0BAAc,EAAE,IAAKA,MAAK,IAAOA,OAAM;AACvC,0BAAc,EAAE,IAAIA;AAGpB,gBAAI,CAAC,GAAG;AACJ,kBAAI,KAAK;AAAA,YAC1B,OAAoB;AACH,kBAAI,KAAKE,GAAEA,GAAEA,GAAE,KAAK,EAAE,CAAC,CAAC;AACxB,oBAAMA,GAAEA,GAAE,EAAE,CAAC;AAAA,YAC9B;AAAA,UACA;AAAA,QACA,GAAM;AAGD,YAAI,OAAO,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,KAAM,IAAM,EAAI;AAK5E,YAAI,MAAM,OAAO,MAAM,YAAY,OAAO;AAAA,UACtC,UAAU,WAAY;AAClB,gBAAIF;AAGJ,gBAAI,KAAK,YAAY,KAAK,mBAAmB,KAAK,MAAM;AACpD;AAAA,YACjB;AAGa,gBAAIxD,OAAM,KAAK,iBAAiB,KAAK;AACrC,gBAAI,WAAWA,KAAI;AACnB,gBAAI,UAAUA,KAAI,WAAW;AAG7B,gBAAI,UAAU,KAAK,WAAW,UAAU;AAGxC,gBAAI,UAAU,UAAU,KAAK;AAG7B,gBAAI,cAAc,KAAK,eAAe,CAAA;AACtC,qBAAS,QAAQ,GAAG,QAAQ,QAAQ,SAAS;AACzC,kBAAI,QAAQ,SAAS;AACjB,4BAAY,KAAK,IAAI,SAAS,KAAK;AAAA,cACxD,OAAwB;AACH,gBAAAwD,KAAI,YAAY,QAAQ,CAAC;AAEzB,oBAAI,EAAE,QAAQ,UAAU;AAEpB,kBAAAA,KAAKA,MAAK,IAAMA,OAAM;AAGtB,kBAAAA,KAAK,KAAKA,OAAM,EAAE,KAAK,KAAO,KAAMA,OAAM,KAAM,GAAI,KAAK,KAAO,KAAMA,OAAM,IAAK,GAAI,KAAK,IAAK,KAAKA,KAAI,GAAI;AAG5G,kBAAAA,MAAK,KAAM,QAAQ,UAAW,CAAC,KAAK;AAAA,gBAC7D,WAAgC,UAAU,KAAK,QAAQ,WAAW,GAAG;AAE5C,kBAAAA,KAAK,KAAKA,OAAM,EAAE,KAAK,KAAO,KAAMA,OAAM,KAAM,GAAI,KAAK,KAAO,KAAMA,OAAM,IAAK,GAAI,KAAK,IAAK,KAAKA,KAAI,GAAI;AAAA,gBACrI;AAEqB,4BAAY,KAAK,IAAI,YAAY,QAAQ,OAAO,IAAIA;AAAA,cACzE;AAAA,YACA;AAGa,gBAAI,iBAAiB,KAAK,kBAAkB,CAAA;AAC5C,qBAAS,WAAW,GAAG,WAAW,QAAQ,YAAY;AAClD,kBAAI,QAAQ,SAAS;AAErB,kBAAI,WAAW,GAAG;AACd,oBAAIA,KAAI,YAAY,KAAK;AAAA,cAC9C,OAAwB;AACH,oBAAIA,KAAI,YAAY,QAAQ,CAAC;AAAA,cAClD;AAEiB,kBAAI,WAAW,KAAK,SAAS,GAAG;AAC5B,+BAAe,QAAQ,IAAIA;AAAA,cAChD,OAAwB;AACH,+BAAe,QAAQ,IAAI,cAAc,KAAKA,OAAM,EAAE,CAAC,IAAI,cAAc,KAAMA,OAAM,KAAM,GAAI,CAAC,IACrE,cAAc,KAAMA,OAAM,IAAK,GAAI,CAAC,IAAI,cAAc,KAAKA,KAAI,GAAI,CAAC;AAAA,cACpH;AAAA,YACA;AAAA,UACA;AAAA,UAES,cAAc,SAAU,GAAG,QAAQ;AAC/B,iBAAK,cAAc,GAAG,QAAQ,KAAK,cAAc,WAAW,WAAW,WAAW,WAAW,IAAI;AAAA,UAC9G;AAAA,UAES,cAAc,SAAU,GAAG,QAAQ;AAE/B,gBAAIA,KAAI,EAAE,SAAS,CAAC;AACpB,cAAE,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC;AAC5B,cAAE,SAAS,CAAC,IAAIA;AAEhB,iBAAK,cAAc,GAAG,QAAQ,KAAK,iBAAiB,eAAe,eAAe,eAAe,eAAe,QAAQ;AAGxH,gBAAIA,KAAI,EAAE,SAAS,CAAC;AACpB,cAAE,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC;AAC5B,cAAE,SAAS,CAAC,IAAIA;AAAA,UAC7B;AAAA,UAES,eAAe,SAAU,GAAG,QAAQ,aAAa0S,YAAWC,YAAWC,YAAWC,YAAWC,OAAM;AAE/F,gBAAI,UAAU,KAAK;AAGnB,gBAAI,KAAK,EAAE,MAAM,IAAQ,YAAY,CAAC;AACtC,gBAAI,KAAK,EAAE,SAAS,CAAC,IAAI,YAAY,CAAC;AACtC,gBAAI,KAAK,EAAE,SAAS,CAAC,IAAI,YAAY,CAAC;AACtC,gBAAI,KAAK,EAAE,SAAS,CAAC,IAAI,YAAY,CAAC;AAGtC,gBAAI,QAAQ;AAGZ,qBAAS,QAAQ,GAAG,QAAQ,SAAS,SAAS;AAE1C,kBAAI,KAAKJ,WAAU,OAAO,EAAE,IAAIC,WAAW,OAAO,KAAM,GAAI,IAAIC,WAAW,OAAO,IAAK,GAAI,IAAIC,WAAU,KAAK,GAAI,IAAI,YAAY,OAAO;AACzI,kBAAI,KAAKH,WAAU,OAAO,EAAE,IAAIC,WAAW,OAAO,KAAM,GAAI,IAAIC,WAAW,OAAO,IAAK,GAAI,IAAIC,WAAU,KAAK,GAAI,IAAI,YAAY,OAAO;AACzI,kBAAI,KAAKH,WAAU,OAAO,EAAE,IAAIC,WAAW,OAAO,KAAM,GAAI,IAAIC,WAAW,OAAO,IAAK,GAAI,IAAIC,WAAU,KAAK,GAAI,IAAI,YAAY,OAAO;AACzI,kBAAI,KAAKH,WAAU,OAAO,EAAE,IAAIC,WAAW,OAAO,KAAM,GAAI,IAAIC,WAAW,OAAO,IAAK,GAAI,IAAIC,WAAU,KAAK,GAAI,IAAI,YAAY,OAAO;AAGzI,mBAAK;AACL,mBAAK;AACL,mBAAK;AACL,mBAAK;AAAA,YACtB;AAGa,gBAAI,MAAOC,MAAK,OAAO,EAAE,KAAK,KAAOA,MAAM,OAAO,KAAM,GAAI,KAAK,KAAOA,MAAM,OAAO,IAAK,GAAI,KAAK,IAAKA,MAAK,KAAK,GAAI,KAAK,YAAY,OAAO;AAC9I,gBAAI,MAAOA,MAAK,OAAO,EAAE,KAAK,KAAOA,MAAM,OAAO,KAAM,GAAI,KAAK,KAAOA,MAAM,OAAO,IAAK,GAAI,KAAK,IAAKA,MAAK,KAAK,GAAI,KAAK,YAAY,OAAO;AAC9I,gBAAI,MAAOA,MAAK,OAAO,EAAE,KAAK,KAAOA,MAAM,OAAO,KAAM,GAAI,KAAK,KAAOA,MAAM,OAAO,IAAK,GAAI,KAAK,IAAKA,MAAK,KAAK,GAAI,KAAK,YAAY,OAAO;AAC9I,gBAAI,MAAOA,MAAK,OAAO,EAAE,KAAK,KAAOA,MAAM,OAAO,KAAM,GAAI,KAAK,KAAOA,MAAM,OAAO,IAAK,GAAI,KAAK,IAAKA,MAAK,KAAK,GAAI,KAAK,YAAY,OAAO;AAG9I,cAAE,MAAM,IAAQ;AAChB,cAAE,SAAS,CAAC,IAAI;AAChB,cAAE,SAAS,CAAC,IAAI;AAChB,cAAE,SAAS,CAAC,IAAI;AAAA,UAC7B;AAAA,UAES,SAAS,MAAI;AAAA,QACtB,CAAM;AAUD,UAAE,MAAM,YAAY,cAAc,GAAG;AAAA,MAC1C,GAAE;AAGD,aAAO3B,UAAS;AAAA,IAEjB,CAAC;AAAA;;;;;;;;;ACzOA,KAAC,SAAU,MAAM,SAAS,OAAO;AACA;AAEhC,eAAA,UAA2B,QAAQK,eAAmBQ,oBAAyBG,cAAkBK,iBAAqBC,mBAAwB;AAAA,MAChJ;AAAA,IASA,GAAEzN,gBAAM,SAAUmM,WAAU;AAE3B,OAAC,WAAY;AAET,YAAI,IAAIA;AACR,YAAI,QAAQ,EAAE;AACd,YAAI,YAAY,MAAM;AACtB,YAAI,cAAc,MAAM;AACxB,YAAI,SAAS,EAAE;AAGf,YAAI,MAAM;AAAA,UACN;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAC5B;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAC5B;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAC5B;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAC5B;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAC5B;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAC5B;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,QACrC;AAGK,YAAI,MAAM;AAAA,UACN;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UACpB;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UACpB;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UACpB;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UACpB;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UACpB;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UACpB;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UACpB;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,QAC7B;AAGK,YAAI,aAAa,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAGhhhfd;AAAA,YACI,GAAK;AAAA,YACL,MAAQ;AAAA,YACR,MAAQ;AAAA,YACR,OAAQ;AAAA,YACR,OAAQ;AAAA,YACR,OAAQ;AAAA,YACR,OAAQ;AAAA,YACR,OAAQ;AAAA,YACR,OAAQ;AAAA,YACR,OAAQ;AAAA,YACR,OAAQ;AAAA,YACR,OAAQ;AAAA,YACR,OAAQ;AAAA,YACR,OAAQ;AAAA,YACR,OAAQ;AAAA,YACR,OAAQ;AAAA,YACR,MAAO;AAAA,YACP,MAAQ;AAAA,YACR,OAAQ;AAAA,YACR,OAAQ;AAAA,YACR,OAAQ;AAAA,YACR,OAAQ;AAAA,YACR,OAAQ;AAAA,YACR,OAAQ;AAAA,YACR,OAAQ;AAAA,YACR,OAAQ;AAAA,YACR,OAAQ;AAAA,YACR,OAAQ;AAAA,YACR,OAAQ;AAAA,YACR,OAAQ;AAAA,YACR,OAAQ;AAAA,YACR,OAAQ;AAAA,YACR,OAAS;AAAA,YACT,OAAS;AAAA,YACT,OAAS;AAAA,YACT,OAAS;AAAA,YACT,OAAS;AAAA,YACT,OAAS;AAAA,YACT,OAAS;AAAA,YACT,OAAS;AAAA,YACT,OAAS;AAAA,YACT,QAAS;AAAA,YACT,QAAS;AAAA,YACT,QAAS;AAAA,YACT,QAAS;AAAA,YACT,QAAS;AAAA,YACT,QAAS;AAAA,YACT,QAAS;AAAA,YACT,OAAS;AAAA,YACT,OAAS;AAAA,YACT,OAAS;AAAA,YACT,OAAS;AAAA,YACT,OAAS;AAAA,YACT,OAAS;AAAA,YACT,OAAS;AAAA,YACT,OAAS;AAAA,YACT,QAAS;AAAA,YACT,QAAS;AAAA,YACT,QAAS;AAAA,YACT,QAAS;AAAA,YACT,QAAS;AAAA,YACT,QAAS;AAAA,YACT,QAAS;AAAA,YACT,QAAS;AAAA;UAEb;AAAA,YACI,GAAK;AAAA,YACL,KAAO;AAAA,YACP,KAAO;AAAA,YACP,KAAO;AAAA,YACP,MAAO;AAAA,YACP,MAAO;AAAA,YACP,MAAO;AAAA,YACP,MAAO;AAAA,YACP,MAAO;AAAA,YACP,MAAO;AAAA,YACP,MAAO;AAAA,YACP,MAAO;AAAA,YACP,MAAO;AAAA,YACP,MAAO;AAAA,YACP,MAAO;AAAA,YACP,MAAO;AAAA,YACP,KAAM;AAAA,YACN,KAAO;AAAA,YACP,KAAO;AAAA,YACP,KAAO;AAAA,YACP,MAAO;AAAA,YACP,MAAO;AAAA,YACP,MAAO;AAAA,YACP,MAAO;AAAA,YACP,MAAO;AAAA,YACP,MAAO;AAAA,YACP,MAAO;AAAA,YACP,MAAO;AAAA,YACP,MAAO;AAAA,YACP,MAAO;AAAA,YACP,MAAO;AAAA,YACP,MAAO;AAAA,YACP,MAAQ;AAAA,YACR,MAAQ;AAAA,YACR,MAAQ;AAAA,YACR,MAAQ;AAAA,YACR,MAAQ;AAAA,YACR,MAAQ;AAAA,YACR,MAAQ;AAAA,YACR,MAAQ;AAAA,YACR,MAAQ;AAAA,YACR,MAAQ;AAAA,YACR,MAAQ;AAAA,YACR,MAAQ;AAAA,YACR,MAAQ;AAAA,YACR,MAAQ;AAAA,YACR,MAAQ;AAAA,YACR,MAAQ;AAAA,YACR,MAAQ;AAAA,YACR,MAAQ;AAAA,YACR,MAAQ;AAAA,YACR,MAAQ;AAAA,YACR,MAAQ;AAAA,YACR,MAAQ;AAAA,YACR,MAAQ;AAAA,YACR,MAAQ;AAAA,YACR,MAAQ;AAAA,YACR,MAAQ;AAAA,YACR,MAAQ;AAAA,YACR,MAAQ;AAAA,YACR,MAAQ;AAAA,YACR,MAAQ;AAAA,YACR,MAAQ;AAAA,YACR,MAAQ;AAAA;UAEZ;AAAA,YACI,GAAK;AAAA,YACL,IAAM;AAAA,YACN,IAAM;AAAA,YACN,IAAM;AAAA,YACN,IAAM;AAAA,YACN,IAAM;AAAA,YACN,IAAM;AAAA,YACN,KAAM;AAAA,YACN,KAAM;AAAA,YACN,KAAM;AAAA,YACN,KAAM;AAAA,YACN,KAAM;AAAA,YACN,KAAM;AAAA,YACN,KAAM;AAAA,YACN,KAAM;AAAA,YACN,KAAM;AAAA,YACN,GAAK;AAAA,YACL,IAAM;AAAA,YACN,IAAM;AAAA,YACN,IAAM;AAAA,YACN,IAAM;AAAA,YACN,IAAM;AAAA,YACN,KAAM;AAAA,YACN,KAAM;AAAA,YACN,KAAM;AAAA,YACN,KAAM;AAAA,YACN,KAAM;AAAA,YACN,KAAM;AAAA,YACN,KAAM;AAAA,YACN,KAAM;AAAA,YACN,KAAM;AAAA,YACN,KAAM;AAAA,YACN,KAAO;AAAA,YACP,KAAO;AAAA,YACP,KAAO;AAAA,YACP,KAAO;AAAA,YACP,KAAO;AAAA,YACP,KAAO;AAAA,YACP,KAAO;AAAA,YACP,KAAO;AAAA,YACP,KAAO;AAAA,YACP,KAAO;AAAA,YACP,KAAO;AAAA,YACP,KAAO;AAAA,YACP,KAAO;AAAA,YACP,KAAO;AAAA,YACP,KAAO;AAAA,YACP,KAAO;AAAA,YACP,KAAO;AAAA,YACP,KAAO;AAAA,YACP,KAAO;AAAA,YACP,KAAO;AAAA,YACP,KAAO;AAAA,YACP,KAAO;AAAA,YACP,KAAO;AAAA,YACP,KAAO;AAAA,YACP,KAAO;AAAA,YACP,KAAO;AAAA,YACP,KAAO;AAAA,YACP,KAAO;AAAA,YACP,KAAO;AAAA,YACP,KAAO;AAAA,YACP,KAAO;AAAA,YACP,KAAO;AAAA;UAEX;AAAA,YACI,GAAK;AAAA,YACL,GAAK;AAAA,YACL,GAAK;AAAA,YACL,GAAK;AAAA,YACL,GAAK;AAAA,YACL,GAAK;AAAA,YACL,GAAK;AAAA,YACL,GAAK;AAAA,YACL,GAAK;AAAA,YACL,GAAK;AAAA,YACL,IAAK;AAAA,YACL,IAAK;AAAA,YACL,IAAK;AAAA,YACL,IAAK;AAAA,YACL,IAAK;AAAA,YACL,IAAK;AAAA,YACL,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,IAAM;AAAA,YACN,IAAM;AAAA,YACN,IAAM;AAAA,YACN,IAAM;AAAA,YACN,IAAM;AAAA,YACN,IAAM;AAAA,YACN,IAAM;AAAA,YACN,IAAM;AAAA,YACN,IAAM;AAAA,YACN,IAAM;AAAA,YACN,IAAM;AAAA,YACN,IAAM;AAAA,YACN,IAAM;AAAA,YACN,IAAM;AAAA,YACN,IAAM;AAAA,YACN,IAAM;AAAA,YACN,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,YAAY;AAAA;QAEzB;AAGK,YAAI,YAAY;AAAA,UACZ;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,QAC7C;AAKK,YAAI,MAAM,OAAO,MAAM,YAAY,OAAO;AAAA,UACtC,UAAU,WAAY;AAElB,gBAAI3U,OAAM,KAAK;AACf,gBAAI,WAAWA,KAAI;AAGnB,gBAAI,UAAU,CAAA;AACd,qBAASnE,KAAI,GAAGA,KAAI,IAAIA,MAAK;AACzB,kBAAI,YAAY,IAAIA,EAAC,IAAI;AACzB,sBAAQA,EAAC,IAAK,SAAS,cAAc,CAAC,MAAO,KAAK,YAAY,KAAO;AAAA,YACtF;AAGa,gBAAI,UAAU,KAAK,WAAW,CAAA;AAC9B,qBAAS,UAAU,GAAG,UAAU,IAAI,WAAW;AAE3C,kBAAI,SAAS,QAAQ,OAAO,IAAI,CAAA;AAGhC,kBAAI,WAAW,WAAW,OAAO;AAGjC,uBAASA,KAAI,GAAGA,KAAI,IAAIA,MAAK;AAEzB,uBAAQA,KAAI,IAAK,CAAC,KAAK,SAAU,IAAIA,EAAC,IAAI,IAAK,YAAY,EAAE,KAAM,KAAKA,KAAI;AAG5E,uBAAO,KAAMA,KAAI,IAAK,EAAE,KAAK,QAAQ,MAAQ,IAAIA,KAAI,EAAE,IAAI,IAAK,YAAY,EAAG,KAAM,KAAKA,KAAI;AAAA,cACnH;AAKiB,qBAAO,CAAC,IAAK,OAAO,CAAC,KAAK,IAAM,OAAO,CAAC,MAAM;AAC9C,uBAASA,KAAI,GAAGA,KAAI,GAAGA,MAAK;AACxB,uBAAOA,EAAC,IAAI,OAAOA,EAAC,OAAQA,KAAI,KAAK,IAAI;AAAA,cAC9D;AACiB,qBAAO,CAAC,IAAK,OAAO,CAAC,KAAK,IAAM,OAAO,CAAC,MAAM;AAAA,YAC/D;AAGa,gBAAI,aAAa,KAAK,cAAc,CAAA;AACpC,qBAASA,KAAI,GAAGA,KAAI,IAAIA,MAAK;AACzB,yBAAWA,EAAC,IAAI,QAAQ,KAAKA,EAAC;AAAA,YAC/C;AAAA,UACA;AAAA,UAES,cAAc,SAAU,GAAG,QAAQ;AAC/B,iBAAK,cAAc,GAAG,QAAQ,KAAK,QAAQ;AAAA,UACxD;AAAA,UAES,cAAc,SAAU,GAAG,QAAQ;AAC/B,iBAAK,cAAc,GAAG,QAAQ,KAAK,WAAW;AAAA,UAC3D;AAAA,UAES,eAAe,SAAU,GAAG,QAAQ,SAAS;AAEzC,iBAAK,UAAU,EAAE,MAAM;AACvB,iBAAK,UAAU,EAAE,SAAS,CAAC;AAG3B,uBAAW,KAAK,MAAM,GAAI,SAAU;AACpC,uBAAW,KAAK,MAAM,IAAI,KAAU;AACpC,uBAAW,KAAK,MAAM,GAAI,SAAU;AACpC,uBAAW,KAAK,MAAM,GAAI,QAAU;AACpC,uBAAW,KAAK,MAAM,GAAI,UAAU;AAGpC,qBAAS,QAAQ,GAAG,QAAQ,IAAI,SAAS;AAErC,kBAAI,SAAS,QAAQ,KAAK;AAC1B,kBAAI,SAAS,KAAK;AAClB,kBAAI,SAAS,KAAK;AAGlB,kBAAIiH,KAAI;AACR,uBAASjH,KAAI,GAAGA,KAAI,GAAGA,MAAK;AACxB,gBAAAiH,MAAK,OAAOjH,EAAC,IAAI,SAAS,OAAOA,EAAC,KAAK,UAAUA,EAAC,OAAO,CAAC;AAAA,cAC/E;AACiB,mBAAK,UAAU;AACf,mBAAK,UAAU,SAASiH;AAAA,YACzC;AAGa,gBAAIU,KAAI,KAAK;AACb,iBAAK,UAAU,KAAK;AACpB,iBAAK,UAAUA;AAGf,uBAAW,KAAK,MAAM,GAAI,UAAU;AACpC,uBAAW,KAAK,MAAM,GAAI,QAAU;AACpC,uBAAW,KAAK,MAAM,GAAI,SAAU;AACpC,uBAAW,KAAK,MAAM,IAAI,KAAU;AACpC,uBAAW,KAAK,MAAM,GAAI,SAAU;AAGpC,cAAE,MAAM,IAAI,KAAK;AACjB,cAAE,SAAS,CAAC,IAAI,KAAK;AAAA,UAClC;AAAA,UAES,SAAS,KAAG;AAAA,UAEZ,QAAQ,KAAG;AAAA,UAEX,WAAW,KAAG;AAAA,QACvB,CAAM;AAGD,iBAAS,WAAW,QAAQ,MAAM;AAC9B,cAAIA,MAAM,KAAK,YAAY,SAAU,KAAK,WAAW;AACrD,eAAK,WAAWA;AAChB,eAAK,WAAWA,MAAK;AAAA,QAC9B;AAEK,iBAAS,WAAW,QAAQ,MAAM;AAC9B,cAAIA,MAAM,KAAK,YAAY,SAAU,KAAK,WAAW;AACrD,eAAK,WAAWA;AAChB,eAAK,WAAWA,MAAK;AAAA,QAC9B;AAUK,UAAE,MAAM,YAAY,cAAc,GAAG;AAKrC,YAAI,YAAY,OAAO,YAAY,YAAY,OAAO;AAAA,UAClD,UAAU,WAAY;AAElB,gBAAIxD,OAAM,KAAK;AACf,gBAAI,WAAWA,KAAI;AAEnB,gBAAI,SAAS,WAAW,KAAK,SAAS,WAAW,KAAK,SAAS,SAAS,GAAG;AACvE,oBAAM,IAAI,MAAM,+EAA+E;AAAA,YAChH;AAGa,gBAAI,OAAO,SAAS,MAAM,GAAG,CAAC;AAC9B,gBAAIuW,QAAO,SAAS,SAAS,IAAI,SAAS,MAAM,GAAG,CAAC,IAAI,SAAS,MAAM,GAAG,CAAC;AAC3E,gBAAI,OAAO,SAAS,SAAS,IAAI,SAAS,MAAM,GAAG,CAAC,IAAI,SAAS,MAAM,GAAG,CAAC;AAG3E,iBAAK,QAAQ,IAAI,gBAAgB,UAAU,OAAO,IAAI,CAAC;AACvD,iBAAK,QAAQ,IAAI,gBAAgB,UAAU,OAAOA,KAAI,CAAC;AACvD,iBAAK,QAAQ,IAAI,gBAAgB,UAAU,OAAO,IAAI,CAAC;AAAA,UACpE;AAAA,UAES,cAAc,SAAU,GAAG,QAAQ;AAC/B,iBAAK,MAAM,aAAa,GAAG,MAAM;AACjC,iBAAK,MAAM,aAAa,GAAG,MAAM;AACjC,iBAAK,MAAM,aAAa,GAAG,MAAM;AAAA,UAC9C;AAAA,UAES,cAAc,SAAU,GAAG,QAAQ;AAC/B,iBAAK,MAAM,aAAa,GAAG,MAAM;AACjC,iBAAK,MAAM,aAAa,GAAG,MAAM;AACjC,iBAAK,MAAM,aAAa,GAAG,MAAM;AAAA,UAC9C;AAAA,UAES,SAAS,MAAI;AAAA,UAEb,QAAQ,KAAG;AAAA,UAEX,WAAW,KAAG;AAAA,QACvB,CAAM;AAUD,UAAE,YAAY,YAAY,cAAc,SAAS;AAAA,MACtD,GAAE;AAGD,aAAO5B,UAAS;AAAA,IAEjB,CAAC;AAAA;;;;;;;;;AC1wBA,KAAC,SAAU,MAAM,SAAS,OAAO;AACA;AAEhC,eAAA,UAA2B,QAAQK,eAAmBQ,oBAAyBG,cAAkBK,iBAAqBC,mBAAwB;AAAA,MAChJ;AAAA,IASA,GAAEzN,gBAAM,SAAUmM,WAAU;AAE3B,OAAC,WAAY;AAET,YAAI,IAAIA;AACR,YAAI,QAAQ,EAAE;AACd,YAAI,eAAe,MAAM;AACzB,YAAI,SAAS,EAAE;AAKf,YAAI,MAAM,OAAO,MAAM,aAAa,OAAO;AAAA,UACvC,UAAU,WAAY;AAElB,gBAAI3U,OAAM,KAAK;AACf,gBAAI,WAAWA,KAAI;AACnB,gBAAI,cAAcA,KAAI;AAGtB,gBAAIuD,KAAI,KAAK,KAAK,CAAA;AAClB,qBAAS1H,KAAI,GAAGA,KAAI,KAAKA,MAAK;AAC1B,cAAA0H,GAAE1H,EAAC,IAAIA;AAAA,YACxB;AAGa,qBAASA,KAAI,GAAG,IAAI,GAAGA,KAAI,KAAKA,MAAK;AACjC,kBAAI,eAAeA,KAAI;AACvB,kBAAI,UAAW,SAAS,iBAAiB,CAAC,MAAO,KAAM,eAAe,IAAK,IAAM;AAEjF,mBAAK,IAAI0H,GAAE1H,EAAC,IAAI,WAAW;AAG3B,kBAAI2H,KAAID,GAAE1H,EAAC;AACX,cAAA0H,GAAE1H,EAAC,IAAI0H,GAAE,CAAC;AACV,cAAAA,GAAE,CAAC,IAAIC;AAAA,YACxB;AAGa,iBAAK,KAAK,KAAK,KAAK;AAAA,UACjC;AAAA,UAES,iBAAiB,SAAU,GAAG,QAAQ;AAClC,cAAE,MAAM,KAAK,sBAAsB,KAAK,IAAI;AAAA,UACzD;AAAA,UAES,SAAS,MAAI;AAAA,UAEb,QAAQ;AAAA,QACjB,CAAM;AAED,iBAAS,wBAAwB;AAE7B,cAAID,KAAI,KAAK;AACb,cAAI1H,KAAI,KAAK;AACb,cAAI,IAAI,KAAK;AAGb,cAAI,gBAAgB;AACpB,mBAAS4E,KAAI,GAAGA,KAAI,GAAGA,MAAK;AACxB,YAAA5E,MAAKA,KAAI,KAAK;AACd,iBAAK,IAAI0H,GAAE1H,EAAC,KAAK;AAGjB,gBAAI2H,KAAID,GAAE1H,EAAC;AACX,YAAA0H,GAAE1H,EAAC,IAAI0H,GAAE,CAAC;AACV,YAAAA,GAAE,CAAC,IAAIC;AAEP,6BAAiBD,IAAGA,GAAE1H,EAAC,IAAI0H,GAAE,CAAC,KAAK,GAAG,KAAM,KAAK9C,KAAI;AAAA,UAClE;AAGS,eAAK,KAAK5E;AACV,eAAK,KAAK;AAEV,iBAAO;AAAA,QAChB;AAUK,UAAE,MAAM,aAAa,cAAc,GAAG;AAKtC,YAAI,UAAU,OAAO,UAAU,IAAI,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAMtC,KAAK,IAAI,IAAI,OAAO;AAAA,YAChB,MAAM;AAAA,UACnB,CAAU;AAAA,UAED,UAAU,WAAY;AAClB,gBAAI,SAAS,KAAK,IAAI;AAGtB,qBAASA,KAAI,KAAK,IAAI,MAAMA,KAAI,GAAGA,MAAK;AACpC,oCAAsB,KAAK,IAAI;AAAA,YAChD;AAAA,UACA;AAAA,QACA,CAAM;AAUD,UAAE,UAAU,aAAa,cAAc,OAAO;AAAA,MACnD,GAAE;AAGD,aAAO8Y,UAAS;AAAA,IAEjB,CAAC;AAAA;;;;;;;;;AC1IA,KAAC,SAAU,MAAM,SAAS,OAAO;AACA;AAEhC,eAAA,UAA2B,QAAQK,eAAmBQ,oBAAyBG,cAAkBK,iBAAqBC,mBAAwB;AAAA,MAChJ;AAAA,IASA,GAAEzN,gBAAM,SAAUmM,WAAU;AAE3B,OAAC,WAAY;AAET,YAAI,IAAIA;AACR,YAAI,QAAQ,EAAE;AACd,YAAI,eAAe,MAAM;AACzB,YAAI,SAAS,EAAE;AAGf,YAAIpR,KAAK,CAAA;AACT,YAAI,KAAK,CAAA;AACT,YAAI,IAAK,CAAA;AAKT,YAAI,SAAS,OAAO,SAAS,aAAa,OAAO;AAAA,UAC7C,UAAU,WAAY;AAElB,gBAAI8R,KAAI,KAAK,KAAK;AAClB,gBAAI,KAAK,KAAK,IAAI;AAGlB,qBAASxZ,KAAI,GAAGA,KAAI,GAAGA,MAAK;AACxB,cAAAwZ,GAAExZ,EAAC,KAAOwZ,GAAExZ,EAAC,KAAK,IAAOwZ,GAAExZ,EAAC,MAAM,MAAO,YAC/BwZ,GAAExZ,EAAC,KAAK,KAAOwZ,GAAExZ,EAAC,MAAM,KAAO;AAAA,YAC1D;AAGa,gBAAI,IAAI,KAAK,KAAK;AAAA,cACdwZ,GAAE,CAAC;AAAA,cAAIA,GAAE,CAAC,KAAK,KAAOA,GAAE,CAAC,MAAM;AAAA,cAC/BA,GAAE,CAAC;AAAA,cAAIA,GAAE,CAAC,KAAK,KAAOA,GAAE,CAAC,MAAM;AAAA,cAC/BA,GAAE,CAAC;AAAA,cAAIA,GAAE,CAAC,KAAK,KAAOA,GAAE,CAAC,MAAM;AAAA,cAC/BA,GAAE,CAAC;AAAA,cAAIA,GAAE,CAAC,KAAK,KAAOA,GAAE,CAAC,MAAM;AAAA,YAChD;AAGa,gBAAImB,KAAI,KAAK,KAAK;AAAA,cACbnB,GAAE,CAAC,KAAK,KAAOA,GAAE,CAAC,MAAM;AAAA,cAAMA,GAAE,CAAC,IAAI,aAAeA,GAAE,CAAC,IAAI;AAAA,cAC3DA,GAAE,CAAC,KAAK,KAAOA,GAAE,CAAC,MAAM;AAAA,cAAMA,GAAE,CAAC,IAAI,aAAeA,GAAE,CAAC,IAAI;AAAA,cAC3DA,GAAE,CAAC,KAAK,KAAOA,GAAE,CAAC,MAAM;AAAA,cAAMA,GAAE,CAAC,IAAI,aAAeA,GAAE,CAAC,IAAI;AAAA,cAC3DA,GAAE,CAAC,KAAK,KAAOA,GAAE,CAAC,MAAM;AAAA,cAAMA,GAAE,CAAC,IAAI,aAAeA,GAAE,CAAC,IAAI;AAAA,YAC7E;AAGa,iBAAK,KAAK;AAGV,qBAASxZ,KAAI,GAAGA,KAAI,GAAGA,MAAK;AACxB,wBAAU,KAAK,IAAI;AAAA,YACpC;AAGa,qBAASA,KAAI,GAAGA,KAAI,GAAGA,MAAK;AACxB,cAAA2a,GAAE3a,EAAC,KAAK,EAAGA,KAAI,IAAK,CAAC;AAAA,YACtC;AAGa,gBAAI,IAAI;AAEJ,kBAAI,KAAK,GAAG;AACZ,kBAAI,OAAO,GAAG,CAAC;AACf,kBAAI,OAAO,GAAG,CAAC;AAGf,kBAAI,MAAQ,QAAQ,IAAM,SAAS,MAAO,YAAiB,QAAQ,KAAO,SAAS,KAAM;AACzF,kBAAI4a,OAAQ,QAAQ,IAAM,SAAS,MAAO,YAAiB,QAAQ,KAAO,SAAS,KAAM;AACzF,kBAAI,KAAM,OAAO,KAAOA,MAAK;AAC7B,kBAAI,KAAMA,OAAM,KAAQ,KAAK;AAG7B,cAAAD,GAAE,CAAC,KAAK;AACR,cAAAA,GAAE,CAAC,KAAK;AACR,cAAAA,GAAE,CAAC,KAAKC;AACR,cAAAD,GAAE,CAAC,KAAK;AACR,cAAAA,GAAE,CAAC,KAAK;AACR,cAAAA,GAAE,CAAC,KAAK;AACR,cAAAA,GAAE,CAAC,KAAKC;AACR,cAAAD,GAAE,CAAC,KAAK;AAGR,uBAAS3a,KAAI,GAAGA,KAAI,GAAGA,MAAK;AACxB,0BAAU,KAAK,IAAI;AAAA,cACxC;AAAA,YACA;AAAA,UACA;AAAA,UAES,iBAAiB,SAAU,GAAG,QAAQ;AAElC,gBAAI,IAAI,KAAK;AAGb,sBAAU,KAAK,IAAI;AAGnB,YAAA0H,GAAE,CAAC,IAAI,EAAE,CAAC,IAAK,EAAE,CAAC,MAAM,KAAO,EAAE,CAAC,KAAK;AACvC,YAAAA,GAAE,CAAC,IAAI,EAAE,CAAC,IAAK,EAAE,CAAC,MAAM,KAAO,EAAE,CAAC,KAAK;AACvC,YAAAA,GAAE,CAAC,IAAI,EAAE,CAAC,IAAK,EAAE,CAAC,MAAM,KAAO,EAAE,CAAC,KAAK;AACvC,YAAAA,GAAE,CAAC,IAAI,EAAE,CAAC,IAAK,EAAE,CAAC,MAAM,KAAO,EAAE,CAAC,KAAK;AAEvC,qBAAS1H,KAAI,GAAGA,KAAI,GAAGA,MAAK;AAExB,cAAA0H,GAAE1H,EAAC,KAAO0H,GAAE1H,EAAC,KAAK,IAAO0H,GAAE1H,EAAC,MAAM,MAAO,YAC/B0H,GAAE1H,EAAC,KAAK,KAAO0H,GAAE1H,EAAC,MAAM,KAAO;AAGzC,gBAAE,SAASA,EAAC,KAAK0H,GAAE1H,EAAC;AAAA,YACrC;AAAA,UACA;AAAA,UAES,WAAW,MAAI;AAAA,UAEf,QAAQ,KAAG;AAAA,QACpB,CAAM;AAED,iBAAS,YAAY;AAEjB,cAAI,IAAI,KAAK;AACb,cAAI2a,KAAI,KAAK;AAGb,mBAAS3a,KAAI,GAAGA,KAAI,GAAGA,MAAK;AACxB,eAAGA,EAAC,IAAI2a,GAAE3a,EAAC;AAAA,UACxB;AAGS,UAAA2a,GAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,aAAa,KAAK,KAAM;AACvC,UAAAA,GAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,cAAeA,GAAE,CAAC,MAAM,IAAM,GAAG,CAAC,MAAM,IAAK,IAAI,KAAM;AACtE,UAAAA,GAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,aAAeA,GAAE,CAAC,MAAM,IAAM,GAAG,CAAC,MAAM,IAAK,IAAI,KAAM;AACtE,UAAAA,GAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,cAAeA,GAAE,CAAC,MAAM,IAAM,GAAG,CAAC,MAAM,IAAK,IAAI,KAAM;AACtE,UAAAA,GAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,cAAeA,GAAE,CAAC,MAAM,IAAM,GAAG,CAAC,MAAM,IAAK,IAAI,KAAM;AACtE,UAAAA,GAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,aAAeA,GAAE,CAAC,MAAM,IAAM,GAAG,CAAC,MAAM,IAAK,IAAI,KAAM;AACtE,UAAAA,GAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,cAAeA,GAAE,CAAC,MAAM,IAAM,GAAG,CAAC,MAAM,IAAK,IAAI,KAAM;AACtE,UAAAA,GAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,cAAeA,GAAE,CAAC,MAAM,IAAM,GAAG,CAAC,MAAM,IAAK,IAAI,KAAM;AACtE,eAAK,KAAMA,GAAE,CAAC,MAAM,IAAM,GAAG,CAAC,MAAM,IAAK,IAAI;AAG7C,mBAAS3a,KAAI,GAAGA,KAAI,GAAGA,MAAK;AACxB,gBAAI,KAAK,EAAEA,EAAC,IAAI2a,GAAE3a,EAAC;AAGnB,gBAAI,KAAK,KAAK;AACd,gBAAI,KAAK,OAAO;AAGhB,gBAAI,OAAS,KAAK,OAAQ,MAAM,KAAK,OAAQ,MAAM,KAAK;AACxD,gBAAI,OAAQ,KAAK,cAAc,KAAM,OAAQ,KAAK,SAAc,KAAM;AAGtE,cAAEA,EAAC,IAAI,KAAK;AAAA,UACzB;AAGS,YAAE,CAAC,IAAK,EAAE,CAAC,KAAM,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM,OAAS,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM,MAAQ;AAClF,YAAE,CAAC,IAAK,EAAE,CAAC,KAAM,EAAE,CAAC,KAAK,IAAO,EAAE,CAAC,MAAM,MAAO,EAAE,CAAC,IAAK;AACxD,YAAE,CAAC,IAAK,EAAE,CAAC,KAAM,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM,OAAS,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM,MAAQ;AAClF,YAAE,CAAC,IAAK,EAAE,CAAC,KAAM,EAAE,CAAC,KAAK,IAAO,EAAE,CAAC,MAAM,MAAO,EAAE,CAAC,IAAK;AACxD,YAAE,CAAC,IAAK,EAAE,CAAC,KAAM,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM,OAAS,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM,MAAQ;AAClF,YAAE,CAAC,IAAK,EAAE,CAAC,KAAM,EAAE,CAAC,KAAK,IAAO,EAAE,CAAC,MAAM,MAAO,EAAE,CAAC,IAAK;AACxD,YAAE,CAAC,IAAK,EAAE,CAAC,KAAM,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM,OAAS,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM,MAAQ;AAClF,YAAE,CAAC,IAAK,EAAE,CAAC,KAAM,EAAE,CAAC,KAAK,IAAO,EAAE,CAAC,MAAM,MAAO,EAAE,CAAC,IAAK;AAAA,QACjE;AAUK,UAAE,SAAS,aAAa,cAAc,MAAM;AAAA,MACjD,GAAE;AAGD,aAAO8Y,UAAS;AAAA,IAEjB,CAAC;AAAA;;;;;;;;;AC/LA,KAAC,SAAU,MAAM,SAAS,OAAO;AACA;AAEhC,eAAA,UAA2B,QAAQK,eAAmBQ,oBAAyBG,cAAkBK,iBAAqBC,mBAAwB;AAAA,MAChJ;AAAA,IASA,GAAEzN,gBAAM,SAAUmM,WAAU;AAE3B,OAAC,WAAY;AAET,YAAI,IAAIA;AACR,YAAI,QAAQ,EAAE;AACd,YAAI,eAAe,MAAM;AACzB,YAAI,SAAS,EAAE;AAGf,YAAIpR,KAAK,CAAA;AACT,YAAI,KAAK,CAAA;AACT,YAAI,IAAK,CAAA;AAST,YAAI,eAAe,OAAO,eAAe,aAAa,OAAO;AAAA,UACzD,UAAU,WAAY;AAElB,gBAAI8R,KAAI,KAAK,KAAK;AAClB,gBAAI,KAAK,KAAK,IAAI;AAGlB,gBAAI,IAAI,KAAK,KAAK;AAAA,cACdA,GAAE,CAAC;AAAA,cAAIA,GAAE,CAAC,KAAK,KAAOA,GAAE,CAAC,MAAM;AAAA,cAC/BA,GAAE,CAAC;AAAA,cAAIA,GAAE,CAAC,KAAK,KAAOA,GAAE,CAAC,MAAM;AAAA,cAC/BA,GAAE,CAAC;AAAA,cAAIA,GAAE,CAAC,KAAK,KAAOA,GAAE,CAAC,MAAM;AAAA,cAC/BA,GAAE,CAAC;AAAA,cAAIA,GAAE,CAAC,KAAK,KAAOA,GAAE,CAAC,MAAM;AAAA,YAChD;AAGa,gBAAImB,KAAI,KAAK,KAAK;AAAA,cACbnB,GAAE,CAAC,KAAK,KAAOA,GAAE,CAAC,MAAM;AAAA,cAAMA,GAAE,CAAC,IAAI,aAAeA,GAAE,CAAC,IAAI;AAAA,cAC3DA,GAAE,CAAC,KAAK,KAAOA,GAAE,CAAC,MAAM;AAAA,cAAMA,GAAE,CAAC,IAAI,aAAeA,GAAE,CAAC,IAAI;AAAA,cAC3DA,GAAE,CAAC,KAAK,KAAOA,GAAE,CAAC,MAAM;AAAA,cAAMA,GAAE,CAAC,IAAI,aAAeA,GAAE,CAAC,IAAI;AAAA,cAC3DA,GAAE,CAAC,KAAK,KAAOA,GAAE,CAAC,MAAM;AAAA,cAAMA,GAAE,CAAC,IAAI,aAAeA,GAAE,CAAC,IAAI;AAAA,YAC7E;AAGa,iBAAK,KAAK;AAGV,qBAASxZ,KAAI,GAAGA,KAAI,GAAGA,MAAK;AACxB,wBAAU,KAAK,IAAI;AAAA,YACpC;AAGa,qBAASA,KAAI,GAAGA,KAAI,GAAGA,MAAK;AACxB,cAAA2a,GAAE3a,EAAC,KAAK,EAAGA,KAAI,IAAK,CAAC;AAAA,YACtC;AAGa,gBAAI,IAAI;AAEJ,kBAAI,KAAK,GAAG;AACZ,kBAAI,OAAO,GAAG,CAAC;AACf,kBAAI,OAAO,GAAG,CAAC;AAGf,kBAAI,MAAQ,QAAQ,IAAM,SAAS,MAAO,YAAiB,QAAQ,KAAO,SAAS,KAAM;AACzF,kBAAI4a,OAAQ,QAAQ,IAAM,SAAS,MAAO,YAAiB,QAAQ,KAAO,SAAS,KAAM;AACzF,kBAAI,KAAM,OAAO,KAAOA,MAAK;AAC7B,kBAAI,KAAMA,OAAM,KAAQ,KAAK;AAG7B,cAAAD,GAAE,CAAC,KAAK;AACR,cAAAA,GAAE,CAAC,KAAK;AACR,cAAAA,GAAE,CAAC,KAAKC;AACR,cAAAD,GAAE,CAAC,KAAK;AACR,cAAAA,GAAE,CAAC,KAAK;AACR,cAAAA,GAAE,CAAC,KAAK;AACR,cAAAA,GAAE,CAAC,KAAKC;AACR,cAAAD,GAAE,CAAC,KAAK;AAGR,uBAAS3a,KAAI,GAAGA,KAAI,GAAGA,MAAK;AACxB,0BAAU,KAAK,IAAI;AAAA,cACxC;AAAA,YACA;AAAA,UACA;AAAA,UAES,iBAAiB,SAAU,GAAG,QAAQ;AAElC,gBAAI,IAAI,KAAK;AAGb,sBAAU,KAAK,IAAI;AAGnB,YAAA0H,GAAE,CAAC,IAAI,EAAE,CAAC,IAAK,EAAE,CAAC,MAAM,KAAO,EAAE,CAAC,KAAK;AACvC,YAAAA,GAAE,CAAC,IAAI,EAAE,CAAC,IAAK,EAAE,CAAC,MAAM,KAAO,EAAE,CAAC,KAAK;AACvC,YAAAA,GAAE,CAAC,IAAI,EAAE,CAAC,IAAK,EAAE,CAAC,MAAM,KAAO,EAAE,CAAC,KAAK;AACvC,YAAAA,GAAE,CAAC,IAAI,EAAE,CAAC,IAAK,EAAE,CAAC,MAAM,KAAO,EAAE,CAAC,KAAK;AAEvC,qBAAS1H,KAAI,GAAGA,KAAI,GAAGA,MAAK;AAExB,cAAA0H,GAAE1H,EAAC,KAAO0H,GAAE1H,EAAC,KAAK,IAAO0H,GAAE1H,EAAC,MAAM,MAAO,YAC/B0H,GAAE1H,EAAC,KAAK,KAAO0H,GAAE1H,EAAC,MAAM,KAAO;AAGzC,gBAAE,SAASA,EAAC,KAAK0H,GAAE1H,EAAC;AAAA,YACrC;AAAA,UACA;AAAA,UAES,WAAW,MAAI;AAAA,UAEf,QAAQ,KAAG;AAAA,QACpB,CAAM;AAED,iBAAS,YAAY;AAEjB,cAAI,IAAI,KAAK;AACb,cAAI2a,KAAI,KAAK;AAGb,mBAAS3a,KAAI,GAAGA,KAAI,GAAGA,MAAK;AACxB,eAAGA,EAAC,IAAI2a,GAAE3a,EAAC;AAAA,UACxB;AAGS,UAAA2a,GAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,aAAa,KAAK,KAAM;AACvC,UAAAA,GAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,cAAeA,GAAE,CAAC,MAAM,IAAM,GAAG,CAAC,MAAM,IAAK,IAAI,KAAM;AACtE,UAAAA,GAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,aAAeA,GAAE,CAAC,MAAM,IAAM,GAAG,CAAC,MAAM,IAAK,IAAI,KAAM;AACtE,UAAAA,GAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,cAAeA,GAAE,CAAC,MAAM,IAAM,GAAG,CAAC,MAAM,IAAK,IAAI,KAAM;AACtE,UAAAA,GAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,cAAeA,GAAE,CAAC,MAAM,IAAM,GAAG,CAAC,MAAM,IAAK,IAAI,KAAM;AACtE,UAAAA,GAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,aAAeA,GAAE,CAAC,MAAM,IAAM,GAAG,CAAC,MAAM,IAAK,IAAI,KAAM;AACtE,UAAAA,GAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,cAAeA,GAAE,CAAC,MAAM,IAAM,GAAG,CAAC,MAAM,IAAK,IAAI,KAAM;AACtE,UAAAA,GAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,cAAeA,GAAE,CAAC,MAAM,IAAM,GAAG,CAAC,MAAM,IAAK,IAAI,KAAM;AACtE,eAAK,KAAMA,GAAE,CAAC,MAAM,IAAM,GAAG,CAAC,MAAM,IAAK,IAAI;AAG7C,mBAAS3a,KAAI,GAAGA,KAAI,GAAGA,MAAK;AACxB,gBAAI,KAAK,EAAEA,EAAC,IAAI2a,GAAE3a,EAAC;AAGnB,gBAAI,KAAK,KAAK;AACd,gBAAI,KAAK,OAAO;AAGhB,gBAAI,OAAS,KAAK,OAAQ,MAAM,KAAK,OAAQ,MAAM,KAAK;AACxD,gBAAI,OAAQ,KAAK,cAAc,KAAM,OAAQ,KAAK,SAAc,KAAM;AAGtE,cAAEA,EAAC,IAAI,KAAK;AAAA,UACzB;AAGS,YAAE,CAAC,IAAK,EAAE,CAAC,KAAM,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM,OAAS,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM,MAAQ;AAClF,YAAE,CAAC,IAAK,EAAE,CAAC,KAAM,EAAE,CAAC,KAAK,IAAO,EAAE,CAAC,MAAM,MAAO,EAAE,CAAC,IAAK;AACxD,YAAE,CAAC,IAAK,EAAE,CAAC,KAAM,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM,OAAS,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM,MAAQ;AAClF,YAAE,CAAC,IAAK,EAAE,CAAC,KAAM,EAAE,CAAC,KAAK,IAAO,EAAE,CAAC,MAAM,MAAO,EAAE,CAAC,IAAK;AACxD,YAAE,CAAC,IAAK,EAAE,CAAC,KAAM,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM,OAAS,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM,MAAQ;AAClF,YAAE,CAAC,IAAK,EAAE,CAAC,KAAM,EAAE,CAAC,KAAK,IAAO,EAAE,CAAC,MAAM,MAAO,EAAE,CAAC,IAAK;AACxD,YAAE,CAAC,IAAK,EAAE,CAAC,KAAM,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM,OAAS,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM,MAAQ;AAClF,YAAE,CAAC,IAAK,EAAE,CAAC,KAAM,EAAE,CAAC,KAAK,IAAO,EAAE,CAAC,MAAM,MAAO,EAAE,CAAC,IAAK;AAAA,QACjE;AAUK,UAAE,eAAe,aAAa,cAAc,YAAY;AAAA,MAC7D,GAAE;AAGD,aAAO8Y,UAAS;AAAA,IAEjB,CAAC;AAAA;;;;;;;;;AC7LA,KAAC,SAAU,MAAM,SAAS,OAAO;AACA;AAEhC,eAAA,UAA2B,QAAQK,eAAmBQ,oBAAyBG,cAAkBK,iBAAqBC,mBAAwB;AAAA,MAChJ;AAAA,IASA,GAAEzN,gBAAM,SAAUmM,WAAU;AAE3B,OAAC,WAAY;AAET,YAAI,IAAIA;AACR,YAAI,QAAQ,EAAE;AACd,YAAI,cAAc,MAAM;AACxB,YAAI,SAAS,EAAE;AAEf,cAAM,IAAI;AAGV,cAAM,SAAS;AAAA,UACX;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,QACrB;AAEK,cAAM,SAAS;AAAA,UACX;AAAA,YAAI;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,UAAU;AAAA,UAClD;AAAA,YAAI;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,UAAU;AAAA,UAClD;AAAA,YAAI;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,UAAU;AAAA,UAClD;AAAA,YAAI;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;AAAA,YACpC;AAAA,YAAY;AAAA,YAAY;AAAA,YAAY;A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,YAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,WAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,WAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,YAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,YAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,WAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,WAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,YAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,YAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,WAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,WAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,YAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,YAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,WAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,WAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,YAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,YAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,WAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,WAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,YAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,YAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,WAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,WAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,YAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,YAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,WAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,WAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,YAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,YAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,WAAM,KAAK,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ACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,E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AAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;A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ACL,SAAS;AAAA,EACT,KAAK;AAAA,EACL,SAAS;AAAA,EACT,KAAK;AAAA,EACL,SAAS;AAAA,EACT,KAAK;AAAA,EACL,SAAS;AAAA,EACT,KAAK;AAAA,EACL,SAAS;AAAA,EACT,KAAK;AAAA,EACL,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AAAA,E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EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,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","x_google_ignoreList":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431]}