{"version":3,"file":"main.js","sources":["../src/main.js"],"sourcesContent":["document.addEventListener('gitchain:init', () => {\n  const patInput = document.getElementById('patInput');\n  const savePatButton = document.getElementById('savePat');\n  const processTxnsButton = document.getElementById('processTxns');\n  const viewChainButton = document.getElementById('viewChain');\n  const tokenMessage = document.getElementById('tokenMessage');\n  const blockHeight = document.getElementById('blockHeight');\n  const peerIdDisplay = document.getElementById('peerId');\n  const messageInput = document.getElementById('message');\n  const sendButton = document.getElementById('send');\n\n  const rpcUrlInput = document.getElementById('rpcUrl');\n  const chainIdInput = document.getElementById('chainId');\n  const generateWalletButton = document.getElementById('generateWallet');\n  const walletInfoDiv = document.getElementById('walletInfo');\n  const mnemonicDisplay = document.getElementById('mnemonic');\n  const kasplexAddressDisplay = document.getElementById('kasplexAddress');\n  const connectPeersButton = document.getElementById('connectPeers');\n  const chatDiv = document.getElementById('chat');\n\n  let signaling = null;\n  let localPeerId = '';\n  let connections = new Map();\n\n  if (window.gitchain && window.gitchain.initP2P) {\n    window.gitchain.initP2P().then(peerId => {\n      localPeerId = peerId;\n      peerIdDisplay.textContent = `Your Peer ID: ${peerId.slice(-8)}`;\n    });\n  }\n\n  if (window.gitchain && window.gitchain.fetchState) {\n    window.gitchain.fetchState().then(state => {\n      if (state && state.blocks) {\n        blockHeight.textContent = `Block Height: ${state.blocks.length}`;\n      }\n    });\n  }\n\n  if (localStorage.getItem('github_pat')) {\n    tokenMessage.textContent = 'GitHub Personal Access Token saved.';\n    processTxnsButton.classList.remove('hidden');\n  } else {\n    processTxnsButton.classList.add('hidden');\n  }\n\n  savePatButton.addEventListener('click', () => {\n    const token = patInput.value.trim();\n    if (token && window.gitchain && window.gitchain.saveGithubAccessToken) {\n      window.gitchain.saveGithubAccessToken(token).then(() => {\n        tokenMessage.textContent = 'GitHub Personal Access Token saved.';\n        processTxnsButton.classList.remove('hidden');\n      }).catch(err => {\n        tokenMessage.textContent = 'Error saving token: ' + err.message;\n      });\n    }\n  });\n\n  processTxnsButton.addEventListener('click', () => {\n    if (window.gitchain && window.gitchain.processTxns) {\n      window.gitchain.processTxns();\n    }\n  });\n\n  viewChainButton.addEventListener('click', () => {\n    if (window.gitchain && window.gitchain.viewChain) {\n      window.gitchain.viewChain();\n    }\n  });\n\n  generateWalletButton.addEventListener('click', () => {\n    if (window.gitchain && window.gitchain.KasplexSignalling) {\n      signaling = new window.gitchain.KasplexSignalling(rpcUrlInput.value, chainIdInput.value);\n      const wallet = signaling.generateWallet();\n      mnemonicDisplay.textContent = wallet.mnemonic;\n      kasplexAddressDisplay.textContent = wallet.address;\n      walletInfoDiv.classList.remove('hidden');\n      console.log('Kasplex wallet generated:', wallet);\n    }\n  });\n\n  connectPeersButton.addEventListener('click', async () => {\n    if (!signaling || !signaling.wallet) {\n      alert('Generate wallet first and fund it with tKAS.');\n      return;\n    }\n    await signaling.connect();\n    const peers = window.gitchain.getServerPeers();\n    for (const peerId of peers) {\n      if (peerId !== localPeerId && !connections.has(peerId)) {\n        const conn = new window.gitchain.WebRTCConnection(signaling, localPeerId, peerId);\n        connections.set(peerId, conn);\n        console.log(`Initiated WebRTC connection to ${peerId.slice(-8)}`);\n      }\n    }\n  });\n\n  sendButton.addEventListener('click', () => {\n    const message = messageInput.value.trim();\n    if (message) {\n      connections.forEach(conn => conn.send(message));\n      const localMsg = document.createElement('div');\n      localMsg.textContent = `${localPeerId.slice(-8)}: ${message}`;\n      chatDiv.appendChild(localMsg);\n      chatDiv.scrollTop = chatDiv.scrollHeight;\n      messageInput.value = '';\n    }\n  });\n});\n"],"names":[],"mappings":"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"}